<?php
/**
 * Debtor
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\Model;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * Debtor Class Doc Comment
 *
 * @category Class
 * @description Debtor
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Debtor implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Debtor';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'credit_limit' => 'double',
        'early_payment_discount_days' => 'int',
        'early_payment_discount_amount' => 'double',
        'last_purchase_date' => '\DateTime',
        'last_payment_date' => '\DateTime',
        'standing_discount_on_invoices' => 'double',
        'account_on_hold' => 'bool',
        'current_balance' => 'double',
        'period1_balance' => 'double',
        'period2_balance' => 'double',
        'period3_balance' => 'double',
        'period4_balance' => 'double',
        'fx_current_balance' => 'double',
        'fx_period1_balance' => 'double',
        'fx_period2_balance' => 'double',
        'fx_period3_balance' => 'double',
        'fx_period4_balance' => 'double',
        'notify_required' => 'bool',
        'web_access' => 'bool',
        'commence_date' => '\DateTime',
        'trading_status' => 'string',
        'period_type' => 'string',
        'uses_fx' => 'bool',
        'is_cash_only' => 'bool',
        'terms_days' => 'int',
        'terms_type' => 'string',
        'exclude_from_aging' => 'bool',
        'debtor_is_branch_account' => 'bool',
        'remaining_normal_prepaid_labour_pack_hours' => 'double',
        'remaining_special_prepaid_labour_pack_hours' => 'double',
        'fx_decimal_places' => 'int',
        'debtor_id' => 'string',
        'prospect_id' => 'string',
        'last_saved_date_time' => '\DateTime',
        'account_no' => 'string',
        'alt_account_no' => 'string',
        'name' => 'string',
        'address1' => 'string',
        'address2' => 'string',
        'address3' => 'string',
        'address4' => 'string',
        'postcode' => 'string',
        'phone' => 'string',
        'fax' => 'string',
        'email_address' => 'string',
        'acn' => 'string',
        'abn' => 'string',
        'aust_post_dpid' => 'string',
        'aust_post_bcsp' => 'string',
        'bank_name' => 'string',
        'bank_account_no' => 'string',
        'bank_bsbn' => 'string',
        'bank_account_name' => 'string',
        'tax_exemption_no' => 'string',
        'notify_address' => 'string',
        'parent_debtor_id' => 'string',
        'parent_debtor_account_no' => 'string',
        'parent_debtor_name' => 'string',
        'price_scheme_id' => 'string',
        'price_scheme_description' => 'string',
        'trading_name' => 'string',
        'company_name' => 'string',
        'proprietors_name' => 'string',
        'fax_header' => 'string',
        'fxid' => 'string',
        'fx_name' => 'string',
        'fx_short_name' => 'string',
        'b_pay_reference' => 'string',
        'classification' => '\Jiwa\Model\DebtorClassification',
        'category1' => '\Jiwa\Model\DebtorCategory',
        'category2' => '\Jiwa\Model\DebtorCategory',
        'category3' => '\Jiwa\Model\DebtorCategory',
        'category4' => '\Jiwa\Model\DebtorCategory',
        'category5' => '\Jiwa\Model\DebtorCategory',
        'contact_names' => '\Jiwa\Model\DebtorContactName[]',
        'group_memberships' => '\Jiwa\Model\DebtorGroupMembership[]',
        'branch_debtors' => '\Jiwa\Model\DebtorBranchDebtor[]',
        'delivery_addresses' => '\Jiwa\Model\DebtorDeliveryAddress[]',
        'freight_forwarder_addresses' => '\Jiwa\Model\DebtorFreightForwarderAddress[]',
        'notes' => '\Jiwa\Model\Note[]',
        'credit_notes' => '\Jiwa\Model\Note[]',
        'directors' => '\Jiwa\Model\DebtorDirector[]',
        'budgets' => '\Jiwa\Model\DebtorBudget[]',
        'debtor_part_numbers' => '\Jiwa\Model\DebtorPartNumber[]',
        'custom_field_values' => '\Jiwa\Model\CustomFieldValue[]',
        'documents' => '\Jiwa\Model\Document[]',
        'debtor_systems' => '\Jiwa\Model\DebtorSystem[]',
        'debtor_ledgers' => '\Jiwa\Model\DebtorLedger[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'credit_limit' => 'double',
        'early_payment_discount_days' => 'int32',
        'early_payment_discount_amount' => 'double',
        'last_purchase_date' => 'date-time',
        'last_payment_date' => 'date-time',
        'standing_discount_on_invoices' => 'double',
        'account_on_hold' => null,
        'current_balance' => 'double',
        'period1_balance' => 'double',
        'period2_balance' => 'double',
        'period3_balance' => 'double',
        'period4_balance' => 'double',
        'fx_current_balance' => 'double',
        'fx_period1_balance' => 'double',
        'fx_period2_balance' => 'double',
        'fx_period3_balance' => 'double',
        'fx_period4_balance' => 'double',
        'notify_required' => null,
        'web_access' => null,
        'commence_date' => 'date-time',
        'trading_status' => null,
        'period_type' => null,
        'uses_fx' => null,
        'is_cash_only' => null,
        'terms_days' => 'int32',
        'terms_type' => null,
        'exclude_from_aging' => null,
        'debtor_is_branch_account' => null,
        'remaining_normal_prepaid_labour_pack_hours' => 'double',
        'remaining_special_prepaid_labour_pack_hours' => 'double',
        'fx_decimal_places' => 'int32',
        'debtor_id' => null,
        'prospect_id' => null,
        'last_saved_date_time' => 'date-time',
        'account_no' => null,
        'alt_account_no' => null,
        'name' => null,
        'address1' => null,
        'address2' => null,
        'address3' => null,
        'address4' => null,
        'postcode' => null,
        'phone' => null,
        'fax' => null,
        'email_address' => null,
        'acn' => null,
        'abn' => null,
        'aust_post_dpid' => null,
        'aust_post_bcsp' => null,
        'bank_name' => null,
        'bank_account_no' => null,
        'bank_bsbn' => null,
        'bank_account_name' => null,
        'tax_exemption_no' => null,
        'notify_address' => null,
        'parent_debtor_id' => null,
        'parent_debtor_account_no' => null,
        'parent_debtor_name' => null,
        'price_scheme_id' => null,
        'price_scheme_description' => null,
        'trading_name' => null,
        'company_name' => null,
        'proprietors_name' => null,
        'fax_header' => null,
        'fxid' => null,
        'fx_name' => null,
        'fx_short_name' => null,
        'b_pay_reference' => null,
        'classification' => null,
        'category1' => null,
        'category2' => null,
        'category3' => null,
        'category4' => null,
        'category5' => null,
        'contact_names' => null,
        'group_memberships' => null,
        'branch_debtors' => null,
        'delivery_addresses' => null,
        'freight_forwarder_addresses' => null,
        'notes' => null,
        'credit_notes' => null,
        'directors' => null,
        'budgets' => null,
        'debtor_part_numbers' => null,
        'custom_field_values' => null,
        'documents' => null,
        'debtor_systems' => null,
        'debtor_ledgers' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'credit_limit' => 'CreditLimit',
        'early_payment_discount_days' => 'EarlyPaymentDiscountDays',
        'early_payment_discount_amount' => 'EarlyPaymentDiscountAmount',
        'last_purchase_date' => 'LastPurchaseDate',
        'last_payment_date' => 'LastPaymentDate',
        'standing_discount_on_invoices' => 'StandingDiscountOnInvoices',
        'account_on_hold' => 'AccountOnHold',
        'current_balance' => 'CurrentBalance',
        'period1_balance' => 'Period1Balance',
        'period2_balance' => 'Period2Balance',
        'period3_balance' => 'Period3Balance',
        'period4_balance' => 'Period4Balance',
        'fx_current_balance' => 'FXCurrentBalance',
        'fx_period1_balance' => 'FXPeriod1Balance',
        'fx_period2_balance' => 'FXPeriod2Balance',
        'fx_period3_balance' => 'FXPeriod3Balance',
        'fx_period4_balance' => 'FXPeriod4Balance',
        'notify_required' => 'NotifyRequired',
        'web_access' => 'WebAccess',
        'commence_date' => 'CommenceDate',
        'trading_status' => 'TradingStatus',
        'period_type' => 'PeriodType',
        'uses_fx' => 'UsesFX',
        'is_cash_only' => 'IsCashOnly',
        'terms_days' => 'TermsDays',
        'terms_type' => 'TermsType',
        'exclude_from_aging' => 'ExcludeFromAging',
        'debtor_is_branch_account' => 'DebtorIsBranchAccount',
        'remaining_normal_prepaid_labour_pack_hours' => 'RemainingNormalPrepaidLabourPackHours',
        'remaining_special_prepaid_labour_pack_hours' => 'RemainingSpecialPrepaidLabourPackHours',
        'fx_decimal_places' => 'FXDecimalPlaces',
        'debtor_id' => 'DebtorID',
        'prospect_id' => 'ProspectID',
        'last_saved_date_time' => 'LastSavedDateTime',
        'account_no' => 'AccountNo',
        'alt_account_no' => 'AltAccountNo',
        'name' => 'Name',
        'address1' => 'Address1',
        'address2' => 'Address2',
        'address3' => 'Address3',
        'address4' => 'Address4',
        'postcode' => 'Postcode',
        'phone' => 'Phone',
        'fax' => 'Fax',
        'email_address' => 'EmailAddress',
        'acn' => 'ACN',
        'abn' => 'ABN',
        'aust_post_dpid' => 'AustPostDPID',
        'aust_post_bcsp' => 'AustPostBCSP',
        'bank_name' => 'BankName',
        'bank_account_no' => 'BankAccountNo',
        'bank_bsbn' => 'BankBSBN',
        'bank_account_name' => 'BankAccountName',
        'tax_exemption_no' => 'TaxExemptionNo',
        'notify_address' => 'NotifyAddress',
        'parent_debtor_id' => 'ParentDebtorID',
        'parent_debtor_account_no' => 'ParentDebtorAccountNo',
        'parent_debtor_name' => 'ParentDebtorName',
        'price_scheme_id' => 'PriceSchemeID',
        'price_scheme_description' => 'PriceSchemeDescription',
        'trading_name' => 'TradingName',
        'company_name' => 'CompanyName',
        'proprietors_name' => 'ProprietorsName',
        'fax_header' => 'FaxHeader',
        'fxid' => 'FXID',
        'fx_name' => 'FXName',
        'fx_short_name' => 'FXShortName',
        'b_pay_reference' => 'BPayReference',
        'classification' => 'Classification',
        'category1' => 'Category1',
        'category2' => 'Category2',
        'category3' => 'Category3',
        'category4' => 'Category4',
        'category5' => 'Category5',
        'contact_names' => 'ContactNames',
        'group_memberships' => 'GroupMemberships',
        'branch_debtors' => 'BranchDebtors',
        'delivery_addresses' => 'DeliveryAddresses',
        'freight_forwarder_addresses' => 'FreightForwarderAddresses',
        'notes' => 'Notes',
        'credit_notes' => 'CreditNotes',
        'directors' => 'Directors',
        'budgets' => 'Budgets',
        'debtor_part_numbers' => 'DebtorPartNumbers',
        'custom_field_values' => 'CustomFieldValues',
        'documents' => 'Documents',
        'debtor_systems' => 'DebtorSystems',
        'debtor_ledgers' => 'DebtorLedgers'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'credit_limit' => 'setCreditLimit',
        'early_payment_discount_days' => 'setEarlyPaymentDiscountDays',
        'early_payment_discount_amount' => 'setEarlyPaymentDiscountAmount',
        'last_purchase_date' => 'setLastPurchaseDate',
        'last_payment_date' => 'setLastPaymentDate',
        'standing_discount_on_invoices' => 'setStandingDiscountOnInvoices',
        'account_on_hold' => 'setAccountOnHold',
        'current_balance' => 'setCurrentBalance',
        'period1_balance' => 'setPeriod1Balance',
        'period2_balance' => 'setPeriod2Balance',
        'period3_balance' => 'setPeriod3Balance',
        'period4_balance' => 'setPeriod4Balance',
        'fx_current_balance' => 'setFxCurrentBalance',
        'fx_period1_balance' => 'setFxPeriod1Balance',
        'fx_period2_balance' => 'setFxPeriod2Balance',
        'fx_period3_balance' => 'setFxPeriod3Balance',
        'fx_period4_balance' => 'setFxPeriod4Balance',
        'notify_required' => 'setNotifyRequired',
        'web_access' => 'setWebAccess',
        'commence_date' => 'setCommenceDate',
        'trading_status' => 'setTradingStatus',
        'period_type' => 'setPeriodType',
        'uses_fx' => 'setUsesFx',
        'is_cash_only' => 'setIsCashOnly',
        'terms_days' => 'setTermsDays',
        'terms_type' => 'setTermsType',
        'exclude_from_aging' => 'setExcludeFromAging',
        'debtor_is_branch_account' => 'setDebtorIsBranchAccount',
        'remaining_normal_prepaid_labour_pack_hours' => 'setRemainingNormalPrepaidLabourPackHours',
        'remaining_special_prepaid_labour_pack_hours' => 'setRemainingSpecialPrepaidLabourPackHours',
        'fx_decimal_places' => 'setFxDecimalPlaces',
        'debtor_id' => 'setDebtorId',
        'prospect_id' => 'setProspectId',
        'last_saved_date_time' => 'setLastSavedDateTime',
        'account_no' => 'setAccountNo',
        'alt_account_no' => 'setAltAccountNo',
        'name' => 'setName',
        'address1' => 'setAddress1',
        'address2' => 'setAddress2',
        'address3' => 'setAddress3',
        'address4' => 'setAddress4',
        'postcode' => 'setPostcode',
        'phone' => 'setPhone',
        'fax' => 'setFax',
        'email_address' => 'setEmailAddress',
        'acn' => 'setAcn',
        'abn' => 'setAbn',
        'aust_post_dpid' => 'setAustPostDpid',
        'aust_post_bcsp' => 'setAustPostBcsp',
        'bank_name' => 'setBankName',
        'bank_account_no' => 'setBankAccountNo',
        'bank_bsbn' => 'setBankBsbn',
        'bank_account_name' => 'setBankAccountName',
        'tax_exemption_no' => 'setTaxExemptionNo',
        'notify_address' => 'setNotifyAddress',
        'parent_debtor_id' => 'setParentDebtorId',
        'parent_debtor_account_no' => 'setParentDebtorAccountNo',
        'parent_debtor_name' => 'setParentDebtorName',
        'price_scheme_id' => 'setPriceSchemeId',
        'price_scheme_description' => 'setPriceSchemeDescription',
        'trading_name' => 'setTradingName',
        'company_name' => 'setCompanyName',
        'proprietors_name' => 'setProprietorsName',
        'fax_header' => 'setFaxHeader',
        'fxid' => 'setFxid',
        'fx_name' => 'setFxName',
        'fx_short_name' => 'setFxShortName',
        'b_pay_reference' => 'setBPayReference',
        'classification' => 'setClassification',
        'category1' => 'setCategory1',
        'category2' => 'setCategory2',
        'category3' => 'setCategory3',
        'category4' => 'setCategory4',
        'category5' => 'setCategory5',
        'contact_names' => 'setContactNames',
        'group_memberships' => 'setGroupMemberships',
        'branch_debtors' => 'setBranchDebtors',
        'delivery_addresses' => 'setDeliveryAddresses',
        'freight_forwarder_addresses' => 'setFreightForwarderAddresses',
        'notes' => 'setNotes',
        'credit_notes' => 'setCreditNotes',
        'directors' => 'setDirectors',
        'budgets' => 'setBudgets',
        'debtor_part_numbers' => 'setDebtorPartNumbers',
        'custom_field_values' => 'setCustomFieldValues',
        'documents' => 'setDocuments',
        'debtor_systems' => 'setDebtorSystems',
        'debtor_ledgers' => 'setDebtorLedgers'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'credit_limit' => 'getCreditLimit',
        'early_payment_discount_days' => 'getEarlyPaymentDiscountDays',
        'early_payment_discount_amount' => 'getEarlyPaymentDiscountAmount',
        'last_purchase_date' => 'getLastPurchaseDate',
        'last_payment_date' => 'getLastPaymentDate',
        'standing_discount_on_invoices' => 'getStandingDiscountOnInvoices',
        'account_on_hold' => 'getAccountOnHold',
        'current_balance' => 'getCurrentBalance',
        'period1_balance' => 'getPeriod1Balance',
        'period2_balance' => 'getPeriod2Balance',
        'period3_balance' => 'getPeriod3Balance',
        'period4_balance' => 'getPeriod4Balance',
        'fx_current_balance' => 'getFxCurrentBalance',
        'fx_period1_balance' => 'getFxPeriod1Balance',
        'fx_period2_balance' => 'getFxPeriod2Balance',
        'fx_period3_balance' => 'getFxPeriod3Balance',
        'fx_period4_balance' => 'getFxPeriod4Balance',
        'notify_required' => 'getNotifyRequired',
        'web_access' => 'getWebAccess',
        'commence_date' => 'getCommenceDate',
        'trading_status' => 'getTradingStatus',
        'period_type' => 'getPeriodType',
        'uses_fx' => 'getUsesFx',
        'is_cash_only' => 'getIsCashOnly',
        'terms_days' => 'getTermsDays',
        'terms_type' => 'getTermsType',
        'exclude_from_aging' => 'getExcludeFromAging',
        'debtor_is_branch_account' => 'getDebtorIsBranchAccount',
        'remaining_normal_prepaid_labour_pack_hours' => 'getRemainingNormalPrepaidLabourPackHours',
        'remaining_special_prepaid_labour_pack_hours' => 'getRemainingSpecialPrepaidLabourPackHours',
        'fx_decimal_places' => 'getFxDecimalPlaces',
        'debtor_id' => 'getDebtorId',
        'prospect_id' => 'getProspectId',
        'last_saved_date_time' => 'getLastSavedDateTime',
        'account_no' => 'getAccountNo',
        'alt_account_no' => 'getAltAccountNo',
        'name' => 'getName',
        'address1' => 'getAddress1',
        'address2' => 'getAddress2',
        'address3' => 'getAddress3',
        'address4' => 'getAddress4',
        'postcode' => 'getPostcode',
        'phone' => 'getPhone',
        'fax' => 'getFax',
        'email_address' => 'getEmailAddress',
        'acn' => 'getAcn',
        'abn' => 'getAbn',
        'aust_post_dpid' => 'getAustPostDpid',
        'aust_post_bcsp' => 'getAustPostBcsp',
        'bank_name' => 'getBankName',
        'bank_account_no' => 'getBankAccountNo',
        'bank_bsbn' => 'getBankBsbn',
        'bank_account_name' => 'getBankAccountName',
        'tax_exemption_no' => 'getTaxExemptionNo',
        'notify_address' => 'getNotifyAddress',
        'parent_debtor_id' => 'getParentDebtorId',
        'parent_debtor_account_no' => 'getParentDebtorAccountNo',
        'parent_debtor_name' => 'getParentDebtorName',
        'price_scheme_id' => 'getPriceSchemeId',
        'price_scheme_description' => 'getPriceSchemeDescription',
        'trading_name' => 'getTradingName',
        'company_name' => 'getCompanyName',
        'proprietors_name' => 'getProprietorsName',
        'fax_header' => 'getFaxHeader',
        'fxid' => 'getFxid',
        'fx_name' => 'getFxName',
        'fx_short_name' => 'getFxShortName',
        'b_pay_reference' => 'getBPayReference',
        'classification' => 'getClassification',
        'category1' => 'getCategory1',
        'category2' => 'getCategory2',
        'category3' => 'getCategory3',
        'category4' => 'getCategory4',
        'category5' => 'getCategory5',
        'contact_names' => 'getContactNames',
        'group_memberships' => 'getGroupMemberships',
        'branch_debtors' => 'getBranchDebtors',
        'delivery_addresses' => 'getDeliveryAddresses',
        'freight_forwarder_addresses' => 'getFreightForwarderAddresses',
        'notes' => 'getNotes',
        'credit_notes' => 'getCreditNotes',
        'directors' => 'getDirectors',
        'budgets' => 'getBudgets',
        'debtor_part_numbers' => 'getDebtorPartNumbers',
        'custom_field_values' => 'getCustomFieldValues',
        'documents' => 'getDocuments',
        'debtor_systems' => 'getDebtorSystems',
        'debtor_ledgers' => 'getDebtorLedgers'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['credit_limit'] = isset($data['credit_limit']) ? $data['credit_limit'] : null;
        $this->container['early_payment_discount_days'] = isset($data['early_payment_discount_days']) ? $data['early_payment_discount_days'] : null;
        $this->container['early_payment_discount_amount'] = isset($data['early_payment_discount_amount']) ? $data['early_payment_discount_amount'] : null;
        $this->container['last_purchase_date'] = isset($data['last_purchase_date']) ? $data['last_purchase_date'] : null;
        $this->container['last_payment_date'] = isset($data['last_payment_date']) ? $data['last_payment_date'] : null;
        $this->container['standing_discount_on_invoices'] = isset($data['standing_discount_on_invoices']) ? $data['standing_discount_on_invoices'] : null;
        $this->container['account_on_hold'] = isset($data['account_on_hold']) ? $data['account_on_hold'] : null;
        $this->container['current_balance'] = isset($data['current_balance']) ? $data['current_balance'] : null;
        $this->container['period1_balance'] = isset($data['period1_balance']) ? $data['period1_balance'] : null;
        $this->container['period2_balance'] = isset($data['period2_balance']) ? $data['period2_balance'] : null;
        $this->container['period3_balance'] = isset($data['period3_balance']) ? $data['period3_balance'] : null;
        $this->container['period4_balance'] = isset($data['period4_balance']) ? $data['period4_balance'] : null;
        $this->container['fx_current_balance'] = isset($data['fx_current_balance']) ? $data['fx_current_balance'] : null;
        $this->container['fx_period1_balance'] = isset($data['fx_period1_balance']) ? $data['fx_period1_balance'] : null;
        $this->container['fx_period2_balance'] = isset($data['fx_period2_balance']) ? $data['fx_period2_balance'] : null;
        $this->container['fx_period3_balance'] = isset($data['fx_period3_balance']) ? $data['fx_period3_balance'] : null;
        $this->container['fx_period4_balance'] = isset($data['fx_period4_balance']) ? $data['fx_period4_balance'] : null;
        $this->container['notify_required'] = isset($data['notify_required']) ? $data['notify_required'] : null;
        $this->container['web_access'] = isset($data['web_access']) ? $data['web_access'] : null;
        $this->container['commence_date'] = isset($data['commence_date']) ? $data['commence_date'] : null;
        $this->container['trading_status'] = isset($data['trading_status']) ? $data['trading_status'] : null;
        $this->container['period_type'] = isset($data['period_type']) ? $data['period_type'] : null;
        $this->container['uses_fx'] = isset($data['uses_fx']) ? $data['uses_fx'] : null;
        $this->container['is_cash_only'] = isset($data['is_cash_only']) ? $data['is_cash_only'] : null;
        $this->container['terms_days'] = isset($data['terms_days']) ? $data['terms_days'] : null;
        $this->container['terms_type'] = isset($data['terms_type']) ? $data['terms_type'] : null;
        $this->container['exclude_from_aging'] = isset($data['exclude_from_aging']) ? $data['exclude_from_aging'] : null;
        $this->container['debtor_is_branch_account'] = isset($data['debtor_is_branch_account']) ? $data['debtor_is_branch_account'] : null;
        $this->container['remaining_normal_prepaid_labour_pack_hours'] = isset($data['remaining_normal_prepaid_labour_pack_hours']) ? $data['remaining_normal_prepaid_labour_pack_hours'] : null;
        $this->container['remaining_special_prepaid_labour_pack_hours'] = isset($data['remaining_special_prepaid_labour_pack_hours']) ? $data['remaining_special_prepaid_labour_pack_hours'] : null;
        $this->container['fx_decimal_places'] = isset($data['fx_decimal_places']) ? $data['fx_decimal_places'] : null;
        $this->container['debtor_id'] = isset($data['debtor_id']) ? $data['debtor_id'] : null;
        $this->container['prospect_id'] = isset($data['prospect_id']) ? $data['prospect_id'] : null;
        $this->container['last_saved_date_time'] = isset($data['last_saved_date_time']) ? $data['last_saved_date_time'] : null;
        $this->container['account_no'] = isset($data['account_no']) ? $data['account_no'] : null;
        $this->container['alt_account_no'] = isset($data['alt_account_no']) ? $data['alt_account_no'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['address1'] = isset($data['address1']) ? $data['address1'] : null;
        $this->container['address2'] = isset($data['address2']) ? $data['address2'] : null;
        $this->container['address3'] = isset($data['address3']) ? $data['address3'] : null;
        $this->container['address4'] = isset($data['address4']) ? $data['address4'] : null;
        $this->container['postcode'] = isset($data['postcode']) ? $data['postcode'] : null;
        $this->container['phone'] = isset($data['phone']) ? $data['phone'] : null;
        $this->container['fax'] = isset($data['fax']) ? $data['fax'] : null;
        $this->container['email_address'] = isset($data['email_address']) ? $data['email_address'] : null;
        $this->container['acn'] = isset($data['acn']) ? $data['acn'] : null;
        $this->container['abn'] = isset($data['abn']) ? $data['abn'] : null;
        $this->container['aust_post_dpid'] = isset($data['aust_post_dpid']) ? $data['aust_post_dpid'] : null;
        $this->container['aust_post_bcsp'] = isset($data['aust_post_bcsp']) ? $data['aust_post_bcsp'] : null;
        $this->container['bank_name'] = isset($data['bank_name']) ? $data['bank_name'] : null;
        $this->container['bank_account_no'] = isset($data['bank_account_no']) ? $data['bank_account_no'] : null;
        $this->container['bank_bsbn'] = isset($data['bank_bsbn']) ? $data['bank_bsbn'] : null;
        $this->container['bank_account_name'] = isset($data['bank_account_name']) ? $data['bank_account_name'] : null;
        $this->container['tax_exemption_no'] = isset($data['tax_exemption_no']) ? $data['tax_exemption_no'] : null;
        $this->container['notify_address'] = isset($data['notify_address']) ? $data['notify_address'] : null;
        $this->container['parent_debtor_id'] = isset($data['parent_debtor_id']) ? $data['parent_debtor_id'] : null;
        $this->container['parent_debtor_account_no'] = isset($data['parent_debtor_account_no']) ? $data['parent_debtor_account_no'] : null;
        $this->container['parent_debtor_name'] = isset($data['parent_debtor_name']) ? $data['parent_debtor_name'] : null;
        $this->container['price_scheme_id'] = isset($data['price_scheme_id']) ? $data['price_scheme_id'] : null;
        $this->container['price_scheme_description'] = isset($data['price_scheme_description']) ? $data['price_scheme_description'] : null;
        $this->container['trading_name'] = isset($data['trading_name']) ? $data['trading_name'] : null;
        $this->container['company_name'] = isset($data['company_name']) ? $data['company_name'] : null;
        $this->container['proprietors_name'] = isset($data['proprietors_name']) ? $data['proprietors_name'] : null;
        $this->container['fax_header'] = isset($data['fax_header']) ? $data['fax_header'] : null;
        $this->container['fxid'] = isset($data['fxid']) ? $data['fxid'] : null;
        $this->container['fx_name'] = isset($data['fx_name']) ? $data['fx_name'] : null;
        $this->container['fx_short_name'] = isset($data['fx_short_name']) ? $data['fx_short_name'] : null;
        $this->container['b_pay_reference'] = isset($data['b_pay_reference']) ? $data['b_pay_reference'] : null;
        $this->container['classification'] = isset($data['classification']) ? $data['classification'] : null;
        $this->container['category1'] = isset($data['category1']) ? $data['category1'] : null;
        $this->container['category2'] = isset($data['category2']) ? $data['category2'] : null;
        $this->container['category3'] = isset($data['category3']) ? $data['category3'] : null;
        $this->container['category4'] = isset($data['category4']) ? $data['category4'] : null;
        $this->container['category5'] = isset($data['category5']) ? $data['category5'] : null;
        $this->container['contact_names'] = isset($data['contact_names']) ? $data['contact_names'] : null;
        $this->container['group_memberships'] = isset($data['group_memberships']) ? $data['group_memberships'] : null;
        $this->container['branch_debtors'] = isset($data['branch_debtors']) ? $data['branch_debtors'] : null;
        $this->container['delivery_addresses'] = isset($data['delivery_addresses']) ? $data['delivery_addresses'] : null;
        $this->container['freight_forwarder_addresses'] = isset($data['freight_forwarder_addresses']) ? $data['freight_forwarder_addresses'] : null;
        $this->container['notes'] = isset($data['notes']) ? $data['notes'] : null;
        $this->container['credit_notes'] = isset($data['credit_notes']) ? $data['credit_notes'] : null;
        $this->container['directors'] = isset($data['directors']) ? $data['directors'] : null;
        $this->container['budgets'] = isset($data['budgets']) ? $data['budgets'] : null;
        $this->container['debtor_part_numbers'] = isset($data['debtor_part_numbers']) ? $data['debtor_part_numbers'] : null;
        $this->container['custom_field_values'] = isset($data['custom_field_values']) ? $data['custom_field_values'] : null;
        $this->container['documents'] = isset($data['documents']) ? $data['documents'] : null;
        $this->container['debtor_systems'] = isset($data['debtor_systems']) ? $data['debtor_systems'] : null;
        $this->container['debtor_ledgers'] = isset($data['debtor_ledgers']) ? $data['debtor_ledgers'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets credit_limit
     *
     * @return double
     */
    public function getCreditLimit()
    {
        return $this->container['credit_limit'];
    }

    /**
     * Sets credit_limit
     *
     * @param double $credit_limit credit_limit
     *
     * @return $this
     */
    public function setCreditLimit($credit_limit)
    {
        $this->container['credit_limit'] = $credit_limit;

        return $this;
    }

    /**
     * Gets early_payment_discount_days
     *
     * @return int
     */
    public function getEarlyPaymentDiscountDays()
    {
        return $this->container['early_payment_discount_days'];
    }

    /**
     * Sets early_payment_discount_days
     *
     * @param int $early_payment_discount_days early_payment_discount_days
     *
     * @return $this
     */
    public function setEarlyPaymentDiscountDays($early_payment_discount_days)
    {
        $this->container['early_payment_discount_days'] = $early_payment_discount_days;

        return $this;
    }

    /**
     * Gets early_payment_discount_amount
     *
     * @return double
     */
    public function getEarlyPaymentDiscountAmount()
    {
        return $this->container['early_payment_discount_amount'];
    }

    /**
     * Sets early_payment_discount_amount
     *
     * @param double $early_payment_discount_amount early_payment_discount_amount
     *
     * @return $this
     */
    public function setEarlyPaymentDiscountAmount($early_payment_discount_amount)
    {
        $this->container['early_payment_discount_amount'] = $early_payment_discount_amount;

        return $this;
    }

    /**
     * Gets last_purchase_date
     *
     * @return \DateTime
     */
    public function getLastPurchaseDate()
    {
        return $this->container['last_purchase_date'];
    }

    /**
     * Sets last_purchase_date
     *
     * @param \DateTime $last_purchase_date last_purchase_date
     *
     * @return $this
     */
    public function setLastPurchaseDate($last_purchase_date)
    {
        $this->container['last_purchase_date'] = $last_purchase_date;

        return $this;
    }

    /**
     * Gets last_payment_date
     *
     * @return \DateTime
     */
    public function getLastPaymentDate()
    {
        return $this->container['last_payment_date'];
    }

    /**
     * Sets last_payment_date
     *
     * @param \DateTime $last_payment_date last_payment_date
     *
     * @return $this
     */
    public function setLastPaymentDate($last_payment_date)
    {
        $this->container['last_payment_date'] = $last_payment_date;

        return $this;
    }

    /**
     * Gets standing_discount_on_invoices
     *
     * @return double
     */
    public function getStandingDiscountOnInvoices()
    {
        return $this->container['standing_discount_on_invoices'];
    }

    /**
     * Sets standing_discount_on_invoices
     *
     * @param double $standing_discount_on_invoices standing_discount_on_invoices
     *
     * @return $this
     */
    public function setStandingDiscountOnInvoices($standing_discount_on_invoices)
    {
        $this->container['standing_discount_on_invoices'] = $standing_discount_on_invoices;

        return $this;
    }

    /**
     * Gets account_on_hold
     *
     * @return bool
     */
    public function getAccountOnHold()
    {
        return $this->container['account_on_hold'];
    }

    /**
     * Sets account_on_hold
     *
     * @param bool $account_on_hold account_on_hold
     *
     * @return $this
     */
    public function setAccountOnHold($account_on_hold)
    {
        $this->container['account_on_hold'] = $account_on_hold;

        return $this;
    }

    /**
     * Gets current_balance
     *
     * @return double
     */
    public function getCurrentBalance()
    {
        return $this->container['current_balance'];
    }

    /**
     * Sets current_balance
     *
     * @param double $current_balance current_balance
     *
     * @return $this
     */
    public function setCurrentBalance($current_balance)
    {
        $this->container['current_balance'] = $current_balance;

        return $this;
    }

    /**
     * Gets period1_balance
     *
     * @return double
     */
    public function getPeriod1Balance()
    {
        return $this->container['period1_balance'];
    }

    /**
     * Sets period1_balance
     *
     * @param double $period1_balance period1_balance
     *
     * @return $this
     */
    public function setPeriod1Balance($period1_balance)
    {
        $this->container['period1_balance'] = $period1_balance;

        return $this;
    }

    /**
     * Gets period2_balance
     *
     * @return double
     */
    public function getPeriod2Balance()
    {
        return $this->container['period2_balance'];
    }

    /**
     * Sets period2_balance
     *
     * @param double $period2_balance period2_balance
     *
     * @return $this
     */
    public function setPeriod2Balance($period2_balance)
    {
        $this->container['period2_balance'] = $period2_balance;

        return $this;
    }

    /**
     * Gets period3_balance
     *
     * @return double
     */
    public function getPeriod3Balance()
    {
        return $this->container['period3_balance'];
    }

    /**
     * Sets period3_balance
     *
     * @param double $period3_balance period3_balance
     *
     * @return $this
     */
    public function setPeriod3Balance($period3_balance)
    {
        $this->container['period3_balance'] = $period3_balance;

        return $this;
    }

    /**
     * Gets period4_balance
     *
     * @return double
     */
    public function getPeriod4Balance()
    {
        return $this->container['period4_balance'];
    }

    /**
     * Sets period4_balance
     *
     * @param double $period4_balance period4_balance
     *
     * @return $this
     */
    public function setPeriod4Balance($period4_balance)
    {
        $this->container['period4_balance'] = $period4_balance;

        return $this;
    }

    /**
     * Gets fx_current_balance
     *
     * @return double
     */
    public function getFxCurrentBalance()
    {
        return $this->container['fx_current_balance'];
    }

    /**
     * Sets fx_current_balance
     *
     * @param double $fx_current_balance fx_current_balance
     *
     * @return $this
     */
    public function setFxCurrentBalance($fx_current_balance)
    {
        $this->container['fx_current_balance'] = $fx_current_balance;

        return $this;
    }

    /**
     * Gets fx_period1_balance
     *
     * @return double
     */
    public function getFxPeriod1Balance()
    {
        return $this->container['fx_period1_balance'];
    }

    /**
     * Sets fx_period1_balance
     *
     * @param double $fx_period1_balance fx_period1_balance
     *
     * @return $this
     */
    public function setFxPeriod1Balance($fx_period1_balance)
    {
        $this->container['fx_period1_balance'] = $fx_period1_balance;

        return $this;
    }

    /**
     * Gets fx_period2_balance
     *
     * @return double
     */
    public function getFxPeriod2Balance()
    {
        return $this->container['fx_period2_balance'];
    }

    /**
     * Sets fx_period2_balance
     *
     * @param double $fx_period2_balance fx_period2_balance
     *
     * @return $this
     */
    public function setFxPeriod2Balance($fx_period2_balance)
    {
        $this->container['fx_period2_balance'] = $fx_period2_balance;

        return $this;
    }

    /**
     * Gets fx_period3_balance
     *
     * @return double
     */
    public function getFxPeriod3Balance()
    {
        return $this->container['fx_period3_balance'];
    }

    /**
     * Sets fx_period3_balance
     *
     * @param double $fx_period3_balance fx_period3_balance
     *
     * @return $this
     */
    public function setFxPeriod3Balance($fx_period3_balance)
    {
        $this->container['fx_period3_balance'] = $fx_period3_balance;

        return $this;
    }

    /**
     * Gets fx_period4_balance
     *
     * @return double
     */
    public function getFxPeriod4Balance()
    {
        return $this->container['fx_period4_balance'];
    }

    /**
     * Sets fx_period4_balance
     *
     * @param double $fx_period4_balance fx_period4_balance
     *
     * @return $this
     */
    public function setFxPeriod4Balance($fx_period4_balance)
    {
        $this->container['fx_period4_balance'] = $fx_period4_balance;

        return $this;
    }

    /**
     * Gets notify_required
     *
     * @return bool
     */
    public function getNotifyRequired()
    {
        return $this->container['notify_required'];
    }

    /**
     * Sets notify_required
     *
     * @param bool $notify_required notify_required
     *
     * @return $this
     */
    public function setNotifyRequired($notify_required)
    {
        $this->container['notify_required'] = $notify_required;

        return $this;
    }

    /**
     * Gets web_access
     *
     * @return bool
     */
    public function getWebAccess()
    {
        return $this->container['web_access'];
    }

    /**
     * Sets web_access
     *
     * @param bool $web_access web_access
     *
     * @return $this
     */
    public function setWebAccess($web_access)
    {
        $this->container['web_access'] = $web_access;

        return $this;
    }

    /**
     * Gets commence_date
     *
     * @return \DateTime
     */
    public function getCommenceDate()
    {
        return $this->container['commence_date'];
    }

    /**
     * Sets commence_date
     *
     * @param \DateTime $commence_date commence_date
     *
     * @return $this
     */
    public function setCommenceDate($commence_date)
    {
        $this->container['commence_date'] = $commence_date;

        return $this;
    }

    /**
     * Gets trading_status
     *
     * @return string
     */
    public function getTradingStatus()
    {
        return $this->container['trading_status'];
    }

    /**
     * Sets trading_status
     *
     * @param string $trading_status trading_status
     *
     * @return $this
     */
    public function setTradingStatus($trading_status)
    {
        $this->container['trading_status'] = $trading_status;

        return $this;
    }

    /**
     * Gets period_type
     *
     * @return string
     */
    public function getPeriodType()
    {
        return $this->container['period_type'];
    }

    /**
     * Sets period_type
     *
     * @param string $period_type period_type
     *
     * @return $this
     */
    public function setPeriodType($period_type)
    {
        $this->container['period_type'] = $period_type;

        return $this;
    }

    /**
     * Gets uses_fx
     *
     * @return bool
     */
    public function getUsesFx()
    {
        return $this->container['uses_fx'];
    }

    /**
     * Sets uses_fx
     *
     * @param bool $uses_fx uses_fx
     *
     * @return $this
     */
    public function setUsesFx($uses_fx)
    {
        $this->container['uses_fx'] = $uses_fx;

        return $this;
    }

    /**
     * Gets is_cash_only
     *
     * @return bool
     */
    public function getIsCashOnly()
    {
        return $this->container['is_cash_only'];
    }

    /**
     * Sets is_cash_only
     *
     * @param bool $is_cash_only is_cash_only
     *
     * @return $this
     */
    public function setIsCashOnly($is_cash_only)
    {
        $this->container['is_cash_only'] = $is_cash_only;

        return $this;
    }

    /**
     * Gets terms_days
     *
     * @return int
     */
    public function getTermsDays()
    {
        return $this->container['terms_days'];
    }

    /**
     * Sets terms_days
     *
     * @param int $terms_days terms_days
     *
     * @return $this
     */
    public function setTermsDays($terms_days)
    {
        $this->container['terms_days'] = $terms_days;

        return $this;
    }

    /**
     * Gets terms_type
     *
     * @return string
     */
    public function getTermsType()
    {
        return $this->container['terms_type'];
    }

    /**
     * Sets terms_type
     *
     * @param string $terms_type terms_type
     *
     * @return $this
     */
    public function setTermsType($terms_type)
    {
        $this->container['terms_type'] = $terms_type;

        return $this;
    }

    /**
     * Gets exclude_from_aging
     *
     * @return bool
     */
    public function getExcludeFromAging()
    {
        return $this->container['exclude_from_aging'];
    }

    /**
     * Sets exclude_from_aging
     *
     * @param bool $exclude_from_aging exclude_from_aging
     *
     * @return $this
     */
    public function setExcludeFromAging($exclude_from_aging)
    {
        $this->container['exclude_from_aging'] = $exclude_from_aging;

        return $this;
    }

    /**
     * Gets debtor_is_branch_account
     *
     * @return bool
     */
    public function getDebtorIsBranchAccount()
    {
        return $this->container['debtor_is_branch_account'];
    }

    /**
     * Sets debtor_is_branch_account
     *
     * @param bool $debtor_is_branch_account debtor_is_branch_account
     *
     * @return $this
     */
    public function setDebtorIsBranchAccount($debtor_is_branch_account)
    {
        $this->container['debtor_is_branch_account'] = $debtor_is_branch_account;

        return $this;
    }

    /**
     * Gets remaining_normal_prepaid_labour_pack_hours
     *
     * @return double
     */
    public function getRemainingNormalPrepaidLabourPackHours()
    {
        return $this->container['remaining_normal_prepaid_labour_pack_hours'];
    }

    /**
     * Sets remaining_normal_prepaid_labour_pack_hours
     *
     * @param double $remaining_normal_prepaid_labour_pack_hours remaining_normal_prepaid_labour_pack_hours
     *
     * @return $this
     */
    public function setRemainingNormalPrepaidLabourPackHours($remaining_normal_prepaid_labour_pack_hours)
    {
        $this->container['remaining_normal_prepaid_labour_pack_hours'] = $remaining_normal_prepaid_labour_pack_hours;

        return $this;
    }

    /**
     * Gets remaining_special_prepaid_labour_pack_hours
     *
     * @return double
     */
    public function getRemainingSpecialPrepaidLabourPackHours()
    {
        return $this->container['remaining_special_prepaid_labour_pack_hours'];
    }

    /**
     * Sets remaining_special_prepaid_labour_pack_hours
     *
     * @param double $remaining_special_prepaid_labour_pack_hours remaining_special_prepaid_labour_pack_hours
     *
     * @return $this
     */
    public function setRemainingSpecialPrepaidLabourPackHours($remaining_special_prepaid_labour_pack_hours)
    {
        $this->container['remaining_special_prepaid_labour_pack_hours'] = $remaining_special_prepaid_labour_pack_hours;

        return $this;
    }

    /**
     * Gets fx_decimal_places
     *
     * @return int
     */
    public function getFxDecimalPlaces()
    {
        return $this->container['fx_decimal_places'];
    }

    /**
     * Sets fx_decimal_places
     *
     * @param int $fx_decimal_places fx_decimal_places
     *
     * @return $this
     */
    public function setFxDecimalPlaces($fx_decimal_places)
    {
        $this->container['fx_decimal_places'] = $fx_decimal_places;

        return $this;
    }

    /**
     * Gets debtor_id
     *
     * @return string
     */
    public function getDebtorId()
    {
        return $this->container['debtor_id'];
    }

    /**
     * Sets debtor_id
     *
     * @param string $debtor_id debtor_id
     *
     * @return $this
     */
    public function setDebtorId($debtor_id)
    {
        $this->container['debtor_id'] = $debtor_id;

        return $this;
    }

    /**
     * Gets prospect_id
     *
     * @return string
     */
    public function getProspectId()
    {
        return $this->container['prospect_id'];
    }

    /**
     * Sets prospect_id
     *
     * @param string $prospect_id prospect_id
     *
     * @return $this
     */
    public function setProspectId($prospect_id)
    {
        $this->container['prospect_id'] = $prospect_id;

        return $this;
    }

    /**
     * Gets last_saved_date_time
     *
     * @return \DateTime
     */
    public function getLastSavedDateTime()
    {
        return $this->container['last_saved_date_time'];
    }

    /**
     * Sets last_saved_date_time
     *
     * @param \DateTime $last_saved_date_time last_saved_date_time
     *
     * @return $this
     */
    public function setLastSavedDateTime($last_saved_date_time)
    {
        $this->container['last_saved_date_time'] = $last_saved_date_time;

        return $this;
    }

    /**
     * Gets account_no
     *
     * @return string
     */
    public function getAccountNo()
    {
        return $this->container['account_no'];
    }

    /**
     * Sets account_no
     *
     * @param string $account_no account_no
     *
     * @return $this
     */
    public function setAccountNo($account_no)
    {
        $this->container['account_no'] = $account_no;

        return $this;
    }

    /**
     * Gets alt_account_no
     *
     * @return string
     */
    public function getAltAccountNo()
    {
        return $this->container['alt_account_no'];
    }

    /**
     * Sets alt_account_no
     *
     * @param string $alt_account_no alt_account_no
     *
     * @return $this
     */
    public function setAltAccountNo($alt_account_no)
    {
        $this->container['alt_account_no'] = $alt_account_no;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets address1
     *
     * @return string
     */
    public function getAddress1()
    {
        return $this->container['address1'];
    }

    /**
     * Sets address1
     *
     * @param string $address1 address1
     *
     * @return $this
     */
    public function setAddress1($address1)
    {
        $this->container['address1'] = $address1;

        return $this;
    }

    /**
     * Gets address2
     *
     * @return string
     */
    public function getAddress2()
    {
        return $this->container['address2'];
    }

    /**
     * Sets address2
     *
     * @param string $address2 address2
     *
     * @return $this
     */
    public function setAddress2($address2)
    {
        $this->container['address2'] = $address2;

        return $this;
    }

    /**
     * Gets address3
     *
     * @return string
     */
    public function getAddress3()
    {
        return $this->container['address3'];
    }

    /**
     * Sets address3
     *
     * @param string $address3 address3
     *
     * @return $this
     */
    public function setAddress3($address3)
    {
        $this->container['address3'] = $address3;

        return $this;
    }

    /**
     * Gets address4
     *
     * @return string
     */
    public function getAddress4()
    {
        return $this->container['address4'];
    }

    /**
     * Sets address4
     *
     * @param string $address4 address4
     *
     * @return $this
     */
    public function setAddress4($address4)
    {
        $this->container['address4'] = $address4;

        return $this;
    }

    /**
     * Gets postcode
     *
     * @return string
     */
    public function getPostcode()
    {
        return $this->container['postcode'];
    }

    /**
     * Sets postcode
     *
     * @param string $postcode postcode
     *
     * @return $this
     */
    public function setPostcode($postcode)
    {
        $this->container['postcode'] = $postcode;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return string
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param string $phone phone
     *
     * @return $this
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets fax
     *
     * @return string
     */
    public function getFax()
    {
        return $this->container['fax'];
    }

    /**
     * Sets fax
     *
     * @param string $fax fax
     *
     * @return $this
     */
    public function setFax($fax)
    {
        $this->container['fax'] = $fax;

        return $this;
    }

    /**
     * Gets email_address
     *
     * @return string
     */
    public function getEmailAddress()
    {
        return $this->container['email_address'];
    }

    /**
     * Sets email_address
     *
     * @param string $email_address email_address
     *
     * @return $this
     */
    public function setEmailAddress($email_address)
    {
        $this->container['email_address'] = $email_address;

        return $this;
    }

    /**
     * Gets acn
     *
     * @return string
     */
    public function getAcn()
    {
        return $this->container['acn'];
    }

    /**
     * Sets acn
     *
     * @param string $acn acn
     *
     * @return $this
     */
    public function setAcn($acn)
    {
        $this->container['acn'] = $acn;

        return $this;
    }

    /**
     * Gets abn
     *
     * @return string
     */
    public function getAbn()
    {
        return $this->container['abn'];
    }

    /**
     * Sets abn
     *
     * @param string $abn abn
     *
     * @return $this
     */
    public function setAbn($abn)
    {
        $this->container['abn'] = $abn;

        return $this;
    }

    /**
     * Gets aust_post_dpid
     *
     * @return string
     */
    public function getAustPostDpid()
    {
        return $this->container['aust_post_dpid'];
    }

    /**
     * Sets aust_post_dpid
     *
     * @param string $aust_post_dpid aust_post_dpid
     *
     * @return $this
     */
    public function setAustPostDpid($aust_post_dpid)
    {
        $this->container['aust_post_dpid'] = $aust_post_dpid;

        return $this;
    }

    /**
     * Gets aust_post_bcsp
     *
     * @return string
     */
    public function getAustPostBcsp()
    {
        return $this->container['aust_post_bcsp'];
    }

    /**
     * Sets aust_post_bcsp
     *
     * @param string $aust_post_bcsp aust_post_bcsp
     *
     * @return $this
     */
    public function setAustPostBcsp($aust_post_bcsp)
    {
        $this->container['aust_post_bcsp'] = $aust_post_bcsp;

        return $this;
    }

    /**
     * Gets bank_name
     *
     * @return string
     */
    public function getBankName()
    {
        return $this->container['bank_name'];
    }

    /**
     * Sets bank_name
     *
     * @param string $bank_name bank_name
     *
     * @return $this
     */
    public function setBankName($bank_name)
    {
        $this->container['bank_name'] = $bank_name;

        return $this;
    }

    /**
     * Gets bank_account_no
     *
     * @return string
     */
    public function getBankAccountNo()
    {
        return $this->container['bank_account_no'];
    }

    /**
     * Sets bank_account_no
     *
     * @param string $bank_account_no bank_account_no
     *
     * @return $this
     */
    public function setBankAccountNo($bank_account_no)
    {
        $this->container['bank_account_no'] = $bank_account_no;

        return $this;
    }

    /**
     * Gets bank_bsbn
     *
     * @return string
     */
    public function getBankBsbn()
    {
        return $this->container['bank_bsbn'];
    }

    /**
     * Sets bank_bsbn
     *
     * @param string $bank_bsbn bank_bsbn
     *
     * @return $this
     */
    public function setBankBsbn($bank_bsbn)
    {
        $this->container['bank_bsbn'] = $bank_bsbn;

        return $this;
    }

    /**
     * Gets bank_account_name
     *
     * @return string
     */
    public function getBankAccountName()
    {
        return $this->container['bank_account_name'];
    }

    /**
     * Sets bank_account_name
     *
     * @param string $bank_account_name bank_account_name
     *
     * @return $this
     */
    public function setBankAccountName($bank_account_name)
    {
        $this->container['bank_account_name'] = $bank_account_name;

        return $this;
    }

    /**
     * Gets tax_exemption_no
     *
     * @return string
     */
    public function getTaxExemptionNo()
    {
        return $this->container['tax_exemption_no'];
    }

    /**
     * Sets tax_exemption_no
     *
     * @param string $tax_exemption_no tax_exemption_no
     *
     * @return $this
     */
    public function setTaxExemptionNo($tax_exemption_no)
    {
        $this->container['tax_exemption_no'] = $tax_exemption_no;

        return $this;
    }

    /**
     * Gets notify_address
     *
     * @return string
     */
    public function getNotifyAddress()
    {
        return $this->container['notify_address'];
    }

    /**
     * Sets notify_address
     *
     * @param string $notify_address notify_address
     *
     * @return $this
     */
    public function setNotifyAddress($notify_address)
    {
        $this->container['notify_address'] = $notify_address;

        return $this;
    }

    /**
     * Gets parent_debtor_id
     *
     * @return string
     */
    public function getParentDebtorId()
    {
        return $this->container['parent_debtor_id'];
    }

    /**
     * Sets parent_debtor_id
     *
     * @param string $parent_debtor_id parent_debtor_id
     *
     * @return $this
     */
    public function setParentDebtorId($parent_debtor_id)
    {
        $this->container['parent_debtor_id'] = $parent_debtor_id;

        return $this;
    }

    /**
     * Gets parent_debtor_account_no
     *
     * @return string
     */
    public function getParentDebtorAccountNo()
    {
        return $this->container['parent_debtor_account_no'];
    }

    /**
     * Sets parent_debtor_account_no
     *
     * @param string $parent_debtor_account_no parent_debtor_account_no
     *
     * @return $this
     */
    public function setParentDebtorAccountNo($parent_debtor_account_no)
    {
        $this->container['parent_debtor_account_no'] = $parent_debtor_account_no;

        return $this;
    }

    /**
     * Gets parent_debtor_name
     *
     * @return string
     */
    public function getParentDebtorName()
    {
        return $this->container['parent_debtor_name'];
    }

    /**
     * Sets parent_debtor_name
     *
     * @param string $parent_debtor_name parent_debtor_name
     *
     * @return $this
     */
    public function setParentDebtorName($parent_debtor_name)
    {
        $this->container['parent_debtor_name'] = $parent_debtor_name;

        return $this;
    }

    /**
     * Gets price_scheme_id
     *
     * @return string
     */
    public function getPriceSchemeId()
    {
        return $this->container['price_scheme_id'];
    }

    /**
     * Sets price_scheme_id
     *
     * @param string $price_scheme_id price_scheme_id
     *
     * @return $this
     */
    public function setPriceSchemeId($price_scheme_id)
    {
        $this->container['price_scheme_id'] = $price_scheme_id;

        return $this;
    }

    /**
     * Gets price_scheme_description
     *
     * @return string
     */
    public function getPriceSchemeDescription()
    {
        return $this->container['price_scheme_description'];
    }

    /**
     * Sets price_scheme_description
     *
     * @param string $price_scheme_description price_scheme_description
     *
     * @return $this
     */
    public function setPriceSchemeDescription($price_scheme_description)
    {
        $this->container['price_scheme_description'] = $price_scheme_description;

        return $this;
    }

    /**
     * Gets trading_name
     *
     * @return string
     */
    public function getTradingName()
    {
        return $this->container['trading_name'];
    }

    /**
     * Sets trading_name
     *
     * @param string $trading_name trading_name
     *
     * @return $this
     */
    public function setTradingName($trading_name)
    {
        $this->container['trading_name'] = $trading_name;

        return $this;
    }

    /**
     * Gets company_name
     *
     * @return string
     */
    public function getCompanyName()
    {
        return $this->container['company_name'];
    }

    /**
     * Sets company_name
     *
     * @param string $company_name company_name
     *
     * @return $this
     */
    public function setCompanyName($company_name)
    {
        $this->container['company_name'] = $company_name;

        return $this;
    }

    /**
     * Gets proprietors_name
     *
     * @return string
     */
    public function getProprietorsName()
    {
        return $this->container['proprietors_name'];
    }

    /**
     * Sets proprietors_name
     *
     * @param string $proprietors_name proprietors_name
     *
     * @return $this
     */
    public function setProprietorsName($proprietors_name)
    {
        $this->container['proprietors_name'] = $proprietors_name;

        return $this;
    }

    /**
     * Gets fax_header
     *
     * @return string
     */
    public function getFaxHeader()
    {
        return $this->container['fax_header'];
    }

    /**
     * Sets fax_header
     *
     * @param string $fax_header fax_header
     *
     * @return $this
     */
    public function setFaxHeader($fax_header)
    {
        $this->container['fax_header'] = $fax_header;

        return $this;
    }

    /**
     * Gets fxid
     *
     * @return string
     */
    public function getFxid()
    {
        return $this->container['fxid'];
    }

    /**
     * Sets fxid
     *
     * @param string $fxid fxid
     *
     * @return $this
     */
    public function setFxid($fxid)
    {
        $this->container['fxid'] = $fxid;

        return $this;
    }

    /**
     * Gets fx_name
     *
     * @return string
     */
    public function getFxName()
    {
        return $this->container['fx_name'];
    }

    /**
     * Sets fx_name
     *
     * @param string $fx_name fx_name
     *
     * @return $this
     */
    public function setFxName($fx_name)
    {
        $this->container['fx_name'] = $fx_name;

        return $this;
    }

    /**
     * Gets fx_short_name
     *
     * @return string
     */
    public function getFxShortName()
    {
        return $this->container['fx_short_name'];
    }

    /**
     * Sets fx_short_name
     *
     * @param string $fx_short_name fx_short_name
     *
     * @return $this
     */
    public function setFxShortName($fx_short_name)
    {
        $this->container['fx_short_name'] = $fx_short_name;

        return $this;
    }

    /**
     * Gets b_pay_reference
     *
     * @return string
     */
    public function getBPayReference()
    {
        return $this->container['b_pay_reference'];
    }

    /**
     * Sets b_pay_reference
     *
     * @param string $b_pay_reference b_pay_reference
     *
     * @return $this
     */
    public function setBPayReference($b_pay_reference)
    {
        $this->container['b_pay_reference'] = $b_pay_reference;

        return $this;
    }

    /**
     * Gets classification
     *
     * @return \Jiwa\Model\DebtorClassification
     */
    public function getClassification()
    {
        return $this->container['classification'];
    }

    /**
     * Sets classification
     *
     * @param \Jiwa\Model\DebtorClassification $classification classification
     *
     * @return $this
     */
    public function setClassification($classification)
    {
        $this->container['classification'] = $classification;

        return $this;
    }

    /**
     * Gets category1
     *
     * @return \Jiwa\Model\DebtorCategory
     */
    public function getCategory1()
    {
        return $this->container['category1'];
    }

    /**
     * Sets category1
     *
     * @param \Jiwa\Model\DebtorCategory $category1 category1
     *
     * @return $this
     */
    public function setCategory1($category1)
    {
        $this->container['category1'] = $category1;

        return $this;
    }

    /**
     * Gets category2
     *
     * @return \Jiwa\Model\DebtorCategory
     */
    public function getCategory2()
    {
        return $this->container['category2'];
    }

    /**
     * Sets category2
     *
     * @param \Jiwa\Model\DebtorCategory $category2 category2
     *
     * @return $this
     */
    public function setCategory2($category2)
    {
        $this->container['category2'] = $category2;

        return $this;
    }

    /**
     * Gets category3
     *
     * @return \Jiwa\Model\DebtorCategory
     */
    public function getCategory3()
    {
        return $this->container['category3'];
    }

    /**
     * Sets category3
     *
     * @param \Jiwa\Model\DebtorCategory $category3 category3
     *
     * @return $this
     */
    public function setCategory3($category3)
    {
        $this->container['category3'] = $category3;

        return $this;
    }

    /**
     * Gets category4
     *
     * @return \Jiwa\Model\DebtorCategory
     */
    public function getCategory4()
    {
        return $this->container['category4'];
    }

    /**
     * Sets category4
     *
     * @param \Jiwa\Model\DebtorCategory $category4 category4
     *
     * @return $this
     */
    public function setCategory4($category4)
    {
        $this->container['category4'] = $category4;

        return $this;
    }

    /**
     * Gets category5
     *
     * @return \Jiwa\Model\DebtorCategory
     */
    public function getCategory5()
    {
        return $this->container['category5'];
    }

    /**
     * Sets category5
     *
     * @param \Jiwa\Model\DebtorCategory $category5 category5
     *
     * @return $this
     */
    public function setCategory5($category5)
    {
        $this->container['category5'] = $category5;

        return $this;
    }

    /**
     * Gets contact_names
     *
     * @return \Jiwa\Model\DebtorContactName[]
     */
    public function getContactNames()
    {
        return $this->container['contact_names'];
    }

    /**
     * Sets contact_names
     *
     * @param \Jiwa\Model\DebtorContactName[] $contact_names contact_names
     *
     * @return $this
     */
    public function setContactNames($contact_names)
    {
        $this->container['contact_names'] = $contact_names;

        return $this;
    }

    /**
     * Gets group_memberships
     *
     * @return \Jiwa\Model\DebtorGroupMembership[]
     */
    public function getGroupMemberships()
    {
        return $this->container['group_memberships'];
    }

    /**
     * Sets group_memberships
     *
     * @param \Jiwa\Model\DebtorGroupMembership[] $group_memberships group_memberships
     *
     * @return $this
     */
    public function setGroupMemberships($group_memberships)
    {
        $this->container['group_memberships'] = $group_memberships;

        return $this;
    }

    /**
     * Gets branch_debtors
     *
     * @return \Jiwa\Model\DebtorBranchDebtor[]
     */
    public function getBranchDebtors()
    {
        return $this->container['branch_debtors'];
    }

    /**
     * Sets branch_debtors
     *
     * @param \Jiwa\Model\DebtorBranchDebtor[] $branch_debtors branch_debtors
     *
     * @return $this
     */
    public function setBranchDebtors($branch_debtors)
    {
        $this->container['branch_debtors'] = $branch_debtors;

        return $this;
    }

    /**
     * Gets delivery_addresses
     *
     * @return \Jiwa\Model\DebtorDeliveryAddress[]
     */
    public function getDeliveryAddresses()
    {
        return $this->container['delivery_addresses'];
    }

    /**
     * Sets delivery_addresses
     *
     * @param \Jiwa\Model\DebtorDeliveryAddress[] $delivery_addresses delivery_addresses
     *
     * @return $this
     */
    public function setDeliveryAddresses($delivery_addresses)
    {
        $this->container['delivery_addresses'] = $delivery_addresses;

        return $this;
    }

    /**
     * Gets freight_forwarder_addresses
     *
     * @return \Jiwa\Model\DebtorFreightForwarderAddress[]
     */
    public function getFreightForwarderAddresses()
    {
        return $this->container['freight_forwarder_addresses'];
    }

    /**
     * Sets freight_forwarder_addresses
     *
     * @param \Jiwa\Model\DebtorFreightForwarderAddress[] $freight_forwarder_addresses freight_forwarder_addresses
     *
     * @return $this
     */
    public function setFreightForwarderAddresses($freight_forwarder_addresses)
    {
        $this->container['freight_forwarder_addresses'] = $freight_forwarder_addresses;

        return $this;
    }

    /**
     * Gets notes
     *
     * @return \Jiwa\Model\Note[]
     */
    public function getNotes()
    {
        return $this->container['notes'];
    }

    /**
     * Sets notes
     *
     * @param \Jiwa\Model\Note[] $notes notes
     *
     * @return $this
     */
    public function setNotes($notes)
    {
        $this->container['notes'] = $notes;

        return $this;
    }

    /**
     * Gets credit_notes
     *
     * @return \Jiwa\Model\Note[]
     */
    public function getCreditNotes()
    {
        return $this->container['credit_notes'];
    }

    /**
     * Sets credit_notes
     *
     * @param \Jiwa\Model\Note[] $credit_notes credit_notes
     *
     * @return $this
     */
    public function setCreditNotes($credit_notes)
    {
        $this->container['credit_notes'] = $credit_notes;

        return $this;
    }

    /**
     * Gets directors
     *
     * @return \Jiwa\Model\DebtorDirector[]
     */
    public function getDirectors()
    {
        return $this->container['directors'];
    }

    /**
     * Sets directors
     *
     * @param \Jiwa\Model\DebtorDirector[] $directors directors
     *
     * @return $this
     */
    public function setDirectors($directors)
    {
        $this->container['directors'] = $directors;

        return $this;
    }

    /**
     * Gets budgets
     *
     * @return \Jiwa\Model\DebtorBudget[]
     */
    public function getBudgets()
    {
        return $this->container['budgets'];
    }

    /**
     * Sets budgets
     *
     * @param \Jiwa\Model\DebtorBudget[] $budgets budgets
     *
     * @return $this
     */
    public function setBudgets($budgets)
    {
        $this->container['budgets'] = $budgets;

        return $this;
    }

    /**
     * Gets debtor_part_numbers
     *
     * @return \Jiwa\Model\DebtorPartNumber[]
     */
    public function getDebtorPartNumbers()
    {
        return $this->container['debtor_part_numbers'];
    }

    /**
     * Sets debtor_part_numbers
     *
     * @param \Jiwa\Model\DebtorPartNumber[] $debtor_part_numbers debtor_part_numbers
     *
     * @return $this
     */
    public function setDebtorPartNumbers($debtor_part_numbers)
    {
        $this->container['debtor_part_numbers'] = $debtor_part_numbers;

        return $this;
    }

    /**
     * Gets custom_field_values
     *
     * @return \Jiwa\Model\CustomFieldValue[]
     */
    public function getCustomFieldValues()
    {
        return $this->container['custom_field_values'];
    }

    /**
     * Sets custom_field_values
     *
     * @param \Jiwa\Model\CustomFieldValue[] $custom_field_values custom_field_values
     *
     * @return $this
     */
    public function setCustomFieldValues($custom_field_values)
    {
        $this->container['custom_field_values'] = $custom_field_values;

        return $this;
    }

    /**
     * Gets documents
     *
     * @return \Jiwa\Model\Document[]
     */
    public function getDocuments()
    {
        return $this->container['documents'];
    }

    /**
     * Sets documents
     *
     * @param \Jiwa\Model\Document[] $documents documents
     *
     * @return $this
     */
    public function setDocuments($documents)
    {
        $this->container['documents'] = $documents;

        return $this;
    }

    /**
     * Gets debtor_systems
     *
     * @return \Jiwa\Model\DebtorSystem[]
     */
    public function getDebtorSystems()
    {
        return $this->container['debtor_systems'];
    }

    /**
     * Sets debtor_systems
     *
     * @param \Jiwa\Model\DebtorSystem[] $debtor_systems debtor_systems
     *
     * @return $this
     */
    public function setDebtorSystems($debtor_systems)
    {
        $this->container['debtor_systems'] = $debtor_systems;

        return $this;
    }

    /**
     * Gets debtor_ledgers
     *
     * @return \Jiwa\Model\DebtorLedger[]
     */
    public function getDebtorLedgers()
    {
        return $this->container['debtor_ledgers'];
    }

    /**
     * Sets debtor_ledgers
     *
     * @param \Jiwa\Model\DebtorLedger[] $debtor_ledgers debtor_ledgers
     *
     * @return $this
     */
    public function setDebtorLedgers($debtor_ledgers)
    {
        $this->container['debtor_ledgers'] = $debtor_ledgers;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


