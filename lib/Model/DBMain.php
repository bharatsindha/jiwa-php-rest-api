<?php
/**
 * DBMain
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\Model;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * DBMain Class Doc Comment
 *
 * @category Class
 * @description DB_Main
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DBMain implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'DB_Main';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'debtor_id' => 'string',
        'last_saved_date_time' => '\DateTime',
        'account_no' => 'string',
        'name' => 'string',
        'address1' => 'string',
        'address2' => 'string',
        'address3' => 'string',
        'address4' => 'string',
        'post_code' => 'string',
        'phone' => 'string',
        'fax' => 'string',
        'bank_name' => 'string',
        'bank_acc' => 'string',
        'bsbn' => 'string',
        'account_name' => 'string',
        'tax_exempt_no' => 'string',
        'credit_limit' => 'double',
        'early_pay_dis_on_stats_days' => 'int',
        'early_pay_dis_on_stats_amt' => 'double',
        'last_purchase_date' => '\DateTime',
        'last_payment_date' => '\DateTime',
        'standing_dis_on_invoices' => 'double',
        'classification_id' => 'string',
        'account_on_hold' => 'bool',
        'email_address' => 'string',
        'current_balance' => 'double',
        'period1' => 'double',
        'period2' => 'double',
        'period3' => 'double',
        'period4' => 'double',
        'alt_account_no' => 'string',
        'notify_required' => 'bool',
        'notify_address' => 'string',
        'commence_date' => '\DateTime',
        'web_access' => 'bool',
        'parent_debtor_id' => 'string',
        'alloc_last_saved_date_time' => '\DateTime',
        'price_scheme_id' => 'string',
        'aust_post_dpid' => 'string',
        'aust_post_bcsp' => 'string',
        'trading_name' => 'string',
        'company_name' => 'string',
        'acn' => 'string',
        'proprietors_name' => 'string',
        'fax_header' => 'string',
        'ledger_id_debtor_control' => 'string',
        'ledger_id_debtor_sales' => 'string',
        'ledger_id_debtor_discounts' => 'string',
        'ledger_id_debtor_sourced_invoices' => 'string',
        'ledger_id_debtor_debit_adjustment' => 'string',
        'ledger_id_debtor_sourced_receipts' => 'string',
        'ledger_id_debtor_credit_adjustment' => 'string',
        'ledger_id_debtor_freight' => 'string',
        'ledger_id_debtor_insurance' => 'string',
        'ledger_id_debtor_realised_gain_loss' => 'string',
        'ledger_id_debtor_un_realised_gain_loss' => 'string',
        'period_type' => 'int',
        'terms_days' => 'int',
        'terms_type' => 'int',
        'abn' => 'string',
        'exclude_from_aging' => 'bool',
        'b_pay_reference' => 'string',
        'uses_fx' => 'bool',
        'fx_currency_id' => 'string',
        'fx_current_balance' => 'double',
        'fx_period1' => 'double',
        'fx_period2' => 'double',
        'fx_period3' => 'double',
        'fx_period4' => 'double',
        'trading_status' => 'int',
        'category1_id' => 'string',
        'category2_id' => 'string',
        'category3_id' => 'string',
        'category4_id' => 'string',
        'category5_id' => 'string',
        'bo_priorities_rec_id' => 'string',
        'pricing_group_id' => 'string',
        'budgeted_gp_percentage' => 'double',
        'country' => 'string',
        'fr_carriers_rec_id' => 'string',
        'fr_carrier_services_rec_id' => 'string',
        'carrier_account_no' => 'string',
        'charge_to' => 'int',
        'is_cash_only' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'debtor_id' => null,
        'last_saved_date_time' => 'date-time',
        'account_no' => null,
        'name' => null,
        'address1' => null,
        'address2' => null,
        'address3' => null,
        'address4' => null,
        'post_code' => null,
        'phone' => null,
        'fax' => null,
        'bank_name' => null,
        'bank_acc' => null,
        'bsbn' => null,
        'account_name' => null,
        'tax_exempt_no' => null,
        'credit_limit' => 'double',
        'early_pay_dis_on_stats_days' => 'int32',
        'early_pay_dis_on_stats_amt' => 'double',
        'last_purchase_date' => 'date-time',
        'last_payment_date' => 'date-time',
        'standing_dis_on_invoices' => 'double',
        'classification_id' => null,
        'account_on_hold' => null,
        'email_address' => null,
        'current_balance' => 'double',
        'period1' => 'double',
        'period2' => 'double',
        'period3' => 'double',
        'period4' => 'double',
        'alt_account_no' => null,
        'notify_required' => null,
        'notify_address' => null,
        'commence_date' => 'date-time',
        'web_access' => null,
        'parent_debtor_id' => null,
        'alloc_last_saved_date_time' => 'date-time',
        'price_scheme_id' => null,
        'aust_post_dpid' => null,
        'aust_post_bcsp' => null,
        'trading_name' => null,
        'company_name' => null,
        'acn' => null,
        'proprietors_name' => null,
        'fax_header' => null,
        'ledger_id_debtor_control' => null,
        'ledger_id_debtor_sales' => null,
        'ledger_id_debtor_discounts' => null,
        'ledger_id_debtor_sourced_invoices' => null,
        'ledger_id_debtor_debit_adjustment' => null,
        'ledger_id_debtor_sourced_receipts' => null,
        'ledger_id_debtor_credit_adjustment' => null,
        'ledger_id_debtor_freight' => null,
        'ledger_id_debtor_insurance' => null,
        'ledger_id_debtor_realised_gain_loss' => null,
        'ledger_id_debtor_un_realised_gain_loss' => null,
        'period_type' => 'int32',
        'terms_days' => 'int32',
        'terms_type' => 'int32',
        'abn' => null,
        'exclude_from_aging' => null,
        'b_pay_reference' => null,
        'uses_fx' => null,
        'fx_currency_id' => null,
        'fx_current_balance' => 'double',
        'fx_period1' => 'double',
        'fx_period2' => 'double',
        'fx_period3' => 'double',
        'fx_period4' => 'double',
        'trading_status' => 'int32',
        'category1_id' => null,
        'category2_id' => null,
        'category3_id' => null,
        'category4_id' => null,
        'category5_id' => null,
        'bo_priorities_rec_id' => null,
        'pricing_group_id' => null,
        'budgeted_gp_percentage' => 'double',
        'country' => null,
        'fr_carriers_rec_id' => null,
        'fr_carrier_services_rec_id' => null,
        'carrier_account_no' => null,
        'charge_to' => 'int32',
        'is_cash_only' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'debtor_id' => 'DebtorID',
        'last_saved_date_time' => 'LastSavedDateTime',
        'account_no' => 'AccountNo',
        'name' => 'Name',
        'address1' => 'Address1',
        'address2' => 'Address2',
        'address3' => 'Address3',
        'address4' => 'Address4',
        'post_code' => 'PostCode',
        'phone' => 'Phone',
        'fax' => 'Fax',
        'bank_name' => 'BankName',
        'bank_acc' => 'BankAcc',
        'bsbn' => 'BSBN',
        'account_name' => 'AccountName',
        'tax_exempt_no' => 'TaxExemptNo',
        'credit_limit' => 'CreditLimit',
        'early_pay_dis_on_stats_days' => 'EarlyPayDisOnStatsDays',
        'early_pay_dis_on_stats_amt' => 'EarlyPayDisOnStatsAmt',
        'last_purchase_date' => 'LastPurchaseDate',
        'last_payment_date' => 'LastPaymentDate',
        'standing_dis_on_invoices' => 'StandingDisOnInvoices',
        'classification_id' => 'ClassificationID',
        'account_on_hold' => 'AccountOnHold',
        'email_address' => 'EmailAddress',
        'current_balance' => 'CurrentBalance',
        'period1' => 'Period1',
        'period2' => 'Period2',
        'period3' => 'Period3',
        'period4' => 'Period4',
        'alt_account_no' => 'AltAccountNo',
        'notify_required' => 'NotifyRequired',
        'notify_address' => 'NotifyAddress',
        'commence_date' => 'CommenceDate',
        'web_access' => 'WebAccess',
        'parent_debtor_id' => 'ParentDebtorID',
        'alloc_last_saved_date_time' => 'AllocLastSavedDateTime',
        'price_scheme_id' => 'PriceSchemeID',
        'aust_post_dpid' => 'AustPostDPID',
        'aust_post_bcsp' => 'AustPostBCSP',
        'trading_name' => 'TradingName',
        'company_name' => 'CompanyName',
        'acn' => 'ACN',
        'proprietors_name' => 'ProprietorsName',
        'fax_header' => 'FaxHeader',
        'ledger_id_debtor_control' => 'LedgerIDDebtorControl',
        'ledger_id_debtor_sales' => 'LedgerIDDebtorSales',
        'ledger_id_debtor_discounts' => 'LedgerIDDebtorDiscounts',
        'ledger_id_debtor_sourced_invoices' => 'LedgerIDDebtorSourcedInvoices',
        'ledger_id_debtor_debit_adjustment' => 'LedgerIDDebtorDebitAdjustment',
        'ledger_id_debtor_sourced_receipts' => 'LedgerIDDebtorSourcedReceipts',
        'ledger_id_debtor_credit_adjustment' => 'LedgerIDDebtorCreditAdjustment',
        'ledger_id_debtor_freight' => 'LedgerIDDebtorFreight',
        'ledger_id_debtor_insurance' => 'LedgerIDDebtorInsurance',
        'ledger_id_debtor_realised_gain_loss' => 'LedgerIDDebtorRealisedGainLoss',
        'ledger_id_debtor_un_realised_gain_loss' => 'LedgerIDDebtorUnRealisedGainLoss',
        'period_type' => 'PeriodType',
        'terms_days' => 'TermsDays',
        'terms_type' => 'TermsType',
        'abn' => 'ABN',
        'exclude_from_aging' => 'ExcludeFromAging',
        'b_pay_reference' => 'BPayReference',
        'uses_fx' => 'UsesFX',
        'fx_currency_id' => 'FXCurrencyID',
        'fx_current_balance' => 'FXCurrentBalance',
        'fx_period1' => 'FXPeriod1',
        'fx_period2' => 'FXPeriod2',
        'fx_period3' => 'FXPeriod3',
        'fx_period4' => 'FXPeriod4',
        'trading_status' => 'TradingStatus',
        'category1_id' => 'Category1ID',
        'category2_id' => 'Category2ID',
        'category3_id' => 'Category3ID',
        'category4_id' => 'Category4ID',
        'category5_id' => 'Category5ID',
        'bo_priorities_rec_id' => 'BO_Priorities_RecID',
        'pricing_group_id' => 'PricingGroupID',
        'budgeted_gp_percentage' => 'BudgetedGPPercentage',
        'country' => 'Country',
        'fr_carriers_rec_id' => 'FR_Carriers_RecID',
        'fr_carrier_services_rec_id' => 'FR_CarrierServices_RecID',
        'carrier_account_no' => 'CarrierAccountNo',
        'charge_to' => 'ChargeTo',
        'is_cash_only' => 'IsCashOnly'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'debtor_id' => 'setDebtorId',
        'last_saved_date_time' => 'setLastSavedDateTime',
        'account_no' => 'setAccountNo',
        'name' => 'setName',
        'address1' => 'setAddress1',
        'address2' => 'setAddress2',
        'address3' => 'setAddress3',
        'address4' => 'setAddress4',
        'post_code' => 'setPostCode',
        'phone' => 'setPhone',
        'fax' => 'setFax',
        'bank_name' => 'setBankName',
        'bank_acc' => 'setBankAcc',
        'bsbn' => 'setBsbn',
        'account_name' => 'setAccountName',
        'tax_exempt_no' => 'setTaxExemptNo',
        'credit_limit' => 'setCreditLimit',
        'early_pay_dis_on_stats_days' => 'setEarlyPayDisOnStatsDays',
        'early_pay_dis_on_stats_amt' => 'setEarlyPayDisOnStatsAmt',
        'last_purchase_date' => 'setLastPurchaseDate',
        'last_payment_date' => 'setLastPaymentDate',
        'standing_dis_on_invoices' => 'setStandingDisOnInvoices',
        'classification_id' => 'setClassificationId',
        'account_on_hold' => 'setAccountOnHold',
        'email_address' => 'setEmailAddress',
        'current_balance' => 'setCurrentBalance',
        'period1' => 'setPeriod1',
        'period2' => 'setPeriod2',
        'period3' => 'setPeriod3',
        'period4' => 'setPeriod4',
        'alt_account_no' => 'setAltAccountNo',
        'notify_required' => 'setNotifyRequired',
        'notify_address' => 'setNotifyAddress',
        'commence_date' => 'setCommenceDate',
        'web_access' => 'setWebAccess',
        'parent_debtor_id' => 'setParentDebtorId',
        'alloc_last_saved_date_time' => 'setAllocLastSavedDateTime',
        'price_scheme_id' => 'setPriceSchemeId',
        'aust_post_dpid' => 'setAustPostDpid',
        'aust_post_bcsp' => 'setAustPostBcsp',
        'trading_name' => 'setTradingName',
        'company_name' => 'setCompanyName',
        'acn' => 'setAcn',
        'proprietors_name' => 'setProprietorsName',
        'fax_header' => 'setFaxHeader',
        'ledger_id_debtor_control' => 'setLedgerIdDebtorControl',
        'ledger_id_debtor_sales' => 'setLedgerIdDebtorSales',
        'ledger_id_debtor_discounts' => 'setLedgerIdDebtorDiscounts',
        'ledger_id_debtor_sourced_invoices' => 'setLedgerIdDebtorSourcedInvoices',
        'ledger_id_debtor_debit_adjustment' => 'setLedgerIdDebtorDebitAdjustment',
        'ledger_id_debtor_sourced_receipts' => 'setLedgerIdDebtorSourcedReceipts',
        'ledger_id_debtor_credit_adjustment' => 'setLedgerIdDebtorCreditAdjustment',
        'ledger_id_debtor_freight' => 'setLedgerIdDebtorFreight',
        'ledger_id_debtor_insurance' => 'setLedgerIdDebtorInsurance',
        'ledger_id_debtor_realised_gain_loss' => 'setLedgerIdDebtorRealisedGainLoss',
        'ledger_id_debtor_un_realised_gain_loss' => 'setLedgerIdDebtorUnRealisedGainLoss',
        'period_type' => 'setPeriodType',
        'terms_days' => 'setTermsDays',
        'terms_type' => 'setTermsType',
        'abn' => 'setAbn',
        'exclude_from_aging' => 'setExcludeFromAging',
        'b_pay_reference' => 'setBPayReference',
        'uses_fx' => 'setUsesFx',
        'fx_currency_id' => 'setFxCurrencyId',
        'fx_current_balance' => 'setFxCurrentBalance',
        'fx_period1' => 'setFxPeriod1',
        'fx_period2' => 'setFxPeriod2',
        'fx_period3' => 'setFxPeriod3',
        'fx_period4' => 'setFxPeriod4',
        'trading_status' => 'setTradingStatus',
        'category1_id' => 'setCategory1Id',
        'category2_id' => 'setCategory2Id',
        'category3_id' => 'setCategory3Id',
        'category4_id' => 'setCategory4Id',
        'category5_id' => 'setCategory5Id',
        'bo_priorities_rec_id' => 'setBoPrioritiesRecId',
        'pricing_group_id' => 'setPricingGroupId',
        'budgeted_gp_percentage' => 'setBudgetedGpPercentage',
        'country' => 'setCountry',
        'fr_carriers_rec_id' => 'setFrCarriersRecId',
        'fr_carrier_services_rec_id' => 'setFrCarrierServicesRecId',
        'carrier_account_no' => 'setCarrierAccountNo',
        'charge_to' => 'setChargeTo',
        'is_cash_only' => 'setIsCashOnly'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'debtor_id' => 'getDebtorId',
        'last_saved_date_time' => 'getLastSavedDateTime',
        'account_no' => 'getAccountNo',
        'name' => 'getName',
        'address1' => 'getAddress1',
        'address2' => 'getAddress2',
        'address3' => 'getAddress3',
        'address4' => 'getAddress4',
        'post_code' => 'getPostCode',
        'phone' => 'getPhone',
        'fax' => 'getFax',
        'bank_name' => 'getBankName',
        'bank_acc' => 'getBankAcc',
        'bsbn' => 'getBsbn',
        'account_name' => 'getAccountName',
        'tax_exempt_no' => 'getTaxExemptNo',
        'credit_limit' => 'getCreditLimit',
        'early_pay_dis_on_stats_days' => 'getEarlyPayDisOnStatsDays',
        'early_pay_dis_on_stats_amt' => 'getEarlyPayDisOnStatsAmt',
        'last_purchase_date' => 'getLastPurchaseDate',
        'last_payment_date' => 'getLastPaymentDate',
        'standing_dis_on_invoices' => 'getStandingDisOnInvoices',
        'classification_id' => 'getClassificationId',
        'account_on_hold' => 'getAccountOnHold',
        'email_address' => 'getEmailAddress',
        'current_balance' => 'getCurrentBalance',
        'period1' => 'getPeriod1',
        'period2' => 'getPeriod2',
        'period3' => 'getPeriod3',
        'period4' => 'getPeriod4',
        'alt_account_no' => 'getAltAccountNo',
        'notify_required' => 'getNotifyRequired',
        'notify_address' => 'getNotifyAddress',
        'commence_date' => 'getCommenceDate',
        'web_access' => 'getWebAccess',
        'parent_debtor_id' => 'getParentDebtorId',
        'alloc_last_saved_date_time' => 'getAllocLastSavedDateTime',
        'price_scheme_id' => 'getPriceSchemeId',
        'aust_post_dpid' => 'getAustPostDpid',
        'aust_post_bcsp' => 'getAustPostBcsp',
        'trading_name' => 'getTradingName',
        'company_name' => 'getCompanyName',
        'acn' => 'getAcn',
        'proprietors_name' => 'getProprietorsName',
        'fax_header' => 'getFaxHeader',
        'ledger_id_debtor_control' => 'getLedgerIdDebtorControl',
        'ledger_id_debtor_sales' => 'getLedgerIdDebtorSales',
        'ledger_id_debtor_discounts' => 'getLedgerIdDebtorDiscounts',
        'ledger_id_debtor_sourced_invoices' => 'getLedgerIdDebtorSourcedInvoices',
        'ledger_id_debtor_debit_adjustment' => 'getLedgerIdDebtorDebitAdjustment',
        'ledger_id_debtor_sourced_receipts' => 'getLedgerIdDebtorSourcedReceipts',
        'ledger_id_debtor_credit_adjustment' => 'getLedgerIdDebtorCreditAdjustment',
        'ledger_id_debtor_freight' => 'getLedgerIdDebtorFreight',
        'ledger_id_debtor_insurance' => 'getLedgerIdDebtorInsurance',
        'ledger_id_debtor_realised_gain_loss' => 'getLedgerIdDebtorRealisedGainLoss',
        'ledger_id_debtor_un_realised_gain_loss' => 'getLedgerIdDebtorUnRealisedGainLoss',
        'period_type' => 'getPeriodType',
        'terms_days' => 'getTermsDays',
        'terms_type' => 'getTermsType',
        'abn' => 'getAbn',
        'exclude_from_aging' => 'getExcludeFromAging',
        'b_pay_reference' => 'getBPayReference',
        'uses_fx' => 'getUsesFx',
        'fx_currency_id' => 'getFxCurrencyId',
        'fx_current_balance' => 'getFxCurrentBalance',
        'fx_period1' => 'getFxPeriod1',
        'fx_period2' => 'getFxPeriod2',
        'fx_period3' => 'getFxPeriod3',
        'fx_period4' => 'getFxPeriod4',
        'trading_status' => 'getTradingStatus',
        'category1_id' => 'getCategory1Id',
        'category2_id' => 'getCategory2Id',
        'category3_id' => 'getCategory3Id',
        'category4_id' => 'getCategory4Id',
        'category5_id' => 'getCategory5Id',
        'bo_priorities_rec_id' => 'getBoPrioritiesRecId',
        'pricing_group_id' => 'getPricingGroupId',
        'budgeted_gp_percentage' => 'getBudgetedGpPercentage',
        'country' => 'getCountry',
        'fr_carriers_rec_id' => 'getFrCarriersRecId',
        'fr_carrier_services_rec_id' => 'getFrCarrierServicesRecId',
        'carrier_account_no' => 'getCarrierAccountNo',
        'charge_to' => 'getChargeTo',
        'is_cash_only' => 'getIsCashOnly'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['debtor_id'] = isset($data['debtor_id']) ? $data['debtor_id'] : null;
        $this->container['last_saved_date_time'] = isset($data['last_saved_date_time']) ? $data['last_saved_date_time'] : null;
        $this->container['account_no'] = isset($data['account_no']) ? $data['account_no'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['address1'] = isset($data['address1']) ? $data['address1'] : null;
        $this->container['address2'] = isset($data['address2']) ? $data['address2'] : null;
        $this->container['address3'] = isset($data['address3']) ? $data['address3'] : null;
        $this->container['address4'] = isset($data['address4']) ? $data['address4'] : null;
        $this->container['post_code'] = isset($data['post_code']) ? $data['post_code'] : null;
        $this->container['phone'] = isset($data['phone']) ? $data['phone'] : null;
        $this->container['fax'] = isset($data['fax']) ? $data['fax'] : null;
        $this->container['bank_name'] = isset($data['bank_name']) ? $data['bank_name'] : null;
        $this->container['bank_acc'] = isset($data['bank_acc']) ? $data['bank_acc'] : null;
        $this->container['bsbn'] = isset($data['bsbn']) ? $data['bsbn'] : null;
        $this->container['account_name'] = isset($data['account_name']) ? $data['account_name'] : null;
        $this->container['tax_exempt_no'] = isset($data['tax_exempt_no']) ? $data['tax_exempt_no'] : null;
        $this->container['credit_limit'] = isset($data['credit_limit']) ? $data['credit_limit'] : null;
        $this->container['early_pay_dis_on_stats_days'] = isset($data['early_pay_dis_on_stats_days']) ? $data['early_pay_dis_on_stats_days'] : null;
        $this->container['early_pay_dis_on_stats_amt'] = isset($data['early_pay_dis_on_stats_amt']) ? $data['early_pay_dis_on_stats_amt'] : null;
        $this->container['last_purchase_date'] = isset($data['last_purchase_date']) ? $data['last_purchase_date'] : null;
        $this->container['last_payment_date'] = isset($data['last_payment_date']) ? $data['last_payment_date'] : null;
        $this->container['standing_dis_on_invoices'] = isset($data['standing_dis_on_invoices']) ? $data['standing_dis_on_invoices'] : null;
        $this->container['classification_id'] = isset($data['classification_id']) ? $data['classification_id'] : null;
        $this->container['account_on_hold'] = isset($data['account_on_hold']) ? $data['account_on_hold'] : null;
        $this->container['email_address'] = isset($data['email_address']) ? $data['email_address'] : null;
        $this->container['current_balance'] = isset($data['current_balance']) ? $data['current_balance'] : null;
        $this->container['period1'] = isset($data['period1']) ? $data['period1'] : null;
        $this->container['period2'] = isset($data['period2']) ? $data['period2'] : null;
        $this->container['period3'] = isset($data['period3']) ? $data['period3'] : null;
        $this->container['period4'] = isset($data['period4']) ? $data['period4'] : null;
        $this->container['alt_account_no'] = isset($data['alt_account_no']) ? $data['alt_account_no'] : null;
        $this->container['notify_required'] = isset($data['notify_required']) ? $data['notify_required'] : null;
        $this->container['notify_address'] = isset($data['notify_address']) ? $data['notify_address'] : null;
        $this->container['commence_date'] = isset($data['commence_date']) ? $data['commence_date'] : null;
        $this->container['web_access'] = isset($data['web_access']) ? $data['web_access'] : null;
        $this->container['parent_debtor_id'] = isset($data['parent_debtor_id']) ? $data['parent_debtor_id'] : null;
        $this->container['alloc_last_saved_date_time'] = isset($data['alloc_last_saved_date_time']) ? $data['alloc_last_saved_date_time'] : null;
        $this->container['price_scheme_id'] = isset($data['price_scheme_id']) ? $data['price_scheme_id'] : null;
        $this->container['aust_post_dpid'] = isset($data['aust_post_dpid']) ? $data['aust_post_dpid'] : null;
        $this->container['aust_post_bcsp'] = isset($data['aust_post_bcsp']) ? $data['aust_post_bcsp'] : null;
        $this->container['trading_name'] = isset($data['trading_name']) ? $data['trading_name'] : null;
        $this->container['company_name'] = isset($data['company_name']) ? $data['company_name'] : null;
        $this->container['acn'] = isset($data['acn']) ? $data['acn'] : null;
        $this->container['proprietors_name'] = isset($data['proprietors_name']) ? $data['proprietors_name'] : null;
        $this->container['fax_header'] = isset($data['fax_header']) ? $data['fax_header'] : null;
        $this->container['ledger_id_debtor_control'] = isset($data['ledger_id_debtor_control']) ? $data['ledger_id_debtor_control'] : null;
        $this->container['ledger_id_debtor_sales'] = isset($data['ledger_id_debtor_sales']) ? $data['ledger_id_debtor_sales'] : null;
        $this->container['ledger_id_debtor_discounts'] = isset($data['ledger_id_debtor_discounts']) ? $data['ledger_id_debtor_discounts'] : null;
        $this->container['ledger_id_debtor_sourced_invoices'] = isset($data['ledger_id_debtor_sourced_invoices']) ? $data['ledger_id_debtor_sourced_invoices'] : null;
        $this->container['ledger_id_debtor_debit_adjustment'] = isset($data['ledger_id_debtor_debit_adjustment']) ? $data['ledger_id_debtor_debit_adjustment'] : null;
        $this->container['ledger_id_debtor_sourced_receipts'] = isset($data['ledger_id_debtor_sourced_receipts']) ? $data['ledger_id_debtor_sourced_receipts'] : null;
        $this->container['ledger_id_debtor_credit_adjustment'] = isset($data['ledger_id_debtor_credit_adjustment']) ? $data['ledger_id_debtor_credit_adjustment'] : null;
        $this->container['ledger_id_debtor_freight'] = isset($data['ledger_id_debtor_freight']) ? $data['ledger_id_debtor_freight'] : null;
        $this->container['ledger_id_debtor_insurance'] = isset($data['ledger_id_debtor_insurance']) ? $data['ledger_id_debtor_insurance'] : null;
        $this->container['ledger_id_debtor_realised_gain_loss'] = isset($data['ledger_id_debtor_realised_gain_loss']) ? $data['ledger_id_debtor_realised_gain_loss'] : null;
        $this->container['ledger_id_debtor_un_realised_gain_loss'] = isset($data['ledger_id_debtor_un_realised_gain_loss']) ? $data['ledger_id_debtor_un_realised_gain_loss'] : null;
        $this->container['period_type'] = isset($data['period_type']) ? $data['period_type'] : null;
        $this->container['terms_days'] = isset($data['terms_days']) ? $data['terms_days'] : null;
        $this->container['terms_type'] = isset($data['terms_type']) ? $data['terms_type'] : null;
        $this->container['abn'] = isset($data['abn']) ? $data['abn'] : null;
        $this->container['exclude_from_aging'] = isset($data['exclude_from_aging']) ? $data['exclude_from_aging'] : null;
        $this->container['b_pay_reference'] = isset($data['b_pay_reference']) ? $data['b_pay_reference'] : null;
        $this->container['uses_fx'] = isset($data['uses_fx']) ? $data['uses_fx'] : null;
        $this->container['fx_currency_id'] = isset($data['fx_currency_id']) ? $data['fx_currency_id'] : null;
        $this->container['fx_current_balance'] = isset($data['fx_current_balance']) ? $data['fx_current_balance'] : null;
        $this->container['fx_period1'] = isset($data['fx_period1']) ? $data['fx_period1'] : null;
        $this->container['fx_period2'] = isset($data['fx_period2']) ? $data['fx_period2'] : null;
        $this->container['fx_period3'] = isset($data['fx_period3']) ? $data['fx_period3'] : null;
        $this->container['fx_period4'] = isset($data['fx_period4']) ? $data['fx_period4'] : null;
        $this->container['trading_status'] = isset($data['trading_status']) ? $data['trading_status'] : null;
        $this->container['category1_id'] = isset($data['category1_id']) ? $data['category1_id'] : null;
        $this->container['category2_id'] = isset($data['category2_id']) ? $data['category2_id'] : null;
        $this->container['category3_id'] = isset($data['category3_id']) ? $data['category3_id'] : null;
        $this->container['category4_id'] = isset($data['category4_id']) ? $data['category4_id'] : null;
        $this->container['category5_id'] = isset($data['category5_id']) ? $data['category5_id'] : null;
        $this->container['bo_priorities_rec_id'] = isset($data['bo_priorities_rec_id']) ? $data['bo_priorities_rec_id'] : null;
        $this->container['pricing_group_id'] = isset($data['pricing_group_id']) ? $data['pricing_group_id'] : null;
        $this->container['budgeted_gp_percentage'] = isset($data['budgeted_gp_percentage']) ? $data['budgeted_gp_percentage'] : null;
        $this->container['country'] = isset($data['country']) ? $data['country'] : null;
        $this->container['fr_carriers_rec_id'] = isset($data['fr_carriers_rec_id']) ? $data['fr_carriers_rec_id'] : null;
        $this->container['fr_carrier_services_rec_id'] = isset($data['fr_carrier_services_rec_id']) ? $data['fr_carrier_services_rec_id'] : null;
        $this->container['carrier_account_no'] = isset($data['carrier_account_no']) ? $data['carrier_account_no'] : null;
        $this->container['charge_to'] = isset($data['charge_to']) ? $data['charge_to'] : null;
        $this->container['is_cash_only'] = isset($data['is_cash_only']) ? $data['is_cash_only'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets debtor_id
     *
     * @return string
     */
    public function getDebtorId()
    {
        return $this->container['debtor_id'];
    }

    /**
     * Sets debtor_id
     *
     * @param string $debtor_id debtor_id
     *
     * @return $this
     */
    public function setDebtorId($debtor_id)
    {
        $this->container['debtor_id'] = $debtor_id;

        return $this;
    }

    /**
     * Gets last_saved_date_time
     *
     * @return \DateTime
     */
    public function getLastSavedDateTime()
    {
        return $this->container['last_saved_date_time'];
    }

    /**
     * Sets last_saved_date_time
     *
     * @param \DateTime $last_saved_date_time last_saved_date_time
     *
     * @return $this
     */
    public function setLastSavedDateTime($last_saved_date_time)
    {
        $this->container['last_saved_date_time'] = $last_saved_date_time;

        return $this;
    }

    /**
     * Gets account_no
     *
     * @return string
     */
    public function getAccountNo()
    {
        return $this->container['account_no'];
    }

    /**
     * Sets account_no
     *
     * @param string $account_no account_no
     *
     * @return $this
     */
    public function setAccountNo($account_no)
    {
        $this->container['account_no'] = $account_no;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets address1
     *
     * @return string
     */
    public function getAddress1()
    {
        return $this->container['address1'];
    }

    /**
     * Sets address1
     *
     * @param string $address1 address1
     *
     * @return $this
     */
    public function setAddress1($address1)
    {
        $this->container['address1'] = $address1;

        return $this;
    }

    /**
     * Gets address2
     *
     * @return string
     */
    public function getAddress2()
    {
        return $this->container['address2'];
    }

    /**
     * Sets address2
     *
     * @param string $address2 address2
     *
     * @return $this
     */
    public function setAddress2($address2)
    {
        $this->container['address2'] = $address2;

        return $this;
    }

    /**
     * Gets address3
     *
     * @return string
     */
    public function getAddress3()
    {
        return $this->container['address3'];
    }

    /**
     * Sets address3
     *
     * @param string $address3 address3
     *
     * @return $this
     */
    public function setAddress3($address3)
    {
        $this->container['address3'] = $address3;

        return $this;
    }

    /**
     * Gets address4
     *
     * @return string
     */
    public function getAddress4()
    {
        return $this->container['address4'];
    }

    /**
     * Sets address4
     *
     * @param string $address4 address4
     *
     * @return $this
     */
    public function setAddress4($address4)
    {
        $this->container['address4'] = $address4;

        return $this;
    }

    /**
     * Gets post_code
     *
     * @return string
     */
    public function getPostCode()
    {
        return $this->container['post_code'];
    }

    /**
     * Sets post_code
     *
     * @param string $post_code post_code
     *
     * @return $this
     */
    public function setPostCode($post_code)
    {
        $this->container['post_code'] = $post_code;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return string
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param string $phone phone
     *
     * @return $this
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets fax
     *
     * @return string
     */
    public function getFax()
    {
        return $this->container['fax'];
    }

    /**
     * Sets fax
     *
     * @param string $fax fax
     *
     * @return $this
     */
    public function setFax($fax)
    {
        $this->container['fax'] = $fax;

        return $this;
    }

    /**
     * Gets bank_name
     *
     * @return string
     */
    public function getBankName()
    {
        return $this->container['bank_name'];
    }

    /**
     * Sets bank_name
     *
     * @param string $bank_name bank_name
     *
     * @return $this
     */
    public function setBankName($bank_name)
    {
        $this->container['bank_name'] = $bank_name;

        return $this;
    }

    /**
     * Gets bank_acc
     *
     * @return string
     */
    public function getBankAcc()
    {
        return $this->container['bank_acc'];
    }

    /**
     * Sets bank_acc
     *
     * @param string $bank_acc bank_acc
     *
     * @return $this
     */
    public function setBankAcc($bank_acc)
    {
        $this->container['bank_acc'] = $bank_acc;

        return $this;
    }

    /**
     * Gets bsbn
     *
     * @return string
     */
    public function getBsbn()
    {
        return $this->container['bsbn'];
    }

    /**
     * Sets bsbn
     *
     * @param string $bsbn bsbn
     *
     * @return $this
     */
    public function setBsbn($bsbn)
    {
        $this->container['bsbn'] = $bsbn;

        return $this;
    }

    /**
     * Gets account_name
     *
     * @return string
     */
    public function getAccountName()
    {
        return $this->container['account_name'];
    }

    /**
     * Sets account_name
     *
     * @param string $account_name account_name
     *
     * @return $this
     */
    public function setAccountName($account_name)
    {
        $this->container['account_name'] = $account_name;

        return $this;
    }

    /**
     * Gets tax_exempt_no
     *
     * @return string
     */
    public function getTaxExemptNo()
    {
        return $this->container['tax_exempt_no'];
    }

    /**
     * Sets tax_exempt_no
     *
     * @param string $tax_exempt_no tax_exempt_no
     *
     * @return $this
     */
    public function setTaxExemptNo($tax_exempt_no)
    {
        $this->container['tax_exempt_no'] = $tax_exempt_no;

        return $this;
    }

    /**
     * Gets credit_limit
     *
     * @return double
     */
    public function getCreditLimit()
    {
        return $this->container['credit_limit'];
    }

    /**
     * Sets credit_limit
     *
     * @param double $credit_limit credit_limit
     *
     * @return $this
     */
    public function setCreditLimit($credit_limit)
    {
        $this->container['credit_limit'] = $credit_limit;

        return $this;
    }

    /**
     * Gets early_pay_dis_on_stats_days
     *
     * @return int
     */
    public function getEarlyPayDisOnStatsDays()
    {
        return $this->container['early_pay_dis_on_stats_days'];
    }

    /**
     * Sets early_pay_dis_on_stats_days
     *
     * @param int $early_pay_dis_on_stats_days early_pay_dis_on_stats_days
     *
     * @return $this
     */
    public function setEarlyPayDisOnStatsDays($early_pay_dis_on_stats_days)
    {
        $this->container['early_pay_dis_on_stats_days'] = $early_pay_dis_on_stats_days;

        return $this;
    }

    /**
     * Gets early_pay_dis_on_stats_amt
     *
     * @return double
     */
    public function getEarlyPayDisOnStatsAmt()
    {
        return $this->container['early_pay_dis_on_stats_amt'];
    }

    /**
     * Sets early_pay_dis_on_stats_amt
     *
     * @param double $early_pay_dis_on_stats_amt early_pay_dis_on_stats_amt
     *
     * @return $this
     */
    public function setEarlyPayDisOnStatsAmt($early_pay_dis_on_stats_amt)
    {
        $this->container['early_pay_dis_on_stats_amt'] = $early_pay_dis_on_stats_amt;

        return $this;
    }

    /**
     * Gets last_purchase_date
     *
     * @return \DateTime
     */
    public function getLastPurchaseDate()
    {
        return $this->container['last_purchase_date'];
    }

    /**
     * Sets last_purchase_date
     *
     * @param \DateTime $last_purchase_date last_purchase_date
     *
     * @return $this
     */
    public function setLastPurchaseDate($last_purchase_date)
    {
        $this->container['last_purchase_date'] = $last_purchase_date;

        return $this;
    }

    /**
     * Gets last_payment_date
     *
     * @return \DateTime
     */
    public function getLastPaymentDate()
    {
        return $this->container['last_payment_date'];
    }

    /**
     * Sets last_payment_date
     *
     * @param \DateTime $last_payment_date last_payment_date
     *
     * @return $this
     */
    public function setLastPaymentDate($last_payment_date)
    {
        $this->container['last_payment_date'] = $last_payment_date;

        return $this;
    }

    /**
     * Gets standing_dis_on_invoices
     *
     * @return double
     */
    public function getStandingDisOnInvoices()
    {
        return $this->container['standing_dis_on_invoices'];
    }

    /**
     * Sets standing_dis_on_invoices
     *
     * @param double $standing_dis_on_invoices standing_dis_on_invoices
     *
     * @return $this
     */
    public function setStandingDisOnInvoices($standing_dis_on_invoices)
    {
        $this->container['standing_dis_on_invoices'] = $standing_dis_on_invoices;

        return $this;
    }

    /**
     * Gets classification_id
     *
     * @return string
     */
    public function getClassificationId()
    {
        return $this->container['classification_id'];
    }

    /**
     * Sets classification_id
     *
     * @param string $classification_id classification_id
     *
     * @return $this
     */
    public function setClassificationId($classification_id)
    {
        $this->container['classification_id'] = $classification_id;

        return $this;
    }

    /**
     * Gets account_on_hold
     *
     * @return bool
     */
    public function getAccountOnHold()
    {
        return $this->container['account_on_hold'];
    }

    /**
     * Sets account_on_hold
     *
     * @param bool $account_on_hold account_on_hold
     *
     * @return $this
     */
    public function setAccountOnHold($account_on_hold)
    {
        $this->container['account_on_hold'] = $account_on_hold;

        return $this;
    }

    /**
     * Gets email_address
     *
     * @return string
     */
    public function getEmailAddress()
    {
        return $this->container['email_address'];
    }

    /**
     * Sets email_address
     *
     * @param string $email_address email_address
     *
     * @return $this
     */
    public function setEmailAddress($email_address)
    {
        $this->container['email_address'] = $email_address;

        return $this;
    }

    /**
     * Gets current_balance
     *
     * @return double
     */
    public function getCurrentBalance()
    {
        return $this->container['current_balance'];
    }

    /**
     * Sets current_balance
     *
     * @param double $current_balance current_balance
     *
     * @return $this
     */
    public function setCurrentBalance($current_balance)
    {
        $this->container['current_balance'] = $current_balance;

        return $this;
    }

    /**
     * Gets period1
     *
     * @return double
     */
    public function getPeriod1()
    {
        return $this->container['period1'];
    }

    /**
     * Sets period1
     *
     * @param double $period1 period1
     *
     * @return $this
     */
    public function setPeriod1($period1)
    {
        $this->container['period1'] = $period1;

        return $this;
    }

    /**
     * Gets period2
     *
     * @return double
     */
    public function getPeriod2()
    {
        return $this->container['period2'];
    }

    /**
     * Sets period2
     *
     * @param double $period2 period2
     *
     * @return $this
     */
    public function setPeriod2($period2)
    {
        $this->container['period2'] = $period2;

        return $this;
    }

    /**
     * Gets period3
     *
     * @return double
     */
    public function getPeriod3()
    {
        return $this->container['period3'];
    }

    /**
     * Sets period3
     *
     * @param double $period3 period3
     *
     * @return $this
     */
    public function setPeriod3($period3)
    {
        $this->container['period3'] = $period3;

        return $this;
    }

    /**
     * Gets period4
     *
     * @return double
     */
    public function getPeriod4()
    {
        return $this->container['period4'];
    }

    /**
     * Sets period4
     *
     * @param double $period4 period4
     *
     * @return $this
     */
    public function setPeriod4($period4)
    {
        $this->container['period4'] = $period4;

        return $this;
    }

    /**
     * Gets alt_account_no
     *
     * @return string
     */
    public function getAltAccountNo()
    {
        return $this->container['alt_account_no'];
    }

    /**
     * Sets alt_account_no
     *
     * @param string $alt_account_no alt_account_no
     *
     * @return $this
     */
    public function setAltAccountNo($alt_account_no)
    {
        $this->container['alt_account_no'] = $alt_account_no;

        return $this;
    }

    /**
     * Gets notify_required
     *
     * @return bool
     */
    public function getNotifyRequired()
    {
        return $this->container['notify_required'];
    }

    /**
     * Sets notify_required
     *
     * @param bool $notify_required notify_required
     *
     * @return $this
     */
    public function setNotifyRequired($notify_required)
    {
        $this->container['notify_required'] = $notify_required;

        return $this;
    }

    /**
     * Gets notify_address
     *
     * @return string
     */
    public function getNotifyAddress()
    {
        return $this->container['notify_address'];
    }

    /**
     * Sets notify_address
     *
     * @param string $notify_address notify_address
     *
     * @return $this
     */
    public function setNotifyAddress($notify_address)
    {
        $this->container['notify_address'] = $notify_address;

        return $this;
    }

    /**
     * Gets commence_date
     *
     * @return \DateTime
     */
    public function getCommenceDate()
    {
        return $this->container['commence_date'];
    }

    /**
     * Sets commence_date
     *
     * @param \DateTime $commence_date commence_date
     *
     * @return $this
     */
    public function setCommenceDate($commence_date)
    {
        $this->container['commence_date'] = $commence_date;

        return $this;
    }

    /**
     * Gets web_access
     *
     * @return bool
     */
    public function getWebAccess()
    {
        return $this->container['web_access'];
    }

    /**
     * Sets web_access
     *
     * @param bool $web_access web_access
     *
     * @return $this
     */
    public function setWebAccess($web_access)
    {
        $this->container['web_access'] = $web_access;

        return $this;
    }

    /**
     * Gets parent_debtor_id
     *
     * @return string
     */
    public function getParentDebtorId()
    {
        return $this->container['parent_debtor_id'];
    }

    /**
     * Sets parent_debtor_id
     *
     * @param string $parent_debtor_id parent_debtor_id
     *
     * @return $this
     */
    public function setParentDebtorId($parent_debtor_id)
    {
        $this->container['parent_debtor_id'] = $parent_debtor_id;

        return $this;
    }

    /**
     * Gets alloc_last_saved_date_time
     *
     * @return \DateTime
     */
    public function getAllocLastSavedDateTime()
    {
        return $this->container['alloc_last_saved_date_time'];
    }

    /**
     * Sets alloc_last_saved_date_time
     *
     * @param \DateTime $alloc_last_saved_date_time alloc_last_saved_date_time
     *
     * @return $this
     */
    public function setAllocLastSavedDateTime($alloc_last_saved_date_time)
    {
        $this->container['alloc_last_saved_date_time'] = $alloc_last_saved_date_time;

        return $this;
    }

    /**
     * Gets price_scheme_id
     *
     * @return string
     */
    public function getPriceSchemeId()
    {
        return $this->container['price_scheme_id'];
    }

    /**
     * Sets price_scheme_id
     *
     * @param string $price_scheme_id price_scheme_id
     *
     * @return $this
     */
    public function setPriceSchemeId($price_scheme_id)
    {
        $this->container['price_scheme_id'] = $price_scheme_id;

        return $this;
    }

    /**
     * Gets aust_post_dpid
     *
     * @return string
     */
    public function getAustPostDpid()
    {
        return $this->container['aust_post_dpid'];
    }

    /**
     * Sets aust_post_dpid
     *
     * @param string $aust_post_dpid aust_post_dpid
     *
     * @return $this
     */
    public function setAustPostDpid($aust_post_dpid)
    {
        $this->container['aust_post_dpid'] = $aust_post_dpid;

        return $this;
    }

    /**
     * Gets aust_post_bcsp
     *
     * @return string
     */
    public function getAustPostBcsp()
    {
        return $this->container['aust_post_bcsp'];
    }

    /**
     * Sets aust_post_bcsp
     *
     * @param string $aust_post_bcsp aust_post_bcsp
     *
     * @return $this
     */
    public function setAustPostBcsp($aust_post_bcsp)
    {
        $this->container['aust_post_bcsp'] = $aust_post_bcsp;

        return $this;
    }

    /**
     * Gets trading_name
     *
     * @return string
     */
    public function getTradingName()
    {
        return $this->container['trading_name'];
    }

    /**
     * Sets trading_name
     *
     * @param string $trading_name trading_name
     *
     * @return $this
     */
    public function setTradingName($trading_name)
    {
        $this->container['trading_name'] = $trading_name;

        return $this;
    }

    /**
     * Gets company_name
     *
     * @return string
     */
    public function getCompanyName()
    {
        return $this->container['company_name'];
    }

    /**
     * Sets company_name
     *
     * @param string $company_name company_name
     *
     * @return $this
     */
    public function setCompanyName($company_name)
    {
        $this->container['company_name'] = $company_name;

        return $this;
    }

    /**
     * Gets acn
     *
     * @return string
     */
    public function getAcn()
    {
        return $this->container['acn'];
    }

    /**
     * Sets acn
     *
     * @param string $acn acn
     *
     * @return $this
     */
    public function setAcn($acn)
    {
        $this->container['acn'] = $acn;

        return $this;
    }

    /**
     * Gets proprietors_name
     *
     * @return string
     */
    public function getProprietorsName()
    {
        return $this->container['proprietors_name'];
    }

    /**
     * Sets proprietors_name
     *
     * @param string $proprietors_name proprietors_name
     *
     * @return $this
     */
    public function setProprietorsName($proprietors_name)
    {
        $this->container['proprietors_name'] = $proprietors_name;

        return $this;
    }

    /**
     * Gets fax_header
     *
     * @return string
     */
    public function getFaxHeader()
    {
        return $this->container['fax_header'];
    }

    /**
     * Sets fax_header
     *
     * @param string $fax_header fax_header
     *
     * @return $this
     */
    public function setFaxHeader($fax_header)
    {
        $this->container['fax_header'] = $fax_header;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_control
     *
     * @return string
     */
    public function getLedgerIdDebtorControl()
    {
        return $this->container['ledger_id_debtor_control'];
    }

    /**
     * Sets ledger_id_debtor_control
     *
     * @param string $ledger_id_debtor_control ledger_id_debtor_control
     *
     * @return $this
     */
    public function setLedgerIdDebtorControl($ledger_id_debtor_control)
    {
        $this->container['ledger_id_debtor_control'] = $ledger_id_debtor_control;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_sales
     *
     * @return string
     */
    public function getLedgerIdDebtorSales()
    {
        return $this->container['ledger_id_debtor_sales'];
    }

    /**
     * Sets ledger_id_debtor_sales
     *
     * @param string $ledger_id_debtor_sales ledger_id_debtor_sales
     *
     * @return $this
     */
    public function setLedgerIdDebtorSales($ledger_id_debtor_sales)
    {
        $this->container['ledger_id_debtor_sales'] = $ledger_id_debtor_sales;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_discounts
     *
     * @return string
     */
    public function getLedgerIdDebtorDiscounts()
    {
        return $this->container['ledger_id_debtor_discounts'];
    }

    /**
     * Sets ledger_id_debtor_discounts
     *
     * @param string $ledger_id_debtor_discounts ledger_id_debtor_discounts
     *
     * @return $this
     */
    public function setLedgerIdDebtorDiscounts($ledger_id_debtor_discounts)
    {
        $this->container['ledger_id_debtor_discounts'] = $ledger_id_debtor_discounts;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_sourced_invoices
     *
     * @return string
     */
    public function getLedgerIdDebtorSourcedInvoices()
    {
        return $this->container['ledger_id_debtor_sourced_invoices'];
    }

    /**
     * Sets ledger_id_debtor_sourced_invoices
     *
     * @param string $ledger_id_debtor_sourced_invoices ledger_id_debtor_sourced_invoices
     *
     * @return $this
     */
    public function setLedgerIdDebtorSourcedInvoices($ledger_id_debtor_sourced_invoices)
    {
        $this->container['ledger_id_debtor_sourced_invoices'] = $ledger_id_debtor_sourced_invoices;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_debit_adjustment
     *
     * @return string
     */
    public function getLedgerIdDebtorDebitAdjustment()
    {
        return $this->container['ledger_id_debtor_debit_adjustment'];
    }

    /**
     * Sets ledger_id_debtor_debit_adjustment
     *
     * @param string $ledger_id_debtor_debit_adjustment ledger_id_debtor_debit_adjustment
     *
     * @return $this
     */
    public function setLedgerIdDebtorDebitAdjustment($ledger_id_debtor_debit_adjustment)
    {
        $this->container['ledger_id_debtor_debit_adjustment'] = $ledger_id_debtor_debit_adjustment;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_sourced_receipts
     *
     * @return string
     */
    public function getLedgerIdDebtorSourcedReceipts()
    {
        return $this->container['ledger_id_debtor_sourced_receipts'];
    }

    /**
     * Sets ledger_id_debtor_sourced_receipts
     *
     * @param string $ledger_id_debtor_sourced_receipts ledger_id_debtor_sourced_receipts
     *
     * @return $this
     */
    public function setLedgerIdDebtorSourcedReceipts($ledger_id_debtor_sourced_receipts)
    {
        $this->container['ledger_id_debtor_sourced_receipts'] = $ledger_id_debtor_sourced_receipts;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_credit_adjustment
     *
     * @return string
     */
    public function getLedgerIdDebtorCreditAdjustment()
    {
        return $this->container['ledger_id_debtor_credit_adjustment'];
    }

    /**
     * Sets ledger_id_debtor_credit_adjustment
     *
     * @param string $ledger_id_debtor_credit_adjustment ledger_id_debtor_credit_adjustment
     *
     * @return $this
     */
    public function setLedgerIdDebtorCreditAdjustment($ledger_id_debtor_credit_adjustment)
    {
        $this->container['ledger_id_debtor_credit_adjustment'] = $ledger_id_debtor_credit_adjustment;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_freight
     *
     * @return string
     */
    public function getLedgerIdDebtorFreight()
    {
        return $this->container['ledger_id_debtor_freight'];
    }

    /**
     * Sets ledger_id_debtor_freight
     *
     * @param string $ledger_id_debtor_freight ledger_id_debtor_freight
     *
     * @return $this
     */
    public function setLedgerIdDebtorFreight($ledger_id_debtor_freight)
    {
        $this->container['ledger_id_debtor_freight'] = $ledger_id_debtor_freight;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_insurance
     *
     * @return string
     */
    public function getLedgerIdDebtorInsurance()
    {
        return $this->container['ledger_id_debtor_insurance'];
    }

    /**
     * Sets ledger_id_debtor_insurance
     *
     * @param string $ledger_id_debtor_insurance ledger_id_debtor_insurance
     *
     * @return $this
     */
    public function setLedgerIdDebtorInsurance($ledger_id_debtor_insurance)
    {
        $this->container['ledger_id_debtor_insurance'] = $ledger_id_debtor_insurance;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_realised_gain_loss
     *
     * @return string
     */
    public function getLedgerIdDebtorRealisedGainLoss()
    {
        return $this->container['ledger_id_debtor_realised_gain_loss'];
    }

    /**
     * Sets ledger_id_debtor_realised_gain_loss
     *
     * @param string $ledger_id_debtor_realised_gain_loss ledger_id_debtor_realised_gain_loss
     *
     * @return $this
     */
    public function setLedgerIdDebtorRealisedGainLoss($ledger_id_debtor_realised_gain_loss)
    {
        $this->container['ledger_id_debtor_realised_gain_loss'] = $ledger_id_debtor_realised_gain_loss;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_un_realised_gain_loss
     *
     * @return string
     */
    public function getLedgerIdDebtorUnRealisedGainLoss()
    {
        return $this->container['ledger_id_debtor_un_realised_gain_loss'];
    }

    /**
     * Sets ledger_id_debtor_un_realised_gain_loss
     *
     * @param string $ledger_id_debtor_un_realised_gain_loss ledger_id_debtor_un_realised_gain_loss
     *
     * @return $this
     */
    public function setLedgerIdDebtorUnRealisedGainLoss($ledger_id_debtor_un_realised_gain_loss)
    {
        $this->container['ledger_id_debtor_un_realised_gain_loss'] = $ledger_id_debtor_un_realised_gain_loss;

        return $this;
    }

    /**
     * Gets period_type
     *
     * @return int
     */
    public function getPeriodType()
    {
        return $this->container['period_type'];
    }

    /**
     * Sets period_type
     *
     * @param int $period_type period_type
     *
     * @return $this
     */
    public function setPeriodType($period_type)
    {
        $this->container['period_type'] = $period_type;

        return $this;
    }

    /**
     * Gets terms_days
     *
     * @return int
     */
    public function getTermsDays()
    {
        return $this->container['terms_days'];
    }

    /**
     * Sets terms_days
     *
     * @param int $terms_days terms_days
     *
     * @return $this
     */
    public function setTermsDays($terms_days)
    {
        $this->container['terms_days'] = $terms_days;

        return $this;
    }

    /**
     * Gets terms_type
     *
     * @return int
     */
    public function getTermsType()
    {
        return $this->container['terms_type'];
    }

    /**
     * Sets terms_type
     *
     * @param int $terms_type terms_type
     *
     * @return $this
     */
    public function setTermsType($terms_type)
    {
        $this->container['terms_type'] = $terms_type;

        return $this;
    }

    /**
     * Gets abn
     *
     * @return string
     */
    public function getAbn()
    {
        return $this->container['abn'];
    }

    /**
     * Sets abn
     *
     * @param string $abn abn
     *
     * @return $this
     */
    public function setAbn($abn)
    {
        $this->container['abn'] = $abn;

        return $this;
    }

    /**
     * Gets exclude_from_aging
     *
     * @return bool
     */
    public function getExcludeFromAging()
    {
        return $this->container['exclude_from_aging'];
    }

    /**
     * Sets exclude_from_aging
     *
     * @param bool $exclude_from_aging exclude_from_aging
     *
     * @return $this
     */
    public function setExcludeFromAging($exclude_from_aging)
    {
        $this->container['exclude_from_aging'] = $exclude_from_aging;

        return $this;
    }

    /**
     * Gets b_pay_reference
     *
     * @return string
     */
    public function getBPayReference()
    {
        return $this->container['b_pay_reference'];
    }

    /**
     * Sets b_pay_reference
     *
     * @param string $b_pay_reference b_pay_reference
     *
     * @return $this
     */
    public function setBPayReference($b_pay_reference)
    {
        $this->container['b_pay_reference'] = $b_pay_reference;

        return $this;
    }

    /**
     * Gets uses_fx
     *
     * @return bool
     */
    public function getUsesFx()
    {
        return $this->container['uses_fx'];
    }

    /**
     * Sets uses_fx
     *
     * @param bool $uses_fx uses_fx
     *
     * @return $this
     */
    public function setUsesFx($uses_fx)
    {
        $this->container['uses_fx'] = $uses_fx;

        return $this;
    }

    /**
     * Gets fx_currency_id
     *
     * @return string
     */
    public function getFxCurrencyId()
    {
        return $this->container['fx_currency_id'];
    }

    /**
     * Sets fx_currency_id
     *
     * @param string $fx_currency_id fx_currency_id
     *
     * @return $this
     */
    public function setFxCurrencyId($fx_currency_id)
    {
        $this->container['fx_currency_id'] = $fx_currency_id;

        return $this;
    }

    /**
     * Gets fx_current_balance
     *
     * @return double
     */
    public function getFxCurrentBalance()
    {
        return $this->container['fx_current_balance'];
    }

    /**
     * Sets fx_current_balance
     *
     * @param double $fx_current_balance fx_current_balance
     *
     * @return $this
     */
    public function setFxCurrentBalance($fx_current_balance)
    {
        $this->container['fx_current_balance'] = $fx_current_balance;

        return $this;
    }

    /**
     * Gets fx_period1
     *
     * @return double
     */
    public function getFxPeriod1()
    {
        return $this->container['fx_period1'];
    }

    /**
     * Sets fx_period1
     *
     * @param double $fx_period1 fx_period1
     *
     * @return $this
     */
    public function setFxPeriod1($fx_period1)
    {
        $this->container['fx_period1'] = $fx_period1;

        return $this;
    }

    /**
     * Gets fx_period2
     *
     * @return double
     */
    public function getFxPeriod2()
    {
        return $this->container['fx_period2'];
    }

    /**
     * Sets fx_period2
     *
     * @param double $fx_period2 fx_period2
     *
     * @return $this
     */
    public function setFxPeriod2($fx_period2)
    {
        $this->container['fx_period2'] = $fx_period2;

        return $this;
    }

    /**
     * Gets fx_period3
     *
     * @return double
     */
    public function getFxPeriod3()
    {
        return $this->container['fx_period3'];
    }

    /**
     * Sets fx_period3
     *
     * @param double $fx_period3 fx_period3
     *
     * @return $this
     */
    public function setFxPeriod3($fx_period3)
    {
        $this->container['fx_period3'] = $fx_period3;

        return $this;
    }

    /**
     * Gets fx_period4
     *
     * @return double
     */
    public function getFxPeriod4()
    {
        return $this->container['fx_period4'];
    }

    /**
     * Sets fx_period4
     *
     * @param double $fx_period4 fx_period4
     *
     * @return $this
     */
    public function setFxPeriod4($fx_period4)
    {
        $this->container['fx_period4'] = $fx_period4;

        return $this;
    }

    /**
     * Gets trading_status
     *
     * @return int
     */
    public function getTradingStatus()
    {
        return $this->container['trading_status'];
    }

    /**
     * Sets trading_status
     *
     * @param int $trading_status trading_status
     *
     * @return $this
     */
    public function setTradingStatus($trading_status)
    {
        $this->container['trading_status'] = $trading_status;

        return $this;
    }

    /**
     * Gets category1_id
     *
     * @return string
     */
    public function getCategory1Id()
    {
        return $this->container['category1_id'];
    }

    /**
     * Sets category1_id
     *
     * @param string $category1_id category1_id
     *
     * @return $this
     */
    public function setCategory1Id($category1_id)
    {
        $this->container['category1_id'] = $category1_id;

        return $this;
    }

    /**
     * Gets category2_id
     *
     * @return string
     */
    public function getCategory2Id()
    {
        return $this->container['category2_id'];
    }

    /**
     * Sets category2_id
     *
     * @param string $category2_id category2_id
     *
     * @return $this
     */
    public function setCategory2Id($category2_id)
    {
        $this->container['category2_id'] = $category2_id;

        return $this;
    }

    /**
     * Gets category3_id
     *
     * @return string
     */
    public function getCategory3Id()
    {
        return $this->container['category3_id'];
    }

    /**
     * Sets category3_id
     *
     * @param string $category3_id category3_id
     *
     * @return $this
     */
    public function setCategory3Id($category3_id)
    {
        $this->container['category3_id'] = $category3_id;

        return $this;
    }

    /**
     * Gets category4_id
     *
     * @return string
     */
    public function getCategory4Id()
    {
        return $this->container['category4_id'];
    }

    /**
     * Sets category4_id
     *
     * @param string $category4_id category4_id
     *
     * @return $this
     */
    public function setCategory4Id($category4_id)
    {
        $this->container['category4_id'] = $category4_id;

        return $this;
    }

    /**
     * Gets category5_id
     *
     * @return string
     */
    public function getCategory5Id()
    {
        return $this->container['category5_id'];
    }

    /**
     * Sets category5_id
     *
     * @param string $category5_id category5_id
     *
     * @return $this
     */
    public function setCategory5Id($category5_id)
    {
        $this->container['category5_id'] = $category5_id;

        return $this;
    }

    /**
     * Gets bo_priorities_rec_id
     *
     * @return string
     */
    public function getBoPrioritiesRecId()
    {
        return $this->container['bo_priorities_rec_id'];
    }

    /**
     * Sets bo_priorities_rec_id
     *
     * @param string $bo_priorities_rec_id bo_priorities_rec_id
     *
     * @return $this
     */
    public function setBoPrioritiesRecId($bo_priorities_rec_id)
    {
        $this->container['bo_priorities_rec_id'] = $bo_priorities_rec_id;

        return $this;
    }

    /**
     * Gets pricing_group_id
     *
     * @return string
     */
    public function getPricingGroupId()
    {
        return $this->container['pricing_group_id'];
    }

    /**
     * Sets pricing_group_id
     *
     * @param string $pricing_group_id pricing_group_id
     *
     * @return $this
     */
    public function setPricingGroupId($pricing_group_id)
    {
        $this->container['pricing_group_id'] = $pricing_group_id;

        return $this;
    }

    /**
     * Gets budgeted_gp_percentage
     *
     * @return double
     */
    public function getBudgetedGpPercentage()
    {
        return $this->container['budgeted_gp_percentage'];
    }

    /**
     * Sets budgeted_gp_percentage
     *
     * @param double $budgeted_gp_percentage budgeted_gp_percentage
     *
     * @return $this
     */
    public function setBudgetedGpPercentage($budgeted_gp_percentage)
    {
        $this->container['budgeted_gp_percentage'] = $budgeted_gp_percentage;

        return $this;
    }

    /**
     * Gets country
     *
     * @return string
     */
    public function getCountry()
    {
        return $this->container['country'];
    }

    /**
     * Sets country
     *
     * @param string $country country
     *
     * @return $this
     */
    public function setCountry($country)
    {
        $this->container['country'] = $country;

        return $this;
    }

    /**
     * Gets fr_carriers_rec_id
     *
     * @return string
     */
    public function getFrCarriersRecId()
    {
        return $this->container['fr_carriers_rec_id'];
    }

    /**
     * Sets fr_carriers_rec_id
     *
     * @param string $fr_carriers_rec_id fr_carriers_rec_id
     *
     * @return $this
     */
    public function setFrCarriersRecId($fr_carriers_rec_id)
    {
        $this->container['fr_carriers_rec_id'] = $fr_carriers_rec_id;

        return $this;
    }

    /**
     * Gets fr_carrier_services_rec_id
     *
     * @return string
     */
    public function getFrCarrierServicesRecId()
    {
        return $this->container['fr_carrier_services_rec_id'];
    }

    /**
     * Sets fr_carrier_services_rec_id
     *
     * @param string $fr_carrier_services_rec_id fr_carrier_services_rec_id
     *
     * @return $this
     */
    public function setFrCarrierServicesRecId($fr_carrier_services_rec_id)
    {
        $this->container['fr_carrier_services_rec_id'] = $fr_carrier_services_rec_id;

        return $this;
    }

    /**
     * Gets carrier_account_no
     *
     * @return string
     */
    public function getCarrierAccountNo()
    {
        return $this->container['carrier_account_no'];
    }

    /**
     * Sets carrier_account_no
     *
     * @param string $carrier_account_no carrier_account_no
     *
     * @return $this
     */
    public function setCarrierAccountNo($carrier_account_no)
    {
        $this->container['carrier_account_no'] = $carrier_account_no;

        return $this;
    }

    /**
     * Gets charge_to
     *
     * @return int
     */
    public function getChargeTo()
    {
        return $this->container['charge_to'];
    }

    /**
     * Sets charge_to
     *
     * @param int $charge_to charge_to
     *
     * @return $this
     */
    public function setChargeTo($charge_to)
    {
        $this->container['charge_to'] = $charge_to;

        return $this;
    }

    /**
     * Gets is_cash_only
     *
     * @return bool
     */
    public function getIsCashOnly()
    {
        return $this->container['is_cash_only'];
    }

    /**
     * Sets is_cash_only
     *
     * @param bool $is_cash_only is_cash_only
     *
     * @return $this
     */
    public function setIsCashOnly($is_cash_only)
    {
        $this->container['is_cash_only'] = $is_cash_only;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


