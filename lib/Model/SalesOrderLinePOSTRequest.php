<?php
/**
 * SalesOrderLinePOSTRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\Model;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * SalesOrderLinePOSTRequest Class Doc Comment
 *
 * @category Class
 * @description SalesOrderLinePOSTRequest
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SalesOrderLinePOSTRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'SalesOrderLinePOSTRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'invoice_id' => 'string',
        'invoice_history_id' => 'string',
        'item_no' => 'int',
        'comment_line' => 'bool',
        'quantity_ordered' => 'double',
        'quantity_demand' => 'double',
        'quantity_this_del' => 'double',
        'quantity_back_ord' => 'double',
        'picked' => 'bool',
        'price_ex_gst' => 'double',
        'price_inc_gst' => 'double',
        'discounted_price' => 'double',
        'tax_to_charge' => 'double',
        'tax_rate' => '\Jiwa\Model\TaxRate',
        'unit_cost' => 'double',
        'fix_sell_price' => 'bool',
        'fix_price' => 'bool',
        'user_defined_float1' => 'double',
        'user_defined_float2' => 'double',
        'user_defined_float3' => 'double',
        'forward_order_date' => '\DateTime',
        'scheduled_date' => '\DateTime',
        'line_total' => 'double',
        'weight' => 'double',
        'cubic' => 'double',
        'quoted_discounted_price' => 'double',
        'quoted_discount_percentage' => 'double',
        'discounted_percentage' => 'double',
        'discount_given' => 'double',
        'quantity_decimal_places' => 'double',
        'quantity_original_ordered' => 'double',
        'sales_order_serial_stock_selection_types' => 'string',
        'non_inventory' => 'bool',
        'inventory_id' => 'string',
        'part_no' => 'string',
        'description' => 'string',
        'comment_text' => 'string',
        'aux2' => 'string',
        'line_link_id' => 'string',
        'edi_store_location_code' => 'string',
        'edidc_location_code' => 'string',
        'cost_center' => 'string',
        'stage' => 'string',
        'custom_field_values' => '\Jiwa\Model\CustomFieldValue[]',
        'line_details' => '\Jiwa\Model\SalesOrderLineDetail[]',
        'shipping_labels' => '\Jiwa\Model\SalesOrderShippingLabel[]',
        'unit_of_measure' => '\Jiwa\Model\InventoryUnitOfMeasure',
        'kit_line_type' => 'string',
        'kit_units' => 'double',
        'kit_header_line_id' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'invoice_id' => null,
        'invoice_history_id' => null,
        'item_no' => 'int32',
        'comment_line' => null,
        'quantity_ordered' => 'double',
        'quantity_demand' => 'double',
        'quantity_this_del' => 'double',
        'quantity_back_ord' => 'double',
        'picked' => null,
        'price_ex_gst' => 'double',
        'price_inc_gst' => 'double',
        'discounted_price' => 'double',
        'tax_to_charge' => 'double',
        'tax_rate' => null,
        'unit_cost' => 'double',
        'fix_sell_price' => null,
        'fix_price' => null,
        'user_defined_float1' => 'double',
        'user_defined_float2' => 'double',
        'user_defined_float3' => 'double',
        'forward_order_date' => 'date-time',
        'scheduled_date' => 'date-time',
        'line_total' => 'double',
        'weight' => 'double',
        'cubic' => 'double',
        'quoted_discounted_price' => 'double',
        'quoted_discount_percentage' => 'double',
        'discounted_percentage' => 'double',
        'discount_given' => 'double',
        'quantity_decimal_places' => 'double',
        'quantity_original_ordered' => 'double',
        'sales_order_serial_stock_selection_types' => null,
        'non_inventory' => null,
        'inventory_id' => null,
        'part_no' => null,
        'description' => null,
        'comment_text' => null,
        'aux2' => null,
        'line_link_id' => null,
        'edi_store_location_code' => null,
        'edidc_location_code' => null,
        'cost_center' => null,
        'stage' => null,
        'custom_field_values' => null,
        'line_details' => null,
        'shipping_labels' => null,
        'unit_of_measure' => null,
        'kit_line_type' => null,
        'kit_units' => 'double',
        'kit_header_line_id' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'invoice_id' => 'InvoiceID',
        'invoice_history_id' => 'InvoiceHistoryID',
        'item_no' => 'ItemNo',
        'comment_line' => 'CommentLine',
        'quantity_ordered' => 'QuantityOrdered',
        'quantity_demand' => 'QuantityDemand',
        'quantity_this_del' => 'QuantityThisDel',
        'quantity_back_ord' => 'QuantityBackOrd',
        'picked' => 'Picked',
        'price_ex_gst' => 'PriceExGst',
        'price_inc_gst' => 'PriceIncGst',
        'discounted_price' => 'DiscountedPrice',
        'tax_to_charge' => 'TaxToCharge',
        'tax_rate' => 'TaxRate',
        'unit_cost' => 'UnitCost',
        'fix_sell_price' => 'FixSellPrice',
        'fix_price' => 'FixPrice',
        'user_defined_float1' => 'UserDefinedFloat1',
        'user_defined_float2' => 'UserDefinedFloat2',
        'user_defined_float3' => 'UserDefinedFloat3',
        'forward_order_date' => 'ForwardOrderDate',
        'scheduled_date' => 'ScheduledDate',
        'line_total' => 'LineTotal',
        'weight' => 'Weight',
        'cubic' => 'Cubic',
        'quoted_discounted_price' => 'QuotedDiscountedPrice',
        'quoted_discount_percentage' => 'QuotedDiscountPercentage',
        'discounted_percentage' => 'DiscountedPercentage',
        'discount_given' => 'DiscountGiven',
        'quantity_decimal_places' => 'QuantityDecimalPlaces',
        'quantity_original_ordered' => 'QuantityOriginalOrdered',
        'sales_order_serial_stock_selection_types' => 'SalesOrderSerialStockSelectionTypes',
        'non_inventory' => 'NonInventory',
        'inventory_id' => 'InventoryID',
        'part_no' => 'PartNo',
        'description' => 'Description',
        'comment_text' => 'CommentText',
        'aux2' => 'Aux2',
        'line_link_id' => 'LineLinkID',
        'edi_store_location_code' => 'EDIStoreLocationCode',
        'edidc_location_code' => 'EDIDCLocationCode',
        'cost_center' => 'CostCenter',
        'stage' => 'Stage',
        'custom_field_values' => 'CustomFieldValues',
        'line_details' => 'LineDetails',
        'shipping_labels' => 'ShippingLabels',
        'unit_of_measure' => 'UnitOfMeasure',
        'kit_line_type' => 'KitLineType',
        'kit_units' => 'KitUnits',
        'kit_header_line_id' => 'KitHeaderLineID'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'invoice_id' => 'setInvoiceId',
        'invoice_history_id' => 'setInvoiceHistoryId',
        'item_no' => 'setItemNo',
        'comment_line' => 'setCommentLine',
        'quantity_ordered' => 'setQuantityOrdered',
        'quantity_demand' => 'setQuantityDemand',
        'quantity_this_del' => 'setQuantityThisDel',
        'quantity_back_ord' => 'setQuantityBackOrd',
        'picked' => 'setPicked',
        'price_ex_gst' => 'setPriceExGst',
        'price_inc_gst' => 'setPriceIncGst',
        'discounted_price' => 'setDiscountedPrice',
        'tax_to_charge' => 'setTaxToCharge',
        'tax_rate' => 'setTaxRate',
        'unit_cost' => 'setUnitCost',
        'fix_sell_price' => 'setFixSellPrice',
        'fix_price' => 'setFixPrice',
        'user_defined_float1' => 'setUserDefinedFloat1',
        'user_defined_float2' => 'setUserDefinedFloat2',
        'user_defined_float3' => 'setUserDefinedFloat3',
        'forward_order_date' => 'setForwardOrderDate',
        'scheduled_date' => 'setScheduledDate',
        'line_total' => 'setLineTotal',
        'weight' => 'setWeight',
        'cubic' => 'setCubic',
        'quoted_discounted_price' => 'setQuotedDiscountedPrice',
        'quoted_discount_percentage' => 'setQuotedDiscountPercentage',
        'discounted_percentage' => 'setDiscountedPercentage',
        'discount_given' => 'setDiscountGiven',
        'quantity_decimal_places' => 'setQuantityDecimalPlaces',
        'quantity_original_ordered' => 'setQuantityOriginalOrdered',
        'sales_order_serial_stock_selection_types' => 'setSalesOrderSerialStockSelectionTypes',
        'non_inventory' => 'setNonInventory',
        'inventory_id' => 'setInventoryId',
        'part_no' => 'setPartNo',
        'description' => 'setDescription',
        'comment_text' => 'setCommentText',
        'aux2' => 'setAux2',
        'line_link_id' => 'setLineLinkId',
        'edi_store_location_code' => 'setEdiStoreLocationCode',
        'edidc_location_code' => 'setEdidcLocationCode',
        'cost_center' => 'setCostCenter',
        'stage' => 'setStage',
        'custom_field_values' => 'setCustomFieldValues',
        'line_details' => 'setLineDetails',
        'shipping_labels' => 'setShippingLabels',
        'unit_of_measure' => 'setUnitOfMeasure',
        'kit_line_type' => 'setKitLineType',
        'kit_units' => 'setKitUnits',
        'kit_header_line_id' => 'setKitHeaderLineId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'invoice_id' => 'getInvoiceId',
        'invoice_history_id' => 'getInvoiceHistoryId',
        'item_no' => 'getItemNo',
        'comment_line' => 'getCommentLine',
        'quantity_ordered' => 'getQuantityOrdered',
        'quantity_demand' => 'getQuantityDemand',
        'quantity_this_del' => 'getQuantityThisDel',
        'quantity_back_ord' => 'getQuantityBackOrd',
        'picked' => 'getPicked',
        'price_ex_gst' => 'getPriceExGst',
        'price_inc_gst' => 'getPriceIncGst',
        'discounted_price' => 'getDiscountedPrice',
        'tax_to_charge' => 'getTaxToCharge',
        'tax_rate' => 'getTaxRate',
        'unit_cost' => 'getUnitCost',
        'fix_sell_price' => 'getFixSellPrice',
        'fix_price' => 'getFixPrice',
        'user_defined_float1' => 'getUserDefinedFloat1',
        'user_defined_float2' => 'getUserDefinedFloat2',
        'user_defined_float3' => 'getUserDefinedFloat3',
        'forward_order_date' => 'getForwardOrderDate',
        'scheduled_date' => 'getScheduledDate',
        'line_total' => 'getLineTotal',
        'weight' => 'getWeight',
        'cubic' => 'getCubic',
        'quoted_discounted_price' => 'getQuotedDiscountedPrice',
        'quoted_discount_percentage' => 'getQuotedDiscountPercentage',
        'discounted_percentage' => 'getDiscountedPercentage',
        'discount_given' => 'getDiscountGiven',
        'quantity_decimal_places' => 'getQuantityDecimalPlaces',
        'quantity_original_ordered' => 'getQuantityOriginalOrdered',
        'sales_order_serial_stock_selection_types' => 'getSalesOrderSerialStockSelectionTypes',
        'non_inventory' => 'getNonInventory',
        'inventory_id' => 'getInventoryId',
        'part_no' => 'getPartNo',
        'description' => 'getDescription',
        'comment_text' => 'getCommentText',
        'aux2' => 'getAux2',
        'line_link_id' => 'getLineLinkId',
        'edi_store_location_code' => 'getEdiStoreLocationCode',
        'edidc_location_code' => 'getEdidcLocationCode',
        'cost_center' => 'getCostCenter',
        'stage' => 'getStage',
        'custom_field_values' => 'getCustomFieldValues',
        'line_details' => 'getLineDetails',
        'shipping_labels' => 'getShippingLabels',
        'unit_of_measure' => 'getUnitOfMeasure',
        'kit_line_type' => 'getKitLineType',
        'kit_units' => 'getKitUnits',
        'kit_header_line_id' => 'getKitHeaderLineId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['invoice_id'] = isset($data['invoice_id']) ? $data['invoice_id'] : null;
        $this->container['invoice_history_id'] = isset($data['invoice_history_id']) ? $data['invoice_history_id'] : null;
        $this->container['item_no'] = isset($data['item_no']) ? $data['item_no'] : null;
        $this->container['comment_line'] = isset($data['comment_line']) ? $data['comment_line'] : null;
        $this->container['quantity_ordered'] = isset($data['quantity_ordered']) ? $data['quantity_ordered'] : null;
        $this->container['quantity_demand'] = isset($data['quantity_demand']) ? $data['quantity_demand'] : null;
        $this->container['quantity_this_del'] = isset($data['quantity_this_del']) ? $data['quantity_this_del'] : null;
        $this->container['quantity_back_ord'] = isset($data['quantity_back_ord']) ? $data['quantity_back_ord'] : null;
        $this->container['picked'] = isset($data['picked']) ? $data['picked'] : null;
        $this->container['price_ex_gst'] = isset($data['price_ex_gst']) ? $data['price_ex_gst'] : null;
        $this->container['price_inc_gst'] = isset($data['price_inc_gst']) ? $data['price_inc_gst'] : null;
        $this->container['discounted_price'] = isset($data['discounted_price']) ? $data['discounted_price'] : null;
        $this->container['tax_to_charge'] = isset($data['tax_to_charge']) ? $data['tax_to_charge'] : null;
        $this->container['tax_rate'] = isset($data['tax_rate']) ? $data['tax_rate'] : null;
        $this->container['unit_cost'] = isset($data['unit_cost']) ? $data['unit_cost'] : null;
        $this->container['fix_sell_price'] = isset($data['fix_sell_price']) ? $data['fix_sell_price'] : null;
        $this->container['fix_price'] = isset($data['fix_price']) ? $data['fix_price'] : null;
        $this->container['user_defined_float1'] = isset($data['user_defined_float1']) ? $data['user_defined_float1'] : null;
        $this->container['user_defined_float2'] = isset($data['user_defined_float2']) ? $data['user_defined_float2'] : null;
        $this->container['user_defined_float3'] = isset($data['user_defined_float3']) ? $data['user_defined_float3'] : null;
        $this->container['forward_order_date'] = isset($data['forward_order_date']) ? $data['forward_order_date'] : null;
        $this->container['scheduled_date'] = isset($data['scheduled_date']) ? $data['scheduled_date'] : null;
        $this->container['line_total'] = isset($data['line_total']) ? $data['line_total'] : null;
        $this->container['weight'] = isset($data['weight']) ? $data['weight'] : null;
        $this->container['cubic'] = isset($data['cubic']) ? $data['cubic'] : null;
        $this->container['quoted_discounted_price'] = isset($data['quoted_discounted_price']) ? $data['quoted_discounted_price'] : null;
        $this->container['quoted_discount_percentage'] = isset($data['quoted_discount_percentage']) ? $data['quoted_discount_percentage'] : null;
        $this->container['discounted_percentage'] = isset($data['discounted_percentage']) ? $data['discounted_percentage'] : null;
        $this->container['discount_given'] = isset($data['discount_given']) ? $data['discount_given'] : null;
        $this->container['quantity_decimal_places'] = isset($data['quantity_decimal_places']) ? $data['quantity_decimal_places'] : null;
        $this->container['quantity_original_ordered'] = isset($data['quantity_original_ordered']) ? $data['quantity_original_ordered'] : null;
        $this->container['sales_order_serial_stock_selection_types'] = isset($data['sales_order_serial_stock_selection_types']) ? $data['sales_order_serial_stock_selection_types'] : null;
        $this->container['non_inventory'] = isset($data['non_inventory']) ? $data['non_inventory'] : null;
        $this->container['inventory_id'] = isset($data['inventory_id']) ? $data['inventory_id'] : null;
        $this->container['part_no'] = isset($data['part_no']) ? $data['part_no'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['comment_text'] = isset($data['comment_text']) ? $data['comment_text'] : null;
        $this->container['aux2'] = isset($data['aux2']) ? $data['aux2'] : null;
        $this->container['line_link_id'] = isset($data['line_link_id']) ? $data['line_link_id'] : null;
        $this->container['edi_store_location_code'] = isset($data['edi_store_location_code']) ? $data['edi_store_location_code'] : null;
        $this->container['edidc_location_code'] = isset($data['edidc_location_code']) ? $data['edidc_location_code'] : null;
        $this->container['cost_center'] = isset($data['cost_center']) ? $data['cost_center'] : null;
        $this->container['stage'] = isset($data['stage']) ? $data['stage'] : null;
        $this->container['custom_field_values'] = isset($data['custom_field_values']) ? $data['custom_field_values'] : null;
        $this->container['line_details'] = isset($data['line_details']) ? $data['line_details'] : null;
        $this->container['shipping_labels'] = isset($data['shipping_labels']) ? $data['shipping_labels'] : null;
        $this->container['unit_of_measure'] = isset($data['unit_of_measure']) ? $data['unit_of_measure'] : null;
        $this->container['kit_line_type'] = isset($data['kit_line_type']) ? $data['kit_line_type'] : null;
        $this->container['kit_units'] = isset($data['kit_units']) ? $data['kit_units'] : null;
        $this->container['kit_header_line_id'] = isset($data['kit_header_line_id']) ? $data['kit_header_line_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets invoice_id
     *
     * @return string
     */
    public function getInvoiceId()
    {
        return $this->container['invoice_id'];
    }

    /**
     * Sets invoice_id
     *
     * @param string $invoice_id invoice_id
     *
     * @return $this
     */
    public function setInvoiceId($invoice_id)
    {
        $this->container['invoice_id'] = $invoice_id;

        return $this;
    }

    /**
     * Gets invoice_history_id
     *
     * @return string
     */
    public function getInvoiceHistoryId()
    {
        return $this->container['invoice_history_id'];
    }

    /**
     * Sets invoice_history_id
     *
     * @param string $invoice_history_id invoice_history_id
     *
     * @return $this
     */
    public function setInvoiceHistoryId($invoice_history_id)
    {
        $this->container['invoice_history_id'] = $invoice_history_id;

        return $this;
    }

    /**
     * Gets item_no
     *
     * @return int
     */
    public function getItemNo()
    {
        return $this->container['item_no'];
    }

    /**
     * Sets item_no
     *
     * @param int $item_no item_no
     *
     * @return $this
     */
    public function setItemNo($item_no)
    {
        $this->container['item_no'] = $item_no;

        return $this;
    }

    /**
     * Gets comment_line
     *
     * @return bool
     */
    public function getCommentLine()
    {
        return $this->container['comment_line'];
    }

    /**
     * Sets comment_line
     *
     * @param bool $comment_line comment_line
     *
     * @return $this
     */
    public function setCommentLine($comment_line)
    {
        $this->container['comment_line'] = $comment_line;

        return $this;
    }

    /**
     * Gets quantity_ordered
     *
     * @return double
     */
    public function getQuantityOrdered()
    {
        return $this->container['quantity_ordered'];
    }

    /**
     * Sets quantity_ordered
     *
     * @param double $quantity_ordered quantity_ordered
     *
     * @return $this
     */
    public function setQuantityOrdered($quantity_ordered)
    {
        $this->container['quantity_ordered'] = $quantity_ordered;

        return $this;
    }

    /**
     * Gets quantity_demand
     *
     * @return double
     */
    public function getQuantityDemand()
    {
        return $this->container['quantity_demand'];
    }

    /**
     * Sets quantity_demand
     *
     * @param double $quantity_demand quantity_demand
     *
     * @return $this
     */
    public function setQuantityDemand($quantity_demand)
    {
        $this->container['quantity_demand'] = $quantity_demand;

        return $this;
    }

    /**
     * Gets quantity_this_del
     *
     * @return double
     */
    public function getQuantityThisDel()
    {
        return $this->container['quantity_this_del'];
    }

    /**
     * Sets quantity_this_del
     *
     * @param double $quantity_this_del quantity_this_del
     *
     * @return $this
     */
    public function setQuantityThisDel($quantity_this_del)
    {
        $this->container['quantity_this_del'] = $quantity_this_del;

        return $this;
    }

    /**
     * Gets quantity_back_ord
     *
     * @return double
     */
    public function getQuantityBackOrd()
    {
        return $this->container['quantity_back_ord'];
    }

    /**
     * Sets quantity_back_ord
     *
     * @param double $quantity_back_ord quantity_back_ord
     *
     * @return $this
     */
    public function setQuantityBackOrd($quantity_back_ord)
    {
        $this->container['quantity_back_ord'] = $quantity_back_ord;

        return $this;
    }

    /**
     * Gets picked
     *
     * @return bool
     */
    public function getPicked()
    {
        return $this->container['picked'];
    }

    /**
     * Sets picked
     *
     * @param bool $picked picked
     *
     * @return $this
     */
    public function setPicked($picked)
    {
        $this->container['picked'] = $picked;

        return $this;
    }

    /**
     * Gets price_ex_gst
     *
     * @return double
     */
    public function getPriceExGst()
    {
        return $this->container['price_ex_gst'];
    }

    /**
     * Sets price_ex_gst
     *
     * @param double $price_ex_gst price_ex_gst
     *
     * @return $this
     */
    public function setPriceExGst($price_ex_gst)
    {
        $this->container['price_ex_gst'] = $price_ex_gst;

        return $this;
    }

    /**
     * Gets price_inc_gst
     *
     * @return double
     */
    public function getPriceIncGst()
    {
        return $this->container['price_inc_gst'];
    }

    /**
     * Sets price_inc_gst
     *
     * @param double $price_inc_gst price_inc_gst
     *
     * @return $this
     */
    public function setPriceIncGst($price_inc_gst)
    {
        $this->container['price_inc_gst'] = $price_inc_gst;

        return $this;
    }

    /**
     * Gets discounted_price
     *
     * @return double
     */
    public function getDiscountedPrice()
    {
        return $this->container['discounted_price'];
    }

    /**
     * Sets discounted_price
     *
     * @param double $discounted_price discounted_price
     *
     * @return $this
     */
    public function setDiscountedPrice($discounted_price)
    {
        $this->container['discounted_price'] = $discounted_price;

        return $this;
    }

    /**
     * Gets tax_to_charge
     *
     * @return double
     */
    public function getTaxToCharge()
    {
        return $this->container['tax_to_charge'];
    }

    /**
     * Sets tax_to_charge
     *
     * @param double $tax_to_charge tax_to_charge
     *
     * @return $this
     */
    public function setTaxToCharge($tax_to_charge)
    {
        $this->container['tax_to_charge'] = $tax_to_charge;

        return $this;
    }

    /**
     * Gets tax_rate
     *
     * @return \Jiwa\Model\TaxRate
     */
    public function getTaxRate()
    {
        return $this->container['tax_rate'];
    }

    /**
     * Sets tax_rate
     *
     * @param \Jiwa\Model\TaxRate $tax_rate tax_rate
     *
     * @return $this
     */
    public function setTaxRate($tax_rate)
    {
        $this->container['tax_rate'] = $tax_rate;

        return $this;
    }

    /**
     * Gets unit_cost
     *
     * @return double
     */
    public function getUnitCost()
    {
        return $this->container['unit_cost'];
    }

    /**
     * Sets unit_cost
     *
     * @param double $unit_cost unit_cost
     *
     * @return $this
     */
    public function setUnitCost($unit_cost)
    {
        $this->container['unit_cost'] = $unit_cost;

        return $this;
    }

    /**
     * Gets fix_sell_price
     *
     * @return bool
     */
    public function getFixSellPrice()
    {
        return $this->container['fix_sell_price'];
    }

    /**
     * Sets fix_sell_price
     *
     * @param bool $fix_sell_price fix_sell_price
     *
     * @return $this
     */
    public function setFixSellPrice($fix_sell_price)
    {
        $this->container['fix_sell_price'] = $fix_sell_price;

        return $this;
    }

    /**
     * Gets fix_price
     *
     * @return bool
     */
    public function getFixPrice()
    {
        return $this->container['fix_price'];
    }

    /**
     * Sets fix_price
     *
     * @param bool $fix_price fix_price
     *
     * @return $this
     */
    public function setFixPrice($fix_price)
    {
        $this->container['fix_price'] = $fix_price;

        return $this;
    }

    /**
     * Gets user_defined_float1
     *
     * @return double
     */
    public function getUserDefinedFloat1()
    {
        return $this->container['user_defined_float1'];
    }

    /**
     * Sets user_defined_float1
     *
     * @param double $user_defined_float1 user_defined_float1
     *
     * @return $this
     */
    public function setUserDefinedFloat1($user_defined_float1)
    {
        $this->container['user_defined_float1'] = $user_defined_float1;

        return $this;
    }

    /**
     * Gets user_defined_float2
     *
     * @return double
     */
    public function getUserDefinedFloat2()
    {
        return $this->container['user_defined_float2'];
    }

    /**
     * Sets user_defined_float2
     *
     * @param double $user_defined_float2 user_defined_float2
     *
     * @return $this
     */
    public function setUserDefinedFloat2($user_defined_float2)
    {
        $this->container['user_defined_float2'] = $user_defined_float2;

        return $this;
    }

    /**
     * Gets user_defined_float3
     *
     * @return double
     */
    public function getUserDefinedFloat3()
    {
        return $this->container['user_defined_float3'];
    }

    /**
     * Sets user_defined_float3
     *
     * @param double $user_defined_float3 user_defined_float3
     *
     * @return $this
     */
    public function setUserDefinedFloat3($user_defined_float3)
    {
        $this->container['user_defined_float3'] = $user_defined_float3;

        return $this;
    }

    /**
     * Gets forward_order_date
     *
     * @return \DateTime
     */
    public function getForwardOrderDate()
    {
        return $this->container['forward_order_date'];
    }

    /**
     * Sets forward_order_date
     *
     * @param \DateTime $forward_order_date forward_order_date
     *
     * @return $this
     */
    public function setForwardOrderDate($forward_order_date)
    {
        $this->container['forward_order_date'] = $forward_order_date;

        return $this;
    }

    /**
     * Gets scheduled_date
     *
     * @return \DateTime
     */
    public function getScheduledDate()
    {
        return $this->container['scheduled_date'];
    }

    /**
     * Sets scheduled_date
     *
     * @param \DateTime $scheduled_date scheduled_date
     *
     * @return $this
     */
    public function setScheduledDate($scheduled_date)
    {
        $this->container['scheduled_date'] = $scheduled_date;

        return $this;
    }

    /**
     * Gets line_total
     *
     * @return double
     */
    public function getLineTotal()
    {
        return $this->container['line_total'];
    }

    /**
     * Sets line_total
     *
     * @param double $line_total line_total
     *
     * @return $this
     */
    public function setLineTotal($line_total)
    {
        $this->container['line_total'] = $line_total;

        return $this;
    }

    /**
     * Gets weight
     *
     * @return double
     */
    public function getWeight()
    {
        return $this->container['weight'];
    }

    /**
     * Sets weight
     *
     * @param double $weight weight
     *
     * @return $this
     */
    public function setWeight($weight)
    {
        $this->container['weight'] = $weight;

        return $this;
    }

    /**
     * Gets cubic
     *
     * @return double
     */
    public function getCubic()
    {
        return $this->container['cubic'];
    }

    /**
     * Sets cubic
     *
     * @param double $cubic cubic
     *
     * @return $this
     */
    public function setCubic($cubic)
    {
        $this->container['cubic'] = $cubic;

        return $this;
    }

    /**
     * Gets quoted_discounted_price
     *
     * @return double
     */
    public function getQuotedDiscountedPrice()
    {
        return $this->container['quoted_discounted_price'];
    }

    /**
     * Sets quoted_discounted_price
     *
     * @param double $quoted_discounted_price quoted_discounted_price
     *
     * @return $this
     */
    public function setQuotedDiscountedPrice($quoted_discounted_price)
    {
        $this->container['quoted_discounted_price'] = $quoted_discounted_price;

        return $this;
    }

    /**
     * Gets quoted_discount_percentage
     *
     * @return double
     */
    public function getQuotedDiscountPercentage()
    {
        return $this->container['quoted_discount_percentage'];
    }

    /**
     * Sets quoted_discount_percentage
     *
     * @param double $quoted_discount_percentage quoted_discount_percentage
     *
     * @return $this
     */
    public function setQuotedDiscountPercentage($quoted_discount_percentage)
    {
        $this->container['quoted_discount_percentage'] = $quoted_discount_percentage;

        return $this;
    }

    /**
     * Gets discounted_percentage
     *
     * @return double
     */
    public function getDiscountedPercentage()
    {
        return $this->container['discounted_percentage'];
    }

    /**
     * Sets discounted_percentage
     *
     * @param double $discounted_percentage discounted_percentage
     *
     * @return $this
     */
    public function setDiscountedPercentage($discounted_percentage)
    {
        $this->container['discounted_percentage'] = $discounted_percentage;

        return $this;
    }

    /**
     * Gets discount_given
     *
     * @return double
     */
    public function getDiscountGiven()
    {
        return $this->container['discount_given'];
    }

    /**
     * Sets discount_given
     *
     * @param double $discount_given discount_given
     *
     * @return $this
     */
    public function setDiscountGiven($discount_given)
    {
        $this->container['discount_given'] = $discount_given;

        return $this;
    }

    /**
     * Gets quantity_decimal_places
     *
     * @return double
     */
    public function getQuantityDecimalPlaces()
    {
        return $this->container['quantity_decimal_places'];
    }

    /**
     * Sets quantity_decimal_places
     *
     * @param double $quantity_decimal_places quantity_decimal_places
     *
     * @return $this
     */
    public function setQuantityDecimalPlaces($quantity_decimal_places)
    {
        $this->container['quantity_decimal_places'] = $quantity_decimal_places;

        return $this;
    }

    /**
     * Gets quantity_original_ordered
     *
     * @return double
     */
    public function getQuantityOriginalOrdered()
    {
        return $this->container['quantity_original_ordered'];
    }

    /**
     * Sets quantity_original_ordered
     *
     * @param double $quantity_original_ordered quantity_original_ordered
     *
     * @return $this
     */
    public function setQuantityOriginalOrdered($quantity_original_ordered)
    {
        $this->container['quantity_original_ordered'] = $quantity_original_ordered;

        return $this;
    }

    /**
     * Gets sales_order_serial_stock_selection_types
     *
     * @return string
     */
    public function getSalesOrderSerialStockSelectionTypes()
    {
        return $this->container['sales_order_serial_stock_selection_types'];
    }

    /**
     * Sets sales_order_serial_stock_selection_types
     *
     * @param string $sales_order_serial_stock_selection_types sales_order_serial_stock_selection_types
     *
     * @return $this
     */
    public function setSalesOrderSerialStockSelectionTypes($sales_order_serial_stock_selection_types)
    {
        $this->container['sales_order_serial_stock_selection_types'] = $sales_order_serial_stock_selection_types;

        return $this;
    }

    /**
     * Gets non_inventory
     *
     * @return bool
     */
    public function getNonInventory()
    {
        return $this->container['non_inventory'];
    }

    /**
     * Sets non_inventory
     *
     * @param bool $non_inventory non_inventory
     *
     * @return $this
     */
    public function setNonInventory($non_inventory)
    {
        $this->container['non_inventory'] = $non_inventory;

        return $this;
    }

    /**
     * Gets inventory_id
     *
     * @return string
     */
    public function getInventoryId()
    {
        return $this->container['inventory_id'];
    }

    /**
     * Sets inventory_id
     *
     * @param string $inventory_id inventory_id
     *
     * @return $this
     */
    public function setInventoryId($inventory_id)
    {
        $this->container['inventory_id'] = $inventory_id;

        return $this;
    }

    /**
     * Gets part_no
     *
     * @return string
     */
    public function getPartNo()
    {
        return $this->container['part_no'];
    }

    /**
     * Sets part_no
     *
     * @param string $part_no part_no
     *
     * @return $this
     */
    public function setPartNo($part_no)
    {
        $this->container['part_no'] = $part_no;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets comment_text
     *
     * @return string
     */
    public function getCommentText()
    {
        return $this->container['comment_text'];
    }

    /**
     * Sets comment_text
     *
     * @param string $comment_text comment_text
     *
     * @return $this
     */
    public function setCommentText($comment_text)
    {
        $this->container['comment_text'] = $comment_text;

        return $this;
    }

    /**
     * Gets aux2
     *
     * @return string
     */
    public function getAux2()
    {
        return $this->container['aux2'];
    }

    /**
     * Sets aux2
     *
     * @param string $aux2 aux2
     *
     * @return $this
     */
    public function setAux2($aux2)
    {
        $this->container['aux2'] = $aux2;

        return $this;
    }

    /**
     * Gets line_link_id
     *
     * @return string
     */
    public function getLineLinkId()
    {
        return $this->container['line_link_id'];
    }

    /**
     * Sets line_link_id
     *
     * @param string $line_link_id line_link_id
     *
     * @return $this
     */
    public function setLineLinkId($line_link_id)
    {
        $this->container['line_link_id'] = $line_link_id;

        return $this;
    }

    /**
     * Gets edi_store_location_code
     *
     * @return string
     */
    public function getEdiStoreLocationCode()
    {
        return $this->container['edi_store_location_code'];
    }

    /**
     * Sets edi_store_location_code
     *
     * @param string $edi_store_location_code edi_store_location_code
     *
     * @return $this
     */
    public function setEdiStoreLocationCode($edi_store_location_code)
    {
        $this->container['edi_store_location_code'] = $edi_store_location_code;

        return $this;
    }

    /**
     * Gets edidc_location_code
     *
     * @return string
     */
    public function getEdidcLocationCode()
    {
        return $this->container['edidc_location_code'];
    }

    /**
     * Sets edidc_location_code
     *
     * @param string $edidc_location_code edidc_location_code
     *
     * @return $this
     */
    public function setEdidcLocationCode($edidc_location_code)
    {
        $this->container['edidc_location_code'] = $edidc_location_code;

        return $this;
    }

    /**
     * Gets cost_center
     *
     * @return string
     */
    public function getCostCenter()
    {
        return $this->container['cost_center'];
    }

    /**
     * Sets cost_center
     *
     * @param string $cost_center cost_center
     *
     * @return $this
     */
    public function setCostCenter($cost_center)
    {
        $this->container['cost_center'] = $cost_center;

        return $this;
    }

    /**
     * Gets stage
     *
     * @return string
     */
    public function getStage()
    {
        return $this->container['stage'];
    }

    /**
     * Sets stage
     *
     * @param string $stage stage
     *
     * @return $this
     */
    public function setStage($stage)
    {
        $this->container['stage'] = $stage;

        return $this;
    }

    /**
     * Gets custom_field_values
     *
     * @return \Jiwa\Model\CustomFieldValue[]
     */
    public function getCustomFieldValues()
    {
        return $this->container['custom_field_values'];
    }

    /**
     * Sets custom_field_values
     *
     * @param \Jiwa\Model\CustomFieldValue[] $custom_field_values custom_field_values
     *
     * @return $this
     */
    public function setCustomFieldValues($custom_field_values)
    {
        $this->container['custom_field_values'] = $custom_field_values;

        return $this;
    }

    /**
     * Gets line_details
     *
     * @return \Jiwa\Model\SalesOrderLineDetail[]
     */
    public function getLineDetails()
    {
        return $this->container['line_details'];
    }

    /**
     * Sets line_details
     *
     * @param \Jiwa\Model\SalesOrderLineDetail[] $line_details line_details
     *
     * @return $this
     */
    public function setLineDetails($line_details)
    {
        $this->container['line_details'] = $line_details;

        return $this;
    }

    /**
     * Gets shipping_labels
     *
     * @return \Jiwa\Model\SalesOrderShippingLabel[]
     */
    public function getShippingLabels()
    {
        return $this->container['shipping_labels'];
    }

    /**
     * Sets shipping_labels
     *
     * @param \Jiwa\Model\SalesOrderShippingLabel[] $shipping_labels shipping_labels
     *
     * @return $this
     */
    public function setShippingLabels($shipping_labels)
    {
        $this->container['shipping_labels'] = $shipping_labels;

        return $this;
    }

    /**
     * Gets unit_of_measure
     *
     * @return \Jiwa\Model\InventoryUnitOfMeasure
     */
    public function getUnitOfMeasure()
    {
        return $this->container['unit_of_measure'];
    }

    /**
     * Sets unit_of_measure
     *
     * @param \Jiwa\Model\InventoryUnitOfMeasure $unit_of_measure unit_of_measure
     *
     * @return $this
     */
    public function setUnitOfMeasure($unit_of_measure)
    {
        $this->container['unit_of_measure'] = $unit_of_measure;

        return $this;
    }

    /**
     * Gets kit_line_type
     *
     * @return string
     */
    public function getKitLineType()
    {
        return $this->container['kit_line_type'];
    }

    /**
     * Sets kit_line_type
     *
     * @param string $kit_line_type kit_line_type
     *
     * @return $this
     */
    public function setKitLineType($kit_line_type)
    {
        $this->container['kit_line_type'] = $kit_line_type;

        return $this;
    }

    /**
     * Gets kit_units
     *
     * @return double
     */
    public function getKitUnits()
    {
        return $this->container['kit_units'];
    }

    /**
     * Sets kit_units
     *
     * @param double $kit_units kit_units
     *
     * @return $this
     */
    public function setKitUnits($kit_units)
    {
        $this->container['kit_units'] = $kit_units;

        return $this;
    }

    /**
     * Gets kit_header_line_id
     *
     * @return string
     */
    public function getKitHeaderLineId()
    {
        return $this->container['kit_header_line_id'];
    }

    /**
     * Sets kit_header_line_id
     *
     * @param string $kit_header_line_id kit_header_line_id
     *
     * @return $this
     */
    public function setKitHeaderLineId($kit_header_line_id)
    {
        $this->container['kit_header_line_id'] = $kit_header_line_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


