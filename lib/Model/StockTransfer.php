<?php
/**
 * StockTransfer
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\JiwaModel;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * StockTransfer Class Doc Comment
 *
 * @category Class
 * @description StockTransfer
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class StockTransfer implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'StockTransfer';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'transfer_id' => 'string',
        'transfer_no' => 'string',
        'status' => 'string',
        'transfer_date' => '\DateTime',
        'reference' => 'string',
        'logical_warehouse_id' => 'string',
        'logical_warehouse_description' => 'string',
        'physical_warehouse_id' => 'string',
        'physical_warehouse_description' => 'string',
        'last_saved_by_staff_id' => 'string',
        'last_saved_by_staff_user_name' => 'string',
        'last_saved_by_staff_title' => 'string',
        'last_saved_by_staff_first_name' => 'string',
        'last_saved_by_staff_surname' => 'string',
        'last_saved_date_time' => '\DateTime',
        'created_by_staff_id' => 'string',
        'created_by_staff_user_name' => 'string',
        'created_by_staff_title' => 'string',
        'created_by_staff_first_name' => 'string',
        'created_by_staff_surname' => 'string',
        'created_date_time' => '\DateTime',
        'lines' => '\Jiwa\JiwaModel\StockTransferLine[]',
        'notes' => '\Jiwa\JiwaModel\Note[]',
        'documents' => '\Jiwa\JiwaModel\Document[]',
        'custom_field_values' => '\Jiwa\JiwaModel\CustomFieldValue[]',
        'stock_transfer_reason_rec_id' => 'string',
        'stock_transfer_reason_name' => 'string',
        'stock_transfer_reason_is_default' => 'bool',
        'stock_transfer_reason_write_off_ledger_account_override' => 'bool',
        'stock_transfer_reason_write_off_ledger_account_rec_id' => 'string',
        'stock_transfer_reason_write_off_ledger_account_no' => 'string',
        'stock_transfer_reason_write_off_ledger_account_description' => 'string',
        'stock_transfer_reason_write_on_ledger_account_override' => 'bool',
        'stock_transfer_reason_write_on_ledger_account_rec_id' => 'string',
        'stock_transfer_reason_write_on_ledger_account_no' => 'string',
        'stock_transfer_reason_write_on_ledger_account_description' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'transfer_id' => null,
        'transfer_no' => null,
        'status' => null,
        'transfer_date' => 'date-time',
        'reference' => null,
        'logical_warehouse_id' => null,
        'logical_warehouse_description' => null,
        'physical_warehouse_id' => null,
        'physical_warehouse_description' => null,
        'last_saved_by_staff_id' => null,
        'last_saved_by_staff_user_name' => null,
        'last_saved_by_staff_title' => null,
        'last_saved_by_staff_first_name' => null,
        'last_saved_by_staff_surname' => null,
        'last_saved_date_time' => 'date-time',
        'created_by_staff_id' => null,
        'created_by_staff_user_name' => null,
        'created_by_staff_title' => null,
        'created_by_staff_first_name' => null,
        'created_by_staff_surname' => null,
        'created_date_time' => 'date-time',
        'lines' => null,
        'notes' => null,
        'documents' => null,
        'custom_field_values' => null,
        'stock_transfer_reason_rec_id' => null,
        'stock_transfer_reason_name' => null,
        'stock_transfer_reason_is_default' => null,
        'stock_transfer_reason_write_off_ledger_account_override' => null,
        'stock_transfer_reason_write_off_ledger_account_rec_id' => null,
        'stock_transfer_reason_write_off_ledger_account_no' => null,
        'stock_transfer_reason_write_off_ledger_account_description' => null,
        'stock_transfer_reason_write_on_ledger_account_override' => null,
        'stock_transfer_reason_write_on_ledger_account_rec_id' => null,
        'stock_transfer_reason_write_on_ledger_account_no' => null,
        'stock_transfer_reason_write_on_ledger_account_description' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'transfer_id' => 'TransferID',
        'transfer_no' => 'TransferNo',
        'status' => 'Status',
        'transfer_date' => 'TransferDate',
        'reference' => 'Reference',
        'logical_warehouse_id' => 'LogicalWarehouseID',
        'logical_warehouse_description' => 'LogicalWarehouseDescription',
        'physical_warehouse_id' => 'PhysicalWarehouseID',
        'physical_warehouse_description' => 'PhysicalWarehouseDescription',
        'last_saved_by_staff_id' => 'LastSavedByStaffID',
        'last_saved_by_staff_user_name' => 'LastSavedByStaffUserName',
        'last_saved_by_staff_title' => 'LastSavedByStaffTitle',
        'last_saved_by_staff_first_name' => 'LastSavedByStaffFirstName',
        'last_saved_by_staff_surname' => 'LastSavedByStaffSurname',
        'last_saved_date_time' => 'LastSavedDateTime',
        'created_by_staff_id' => 'CreatedByStaffID',
        'created_by_staff_user_name' => 'CreatedByStaffUserName',
        'created_by_staff_title' => 'CreatedByStaffTitle',
        'created_by_staff_first_name' => 'CreatedByStaffFirstName',
        'created_by_staff_surname' => 'CreatedByStaffSurname',
        'created_date_time' => 'CreatedDateTime',
        'lines' => 'Lines',
        'notes' => 'Notes',
        'documents' => 'Documents',
        'custom_field_values' => 'CustomFieldValues',
        'stock_transfer_reason_rec_id' => 'StockTransferReasonRecID',
        'stock_transfer_reason_name' => 'StockTransferReasonName',
        'stock_transfer_reason_is_default' => 'StockTransferReasonIsDefault',
        'stock_transfer_reason_write_off_ledger_account_override' => 'StockTransferReasonWriteOffLedgerAccountOverride',
        'stock_transfer_reason_write_off_ledger_account_rec_id' => 'StockTransferReasonWriteOffLedgerAccountRecID',
        'stock_transfer_reason_write_off_ledger_account_no' => 'StockTransferReasonWriteOffLedgerAccountNo',
        'stock_transfer_reason_write_off_ledger_account_description' => 'StockTransferReasonWriteOffLedgerAccountDescription',
        'stock_transfer_reason_write_on_ledger_account_override' => 'StockTransferReasonWriteOnLedgerAccountOverride',
        'stock_transfer_reason_write_on_ledger_account_rec_id' => 'StockTransferReasonWriteOnLedgerAccountRecID',
        'stock_transfer_reason_write_on_ledger_account_no' => 'StockTransferReasonWriteOnLedgerAccountNo',
        'stock_transfer_reason_write_on_ledger_account_description' => 'StockTransferReasonWriteOnLedgerAccountDescription'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'transfer_id' => 'setTransferId',
        'transfer_no' => 'setTransferNo',
        'status' => 'setStatus',
        'transfer_date' => 'setTransferDate',
        'reference' => 'setReference',
        'logical_warehouse_id' => 'setLogicalWarehouseId',
        'logical_warehouse_description' => 'setLogicalWarehouseDescription',
        'physical_warehouse_id' => 'setPhysicalWarehouseId',
        'physical_warehouse_description' => 'setPhysicalWarehouseDescription',
        'last_saved_by_staff_id' => 'setLastSavedByStaffId',
        'last_saved_by_staff_user_name' => 'setLastSavedByStaffUserName',
        'last_saved_by_staff_title' => 'setLastSavedByStaffTitle',
        'last_saved_by_staff_first_name' => 'setLastSavedByStaffFirstName',
        'last_saved_by_staff_surname' => 'setLastSavedByStaffSurname',
        'last_saved_date_time' => 'setLastSavedDateTime',
        'created_by_staff_id' => 'setCreatedByStaffId',
        'created_by_staff_user_name' => 'setCreatedByStaffUserName',
        'created_by_staff_title' => 'setCreatedByStaffTitle',
        'created_by_staff_first_name' => 'setCreatedByStaffFirstName',
        'created_by_staff_surname' => 'setCreatedByStaffSurname',
        'created_date_time' => 'setCreatedDateTime',
        'lines' => 'setLines',
        'notes' => 'setNotes',
        'documents' => 'setDocuments',
        'custom_field_values' => 'setCustomFieldValues',
        'stock_transfer_reason_rec_id' => 'setStockTransferReasonRecId',
        'stock_transfer_reason_name' => 'setStockTransferReasonName',
        'stock_transfer_reason_is_default' => 'setStockTransferReasonIsDefault',
        'stock_transfer_reason_write_off_ledger_account_override' => 'setStockTransferReasonWriteOffLedgerAccountOverride',
        'stock_transfer_reason_write_off_ledger_account_rec_id' => 'setStockTransferReasonWriteOffLedgerAccountRecId',
        'stock_transfer_reason_write_off_ledger_account_no' => 'setStockTransferReasonWriteOffLedgerAccountNo',
        'stock_transfer_reason_write_off_ledger_account_description' => 'setStockTransferReasonWriteOffLedgerAccountDescription',
        'stock_transfer_reason_write_on_ledger_account_override' => 'setStockTransferReasonWriteOnLedgerAccountOverride',
        'stock_transfer_reason_write_on_ledger_account_rec_id' => 'setStockTransferReasonWriteOnLedgerAccountRecId',
        'stock_transfer_reason_write_on_ledger_account_no' => 'setStockTransferReasonWriteOnLedgerAccountNo',
        'stock_transfer_reason_write_on_ledger_account_description' => 'setStockTransferReasonWriteOnLedgerAccountDescription'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'transfer_id' => 'getTransferId',
        'transfer_no' => 'getTransferNo',
        'status' => 'getStatus',
        'transfer_date' => 'getTransferDate',
        'reference' => 'getReference',
        'logical_warehouse_id' => 'getLogicalWarehouseId',
        'logical_warehouse_description' => 'getLogicalWarehouseDescription',
        'physical_warehouse_id' => 'getPhysicalWarehouseId',
        'physical_warehouse_description' => 'getPhysicalWarehouseDescription',
        'last_saved_by_staff_id' => 'getLastSavedByStaffId',
        'last_saved_by_staff_user_name' => 'getLastSavedByStaffUserName',
        'last_saved_by_staff_title' => 'getLastSavedByStaffTitle',
        'last_saved_by_staff_first_name' => 'getLastSavedByStaffFirstName',
        'last_saved_by_staff_surname' => 'getLastSavedByStaffSurname',
        'last_saved_date_time' => 'getLastSavedDateTime',
        'created_by_staff_id' => 'getCreatedByStaffId',
        'created_by_staff_user_name' => 'getCreatedByStaffUserName',
        'created_by_staff_title' => 'getCreatedByStaffTitle',
        'created_by_staff_first_name' => 'getCreatedByStaffFirstName',
        'created_by_staff_surname' => 'getCreatedByStaffSurname',
        'created_date_time' => 'getCreatedDateTime',
        'lines' => 'getLines',
        'notes' => 'getNotes',
        'documents' => 'getDocuments',
        'custom_field_values' => 'getCustomFieldValues',
        'stock_transfer_reason_rec_id' => 'getStockTransferReasonRecId',
        'stock_transfer_reason_name' => 'getStockTransferReasonName',
        'stock_transfer_reason_is_default' => 'getStockTransferReasonIsDefault',
        'stock_transfer_reason_write_off_ledger_account_override' => 'getStockTransferReasonWriteOffLedgerAccountOverride',
        'stock_transfer_reason_write_off_ledger_account_rec_id' => 'getStockTransferReasonWriteOffLedgerAccountRecId',
        'stock_transfer_reason_write_off_ledger_account_no' => 'getStockTransferReasonWriteOffLedgerAccountNo',
        'stock_transfer_reason_write_off_ledger_account_description' => 'getStockTransferReasonWriteOffLedgerAccountDescription',
        'stock_transfer_reason_write_on_ledger_account_override' => 'getStockTransferReasonWriteOnLedgerAccountOverride',
        'stock_transfer_reason_write_on_ledger_account_rec_id' => 'getStockTransferReasonWriteOnLedgerAccountRecId',
        'stock_transfer_reason_write_on_ledger_account_no' => 'getStockTransferReasonWriteOnLedgerAccountNo',
        'stock_transfer_reason_write_on_ledger_account_description' => 'getStockTransferReasonWriteOnLedgerAccountDescription'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['transfer_id'] = isset($data['transfer_id']) ? $data['transfer_id'] : null;
        $this->container['transfer_no'] = isset($data['transfer_no']) ? $data['transfer_no'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['transfer_date'] = isset($data['transfer_date']) ? $data['transfer_date'] : null;
        $this->container['reference'] = isset($data['reference']) ? $data['reference'] : null;
        $this->container['logical_warehouse_id'] = isset($data['logical_warehouse_id']) ? $data['logical_warehouse_id'] : null;
        $this->container['logical_warehouse_description'] = isset($data['logical_warehouse_description']) ? $data['logical_warehouse_description'] : null;
        $this->container['physical_warehouse_id'] = isset($data['physical_warehouse_id']) ? $data['physical_warehouse_id'] : null;
        $this->container['physical_warehouse_description'] = isset($data['physical_warehouse_description']) ? $data['physical_warehouse_description'] : null;
        $this->container['last_saved_by_staff_id'] = isset($data['last_saved_by_staff_id']) ? $data['last_saved_by_staff_id'] : null;
        $this->container['last_saved_by_staff_user_name'] = isset($data['last_saved_by_staff_user_name']) ? $data['last_saved_by_staff_user_name'] : null;
        $this->container['last_saved_by_staff_title'] = isset($data['last_saved_by_staff_title']) ? $data['last_saved_by_staff_title'] : null;
        $this->container['last_saved_by_staff_first_name'] = isset($data['last_saved_by_staff_first_name']) ? $data['last_saved_by_staff_first_name'] : null;
        $this->container['last_saved_by_staff_surname'] = isset($data['last_saved_by_staff_surname']) ? $data['last_saved_by_staff_surname'] : null;
        $this->container['last_saved_date_time'] = isset($data['last_saved_date_time']) ? $data['last_saved_date_time'] : null;
        $this->container['created_by_staff_id'] = isset($data['created_by_staff_id']) ? $data['created_by_staff_id'] : null;
        $this->container['created_by_staff_user_name'] = isset($data['created_by_staff_user_name']) ? $data['created_by_staff_user_name'] : null;
        $this->container['created_by_staff_title'] = isset($data['created_by_staff_title']) ? $data['created_by_staff_title'] : null;
        $this->container['created_by_staff_first_name'] = isset($data['created_by_staff_first_name']) ? $data['created_by_staff_first_name'] : null;
        $this->container['created_by_staff_surname'] = isset($data['created_by_staff_surname']) ? $data['created_by_staff_surname'] : null;
        $this->container['created_date_time'] = isset($data['created_date_time']) ? $data['created_date_time'] : null;
        $this->container['lines'] = isset($data['lines']) ? $data['lines'] : null;
        $this->container['notes'] = isset($data['notes']) ? $data['notes'] : null;
        $this->container['documents'] = isset($data['documents']) ? $data['documents'] : null;
        $this->container['custom_field_values'] = isset($data['custom_field_values']) ? $data['custom_field_values'] : null;
        $this->container['stock_transfer_reason_rec_id'] = isset($data['stock_transfer_reason_rec_id']) ? $data['stock_transfer_reason_rec_id'] : null;
        $this->container['stock_transfer_reason_name'] = isset($data['stock_transfer_reason_name']) ? $data['stock_transfer_reason_name'] : null;
        $this->container['stock_transfer_reason_is_default'] = isset($data['stock_transfer_reason_is_default']) ? $data['stock_transfer_reason_is_default'] : null;
        $this->container['stock_transfer_reason_write_off_ledger_account_override'] = isset($data['stock_transfer_reason_write_off_ledger_account_override']) ? $data['stock_transfer_reason_write_off_ledger_account_override'] : null;
        $this->container['stock_transfer_reason_write_off_ledger_account_rec_id'] = isset($data['stock_transfer_reason_write_off_ledger_account_rec_id']) ? $data['stock_transfer_reason_write_off_ledger_account_rec_id'] : null;
        $this->container['stock_transfer_reason_write_off_ledger_account_no'] = isset($data['stock_transfer_reason_write_off_ledger_account_no']) ? $data['stock_transfer_reason_write_off_ledger_account_no'] : null;
        $this->container['stock_transfer_reason_write_off_ledger_account_description'] = isset($data['stock_transfer_reason_write_off_ledger_account_description']) ? $data['stock_transfer_reason_write_off_ledger_account_description'] : null;
        $this->container['stock_transfer_reason_write_on_ledger_account_override'] = isset($data['stock_transfer_reason_write_on_ledger_account_override']) ? $data['stock_transfer_reason_write_on_ledger_account_override'] : null;
        $this->container['stock_transfer_reason_write_on_ledger_account_rec_id'] = isset($data['stock_transfer_reason_write_on_ledger_account_rec_id']) ? $data['stock_transfer_reason_write_on_ledger_account_rec_id'] : null;
        $this->container['stock_transfer_reason_write_on_ledger_account_no'] = isset($data['stock_transfer_reason_write_on_ledger_account_no']) ? $data['stock_transfer_reason_write_on_ledger_account_no'] : null;
        $this->container['stock_transfer_reason_write_on_ledger_account_description'] = isset($data['stock_transfer_reason_write_on_ledger_account_description']) ? $data['stock_transfer_reason_write_on_ledger_account_description'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets transfer_id
     *
     * @return string
     */
    public function getTransferId()
    {
        return $this->container['transfer_id'];
    }

    /**
     * Sets transfer_id
     *
     * @param string $transfer_id transfer_id
     *
     * @return $this
     */
    public function setTransferId($transfer_id)
    {
        $this->container['transfer_id'] = $transfer_id;

        return $this;
    }

    /**
     * Gets transfer_no
     *
     * @return string
     */
    public function getTransferNo()
    {
        return $this->container['transfer_no'];
    }

    /**
     * Sets transfer_no
     *
     * @param string $transfer_no transfer_no
     *
     * @return $this
     */
    public function setTransferNo($transfer_no)
    {
        $this->container['transfer_no'] = $transfer_no;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets transfer_date
     *
     * @return \DateTime
     */
    public function getTransferDate()
    {
        return $this->container['transfer_date'];
    }

    /**
     * Sets transfer_date
     *
     * @param \DateTime $transfer_date transfer_date
     *
     * @return $this
     */
    public function setTransferDate($transfer_date)
    {
        $this->container['transfer_date'] = $transfer_date;

        return $this;
    }

    /**
     * Gets reference
     *
     * @return string
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string $reference reference
     *
     * @return $this
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets logical_warehouse_id
     *
     * @return string
     */
    public function getLogicalWarehouseId()
    {
        return $this->container['logical_warehouse_id'];
    }

    /**
     * Sets logical_warehouse_id
     *
     * @param string $logical_warehouse_id logical_warehouse_id
     *
     * @return $this
     */
    public function setLogicalWarehouseId($logical_warehouse_id)
    {
        $this->container['logical_warehouse_id'] = $logical_warehouse_id;

        return $this;
    }

    /**
     * Gets logical_warehouse_description
     *
     * @return string
     */
    public function getLogicalWarehouseDescription()
    {
        return $this->container['logical_warehouse_description'];
    }

    /**
     * Sets logical_warehouse_description
     *
     * @param string $logical_warehouse_description logical_warehouse_description
     *
     * @return $this
     */
    public function setLogicalWarehouseDescription($logical_warehouse_description)
    {
        $this->container['logical_warehouse_description'] = $logical_warehouse_description;

        return $this;
    }

    /**
     * Gets physical_warehouse_id
     *
     * @return string
     */
    public function getPhysicalWarehouseId()
    {
        return $this->container['physical_warehouse_id'];
    }

    /**
     * Sets physical_warehouse_id
     *
     * @param string $physical_warehouse_id physical_warehouse_id
     *
     * @return $this
     */
    public function setPhysicalWarehouseId($physical_warehouse_id)
    {
        $this->container['physical_warehouse_id'] = $physical_warehouse_id;

        return $this;
    }

    /**
     * Gets physical_warehouse_description
     *
     * @return string
     */
    public function getPhysicalWarehouseDescription()
    {
        return $this->container['physical_warehouse_description'];
    }

    /**
     * Sets physical_warehouse_description
     *
     * @param string $physical_warehouse_description physical_warehouse_description
     *
     * @return $this
     */
    public function setPhysicalWarehouseDescription($physical_warehouse_description)
    {
        $this->container['physical_warehouse_description'] = $physical_warehouse_description;

        return $this;
    }

    /**
     * Gets last_saved_by_staff_id
     *
     * @return string
     */
    public function getLastSavedByStaffId()
    {
        return $this->container['last_saved_by_staff_id'];
    }

    /**
     * Sets last_saved_by_staff_id
     *
     * @param string $last_saved_by_staff_id last_saved_by_staff_id
     *
     * @return $this
     */
    public function setLastSavedByStaffId($last_saved_by_staff_id)
    {
        $this->container['last_saved_by_staff_id'] = $last_saved_by_staff_id;

        return $this;
    }

    /**
     * Gets last_saved_by_staff_user_name
     *
     * @return string
     */
    public function getLastSavedByStaffUserName()
    {
        return $this->container['last_saved_by_staff_user_name'];
    }

    /**
     * Sets last_saved_by_staff_user_name
     *
     * @param string $last_saved_by_staff_user_name last_saved_by_staff_user_name
     *
     * @return $this
     */
    public function setLastSavedByStaffUserName($last_saved_by_staff_user_name)
    {
        $this->container['last_saved_by_staff_user_name'] = $last_saved_by_staff_user_name;

        return $this;
    }

    /**
     * Gets last_saved_by_staff_title
     *
     * @return string
     */
    public function getLastSavedByStaffTitle()
    {
        return $this->container['last_saved_by_staff_title'];
    }

    /**
     * Sets last_saved_by_staff_title
     *
     * @param string $last_saved_by_staff_title last_saved_by_staff_title
     *
     * @return $this
     */
    public function setLastSavedByStaffTitle($last_saved_by_staff_title)
    {
        $this->container['last_saved_by_staff_title'] = $last_saved_by_staff_title;

        return $this;
    }

    /**
     * Gets last_saved_by_staff_first_name
     *
     * @return string
     */
    public function getLastSavedByStaffFirstName()
    {
        return $this->container['last_saved_by_staff_first_name'];
    }

    /**
     * Sets last_saved_by_staff_first_name
     *
     * @param string $last_saved_by_staff_first_name last_saved_by_staff_first_name
     *
     * @return $this
     */
    public function setLastSavedByStaffFirstName($last_saved_by_staff_first_name)
    {
        $this->container['last_saved_by_staff_first_name'] = $last_saved_by_staff_first_name;

        return $this;
    }

    /**
     * Gets last_saved_by_staff_surname
     *
     * @return string
     */
    public function getLastSavedByStaffSurname()
    {
        return $this->container['last_saved_by_staff_surname'];
    }

    /**
     * Sets last_saved_by_staff_surname
     *
     * @param string $last_saved_by_staff_surname last_saved_by_staff_surname
     *
     * @return $this
     */
    public function setLastSavedByStaffSurname($last_saved_by_staff_surname)
    {
        $this->container['last_saved_by_staff_surname'] = $last_saved_by_staff_surname;

        return $this;
    }

    /**
     * Gets last_saved_date_time
     *
     * @return \DateTime
     */
    public function getLastSavedDateTime()
    {
        return $this->container['last_saved_date_time'];
    }

    /**
     * Sets last_saved_date_time
     *
     * @param \DateTime $last_saved_date_time last_saved_date_time
     *
     * @return $this
     */
    public function setLastSavedDateTime($last_saved_date_time)
    {
        $this->container['last_saved_date_time'] = $last_saved_date_time;

        return $this;
    }

    /**
     * Gets created_by_staff_id
     *
     * @return string
     */
    public function getCreatedByStaffId()
    {
        return $this->container['created_by_staff_id'];
    }

    /**
     * Sets created_by_staff_id
     *
     * @param string $created_by_staff_id created_by_staff_id
     *
     * @return $this
     */
    public function setCreatedByStaffId($created_by_staff_id)
    {
        $this->container['created_by_staff_id'] = $created_by_staff_id;

        return $this;
    }

    /**
     * Gets created_by_staff_user_name
     *
     * @return string
     */
    public function getCreatedByStaffUserName()
    {
        return $this->container['created_by_staff_user_name'];
    }

    /**
     * Sets created_by_staff_user_name
     *
     * @param string $created_by_staff_user_name created_by_staff_user_name
     *
     * @return $this
     */
    public function setCreatedByStaffUserName($created_by_staff_user_name)
    {
        $this->container['created_by_staff_user_name'] = $created_by_staff_user_name;

        return $this;
    }

    /**
     * Gets created_by_staff_title
     *
     * @return string
     */
    public function getCreatedByStaffTitle()
    {
        return $this->container['created_by_staff_title'];
    }

    /**
     * Sets created_by_staff_title
     *
     * @param string $created_by_staff_title created_by_staff_title
     *
     * @return $this
     */
    public function setCreatedByStaffTitle($created_by_staff_title)
    {
        $this->container['created_by_staff_title'] = $created_by_staff_title;

        return $this;
    }

    /**
     * Gets created_by_staff_first_name
     *
     * @return string
     */
    public function getCreatedByStaffFirstName()
    {
        return $this->container['created_by_staff_first_name'];
    }

    /**
     * Sets created_by_staff_first_name
     *
     * @param string $created_by_staff_first_name created_by_staff_first_name
     *
     * @return $this
     */
    public function setCreatedByStaffFirstName($created_by_staff_first_name)
    {
        $this->container['created_by_staff_first_name'] = $created_by_staff_first_name;

        return $this;
    }

    /**
     * Gets created_by_staff_surname
     *
     * @return string
     */
    public function getCreatedByStaffSurname()
    {
        return $this->container['created_by_staff_surname'];
    }

    /**
     * Sets created_by_staff_surname
     *
     * @param string $created_by_staff_surname created_by_staff_surname
     *
     * @return $this
     */
    public function setCreatedByStaffSurname($created_by_staff_surname)
    {
        $this->container['created_by_staff_surname'] = $created_by_staff_surname;

        return $this;
    }

    /**
     * Gets created_date_time
     *
     * @return \DateTime
     */
    public function getCreatedDateTime()
    {
        return $this->container['created_date_time'];
    }

    /**
     * Sets created_date_time
     *
     * @param \DateTime $created_date_time created_date_time
     *
     * @return $this
     */
    public function setCreatedDateTime($created_date_time)
    {
        $this->container['created_date_time'] = $created_date_time;

        return $this;
    }

    /**
     * Gets lines
     *
     * @return \Jiwa\JiwaModel\StockTransferLine[]
     */
    public function getLines()
    {
        return $this->container['lines'];
    }

    /**
     * Sets lines
     *
     * @param \Jiwa\JiwaModel\StockTransferLine[] $lines lines
     *
     * @return $this
     */
    public function setLines($lines)
    {
        $this->container['lines'] = $lines;

        return $this;
    }

    /**
     * Gets notes
     *
     * @return \Jiwa\JiwaModel\Note[]
     */
    public function getNotes()
    {
        return $this->container['notes'];
    }

    /**
     * Sets notes
     *
     * @param \Jiwa\JiwaModel\Note[] $notes notes
     *
     * @return $this
     */
    public function setNotes($notes)
    {
        $this->container['notes'] = $notes;

        return $this;
    }

    /**
     * Gets documents
     *
     * @return \Jiwa\JiwaModel\Document[]
     */
    public function getDocuments()
    {
        return $this->container['documents'];
    }

    /**
     * Sets documents
     *
     * @param \Jiwa\JiwaModel\Document[] $documents documents
     *
     * @return $this
     */
    public function setDocuments($documents)
    {
        $this->container['documents'] = $documents;

        return $this;
    }

    /**
     * Gets custom_field_values
     *
     * @return \Jiwa\JiwaModel\CustomFieldValue[]
     */
    public function getCustomFieldValues()
    {
        return $this->container['custom_field_values'];
    }

    /**
     * Sets custom_field_values
     *
     * @param \Jiwa\JiwaModel\CustomFieldValue[] $custom_field_values custom_field_values
     *
     * @return $this
     */
    public function setCustomFieldValues($custom_field_values)
    {
        $this->container['custom_field_values'] = $custom_field_values;

        return $this;
    }

    /**
     * Gets stock_transfer_reason_rec_id
     *
     * @return string
     */
    public function getStockTransferReasonRecId()
    {
        return $this->container['stock_transfer_reason_rec_id'];
    }

    /**
     * Sets stock_transfer_reason_rec_id
     *
     * @param string $stock_transfer_reason_rec_id stock_transfer_reason_rec_id
     *
     * @return $this
     */
    public function setStockTransferReasonRecId($stock_transfer_reason_rec_id)
    {
        $this->container['stock_transfer_reason_rec_id'] = $stock_transfer_reason_rec_id;

        return $this;
    }

    /**
     * Gets stock_transfer_reason_name
     *
     * @return string
     */
    public function getStockTransferReasonName()
    {
        return $this->container['stock_transfer_reason_name'];
    }

    /**
     * Sets stock_transfer_reason_name
     *
     * @param string $stock_transfer_reason_name stock_transfer_reason_name
     *
     * @return $this
     */
    public function setStockTransferReasonName($stock_transfer_reason_name)
    {
        $this->container['stock_transfer_reason_name'] = $stock_transfer_reason_name;

        return $this;
    }

    /**
     * Gets stock_transfer_reason_is_default
     *
     * @return bool
     */
    public function getStockTransferReasonIsDefault()
    {
        return $this->container['stock_transfer_reason_is_default'];
    }

    /**
     * Sets stock_transfer_reason_is_default
     *
     * @param bool $stock_transfer_reason_is_default stock_transfer_reason_is_default
     *
     * @return $this
     */
    public function setStockTransferReasonIsDefault($stock_transfer_reason_is_default)
    {
        $this->container['stock_transfer_reason_is_default'] = $stock_transfer_reason_is_default;

        return $this;
    }

    /**
     * Gets stock_transfer_reason_write_off_ledger_account_override
     *
     * @return bool
     */
    public function getStockTransferReasonWriteOffLedgerAccountOverride()
    {
        return $this->container['stock_transfer_reason_write_off_ledger_account_override'];
    }

    /**
     * Sets stock_transfer_reason_write_off_ledger_account_override
     *
     * @param bool $stock_transfer_reason_write_off_ledger_account_override stock_transfer_reason_write_off_ledger_account_override
     *
     * @return $this
     */
    public function setStockTransferReasonWriteOffLedgerAccountOverride($stock_transfer_reason_write_off_ledger_account_override)
    {
        $this->container['stock_transfer_reason_write_off_ledger_account_override'] = $stock_transfer_reason_write_off_ledger_account_override;

        return $this;
    }

    /**
     * Gets stock_transfer_reason_write_off_ledger_account_rec_id
     *
     * @return string
     */
    public function getStockTransferReasonWriteOffLedgerAccountRecId()
    {
        return $this->container['stock_transfer_reason_write_off_ledger_account_rec_id'];
    }

    /**
     * Sets stock_transfer_reason_write_off_ledger_account_rec_id
     *
     * @param string $stock_transfer_reason_write_off_ledger_account_rec_id stock_transfer_reason_write_off_ledger_account_rec_id
     *
     * @return $this
     */
    public function setStockTransferReasonWriteOffLedgerAccountRecId($stock_transfer_reason_write_off_ledger_account_rec_id)
    {
        $this->container['stock_transfer_reason_write_off_ledger_account_rec_id'] = $stock_transfer_reason_write_off_ledger_account_rec_id;

        return $this;
    }

    /**
     * Gets stock_transfer_reason_write_off_ledger_account_no
     *
     * @return string
     */
    public function getStockTransferReasonWriteOffLedgerAccountNo()
    {
        return $this->container['stock_transfer_reason_write_off_ledger_account_no'];
    }

    /**
     * Sets stock_transfer_reason_write_off_ledger_account_no
     *
     * @param string $stock_transfer_reason_write_off_ledger_account_no stock_transfer_reason_write_off_ledger_account_no
     *
     * @return $this
     */
    public function setStockTransferReasonWriteOffLedgerAccountNo($stock_transfer_reason_write_off_ledger_account_no)
    {
        $this->container['stock_transfer_reason_write_off_ledger_account_no'] = $stock_transfer_reason_write_off_ledger_account_no;

        return $this;
    }

    /**
     * Gets stock_transfer_reason_write_off_ledger_account_description
     *
     * @return string
     */
    public function getStockTransferReasonWriteOffLedgerAccountDescription()
    {
        return $this->container['stock_transfer_reason_write_off_ledger_account_description'];
    }

    /**
     * Sets stock_transfer_reason_write_off_ledger_account_description
     *
     * @param string $stock_transfer_reason_write_off_ledger_account_description stock_transfer_reason_write_off_ledger_account_description
     *
     * @return $this
     */
    public function setStockTransferReasonWriteOffLedgerAccountDescription($stock_transfer_reason_write_off_ledger_account_description)
    {
        $this->container['stock_transfer_reason_write_off_ledger_account_description'] = $stock_transfer_reason_write_off_ledger_account_description;

        return $this;
    }

    /**
     * Gets stock_transfer_reason_write_on_ledger_account_override
     *
     * @return bool
     */
    public function getStockTransferReasonWriteOnLedgerAccountOverride()
    {
        return $this->container['stock_transfer_reason_write_on_ledger_account_override'];
    }

    /**
     * Sets stock_transfer_reason_write_on_ledger_account_override
     *
     * @param bool $stock_transfer_reason_write_on_ledger_account_override stock_transfer_reason_write_on_ledger_account_override
     *
     * @return $this
     */
    public function setStockTransferReasonWriteOnLedgerAccountOverride($stock_transfer_reason_write_on_ledger_account_override)
    {
        $this->container['stock_transfer_reason_write_on_ledger_account_override'] = $stock_transfer_reason_write_on_ledger_account_override;

        return $this;
    }

    /**
     * Gets stock_transfer_reason_write_on_ledger_account_rec_id
     *
     * @return string
     */
    public function getStockTransferReasonWriteOnLedgerAccountRecId()
    {
        return $this->container['stock_transfer_reason_write_on_ledger_account_rec_id'];
    }

    /**
     * Sets stock_transfer_reason_write_on_ledger_account_rec_id
     *
     * @param string $stock_transfer_reason_write_on_ledger_account_rec_id stock_transfer_reason_write_on_ledger_account_rec_id
     *
     * @return $this
     */
    public function setStockTransferReasonWriteOnLedgerAccountRecId($stock_transfer_reason_write_on_ledger_account_rec_id)
    {
        $this->container['stock_transfer_reason_write_on_ledger_account_rec_id'] = $stock_transfer_reason_write_on_ledger_account_rec_id;

        return $this;
    }

    /**
     * Gets stock_transfer_reason_write_on_ledger_account_no
     *
     * @return string
     */
    public function getStockTransferReasonWriteOnLedgerAccountNo()
    {
        return $this->container['stock_transfer_reason_write_on_ledger_account_no'];
    }

    /**
     * Sets stock_transfer_reason_write_on_ledger_account_no
     *
     * @param string $stock_transfer_reason_write_on_ledger_account_no stock_transfer_reason_write_on_ledger_account_no
     *
     * @return $this
     */
    public function setStockTransferReasonWriteOnLedgerAccountNo($stock_transfer_reason_write_on_ledger_account_no)
    {
        $this->container['stock_transfer_reason_write_on_ledger_account_no'] = $stock_transfer_reason_write_on_ledger_account_no;

        return $this;
    }

    /**
     * Gets stock_transfer_reason_write_on_ledger_account_description
     *
     * @return string
     */
    public function getStockTransferReasonWriteOnLedgerAccountDescription()
    {
        return $this->container['stock_transfer_reason_write_on_ledger_account_description'];
    }

    /**
     * Sets stock_transfer_reason_write_on_ledger_account_description
     *
     * @param string $stock_transfer_reason_write_on_ledger_account_description stock_transfer_reason_write_on_ledger_account_description
     *
     * @return $this
     */
    public function setStockTransferReasonWriteOnLedgerAccountDescription($stock_transfer_reason_write_on_ledger_account_description)
    {
        $this->container['stock_transfer_reason_write_on_ledger_account_description'] = $stock_transfer_reason_write_on_ledger_account_description;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


