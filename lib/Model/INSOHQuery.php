<?php
/**
 * INSOHQuery
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\JiwaModel;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * INSOHQuery Class Doc Comment
 *
 * @category Class
 * @description IN_SOHQuery
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class INSOHQuery implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'IN_SOHQuery';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'link_id' => 'string',
        'link_id_starts_with' => 'string',
        'link_id_ends_with' => 'string',
        'link_id_contains' => 'string',
        'link_id_like' => 'string',
        'link_id_between' => 'string[]',
        'link_id_in' => 'string[]',
        'last_saved_date_time' => '\DateTime',
        'last_saved_date_time_greater_than_or_equal_to' => '\DateTime',
        'last_saved_date_time_greater_than' => '\DateTime',
        'last_saved_date_time_less_than' => '\DateTime',
        'last_saved_date_time_less_than_or_equal_to' => '\DateTime',
        'last_saved_date_time_not_equal_to' => '\DateTime',
        'last_saved_date_time_between' => '\DateTime[]',
        'last_saved_date_time_in' => '\DateTime[]',
        'inventory_id' => 'string',
        'inventory_id_starts_with' => 'string',
        'inventory_id_ends_with' => 'string',
        'inventory_id_contains' => 'string',
        'inventory_id_like' => 'string',
        'inventory_id_between' => 'string[]',
        'inventory_id_in' => 'string[]',
        'date_in' => '\DateTime',
        'date_in_greater_than_or_equal_to' => '\DateTime',
        'date_in_greater_than' => '\DateTime',
        'date_in_less_than' => '\DateTime',
        'date_in_less_than_or_equal_to' => '\DateTime',
        'date_in_not_equal_to' => '\DateTime',
        'date_in_between' => '\DateTime[]',
        'date_in_in' => '\DateTime[]',
        'quantity_in' => 'double',
        'quantity_in_greater_than_or_equal_to' => 'double',
        'quantity_in_greater_than' => 'double',
        'quantity_in_less_than' => 'double',
        'quantity_in_less_than_or_equal_to' => 'double',
        'quantity_in_not_equal_to' => 'double',
        'quantity_in_between' => 'double[]',
        'quantity_in_in' => 'double[]',
        'l_cost_in' => 'double',
        'l_cost_in_greater_than_or_equal_to' => 'double',
        'l_cost_in_greater_than' => 'double',
        'l_cost_in_less_than' => 'double',
        'l_cost_in_less_than_or_equal_to' => 'double',
        'l_cost_in_not_equal_to' => 'double',
        'l_cost_in_between' => 'double[]',
        'l_cost_in_in' => 'double[]',
        's_cost_in' => 'double',
        's_cost_in_greater_than_or_equal_to' => 'double',
        's_cost_in_greater_than' => 'double',
        's_cost_in_less_than' => 'double',
        's_cost_in_less_than_or_equal_to' => 'double',
        's_cost_in_not_equal_to' => 'double',
        's_cost_in_between' => 'double[]',
        's_cost_in_in' => 'double[]',
        'special_price' => 'double',
        'special_price_greater_than_or_equal_to' => 'double',
        'special_price_greater_than' => 'double',
        'special_price_less_than' => 'double',
        'special_price_less_than_or_equal_to' => 'double',
        'special_price_not_equal_to' => 'double',
        'special_price_between' => 'double[]',
        'special_price_in' => 'double[]',
        'quantity_left' => 'double',
        'quantity_left_greater_than_or_equal_to' => 'double',
        'quantity_left_greater_than' => 'double',
        'quantity_left_less_than' => 'double',
        'quantity_left_less_than_or_equal_to' => 'double',
        'quantity_left_not_equal_to' => 'double',
        'quantity_left_between' => 'double[]',
        'quantity_left_in' => 'double[]',
        'serial_no' => 'string',
        'serial_no_starts_with' => 'string',
        'serial_no_ends_with' => 'string',
        'serial_no_contains' => 'string',
        'serial_no_like' => 'string',
        'serial_no_between' => 'string[]',
        'serial_no_in' => 'string[]',
        'tax_paid' => 'double',
        'tax_paid_greater_than_or_equal_to' => 'double',
        'tax_paid_greater_than' => 'double',
        'tax_paid_less_than' => 'double',
        'tax_paid_less_than_or_equal_to' => 'double',
        'tax_paid_not_equal_to' => 'double',
        'tax_paid_between' => 'double[]',
        'tax_paid_in' => 'double[]',
        'ref' => 'string',
        'ref_starts_with' => 'string',
        'ref_ends_with' => 'string',
        'ref_contains' => 'string',
        'ref_like' => 'string',
        'ref_between' => 'string[]',
        'ref_in' => 'string[]',
        'source_id' => 'string',
        'source_id_starts_with' => 'string',
        'source_id_ends_with' => 'string',
        'source_id_contains' => 'string',
        'source_id_like' => 'string',
        'source_id_between' => 'string[]',
        'source_id_in' => 'string[]',
        'history_text' => 'string',
        'history_text_starts_with' => 'string',
        'history_text_ends_with' => 'string',
        'history_text_contains' => 'string',
        'history_text_like' => 'string',
        'history_text_between' => 'string[]',
        'history_text_in' => 'string[]',
        'quantity_allocated' => 'double',
        'quantity_allocated_greater_than_or_equal_to' => 'double',
        'quantity_allocated_greater_than' => 'double',
        'quantity_allocated_less_than' => 'double',
        'quantity_allocated_less_than_or_equal_to' => 'double',
        'quantity_allocated_not_equal_to' => 'double',
        'quantity_allocated_between' => 'double[]',
        'quantity_allocated_in' => 'double[]',
        'in_logical_id' => 'string',
        'in_logical_id_starts_with' => 'string',
        'in_logical_id_ends_with' => 'string',
        'in_logical_id_contains' => 'string',
        'in_logical_id_like' => 'string',
        'in_logical_id_between' => 'string[]',
        'in_logical_id_in' => 'string[]',
        'bin_location_desc' => 'string',
        'bin_location_desc_starts_with' => 'string',
        'bin_location_desc_ends_with' => 'string',
        'bin_location_desc_contains' => 'string',
        'bin_location_desc_like' => 'string',
        'bin_location_desc_between' => 'string[]',
        'bin_location_desc_in' => 'string[]',
        'expiry_date' => '\DateTime',
        'expiry_date_greater_than_or_equal_to' => '\DateTime',
        'expiry_date_greater_than' => '\DateTime',
        'expiry_date_less_than' => '\DateTime',
        'expiry_date_less_than_or_equal_to' => '\DateTime',
        'expiry_date_not_equal_to' => '\DateTime',
        'expiry_date_between' => '\DateTime[]',
        'expiry_date_in' => '\DateTime[]',
        'sy_forms_class_name' => 'string',
        'sy_forms_class_name_starts_with' => 'string',
        'sy_forms_class_name_ends_with' => 'string',
        'sy_forms_class_name_contains' => 'string',
        'sy_forms_class_name_like' => 'string',
        'sy_forms_class_name_between' => 'string[]',
        'sy_forms_class_name_in' => 'string[]',
        'skip' => 'int',
        'take' => 'int',
        'order_by' => 'string',
        'order_by_desc' => 'string',
        'include' => 'string',
        'fields' => 'string',
        'meta' => '\Jiwa\JiwaModel\DictionaryStringString_'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'link_id' => null,
        'link_id_starts_with' => null,
        'link_id_ends_with' => null,
        'link_id_contains' => null,
        'link_id_like' => null,
        'link_id_between' => null,
        'link_id_in' => null,
        'last_saved_date_time' => 'date-time',
        'last_saved_date_time_greater_than_or_equal_to' => 'date-time',
        'last_saved_date_time_greater_than' => 'date-time',
        'last_saved_date_time_less_than' => 'date-time',
        'last_saved_date_time_less_than_or_equal_to' => 'date-time',
        'last_saved_date_time_not_equal_to' => 'date-time',
        'last_saved_date_time_between' => 'date-time',
        'last_saved_date_time_in' => 'date-time',
        'inventory_id' => null,
        'inventory_id_starts_with' => null,
        'inventory_id_ends_with' => null,
        'inventory_id_contains' => null,
        'inventory_id_like' => null,
        'inventory_id_between' => null,
        'inventory_id_in' => null,
        'date_in' => 'date-time',
        'date_in_greater_than_or_equal_to' => 'date-time',
        'date_in_greater_than' => 'date-time',
        'date_in_less_than' => 'date-time',
        'date_in_less_than_or_equal_to' => 'date-time',
        'date_in_not_equal_to' => 'date-time',
        'date_in_between' => 'date-time',
        'date_in_in' => 'date-time',
        'quantity_in' => 'double',
        'quantity_in_greater_than_or_equal_to' => 'double',
        'quantity_in_greater_than' => 'double',
        'quantity_in_less_than' => 'double',
        'quantity_in_less_than_or_equal_to' => 'double',
        'quantity_in_not_equal_to' => 'double',
        'quantity_in_between' => 'double',
        'quantity_in_in' => 'double',
        'l_cost_in' => 'double',
        'l_cost_in_greater_than_or_equal_to' => 'double',
        'l_cost_in_greater_than' => 'double',
        'l_cost_in_less_than' => 'double',
        'l_cost_in_less_than_or_equal_to' => 'double',
        'l_cost_in_not_equal_to' => 'double',
        'l_cost_in_between' => 'double',
        'l_cost_in_in' => 'double',
        's_cost_in' => 'double',
        's_cost_in_greater_than_or_equal_to' => 'double',
        's_cost_in_greater_than' => 'double',
        's_cost_in_less_than' => 'double',
        's_cost_in_less_than_or_equal_to' => 'double',
        's_cost_in_not_equal_to' => 'double',
        's_cost_in_between' => 'double',
        's_cost_in_in' => 'double',
        'special_price' => 'double',
        'special_price_greater_than_or_equal_to' => 'double',
        'special_price_greater_than' => 'double',
        'special_price_less_than' => 'double',
        'special_price_less_than_or_equal_to' => 'double',
        'special_price_not_equal_to' => 'double',
        'special_price_between' => 'double',
        'special_price_in' => 'double',
        'quantity_left' => 'double',
        'quantity_left_greater_than_or_equal_to' => 'double',
        'quantity_left_greater_than' => 'double',
        'quantity_left_less_than' => 'double',
        'quantity_left_less_than_or_equal_to' => 'double',
        'quantity_left_not_equal_to' => 'double',
        'quantity_left_between' => 'double',
        'quantity_left_in' => 'double',
        'serial_no' => null,
        'serial_no_starts_with' => null,
        'serial_no_ends_with' => null,
        'serial_no_contains' => null,
        'serial_no_like' => null,
        'serial_no_between' => null,
        'serial_no_in' => null,
        'tax_paid' => 'double',
        'tax_paid_greater_than_or_equal_to' => 'double',
        'tax_paid_greater_than' => 'double',
        'tax_paid_less_than' => 'double',
        'tax_paid_less_than_or_equal_to' => 'double',
        'tax_paid_not_equal_to' => 'double',
        'tax_paid_between' => 'double',
        'tax_paid_in' => 'double',
        'ref' => null,
        'ref_starts_with' => null,
        'ref_ends_with' => null,
        'ref_contains' => null,
        'ref_like' => null,
        'ref_between' => null,
        'ref_in' => null,
        'source_id' => null,
        'source_id_starts_with' => null,
        'source_id_ends_with' => null,
        'source_id_contains' => null,
        'source_id_like' => null,
        'source_id_between' => null,
        'source_id_in' => null,
        'history_text' => null,
        'history_text_starts_with' => null,
        'history_text_ends_with' => null,
        'history_text_contains' => null,
        'history_text_like' => null,
        'history_text_between' => null,
        'history_text_in' => null,
        'quantity_allocated' => 'double',
        'quantity_allocated_greater_than_or_equal_to' => 'double',
        'quantity_allocated_greater_than' => 'double',
        'quantity_allocated_less_than' => 'double',
        'quantity_allocated_less_than_or_equal_to' => 'double',
        'quantity_allocated_not_equal_to' => 'double',
        'quantity_allocated_between' => 'double',
        'quantity_allocated_in' => 'double',
        'in_logical_id' => null,
        'in_logical_id_starts_with' => null,
        'in_logical_id_ends_with' => null,
        'in_logical_id_contains' => null,
        'in_logical_id_like' => null,
        'in_logical_id_between' => null,
        'in_logical_id_in' => null,
        'bin_location_desc' => null,
        'bin_location_desc_starts_with' => null,
        'bin_location_desc_ends_with' => null,
        'bin_location_desc_contains' => null,
        'bin_location_desc_like' => null,
        'bin_location_desc_between' => null,
        'bin_location_desc_in' => null,
        'expiry_date' => 'date-time',
        'expiry_date_greater_than_or_equal_to' => 'date-time',
        'expiry_date_greater_than' => 'date-time',
        'expiry_date_less_than' => 'date-time',
        'expiry_date_less_than_or_equal_to' => 'date-time',
        'expiry_date_not_equal_to' => 'date-time',
        'expiry_date_between' => 'date-time',
        'expiry_date_in' => 'date-time',
        'sy_forms_class_name' => null,
        'sy_forms_class_name_starts_with' => null,
        'sy_forms_class_name_ends_with' => null,
        'sy_forms_class_name_contains' => null,
        'sy_forms_class_name_like' => null,
        'sy_forms_class_name_between' => null,
        'sy_forms_class_name_in' => null,
        'skip' => 'int32',
        'take' => 'int32',
        'order_by' => null,
        'order_by_desc' => null,
        'include' => null,
        'fields' => null,
        'meta' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'link_id' => 'LinkID',
        'link_id_starts_with' => 'LinkIDStartsWith',
        'link_id_ends_with' => 'LinkIDEndsWith',
        'link_id_contains' => 'LinkIDContains',
        'link_id_like' => 'LinkIDLike',
        'link_id_between' => 'LinkIDBetween',
        'link_id_in' => 'LinkIDIn',
        'last_saved_date_time' => 'LastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'LastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'LastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'LastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'LastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'LastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'LastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'LastSavedDateTimeIn',
        'inventory_id' => 'InventoryID',
        'inventory_id_starts_with' => 'InventoryIDStartsWith',
        'inventory_id_ends_with' => 'InventoryIDEndsWith',
        'inventory_id_contains' => 'InventoryIDContains',
        'inventory_id_like' => 'InventoryIDLike',
        'inventory_id_between' => 'InventoryIDBetween',
        'inventory_id_in' => 'InventoryIDIn',
        'date_in' => 'DateIn',
        'date_in_greater_than_or_equal_to' => 'DateInGreaterThanOrEqualTo',
        'date_in_greater_than' => 'DateInGreaterThan',
        'date_in_less_than' => 'DateInLessThan',
        'date_in_less_than_or_equal_to' => 'DateInLessThanOrEqualTo',
        'date_in_not_equal_to' => 'DateInNotEqualTo',
        'date_in_between' => 'DateInBetween',
        'date_in_in' => 'DateInIn',
        'quantity_in' => 'QuantityIn',
        'quantity_in_greater_than_or_equal_to' => 'QuantityInGreaterThanOrEqualTo',
        'quantity_in_greater_than' => 'QuantityInGreaterThan',
        'quantity_in_less_than' => 'QuantityInLessThan',
        'quantity_in_less_than_or_equal_to' => 'QuantityInLessThanOrEqualTo',
        'quantity_in_not_equal_to' => 'QuantityInNotEqualTo',
        'quantity_in_between' => 'QuantityInBetween',
        'quantity_in_in' => 'QuantityInIn',
        'l_cost_in' => 'LCostIn',
        'l_cost_in_greater_than_or_equal_to' => 'LCostInGreaterThanOrEqualTo',
        'l_cost_in_greater_than' => 'LCostInGreaterThan',
        'l_cost_in_less_than' => 'LCostInLessThan',
        'l_cost_in_less_than_or_equal_to' => 'LCostInLessThanOrEqualTo',
        'l_cost_in_not_equal_to' => 'LCostInNotEqualTo',
        'l_cost_in_between' => 'LCostInBetween',
        'l_cost_in_in' => 'LCostInIn',
        's_cost_in' => 'SCostIn',
        's_cost_in_greater_than_or_equal_to' => 'SCostInGreaterThanOrEqualTo',
        's_cost_in_greater_than' => 'SCostInGreaterThan',
        's_cost_in_less_than' => 'SCostInLessThan',
        's_cost_in_less_than_or_equal_to' => 'SCostInLessThanOrEqualTo',
        's_cost_in_not_equal_to' => 'SCostInNotEqualTo',
        's_cost_in_between' => 'SCostInBetween',
        's_cost_in_in' => 'SCostInIn',
        'special_price' => 'SpecialPrice',
        'special_price_greater_than_or_equal_to' => 'SpecialPriceGreaterThanOrEqualTo',
        'special_price_greater_than' => 'SpecialPriceGreaterThan',
        'special_price_less_than' => 'SpecialPriceLessThan',
        'special_price_less_than_or_equal_to' => 'SpecialPriceLessThanOrEqualTo',
        'special_price_not_equal_to' => 'SpecialPriceNotEqualTo',
        'special_price_between' => 'SpecialPriceBetween',
        'special_price_in' => 'SpecialPriceIn',
        'quantity_left' => 'QuantityLeft',
        'quantity_left_greater_than_or_equal_to' => 'QuantityLeftGreaterThanOrEqualTo',
        'quantity_left_greater_than' => 'QuantityLeftGreaterThan',
        'quantity_left_less_than' => 'QuantityLeftLessThan',
        'quantity_left_less_than_or_equal_to' => 'QuantityLeftLessThanOrEqualTo',
        'quantity_left_not_equal_to' => 'QuantityLeftNotEqualTo',
        'quantity_left_between' => 'QuantityLeftBetween',
        'quantity_left_in' => 'QuantityLeftIn',
        'serial_no' => 'SerialNo',
        'serial_no_starts_with' => 'SerialNoStartsWith',
        'serial_no_ends_with' => 'SerialNoEndsWith',
        'serial_no_contains' => 'SerialNoContains',
        'serial_no_like' => 'SerialNoLike',
        'serial_no_between' => 'SerialNoBetween',
        'serial_no_in' => 'SerialNoIn',
        'tax_paid' => 'TaxPaid',
        'tax_paid_greater_than_or_equal_to' => 'TaxPaidGreaterThanOrEqualTo',
        'tax_paid_greater_than' => 'TaxPaidGreaterThan',
        'tax_paid_less_than' => 'TaxPaidLessThan',
        'tax_paid_less_than_or_equal_to' => 'TaxPaidLessThanOrEqualTo',
        'tax_paid_not_equal_to' => 'TaxPaidNotEqualTo',
        'tax_paid_between' => 'TaxPaidBetween',
        'tax_paid_in' => 'TaxPaidIn',
        'ref' => 'Ref',
        'ref_starts_with' => 'RefStartsWith',
        'ref_ends_with' => 'RefEndsWith',
        'ref_contains' => 'RefContains',
        'ref_like' => 'RefLike',
        'ref_between' => 'RefBetween',
        'ref_in' => 'RefIn',
        'source_id' => 'SourceID',
        'source_id_starts_with' => 'SourceIDStartsWith',
        'source_id_ends_with' => 'SourceIDEndsWith',
        'source_id_contains' => 'SourceIDContains',
        'source_id_like' => 'SourceIDLike',
        'source_id_between' => 'SourceIDBetween',
        'source_id_in' => 'SourceIDIn',
        'history_text' => 'HistoryText',
        'history_text_starts_with' => 'HistoryTextStartsWith',
        'history_text_ends_with' => 'HistoryTextEndsWith',
        'history_text_contains' => 'HistoryTextContains',
        'history_text_like' => 'HistoryTextLike',
        'history_text_between' => 'HistoryTextBetween',
        'history_text_in' => 'HistoryTextIn',
        'quantity_allocated' => 'QuantityAllocated',
        'quantity_allocated_greater_than_or_equal_to' => 'QuantityAllocatedGreaterThanOrEqualTo',
        'quantity_allocated_greater_than' => 'QuantityAllocatedGreaterThan',
        'quantity_allocated_less_than' => 'QuantityAllocatedLessThan',
        'quantity_allocated_less_than_or_equal_to' => 'QuantityAllocatedLessThanOrEqualTo',
        'quantity_allocated_not_equal_to' => 'QuantityAllocatedNotEqualTo',
        'quantity_allocated_between' => 'QuantityAllocatedBetween',
        'quantity_allocated_in' => 'QuantityAllocatedIn',
        'in_logical_id' => 'IN_LogicalID',
        'in_logical_id_starts_with' => 'IN_LogicalIDStartsWith',
        'in_logical_id_ends_with' => 'IN_LogicalIDEndsWith',
        'in_logical_id_contains' => 'IN_LogicalIDContains',
        'in_logical_id_like' => 'IN_LogicalIDLike',
        'in_logical_id_between' => 'IN_LogicalIDBetween',
        'in_logical_id_in' => 'IN_LogicalIDIn',
        'bin_location_desc' => 'BinLocationDesc',
        'bin_location_desc_starts_with' => 'BinLocationDescStartsWith',
        'bin_location_desc_ends_with' => 'BinLocationDescEndsWith',
        'bin_location_desc_contains' => 'BinLocationDescContains',
        'bin_location_desc_like' => 'BinLocationDescLike',
        'bin_location_desc_between' => 'BinLocationDescBetween',
        'bin_location_desc_in' => 'BinLocationDescIn',
        'expiry_date' => 'ExpiryDate',
        'expiry_date_greater_than_or_equal_to' => 'ExpiryDateGreaterThanOrEqualTo',
        'expiry_date_greater_than' => 'ExpiryDateGreaterThan',
        'expiry_date_less_than' => 'ExpiryDateLessThan',
        'expiry_date_less_than_or_equal_to' => 'ExpiryDateLessThanOrEqualTo',
        'expiry_date_not_equal_to' => 'ExpiryDateNotEqualTo',
        'expiry_date_between' => 'ExpiryDateBetween',
        'expiry_date_in' => 'ExpiryDateIn',
        'sy_forms_class_name' => 'SY_Forms_ClassName',
        'sy_forms_class_name_starts_with' => 'SY_Forms_ClassNameStartsWith',
        'sy_forms_class_name_ends_with' => 'SY_Forms_ClassNameEndsWith',
        'sy_forms_class_name_contains' => 'SY_Forms_ClassNameContains',
        'sy_forms_class_name_like' => 'SY_Forms_ClassNameLike',
        'sy_forms_class_name_between' => 'SY_Forms_ClassNameBetween',
        'sy_forms_class_name_in' => 'SY_Forms_ClassNameIn',
        'skip' => 'Skip',
        'take' => 'Take',
        'order_by' => 'OrderBy',
        'order_by_desc' => 'OrderByDesc',
        'include' => 'Include',
        'fields' => 'Fields',
        'meta' => 'Meta'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'link_id' => 'setLinkId',
        'link_id_starts_with' => 'setLinkIdStartsWith',
        'link_id_ends_with' => 'setLinkIdEndsWith',
        'link_id_contains' => 'setLinkIdContains',
        'link_id_like' => 'setLinkIdLike',
        'link_id_between' => 'setLinkIdBetween',
        'link_id_in' => 'setLinkIdIn',
        'last_saved_date_time' => 'setLastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'setLastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'setLastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'setLastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'setLastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'setLastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'setLastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'setLastSavedDateTimeIn',
        'inventory_id' => 'setInventoryId',
        'inventory_id_starts_with' => 'setInventoryIdStartsWith',
        'inventory_id_ends_with' => 'setInventoryIdEndsWith',
        'inventory_id_contains' => 'setInventoryIdContains',
        'inventory_id_like' => 'setInventoryIdLike',
        'inventory_id_between' => 'setInventoryIdBetween',
        'inventory_id_in' => 'setInventoryIdIn',
        'date_in' => 'setDateIn',
        'date_in_greater_than_or_equal_to' => 'setDateInGreaterThanOrEqualTo',
        'date_in_greater_than' => 'setDateInGreaterThan',
        'date_in_less_than' => 'setDateInLessThan',
        'date_in_less_than_or_equal_to' => 'setDateInLessThanOrEqualTo',
        'date_in_not_equal_to' => 'setDateInNotEqualTo',
        'date_in_between' => 'setDateInBetween',
        'date_in_in' => 'setDateInIn',
        'quantity_in' => 'setQuantityIn',
        'quantity_in_greater_than_or_equal_to' => 'setQuantityInGreaterThanOrEqualTo',
        'quantity_in_greater_than' => 'setQuantityInGreaterThan',
        'quantity_in_less_than' => 'setQuantityInLessThan',
        'quantity_in_less_than_or_equal_to' => 'setQuantityInLessThanOrEqualTo',
        'quantity_in_not_equal_to' => 'setQuantityInNotEqualTo',
        'quantity_in_between' => 'setQuantityInBetween',
        'quantity_in_in' => 'setQuantityInIn',
        'l_cost_in' => 'setLCostIn',
        'l_cost_in_greater_than_or_equal_to' => 'setLCostInGreaterThanOrEqualTo',
        'l_cost_in_greater_than' => 'setLCostInGreaterThan',
        'l_cost_in_less_than' => 'setLCostInLessThan',
        'l_cost_in_less_than_or_equal_to' => 'setLCostInLessThanOrEqualTo',
        'l_cost_in_not_equal_to' => 'setLCostInNotEqualTo',
        'l_cost_in_between' => 'setLCostInBetween',
        'l_cost_in_in' => 'setLCostInIn',
        's_cost_in' => 'setSCostIn',
        's_cost_in_greater_than_or_equal_to' => 'setSCostInGreaterThanOrEqualTo',
        's_cost_in_greater_than' => 'setSCostInGreaterThan',
        's_cost_in_less_than' => 'setSCostInLessThan',
        's_cost_in_less_than_or_equal_to' => 'setSCostInLessThanOrEqualTo',
        's_cost_in_not_equal_to' => 'setSCostInNotEqualTo',
        's_cost_in_between' => 'setSCostInBetween',
        's_cost_in_in' => 'setSCostInIn',
        'special_price' => 'setSpecialPrice',
        'special_price_greater_than_or_equal_to' => 'setSpecialPriceGreaterThanOrEqualTo',
        'special_price_greater_than' => 'setSpecialPriceGreaterThan',
        'special_price_less_than' => 'setSpecialPriceLessThan',
        'special_price_less_than_or_equal_to' => 'setSpecialPriceLessThanOrEqualTo',
        'special_price_not_equal_to' => 'setSpecialPriceNotEqualTo',
        'special_price_between' => 'setSpecialPriceBetween',
        'special_price_in' => 'setSpecialPriceIn',
        'quantity_left' => 'setQuantityLeft',
        'quantity_left_greater_than_or_equal_to' => 'setQuantityLeftGreaterThanOrEqualTo',
        'quantity_left_greater_than' => 'setQuantityLeftGreaterThan',
        'quantity_left_less_than' => 'setQuantityLeftLessThan',
        'quantity_left_less_than_or_equal_to' => 'setQuantityLeftLessThanOrEqualTo',
        'quantity_left_not_equal_to' => 'setQuantityLeftNotEqualTo',
        'quantity_left_between' => 'setQuantityLeftBetween',
        'quantity_left_in' => 'setQuantityLeftIn',
        'serial_no' => 'setSerialNo',
        'serial_no_starts_with' => 'setSerialNoStartsWith',
        'serial_no_ends_with' => 'setSerialNoEndsWith',
        'serial_no_contains' => 'setSerialNoContains',
        'serial_no_like' => 'setSerialNoLike',
        'serial_no_between' => 'setSerialNoBetween',
        'serial_no_in' => 'setSerialNoIn',
        'tax_paid' => 'setTaxPaid',
        'tax_paid_greater_than_or_equal_to' => 'setTaxPaidGreaterThanOrEqualTo',
        'tax_paid_greater_than' => 'setTaxPaidGreaterThan',
        'tax_paid_less_than' => 'setTaxPaidLessThan',
        'tax_paid_less_than_or_equal_to' => 'setTaxPaidLessThanOrEqualTo',
        'tax_paid_not_equal_to' => 'setTaxPaidNotEqualTo',
        'tax_paid_between' => 'setTaxPaidBetween',
        'tax_paid_in' => 'setTaxPaidIn',
        'ref' => 'setRef',
        'ref_starts_with' => 'setRefStartsWith',
        'ref_ends_with' => 'setRefEndsWith',
        'ref_contains' => 'setRefContains',
        'ref_like' => 'setRefLike',
        'ref_between' => 'setRefBetween',
        'ref_in' => 'setRefIn',
        'source_id' => 'setSourceId',
        'source_id_starts_with' => 'setSourceIdStartsWith',
        'source_id_ends_with' => 'setSourceIdEndsWith',
        'source_id_contains' => 'setSourceIdContains',
        'source_id_like' => 'setSourceIdLike',
        'source_id_between' => 'setSourceIdBetween',
        'source_id_in' => 'setSourceIdIn',
        'history_text' => 'setHistoryText',
        'history_text_starts_with' => 'setHistoryTextStartsWith',
        'history_text_ends_with' => 'setHistoryTextEndsWith',
        'history_text_contains' => 'setHistoryTextContains',
        'history_text_like' => 'setHistoryTextLike',
        'history_text_between' => 'setHistoryTextBetween',
        'history_text_in' => 'setHistoryTextIn',
        'quantity_allocated' => 'setQuantityAllocated',
        'quantity_allocated_greater_than_or_equal_to' => 'setQuantityAllocatedGreaterThanOrEqualTo',
        'quantity_allocated_greater_than' => 'setQuantityAllocatedGreaterThan',
        'quantity_allocated_less_than' => 'setQuantityAllocatedLessThan',
        'quantity_allocated_less_than_or_equal_to' => 'setQuantityAllocatedLessThanOrEqualTo',
        'quantity_allocated_not_equal_to' => 'setQuantityAllocatedNotEqualTo',
        'quantity_allocated_between' => 'setQuantityAllocatedBetween',
        'quantity_allocated_in' => 'setQuantityAllocatedIn',
        'in_logical_id' => 'setInLogicalId',
        'in_logical_id_starts_with' => 'setInLogicalIdStartsWith',
        'in_logical_id_ends_with' => 'setInLogicalIdEndsWith',
        'in_logical_id_contains' => 'setInLogicalIdContains',
        'in_logical_id_like' => 'setInLogicalIdLike',
        'in_logical_id_between' => 'setInLogicalIdBetween',
        'in_logical_id_in' => 'setInLogicalIdIn',
        'bin_location_desc' => 'setBinLocationDesc',
        'bin_location_desc_starts_with' => 'setBinLocationDescStartsWith',
        'bin_location_desc_ends_with' => 'setBinLocationDescEndsWith',
        'bin_location_desc_contains' => 'setBinLocationDescContains',
        'bin_location_desc_like' => 'setBinLocationDescLike',
        'bin_location_desc_between' => 'setBinLocationDescBetween',
        'bin_location_desc_in' => 'setBinLocationDescIn',
        'expiry_date' => 'setExpiryDate',
        'expiry_date_greater_than_or_equal_to' => 'setExpiryDateGreaterThanOrEqualTo',
        'expiry_date_greater_than' => 'setExpiryDateGreaterThan',
        'expiry_date_less_than' => 'setExpiryDateLessThan',
        'expiry_date_less_than_or_equal_to' => 'setExpiryDateLessThanOrEqualTo',
        'expiry_date_not_equal_to' => 'setExpiryDateNotEqualTo',
        'expiry_date_between' => 'setExpiryDateBetween',
        'expiry_date_in' => 'setExpiryDateIn',
        'sy_forms_class_name' => 'setSyFormsClassName',
        'sy_forms_class_name_starts_with' => 'setSyFormsClassNameStartsWith',
        'sy_forms_class_name_ends_with' => 'setSyFormsClassNameEndsWith',
        'sy_forms_class_name_contains' => 'setSyFormsClassNameContains',
        'sy_forms_class_name_like' => 'setSyFormsClassNameLike',
        'sy_forms_class_name_between' => 'setSyFormsClassNameBetween',
        'sy_forms_class_name_in' => 'setSyFormsClassNameIn',
        'skip' => 'setSkip',
        'take' => 'setTake',
        'order_by' => 'setOrderBy',
        'order_by_desc' => 'setOrderByDesc',
        'include' => 'setInclude',
        'fields' => 'setFields',
        'meta' => 'setMeta'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'link_id' => 'getLinkId',
        'link_id_starts_with' => 'getLinkIdStartsWith',
        'link_id_ends_with' => 'getLinkIdEndsWith',
        'link_id_contains' => 'getLinkIdContains',
        'link_id_like' => 'getLinkIdLike',
        'link_id_between' => 'getLinkIdBetween',
        'link_id_in' => 'getLinkIdIn',
        'last_saved_date_time' => 'getLastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'getLastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'getLastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'getLastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'getLastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'getLastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'getLastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'getLastSavedDateTimeIn',
        'inventory_id' => 'getInventoryId',
        'inventory_id_starts_with' => 'getInventoryIdStartsWith',
        'inventory_id_ends_with' => 'getInventoryIdEndsWith',
        'inventory_id_contains' => 'getInventoryIdContains',
        'inventory_id_like' => 'getInventoryIdLike',
        'inventory_id_between' => 'getInventoryIdBetween',
        'inventory_id_in' => 'getInventoryIdIn',
        'date_in' => 'getDateIn',
        'date_in_greater_than_or_equal_to' => 'getDateInGreaterThanOrEqualTo',
        'date_in_greater_than' => 'getDateInGreaterThan',
        'date_in_less_than' => 'getDateInLessThan',
        'date_in_less_than_or_equal_to' => 'getDateInLessThanOrEqualTo',
        'date_in_not_equal_to' => 'getDateInNotEqualTo',
        'date_in_between' => 'getDateInBetween',
        'date_in_in' => 'getDateInIn',
        'quantity_in' => 'getQuantityIn',
        'quantity_in_greater_than_or_equal_to' => 'getQuantityInGreaterThanOrEqualTo',
        'quantity_in_greater_than' => 'getQuantityInGreaterThan',
        'quantity_in_less_than' => 'getQuantityInLessThan',
        'quantity_in_less_than_or_equal_to' => 'getQuantityInLessThanOrEqualTo',
        'quantity_in_not_equal_to' => 'getQuantityInNotEqualTo',
        'quantity_in_between' => 'getQuantityInBetween',
        'quantity_in_in' => 'getQuantityInIn',
        'l_cost_in' => 'getLCostIn',
        'l_cost_in_greater_than_or_equal_to' => 'getLCostInGreaterThanOrEqualTo',
        'l_cost_in_greater_than' => 'getLCostInGreaterThan',
        'l_cost_in_less_than' => 'getLCostInLessThan',
        'l_cost_in_less_than_or_equal_to' => 'getLCostInLessThanOrEqualTo',
        'l_cost_in_not_equal_to' => 'getLCostInNotEqualTo',
        'l_cost_in_between' => 'getLCostInBetween',
        'l_cost_in_in' => 'getLCostInIn',
        's_cost_in' => 'getSCostIn',
        's_cost_in_greater_than_or_equal_to' => 'getSCostInGreaterThanOrEqualTo',
        's_cost_in_greater_than' => 'getSCostInGreaterThan',
        's_cost_in_less_than' => 'getSCostInLessThan',
        's_cost_in_less_than_or_equal_to' => 'getSCostInLessThanOrEqualTo',
        's_cost_in_not_equal_to' => 'getSCostInNotEqualTo',
        's_cost_in_between' => 'getSCostInBetween',
        's_cost_in_in' => 'getSCostInIn',
        'special_price' => 'getSpecialPrice',
        'special_price_greater_than_or_equal_to' => 'getSpecialPriceGreaterThanOrEqualTo',
        'special_price_greater_than' => 'getSpecialPriceGreaterThan',
        'special_price_less_than' => 'getSpecialPriceLessThan',
        'special_price_less_than_or_equal_to' => 'getSpecialPriceLessThanOrEqualTo',
        'special_price_not_equal_to' => 'getSpecialPriceNotEqualTo',
        'special_price_between' => 'getSpecialPriceBetween',
        'special_price_in' => 'getSpecialPriceIn',
        'quantity_left' => 'getQuantityLeft',
        'quantity_left_greater_than_or_equal_to' => 'getQuantityLeftGreaterThanOrEqualTo',
        'quantity_left_greater_than' => 'getQuantityLeftGreaterThan',
        'quantity_left_less_than' => 'getQuantityLeftLessThan',
        'quantity_left_less_than_or_equal_to' => 'getQuantityLeftLessThanOrEqualTo',
        'quantity_left_not_equal_to' => 'getQuantityLeftNotEqualTo',
        'quantity_left_between' => 'getQuantityLeftBetween',
        'quantity_left_in' => 'getQuantityLeftIn',
        'serial_no' => 'getSerialNo',
        'serial_no_starts_with' => 'getSerialNoStartsWith',
        'serial_no_ends_with' => 'getSerialNoEndsWith',
        'serial_no_contains' => 'getSerialNoContains',
        'serial_no_like' => 'getSerialNoLike',
        'serial_no_between' => 'getSerialNoBetween',
        'serial_no_in' => 'getSerialNoIn',
        'tax_paid' => 'getTaxPaid',
        'tax_paid_greater_than_or_equal_to' => 'getTaxPaidGreaterThanOrEqualTo',
        'tax_paid_greater_than' => 'getTaxPaidGreaterThan',
        'tax_paid_less_than' => 'getTaxPaidLessThan',
        'tax_paid_less_than_or_equal_to' => 'getTaxPaidLessThanOrEqualTo',
        'tax_paid_not_equal_to' => 'getTaxPaidNotEqualTo',
        'tax_paid_between' => 'getTaxPaidBetween',
        'tax_paid_in' => 'getTaxPaidIn',
        'ref' => 'getRef',
        'ref_starts_with' => 'getRefStartsWith',
        'ref_ends_with' => 'getRefEndsWith',
        'ref_contains' => 'getRefContains',
        'ref_like' => 'getRefLike',
        'ref_between' => 'getRefBetween',
        'ref_in' => 'getRefIn',
        'source_id' => 'getSourceId',
        'source_id_starts_with' => 'getSourceIdStartsWith',
        'source_id_ends_with' => 'getSourceIdEndsWith',
        'source_id_contains' => 'getSourceIdContains',
        'source_id_like' => 'getSourceIdLike',
        'source_id_between' => 'getSourceIdBetween',
        'source_id_in' => 'getSourceIdIn',
        'history_text' => 'getHistoryText',
        'history_text_starts_with' => 'getHistoryTextStartsWith',
        'history_text_ends_with' => 'getHistoryTextEndsWith',
        'history_text_contains' => 'getHistoryTextContains',
        'history_text_like' => 'getHistoryTextLike',
        'history_text_between' => 'getHistoryTextBetween',
        'history_text_in' => 'getHistoryTextIn',
        'quantity_allocated' => 'getQuantityAllocated',
        'quantity_allocated_greater_than_or_equal_to' => 'getQuantityAllocatedGreaterThanOrEqualTo',
        'quantity_allocated_greater_than' => 'getQuantityAllocatedGreaterThan',
        'quantity_allocated_less_than' => 'getQuantityAllocatedLessThan',
        'quantity_allocated_less_than_or_equal_to' => 'getQuantityAllocatedLessThanOrEqualTo',
        'quantity_allocated_not_equal_to' => 'getQuantityAllocatedNotEqualTo',
        'quantity_allocated_between' => 'getQuantityAllocatedBetween',
        'quantity_allocated_in' => 'getQuantityAllocatedIn',
        'in_logical_id' => 'getInLogicalId',
        'in_logical_id_starts_with' => 'getInLogicalIdStartsWith',
        'in_logical_id_ends_with' => 'getInLogicalIdEndsWith',
        'in_logical_id_contains' => 'getInLogicalIdContains',
        'in_logical_id_like' => 'getInLogicalIdLike',
        'in_logical_id_between' => 'getInLogicalIdBetween',
        'in_logical_id_in' => 'getInLogicalIdIn',
        'bin_location_desc' => 'getBinLocationDesc',
        'bin_location_desc_starts_with' => 'getBinLocationDescStartsWith',
        'bin_location_desc_ends_with' => 'getBinLocationDescEndsWith',
        'bin_location_desc_contains' => 'getBinLocationDescContains',
        'bin_location_desc_like' => 'getBinLocationDescLike',
        'bin_location_desc_between' => 'getBinLocationDescBetween',
        'bin_location_desc_in' => 'getBinLocationDescIn',
        'expiry_date' => 'getExpiryDate',
        'expiry_date_greater_than_or_equal_to' => 'getExpiryDateGreaterThanOrEqualTo',
        'expiry_date_greater_than' => 'getExpiryDateGreaterThan',
        'expiry_date_less_than' => 'getExpiryDateLessThan',
        'expiry_date_less_than_or_equal_to' => 'getExpiryDateLessThanOrEqualTo',
        'expiry_date_not_equal_to' => 'getExpiryDateNotEqualTo',
        'expiry_date_between' => 'getExpiryDateBetween',
        'expiry_date_in' => 'getExpiryDateIn',
        'sy_forms_class_name' => 'getSyFormsClassName',
        'sy_forms_class_name_starts_with' => 'getSyFormsClassNameStartsWith',
        'sy_forms_class_name_ends_with' => 'getSyFormsClassNameEndsWith',
        'sy_forms_class_name_contains' => 'getSyFormsClassNameContains',
        'sy_forms_class_name_like' => 'getSyFormsClassNameLike',
        'sy_forms_class_name_between' => 'getSyFormsClassNameBetween',
        'sy_forms_class_name_in' => 'getSyFormsClassNameIn',
        'skip' => 'getSkip',
        'take' => 'getTake',
        'order_by' => 'getOrderBy',
        'order_by_desc' => 'getOrderByDesc',
        'include' => 'getInclude',
        'fields' => 'getFields',
        'meta' => 'getMeta'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['link_id'] = isset($data['link_id']) ? $data['link_id'] : null;
        $this->container['link_id_starts_with'] = isset($data['link_id_starts_with']) ? $data['link_id_starts_with'] : null;
        $this->container['link_id_ends_with'] = isset($data['link_id_ends_with']) ? $data['link_id_ends_with'] : null;
        $this->container['link_id_contains'] = isset($data['link_id_contains']) ? $data['link_id_contains'] : null;
        $this->container['link_id_like'] = isset($data['link_id_like']) ? $data['link_id_like'] : null;
        $this->container['link_id_between'] = isset($data['link_id_between']) ? $data['link_id_between'] : null;
        $this->container['link_id_in'] = isset($data['link_id_in']) ? $data['link_id_in'] : null;
        $this->container['last_saved_date_time'] = isset($data['last_saved_date_time']) ? $data['last_saved_date_time'] : null;
        $this->container['last_saved_date_time_greater_than_or_equal_to'] = isset($data['last_saved_date_time_greater_than_or_equal_to']) ? $data['last_saved_date_time_greater_than_or_equal_to'] : null;
        $this->container['last_saved_date_time_greater_than'] = isset($data['last_saved_date_time_greater_than']) ? $data['last_saved_date_time_greater_than'] : null;
        $this->container['last_saved_date_time_less_than'] = isset($data['last_saved_date_time_less_than']) ? $data['last_saved_date_time_less_than'] : null;
        $this->container['last_saved_date_time_less_than_or_equal_to'] = isset($data['last_saved_date_time_less_than_or_equal_to']) ? $data['last_saved_date_time_less_than_or_equal_to'] : null;
        $this->container['last_saved_date_time_not_equal_to'] = isset($data['last_saved_date_time_not_equal_to']) ? $data['last_saved_date_time_not_equal_to'] : null;
        $this->container['last_saved_date_time_between'] = isset($data['last_saved_date_time_between']) ? $data['last_saved_date_time_between'] : null;
        $this->container['last_saved_date_time_in'] = isset($data['last_saved_date_time_in']) ? $data['last_saved_date_time_in'] : null;
        $this->container['inventory_id'] = isset($data['inventory_id']) ? $data['inventory_id'] : null;
        $this->container['inventory_id_starts_with'] = isset($data['inventory_id_starts_with']) ? $data['inventory_id_starts_with'] : null;
        $this->container['inventory_id_ends_with'] = isset($data['inventory_id_ends_with']) ? $data['inventory_id_ends_with'] : null;
        $this->container['inventory_id_contains'] = isset($data['inventory_id_contains']) ? $data['inventory_id_contains'] : null;
        $this->container['inventory_id_like'] = isset($data['inventory_id_like']) ? $data['inventory_id_like'] : null;
        $this->container['inventory_id_between'] = isset($data['inventory_id_between']) ? $data['inventory_id_between'] : null;
        $this->container['inventory_id_in'] = isset($data['inventory_id_in']) ? $data['inventory_id_in'] : null;
        $this->container['date_in'] = isset($data['date_in']) ? $data['date_in'] : null;
        $this->container['date_in_greater_than_or_equal_to'] = isset($data['date_in_greater_than_or_equal_to']) ? $data['date_in_greater_than_or_equal_to'] : null;
        $this->container['date_in_greater_than'] = isset($data['date_in_greater_than']) ? $data['date_in_greater_than'] : null;
        $this->container['date_in_less_than'] = isset($data['date_in_less_than']) ? $data['date_in_less_than'] : null;
        $this->container['date_in_less_than_or_equal_to'] = isset($data['date_in_less_than_or_equal_to']) ? $data['date_in_less_than_or_equal_to'] : null;
        $this->container['date_in_not_equal_to'] = isset($data['date_in_not_equal_to']) ? $data['date_in_not_equal_to'] : null;
        $this->container['date_in_between'] = isset($data['date_in_between']) ? $data['date_in_between'] : null;
        $this->container['date_in_in'] = isset($data['date_in_in']) ? $data['date_in_in'] : null;
        $this->container['quantity_in'] = isset($data['quantity_in']) ? $data['quantity_in'] : null;
        $this->container['quantity_in_greater_than_or_equal_to'] = isset($data['quantity_in_greater_than_or_equal_to']) ? $data['quantity_in_greater_than_or_equal_to'] : null;
        $this->container['quantity_in_greater_than'] = isset($data['quantity_in_greater_than']) ? $data['quantity_in_greater_than'] : null;
        $this->container['quantity_in_less_than'] = isset($data['quantity_in_less_than']) ? $data['quantity_in_less_than'] : null;
        $this->container['quantity_in_less_than_or_equal_to'] = isset($data['quantity_in_less_than_or_equal_to']) ? $data['quantity_in_less_than_or_equal_to'] : null;
        $this->container['quantity_in_not_equal_to'] = isset($data['quantity_in_not_equal_to']) ? $data['quantity_in_not_equal_to'] : null;
        $this->container['quantity_in_between'] = isset($data['quantity_in_between']) ? $data['quantity_in_between'] : null;
        $this->container['quantity_in_in'] = isset($data['quantity_in_in']) ? $data['quantity_in_in'] : null;
        $this->container['l_cost_in'] = isset($data['l_cost_in']) ? $data['l_cost_in'] : null;
        $this->container['l_cost_in_greater_than_or_equal_to'] = isset($data['l_cost_in_greater_than_or_equal_to']) ? $data['l_cost_in_greater_than_or_equal_to'] : null;
        $this->container['l_cost_in_greater_than'] = isset($data['l_cost_in_greater_than']) ? $data['l_cost_in_greater_than'] : null;
        $this->container['l_cost_in_less_than'] = isset($data['l_cost_in_less_than']) ? $data['l_cost_in_less_than'] : null;
        $this->container['l_cost_in_less_than_or_equal_to'] = isset($data['l_cost_in_less_than_or_equal_to']) ? $data['l_cost_in_less_than_or_equal_to'] : null;
        $this->container['l_cost_in_not_equal_to'] = isset($data['l_cost_in_not_equal_to']) ? $data['l_cost_in_not_equal_to'] : null;
        $this->container['l_cost_in_between'] = isset($data['l_cost_in_between']) ? $data['l_cost_in_between'] : null;
        $this->container['l_cost_in_in'] = isset($data['l_cost_in_in']) ? $data['l_cost_in_in'] : null;
        $this->container['s_cost_in'] = isset($data['s_cost_in']) ? $data['s_cost_in'] : null;
        $this->container['s_cost_in_greater_than_or_equal_to'] = isset($data['s_cost_in_greater_than_or_equal_to']) ? $data['s_cost_in_greater_than_or_equal_to'] : null;
        $this->container['s_cost_in_greater_than'] = isset($data['s_cost_in_greater_than']) ? $data['s_cost_in_greater_than'] : null;
        $this->container['s_cost_in_less_than'] = isset($data['s_cost_in_less_than']) ? $data['s_cost_in_less_than'] : null;
        $this->container['s_cost_in_less_than_or_equal_to'] = isset($data['s_cost_in_less_than_or_equal_to']) ? $data['s_cost_in_less_than_or_equal_to'] : null;
        $this->container['s_cost_in_not_equal_to'] = isset($data['s_cost_in_not_equal_to']) ? $data['s_cost_in_not_equal_to'] : null;
        $this->container['s_cost_in_between'] = isset($data['s_cost_in_between']) ? $data['s_cost_in_between'] : null;
        $this->container['s_cost_in_in'] = isset($data['s_cost_in_in']) ? $data['s_cost_in_in'] : null;
        $this->container['special_price'] = isset($data['special_price']) ? $data['special_price'] : null;
        $this->container['special_price_greater_than_or_equal_to'] = isset($data['special_price_greater_than_or_equal_to']) ? $data['special_price_greater_than_or_equal_to'] : null;
        $this->container['special_price_greater_than'] = isset($data['special_price_greater_than']) ? $data['special_price_greater_than'] : null;
        $this->container['special_price_less_than'] = isset($data['special_price_less_than']) ? $data['special_price_less_than'] : null;
        $this->container['special_price_less_than_or_equal_to'] = isset($data['special_price_less_than_or_equal_to']) ? $data['special_price_less_than_or_equal_to'] : null;
        $this->container['special_price_not_equal_to'] = isset($data['special_price_not_equal_to']) ? $data['special_price_not_equal_to'] : null;
        $this->container['special_price_between'] = isset($data['special_price_between']) ? $data['special_price_between'] : null;
        $this->container['special_price_in'] = isset($data['special_price_in']) ? $data['special_price_in'] : null;
        $this->container['quantity_left'] = isset($data['quantity_left']) ? $data['quantity_left'] : null;
        $this->container['quantity_left_greater_than_or_equal_to'] = isset($data['quantity_left_greater_than_or_equal_to']) ? $data['quantity_left_greater_than_or_equal_to'] : null;
        $this->container['quantity_left_greater_than'] = isset($data['quantity_left_greater_than']) ? $data['quantity_left_greater_than'] : null;
        $this->container['quantity_left_less_than'] = isset($data['quantity_left_less_than']) ? $data['quantity_left_less_than'] : null;
        $this->container['quantity_left_less_than_or_equal_to'] = isset($data['quantity_left_less_than_or_equal_to']) ? $data['quantity_left_less_than_or_equal_to'] : null;
        $this->container['quantity_left_not_equal_to'] = isset($data['quantity_left_not_equal_to']) ? $data['quantity_left_not_equal_to'] : null;
        $this->container['quantity_left_between'] = isset($data['quantity_left_between']) ? $data['quantity_left_between'] : null;
        $this->container['quantity_left_in'] = isset($data['quantity_left_in']) ? $data['quantity_left_in'] : null;
        $this->container['serial_no'] = isset($data['serial_no']) ? $data['serial_no'] : null;
        $this->container['serial_no_starts_with'] = isset($data['serial_no_starts_with']) ? $data['serial_no_starts_with'] : null;
        $this->container['serial_no_ends_with'] = isset($data['serial_no_ends_with']) ? $data['serial_no_ends_with'] : null;
        $this->container['serial_no_contains'] = isset($data['serial_no_contains']) ? $data['serial_no_contains'] : null;
        $this->container['serial_no_like'] = isset($data['serial_no_like']) ? $data['serial_no_like'] : null;
        $this->container['serial_no_between'] = isset($data['serial_no_between']) ? $data['serial_no_between'] : null;
        $this->container['serial_no_in'] = isset($data['serial_no_in']) ? $data['serial_no_in'] : null;
        $this->container['tax_paid'] = isset($data['tax_paid']) ? $data['tax_paid'] : null;
        $this->container['tax_paid_greater_than_or_equal_to'] = isset($data['tax_paid_greater_than_or_equal_to']) ? $data['tax_paid_greater_than_or_equal_to'] : null;
        $this->container['tax_paid_greater_than'] = isset($data['tax_paid_greater_than']) ? $data['tax_paid_greater_than'] : null;
        $this->container['tax_paid_less_than'] = isset($data['tax_paid_less_than']) ? $data['tax_paid_less_than'] : null;
        $this->container['tax_paid_less_than_or_equal_to'] = isset($data['tax_paid_less_than_or_equal_to']) ? $data['tax_paid_less_than_or_equal_to'] : null;
        $this->container['tax_paid_not_equal_to'] = isset($data['tax_paid_not_equal_to']) ? $data['tax_paid_not_equal_to'] : null;
        $this->container['tax_paid_between'] = isset($data['tax_paid_between']) ? $data['tax_paid_between'] : null;
        $this->container['tax_paid_in'] = isset($data['tax_paid_in']) ? $data['tax_paid_in'] : null;
        $this->container['ref'] = isset($data['ref']) ? $data['ref'] : null;
        $this->container['ref_starts_with'] = isset($data['ref_starts_with']) ? $data['ref_starts_with'] : null;
        $this->container['ref_ends_with'] = isset($data['ref_ends_with']) ? $data['ref_ends_with'] : null;
        $this->container['ref_contains'] = isset($data['ref_contains']) ? $data['ref_contains'] : null;
        $this->container['ref_like'] = isset($data['ref_like']) ? $data['ref_like'] : null;
        $this->container['ref_between'] = isset($data['ref_between']) ? $data['ref_between'] : null;
        $this->container['ref_in'] = isset($data['ref_in']) ? $data['ref_in'] : null;
        $this->container['source_id'] = isset($data['source_id']) ? $data['source_id'] : null;
        $this->container['source_id_starts_with'] = isset($data['source_id_starts_with']) ? $data['source_id_starts_with'] : null;
        $this->container['source_id_ends_with'] = isset($data['source_id_ends_with']) ? $data['source_id_ends_with'] : null;
        $this->container['source_id_contains'] = isset($data['source_id_contains']) ? $data['source_id_contains'] : null;
        $this->container['source_id_like'] = isset($data['source_id_like']) ? $data['source_id_like'] : null;
        $this->container['source_id_between'] = isset($data['source_id_between']) ? $data['source_id_between'] : null;
        $this->container['source_id_in'] = isset($data['source_id_in']) ? $data['source_id_in'] : null;
        $this->container['history_text'] = isset($data['history_text']) ? $data['history_text'] : null;
        $this->container['history_text_starts_with'] = isset($data['history_text_starts_with']) ? $data['history_text_starts_with'] : null;
        $this->container['history_text_ends_with'] = isset($data['history_text_ends_with']) ? $data['history_text_ends_with'] : null;
        $this->container['history_text_contains'] = isset($data['history_text_contains']) ? $data['history_text_contains'] : null;
        $this->container['history_text_like'] = isset($data['history_text_like']) ? $data['history_text_like'] : null;
        $this->container['history_text_between'] = isset($data['history_text_between']) ? $data['history_text_between'] : null;
        $this->container['history_text_in'] = isset($data['history_text_in']) ? $data['history_text_in'] : null;
        $this->container['quantity_allocated'] = isset($data['quantity_allocated']) ? $data['quantity_allocated'] : null;
        $this->container['quantity_allocated_greater_than_or_equal_to'] = isset($data['quantity_allocated_greater_than_or_equal_to']) ? $data['quantity_allocated_greater_than_or_equal_to'] : null;
        $this->container['quantity_allocated_greater_than'] = isset($data['quantity_allocated_greater_than']) ? $data['quantity_allocated_greater_than'] : null;
        $this->container['quantity_allocated_less_than'] = isset($data['quantity_allocated_less_than']) ? $data['quantity_allocated_less_than'] : null;
        $this->container['quantity_allocated_less_than_or_equal_to'] = isset($data['quantity_allocated_less_than_or_equal_to']) ? $data['quantity_allocated_less_than_or_equal_to'] : null;
        $this->container['quantity_allocated_not_equal_to'] = isset($data['quantity_allocated_not_equal_to']) ? $data['quantity_allocated_not_equal_to'] : null;
        $this->container['quantity_allocated_between'] = isset($data['quantity_allocated_between']) ? $data['quantity_allocated_between'] : null;
        $this->container['quantity_allocated_in'] = isset($data['quantity_allocated_in']) ? $data['quantity_allocated_in'] : null;
        $this->container['in_logical_id'] = isset($data['in_logical_id']) ? $data['in_logical_id'] : null;
        $this->container['in_logical_id_starts_with'] = isset($data['in_logical_id_starts_with']) ? $data['in_logical_id_starts_with'] : null;
        $this->container['in_logical_id_ends_with'] = isset($data['in_logical_id_ends_with']) ? $data['in_logical_id_ends_with'] : null;
        $this->container['in_logical_id_contains'] = isset($data['in_logical_id_contains']) ? $data['in_logical_id_contains'] : null;
        $this->container['in_logical_id_like'] = isset($data['in_logical_id_like']) ? $data['in_logical_id_like'] : null;
        $this->container['in_logical_id_between'] = isset($data['in_logical_id_between']) ? $data['in_logical_id_between'] : null;
        $this->container['in_logical_id_in'] = isset($data['in_logical_id_in']) ? $data['in_logical_id_in'] : null;
        $this->container['bin_location_desc'] = isset($data['bin_location_desc']) ? $data['bin_location_desc'] : null;
        $this->container['bin_location_desc_starts_with'] = isset($data['bin_location_desc_starts_with']) ? $data['bin_location_desc_starts_with'] : null;
        $this->container['bin_location_desc_ends_with'] = isset($data['bin_location_desc_ends_with']) ? $data['bin_location_desc_ends_with'] : null;
        $this->container['bin_location_desc_contains'] = isset($data['bin_location_desc_contains']) ? $data['bin_location_desc_contains'] : null;
        $this->container['bin_location_desc_like'] = isset($data['bin_location_desc_like']) ? $data['bin_location_desc_like'] : null;
        $this->container['bin_location_desc_between'] = isset($data['bin_location_desc_between']) ? $data['bin_location_desc_between'] : null;
        $this->container['bin_location_desc_in'] = isset($data['bin_location_desc_in']) ? $data['bin_location_desc_in'] : null;
        $this->container['expiry_date'] = isset($data['expiry_date']) ? $data['expiry_date'] : null;
        $this->container['expiry_date_greater_than_or_equal_to'] = isset($data['expiry_date_greater_than_or_equal_to']) ? $data['expiry_date_greater_than_or_equal_to'] : null;
        $this->container['expiry_date_greater_than'] = isset($data['expiry_date_greater_than']) ? $data['expiry_date_greater_than'] : null;
        $this->container['expiry_date_less_than'] = isset($data['expiry_date_less_than']) ? $data['expiry_date_less_than'] : null;
        $this->container['expiry_date_less_than_or_equal_to'] = isset($data['expiry_date_less_than_or_equal_to']) ? $data['expiry_date_less_than_or_equal_to'] : null;
        $this->container['expiry_date_not_equal_to'] = isset($data['expiry_date_not_equal_to']) ? $data['expiry_date_not_equal_to'] : null;
        $this->container['expiry_date_between'] = isset($data['expiry_date_between']) ? $data['expiry_date_between'] : null;
        $this->container['expiry_date_in'] = isset($data['expiry_date_in']) ? $data['expiry_date_in'] : null;
        $this->container['sy_forms_class_name'] = isset($data['sy_forms_class_name']) ? $data['sy_forms_class_name'] : null;
        $this->container['sy_forms_class_name_starts_with'] = isset($data['sy_forms_class_name_starts_with']) ? $data['sy_forms_class_name_starts_with'] : null;
        $this->container['sy_forms_class_name_ends_with'] = isset($data['sy_forms_class_name_ends_with']) ? $data['sy_forms_class_name_ends_with'] : null;
        $this->container['sy_forms_class_name_contains'] = isset($data['sy_forms_class_name_contains']) ? $data['sy_forms_class_name_contains'] : null;
        $this->container['sy_forms_class_name_like'] = isset($data['sy_forms_class_name_like']) ? $data['sy_forms_class_name_like'] : null;
        $this->container['sy_forms_class_name_between'] = isset($data['sy_forms_class_name_between']) ? $data['sy_forms_class_name_between'] : null;
        $this->container['sy_forms_class_name_in'] = isset($data['sy_forms_class_name_in']) ? $data['sy_forms_class_name_in'] : null;
        $this->container['skip'] = isset($data['skip']) ? $data['skip'] : null;
        $this->container['take'] = isset($data['take']) ? $data['take'] : null;
        $this->container['order_by'] = isset($data['order_by']) ? $data['order_by'] : null;
        $this->container['order_by_desc'] = isset($data['order_by_desc']) ? $data['order_by_desc'] : null;
        $this->container['include'] = isset($data['include']) ? $data['include'] : null;
        $this->container['fields'] = isset($data['fields']) ? $data['fields'] : null;
        $this->container['meta'] = isset($data['meta']) ? $data['meta'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets link_id
     *
     * @return string
     */
    public function getLinkId()
    {
        return $this->container['link_id'];
    }

    /**
     * Sets link_id
     *
     * @param string $link_id link_id
     *
     * @return $this
     */
    public function setLinkId($link_id)
    {
        $this->container['link_id'] = $link_id;

        return $this;
    }

    /**
     * Gets link_id_starts_with
     *
     * @return string
     */
    public function getLinkIdStartsWith()
    {
        return $this->container['link_id_starts_with'];
    }

    /**
     * Sets link_id_starts_with
     *
     * @param string $link_id_starts_with link_id_starts_with
     *
     * @return $this
     */
    public function setLinkIdStartsWith($link_id_starts_with)
    {
        $this->container['link_id_starts_with'] = $link_id_starts_with;

        return $this;
    }

    /**
     * Gets link_id_ends_with
     *
     * @return string
     */
    public function getLinkIdEndsWith()
    {
        return $this->container['link_id_ends_with'];
    }

    /**
     * Sets link_id_ends_with
     *
     * @param string $link_id_ends_with link_id_ends_with
     *
     * @return $this
     */
    public function setLinkIdEndsWith($link_id_ends_with)
    {
        $this->container['link_id_ends_with'] = $link_id_ends_with;

        return $this;
    }

    /**
     * Gets link_id_contains
     *
     * @return string
     */
    public function getLinkIdContains()
    {
        return $this->container['link_id_contains'];
    }

    /**
     * Sets link_id_contains
     *
     * @param string $link_id_contains link_id_contains
     *
     * @return $this
     */
    public function setLinkIdContains($link_id_contains)
    {
        $this->container['link_id_contains'] = $link_id_contains;

        return $this;
    }

    /**
     * Gets link_id_like
     *
     * @return string
     */
    public function getLinkIdLike()
    {
        return $this->container['link_id_like'];
    }

    /**
     * Sets link_id_like
     *
     * @param string $link_id_like link_id_like
     *
     * @return $this
     */
    public function setLinkIdLike($link_id_like)
    {
        $this->container['link_id_like'] = $link_id_like;

        return $this;
    }

    /**
     * Gets link_id_between
     *
     * @return string[]
     */
    public function getLinkIdBetween()
    {
        return $this->container['link_id_between'];
    }

    /**
     * Sets link_id_between
     *
     * @param string[] $link_id_between link_id_between
     *
     * @return $this
     */
    public function setLinkIdBetween($link_id_between)
    {
        $this->container['link_id_between'] = $link_id_between;

        return $this;
    }

    /**
     * Gets link_id_in
     *
     * @return string[]
     */
    public function getLinkIdIn()
    {
        return $this->container['link_id_in'];
    }

    /**
     * Sets link_id_in
     *
     * @param string[] $link_id_in link_id_in
     *
     * @return $this
     */
    public function setLinkIdIn($link_id_in)
    {
        $this->container['link_id_in'] = $link_id_in;

        return $this;
    }

    /**
     * Gets last_saved_date_time
     *
     * @return \DateTime
     */
    public function getLastSavedDateTime()
    {
        return $this->container['last_saved_date_time'];
    }

    /**
     * Sets last_saved_date_time
     *
     * @param \DateTime $last_saved_date_time last_saved_date_time
     *
     * @return $this
     */
    public function setLastSavedDateTime($last_saved_date_time)
    {
        $this->container['last_saved_date_time'] = $last_saved_date_time;

        return $this;
    }

    /**
     * Gets last_saved_date_time_greater_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeGreaterThanOrEqualTo()
    {
        return $this->container['last_saved_date_time_greater_than_or_equal_to'];
    }

    /**
     * Sets last_saved_date_time_greater_than_or_equal_to
     *
     * @param \DateTime $last_saved_date_time_greater_than_or_equal_to last_saved_date_time_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeGreaterThanOrEqualTo($last_saved_date_time_greater_than_or_equal_to)
    {
        $this->container['last_saved_date_time_greater_than_or_equal_to'] = $last_saved_date_time_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_greater_than
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeGreaterThan()
    {
        return $this->container['last_saved_date_time_greater_than'];
    }

    /**
     * Sets last_saved_date_time_greater_than
     *
     * @param \DateTime $last_saved_date_time_greater_than last_saved_date_time_greater_than
     *
     * @return $this
     */
    public function setLastSavedDateTimeGreaterThan($last_saved_date_time_greater_than)
    {
        $this->container['last_saved_date_time_greater_than'] = $last_saved_date_time_greater_than;

        return $this;
    }

    /**
     * Gets last_saved_date_time_less_than
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeLessThan()
    {
        return $this->container['last_saved_date_time_less_than'];
    }

    /**
     * Sets last_saved_date_time_less_than
     *
     * @param \DateTime $last_saved_date_time_less_than last_saved_date_time_less_than
     *
     * @return $this
     */
    public function setLastSavedDateTimeLessThan($last_saved_date_time_less_than)
    {
        $this->container['last_saved_date_time_less_than'] = $last_saved_date_time_less_than;

        return $this;
    }

    /**
     * Gets last_saved_date_time_less_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeLessThanOrEqualTo()
    {
        return $this->container['last_saved_date_time_less_than_or_equal_to'];
    }

    /**
     * Sets last_saved_date_time_less_than_or_equal_to
     *
     * @param \DateTime $last_saved_date_time_less_than_or_equal_to last_saved_date_time_less_than_or_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeLessThanOrEqualTo($last_saved_date_time_less_than_or_equal_to)
    {
        $this->container['last_saved_date_time_less_than_or_equal_to'] = $last_saved_date_time_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_not_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeNotEqualTo()
    {
        return $this->container['last_saved_date_time_not_equal_to'];
    }

    /**
     * Sets last_saved_date_time_not_equal_to
     *
     * @param \DateTime $last_saved_date_time_not_equal_to last_saved_date_time_not_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeNotEqualTo($last_saved_date_time_not_equal_to)
    {
        $this->container['last_saved_date_time_not_equal_to'] = $last_saved_date_time_not_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_between
     *
     * @return \DateTime[]
     */
    public function getLastSavedDateTimeBetween()
    {
        return $this->container['last_saved_date_time_between'];
    }

    /**
     * Sets last_saved_date_time_between
     *
     * @param \DateTime[] $last_saved_date_time_between last_saved_date_time_between
     *
     * @return $this
     */
    public function setLastSavedDateTimeBetween($last_saved_date_time_between)
    {
        $this->container['last_saved_date_time_between'] = $last_saved_date_time_between;

        return $this;
    }

    /**
     * Gets last_saved_date_time_in
     *
     * @return \DateTime[]
     */
    public function getLastSavedDateTimeIn()
    {
        return $this->container['last_saved_date_time_in'];
    }

    /**
     * Sets last_saved_date_time_in
     *
     * @param \DateTime[] $last_saved_date_time_in last_saved_date_time_in
     *
     * @return $this
     */
    public function setLastSavedDateTimeIn($last_saved_date_time_in)
    {
        $this->container['last_saved_date_time_in'] = $last_saved_date_time_in;

        return $this;
    }

    /**
     * Gets inventory_id
     *
     * @return string
     */
    public function getInventoryId()
    {
        return $this->container['inventory_id'];
    }

    /**
     * Sets inventory_id
     *
     * @param string $inventory_id inventory_id
     *
     * @return $this
     */
    public function setInventoryId($inventory_id)
    {
        $this->container['inventory_id'] = $inventory_id;

        return $this;
    }

    /**
     * Gets inventory_id_starts_with
     *
     * @return string
     */
    public function getInventoryIdStartsWith()
    {
        return $this->container['inventory_id_starts_with'];
    }

    /**
     * Sets inventory_id_starts_with
     *
     * @param string $inventory_id_starts_with inventory_id_starts_with
     *
     * @return $this
     */
    public function setInventoryIdStartsWith($inventory_id_starts_with)
    {
        $this->container['inventory_id_starts_with'] = $inventory_id_starts_with;

        return $this;
    }

    /**
     * Gets inventory_id_ends_with
     *
     * @return string
     */
    public function getInventoryIdEndsWith()
    {
        return $this->container['inventory_id_ends_with'];
    }

    /**
     * Sets inventory_id_ends_with
     *
     * @param string $inventory_id_ends_with inventory_id_ends_with
     *
     * @return $this
     */
    public function setInventoryIdEndsWith($inventory_id_ends_with)
    {
        $this->container['inventory_id_ends_with'] = $inventory_id_ends_with;

        return $this;
    }

    /**
     * Gets inventory_id_contains
     *
     * @return string
     */
    public function getInventoryIdContains()
    {
        return $this->container['inventory_id_contains'];
    }

    /**
     * Sets inventory_id_contains
     *
     * @param string $inventory_id_contains inventory_id_contains
     *
     * @return $this
     */
    public function setInventoryIdContains($inventory_id_contains)
    {
        $this->container['inventory_id_contains'] = $inventory_id_contains;

        return $this;
    }

    /**
     * Gets inventory_id_like
     *
     * @return string
     */
    public function getInventoryIdLike()
    {
        return $this->container['inventory_id_like'];
    }

    /**
     * Sets inventory_id_like
     *
     * @param string $inventory_id_like inventory_id_like
     *
     * @return $this
     */
    public function setInventoryIdLike($inventory_id_like)
    {
        $this->container['inventory_id_like'] = $inventory_id_like;

        return $this;
    }

    /**
     * Gets inventory_id_between
     *
     * @return string[]
     */
    public function getInventoryIdBetween()
    {
        return $this->container['inventory_id_between'];
    }

    /**
     * Sets inventory_id_between
     *
     * @param string[] $inventory_id_between inventory_id_between
     *
     * @return $this
     */
    public function setInventoryIdBetween($inventory_id_between)
    {
        $this->container['inventory_id_between'] = $inventory_id_between;

        return $this;
    }

    /**
     * Gets inventory_id_in
     *
     * @return string[]
     */
    public function getInventoryIdIn()
    {
        return $this->container['inventory_id_in'];
    }

    /**
     * Sets inventory_id_in
     *
     * @param string[] $inventory_id_in inventory_id_in
     *
     * @return $this
     */
    public function setInventoryIdIn($inventory_id_in)
    {
        $this->container['inventory_id_in'] = $inventory_id_in;

        return $this;
    }

    /**
     * Gets date_in
     *
     * @return \DateTime
     */
    public function getDateIn()
    {
        return $this->container['date_in'];
    }

    /**
     * Sets date_in
     *
     * @param \DateTime $date_in date_in
     *
     * @return $this
     */
    public function setDateIn($date_in)
    {
        $this->container['date_in'] = $date_in;

        return $this;
    }

    /**
     * Gets date_in_greater_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getDateInGreaterThanOrEqualTo()
    {
        return $this->container['date_in_greater_than_or_equal_to'];
    }

    /**
     * Sets date_in_greater_than_or_equal_to
     *
     * @param \DateTime $date_in_greater_than_or_equal_to date_in_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setDateInGreaterThanOrEqualTo($date_in_greater_than_or_equal_to)
    {
        $this->container['date_in_greater_than_or_equal_to'] = $date_in_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets date_in_greater_than
     *
     * @return \DateTime
     */
    public function getDateInGreaterThan()
    {
        return $this->container['date_in_greater_than'];
    }

    /**
     * Sets date_in_greater_than
     *
     * @param \DateTime $date_in_greater_than date_in_greater_than
     *
     * @return $this
     */
    public function setDateInGreaterThan($date_in_greater_than)
    {
        $this->container['date_in_greater_than'] = $date_in_greater_than;

        return $this;
    }

    /**
     * Gets date_in_less_than
     *
     * @return \DateTime
     */
    public function getDateInLessThan()
    {
        return $this->container['date_in_less_than'];
    }

    /**
     * Sets date_in_less_than
     *
     * @param \DateTime $date_in_less_than date_in_less_than
     *
     * @return $this
     */
    public function setDateInLessThan($date_in_less_than)
    {
        $this->container['date_in_less_than'] = $date_in_less_than;

        return $this;
    }

    /**
     * Gets date_in_less_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getDateInLessThanOrEqualTo()
    {
        return $this->container['date_in_less_than_or_equal_to'];
    }

    /**
     * Sets date_in_less_than_or_equal_to
     *
     * @param \DateTime $date_in_less_than_or_equal_to date_in_less_than_or_equal_to
     *
     * @return $this
     */
    public function setDateInLessThanOrEqualTo($date_in_less_than_or_equal_to)
    {
        $this->container['date_in_less_than_or_equal_to'] = $date_in_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets date_in_not_equal_to
     *
     * @return \DateTime
     */
    public function getDateInNotEqualTo()
    {
        return $this->container['date_in_not_equal_to'];
    }

    /**
     * Sets date_in_not_equal_to
     *
     * @param \DateTime $date_in_not_equal_to date_in_not_equal_to
     *
     * @return $this
     */
    public function setDateInNotEqualTo($date_in_not_equal_to)
    {
        $this->container['date_in_not_equal_to'] = $date_in_not_equal_to;

        return $this;
    }

    /**
     * Gets date_in_between
     *
     * @return \DateTime[]
     */
    public function getDateInBetween()
    {
        return $this->container['date_in_between'];
    }

    /**
     * Sets date_in_between
     *
     * @param \DateTime[] $date_in_between date_in_between
     *
     * @return $this
     */
    public function setDateInBetween($date_in_between)
    {
        $this->container['date_in_between'] = $date_in_between;

        return $this;
    }

    /**
     * Gets date_in_in
     *
     * @return \DateTime[]
     */
    public function getDateInIn()
    {
        return $this->container['date_in_in'];
    }

    /**
     * Sets date_in_in
     *
     * @param \DateTime[] $date_in_in date_in_in
     *
     * @return $this
     */
    public function setDateInIn($date_in_in)
    {
        $this->container['date_in_in'] = $date_in_in;

        return $this;
    }

    /**
     * Gets quantity_in
     *
     * @return double
     */
    public function getQuantityIn()
    {
        return $this->container['quantity_in'];
    }

    /**
     * Sets quantity_in
     *
     * @param double $quantity_in quantity_in
     *
     * @return $this
     */
    public function setQuantityIn($quantity_in)
    {
        $this->container['quantity_in'] = $quantity_in;

        return $this;
    }

    /**
     * Gets quantity_in_greater_than_or_equal_to
     *
     * @return double
     */
    public function getQuantityInGreaterThanOrEqualTo()
    {
        return $this->container['quantity_in_greater_than_or_equal_to'];
    }

    /**
     * Sets quantity_in_greater_than_or_equal_to
     *
     * @param double $quantity_in_greater_than_or_equal_to quantity_in_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setQuantityInGreaterThanOrEqualTo($quantity_in_greater_than_or_equal_to)
    {
        $this->container['quantity_in_greater_than_or_equal_to'] = $quantity_in_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets quantity_in_greater_than
     *
     * @return double
     */
    public function getQuantityInGreaterThan()
    {
        return $this->container['quantity_in_greater_than'];
    }

    /**
     * Sets quantity_in_greater_than
     *
     * @param double $quantity_in_greater_than quantity_in_greater_than
     *
     * @return $this
     */
    public function setQuantityInGreaterThan($quantity_in_greater_than)
    {
        $this->container['quantity_in_greater_than'] = $quantity_in_greater_than;

        return $this;
    }

    /**
     * Gets quantity_in_less_than
     *
     * @return double
     */
    public function getQuantityInLessThan()
    {
        return $this->container['quantity_in_less_than'];
    }

    /**
     * Sets quantity_in_less_than
     *
     * @param double $quantity_in_less_than quantity_in_less_than
     *
     * @return $this
     */
    public function setQuantityInLessThan($quantity_in_less_than)
    {
        $this->container['quantity_in_less_than'] = $quantity_in_less_than;

        return $this;
    }

    /**
     * Gets quantity_in_less_than_or_equal_to
     *
     * @return double
     */
    public function getQuantityInLessThanOrEqualTo()
    {
        return $this->container['quantity_in_less_than_or_equal_to'];
    }

    /**
     * Sets quantity_in_less_than_or_equal_to
     *
     * @param double $quantity_in_less_than_or_equal_to quantity_in_less_than_or_equal_to
     *
     * @return $this
     */
    public function setQuantityInLessThanOrEqualTo($quantity_in_less_than_or_equal_to)
    {
        $this->container['quantity_in_less_than_or_equal_to'] = $quantity_in_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets quantity_in_not_equal_to
     *
     * @return double
     */
    public function getQuantityInNotEqualTo()
    {
        return $this->container['quantity_in_not_equal_to'];
    }

    /**
     * Sets quantity_in_not_equal_to
     *
     * @param double $quantity_in_not_equal_to quantity_in_not_equal_to
     *
     * @return $this
     */
    public function setQuantityInNotEqualTo($quantity_in_not_equal_to)
    {
        $this->container['quantity_in_not_equal_to'] = $quantity_in_not_equal_to;

        return $this;
    }

    /**
     * Gets quantity_in_between
     *
     * @return double[]
     */
    public function getQuantityInBetween()
    {
        return $this->container['quantity_in_between'];
    }

    /**
     * Sets quantity_in_between
     *
     * @param double[] $quantity_in_between quantity_in_between
     *
     * @return $this
     */
    public function setQuantityInBetween($quantity_in_between)
    {
        $this->container['quantity_in_between'] = $quantity_in_between;

        return $this;
    }

    /**
     * Gets quantity_in_in
     *
     * @return double[]
     */
    public function getQuantityInIn()
    {
        return $this->container['quantity_in_in'];
    }

    /**
     * Sets quantity_in_in
     *
     * @param double[] $quantity_in_in quantity_in_in
     *
     * @return $this
     */
    public function setQuantityInIn($quantity_in_in)
    {
        $this->container['quantity_in_in'] = $quantity_in_in;

        return $this;
    }

    /**
     * Gets l_cost_in
     *
     * @return double
     */
    public function getLCostIn()
    {
        return $this->container['l_cost_in'];
    }

    /**
     * Sets l_cost_in
     *
     * @param double $l_cost_in l_cost_in
     *
     * @return $this
     */
    public function setLCostIn($l_cost_in)
    {
        $this->container['l_cost_in'] = $l_cost_in;

        return $this;
    }

    /**
     * Gets l_cost_in_greater_than_or_equal_to
     *
     * @return double
     */
    public function getLCostInGreaterThanOrEqualTo()
    {
        return $this->container['l_cost_in_greater_than_or_equal_to'];
    }

    /**
     * Sets l_cost_in_greater_than_or_equal_to
     *
     * @param double $l_cost_in_greater_than_or_equal_to l_cost_in_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setLCostInGreaterThanOrEqualTo($l_cost_in_greater_than_or_equal_to)
    {
        $this->container['l_cost_in_greater_than_or_equal_to'] = $l_cost_in_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets l_cost_in_greater_than
     *
     * @return double
     */
    public function getLCostInGreaterThan()
    {
        return $this->container['l_cost_in_greater_than'];
    }

    /**
     * Sets l_cost_in_greater_than
     *
     * @param double $l_cost_in_greater_than l_cost_in_greater_than
     *
     * @return $this
     */
    public function setLCostInGreaterThan($l_cost_in_greater_than)
    {
        $this->container['l_cost_in_greater_than'] = $l_cost_in_greater_than;

        return $this;
    }

    /**
     * Gets l_cost_in_less_than
     *
     * @return double
     */
    public function getLCostInLessThan()
    {
        return $this->container['l_cost_in_less_than'];
    }

    /**
     * Sets l_cost_in_less_than
     *
     * @param double $l_cost_in_less_than l_cost_in_less_than
     *
     * @return $this
     */
    public function setLCostInLessThan($l_cost_in_less_than)
    {
        $this->container['l_cost_in_less_than'] = $l_cost_in_less_than;

        return $this;
    }

    /**
     * Gets l_cost_in_less_than_or_equal_to
     *
     * @return double
     */
    public function getLCostInLessThanOrEqualTo()
    {
        return $this->container['l_cost_in_less_than_or_equal_to'];
    }

    /**
     * Sets l_cost_in_less_than_or_equal_to
     *
     * @param double $l_cost_in_less_than_or_equal_to l_cost_in_less_than_or_equal_to
     *
     * @return $this
     */
    public function setLCostInLessThanOrEqualTo($l_cost_in_less_than_or_equal_to)
    {
        $this->container['l_cost_in_less_than_or_equal_to'] = $l_cost_in_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets l_cost_in_not_equal_to
     *
     * @return double
     */
    public function getLCostInNotEqualTo()
    {
        return $this->container['l_cost_in_not_equal_to'];
    }

    /**
     * Sets l_cost_in_not_equal_to
     *
     * @param double $l_cost_in_not_equal_to l_cost_in_not_equal_to
     *
     * @return $this
     */
    public function setLCostInNotEqualTo($l_cost_in_not_equal_to)
    {
        $this->container['l_cost_in_not_equal_to'] = $l_cost_in_not_equal_to;

        return $this;
    }

    /**
     * Gets l_cost_in_between
     *
     * @return double[]
     */
    public function getLCostInBetween()
    {
        return $this->container['l_cost_in_between'];
    }

    /**
     * Sets l_cost_in_between
     *
     * @param double[] $l_cost_in_between l_cost_in_between
     *
     * @return $this
     */
    public function setLCostInBetween($l_cost_in_between)
    {
        $this->container['l_cost_in_between'] = $l_cost_in_between;

        return $this;
    }

    /**
     * Gets l_cost_in_in
     *
     * @return double[]
     */
    public function getLCostInIn()
    {
        return $this->container['l_cost_in_in'];
    }

    /**
     * Sets l_cost_in_in
     *
     * @param double[] $l_cost_in_in l_cost_in_in
     *
     * @return $this
     */
    public function setLCostInIn($l_cost_in_in)
    {
        $this->container['l_cost_in_in'] = $l_cost_in_in;

        return $this;
    }

    /**
     * Gets s_cost_in
     *
     * @return double
     */
    public function getSCostIn()
    {
        return $this->container['s_cost_in'];
    }

    /**
     * Sets s_cost_in
     *
     * @param double $s_cost_in s_cost_in
     *
     * @return $this
     */
    public function setSCostIn($s_cost_in)
    {
        $this->container['s_cost_in'] = $s_cost_in;

        return $this;
    }

    /**
     * Gets s_cost_in_greater_than_or_equal_to
     *
     * @return double
     */
    public function getSCostInGreaterThanOrEqualTo()
    {
        return $this->container['s_cost_in_greater_than_or_equal_to'];
    }

    /**
     * Sets s_cost_in_greater_than_or_equal_to
     *
     * @param double $s_cost_in_greater_than_or_equal_to s_cost_in_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setSCostInGreaterThanOrEqualTo($s_cost_in_greater_than_or_equal_to)
    {
        $this->container['s_cost_in_greater_than_or_equal_to'] = $s_cost_in_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets s_cost_in_greater_than
     *
     * @return double
     */
    public function getSCostInGreaterThan()
    {
        return $this->container['s_cost_in_greater_than'];
    }

    /**
     * Sets s_cost_in_greater_than
     *
     * @param double $s_cost_in_greater_than s_cost_in_greater_than
     *
     * @return $this
     */
    public function setSCostInGreaterThan($s_cost_in_greater_than)
    {
        $this->container['s_cost_in_greater_than'] = $s_cost_in_greater_than;

        return $this;
    }

    /**
     * Gets s_cost_in_less_than
     *
     * @return double
     */
    public function getSCostInLessThan()
    {
        return $this->container['s_cost_in_less_than'];
    }

    /**
     * Sets s_cost_in_less_than
     *
     * @param double $s_cost_in_less_than s_cost_in_less_than
     *
     * @return $this
     */
    public function setSCostInLessThan($s_cost_in_less_than)
    {
        $this->container['s_cost_in_less_than'] = $s_cost_in_less_than;

        return $this;
    }

    /**
     * Gets s_cost_in_less_than_or_equal_to
     *
     * @return double
     */
    public function getSCostInLessThanOrEqualTo()
    {
        return $this->container['s_cost_in_less_than_or_equal_to'];
    }

    /**
     * Sets s_cost_in_less_than_or_equal_to
     *
     * @param double $s_cost_in_less_than_or_equal_to s_cost_in_less_than_or_equal_to
     *
     * @return $this
     */
    public function setSCostInLessThanOrEqualTo($s_cost_in_less_than_or_equal_to)
    {
        $this->container['s_cost_in_less_than_or_equal_to'] = $s_cost_in_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets s_cost_in_not_equal_to
     *
     * @return double
     */
    public function getSCostInNotEqualTo()
    {
        return $this->container['s_cost_in_not_equal_to'];
    }

    /**
     * Sets s_cost_in_not_equal_to
     *
     * @param double $s_cost_in_not_equal_to s_cost_in_not_equal_to
     *
     * @return $this
     */
    public function setSCostInNotEqualTo($s_cost_in_not_equal_to)
    {
        $this->container['s_cost_in_not_equal_to'] = $s_cost_in_not_equal_to;

        return $this;
    }

    /**
     * Gets s_cost_in_between
     *
     * @return double[]
     */
    public function getSCostInBetween()
    {
        return $this->container['s_cost_in_between'];
    }

    /**
     * Sets s_cost_in_between
     *
     * @param double[] $s_cost_in_between s_cost_in_between
     *
     * @return $this
     */
    public function setSCostInBetween($s_cost_in_between)
    {
        $this->container['s_cost_in_between'] = $s_cost_in_between;

        return $this;
    }

    /**
     * Gets s_cost_in_in
     *
     * @return double[]
     */
    public function getSCostInIn()
    {
        return $this->container['s_cost_in_in'];
    }

    /**
     * Sets s_cost_in_in
     *
     * @param double[] $s_cost_in_in s_cost_in_in
     *
     * @return $this
     */
    public function setSCostInIn($s_cost_in_in)
    {
        $this->container['s_cost_in_in'] = $s_cost_in_in;

        return $this;
    }

    /**
     * Gets special_price
     *
     * @return double
     */
    public function getSpecialPrice()
    {
        return $this->container['special_price'];
    }

    /**
     * Sets special_price
     *
     * @param double $special_price special_price
     *
     * @return $this
     */
    public function setSpecialPrice($special_price)
    {
        $this->container['special_price'] = $special_price;

        return $this;
    }

    /**
     * Gets special_price_greater_than_or_equal_to
     *
     * @return double
     */
    public function getSpecialPriceGreaterThanOrEqualTo()
    {
        return $this->container['special_price_greater_than_or_equal_to'];
    }

    /**
     * Sets special_price_greater_than_or_equal_to
     *
     * @param double $special_price_greater_than_or_equal_to special_price_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setSpecialPriceGreaterThanOrEqualTo($special_price_greater_than_or_equal_to)
    {
        $this->container['special_price_greater_than_or_equal_to'] = $special_price_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets special_price_greater_than
     *
     * @return double
     */
    public function getSpecialPriceGreaterThan()
    {
        return $this->container['special_price_greater_than'];
    }

    /**
     * Sets special_price_greater_than
     *
     * @param double $special_price_greater_than special_price_greater_than
     *
     * @return $this
     */
    public function setSpecialPriceGreaterThan($special_price_greater_than)
    {
        $this->container['special_price_greater_than'] = $special_price_greater_than;

        return $this;
    }

    /**
     * Gets special_price_less_than
     *
     * @return double
     */
    public function getSpecialPriceLessThan()
    {
        return $this->container['special_price_less_than'];
    }

    /**
     * Sets special_price_less_than
     *
     * @param double $special_price_less_than special_price_less_than
     *
     * @return $this
     */
    public function setSpecialPriceLessThan($special_price_less_than)
    {
        $this->container['special_price_less_than'] = $special_price_less_than;

        return $this;
    }

    /**
     * Gets special_price_less_than_or_equal_to
     *
     * @return double
     */
    public function getSpecialPriceLessThanOrEqualTo()
    {
        return $this->container['special_price_less_than_or_equal_to'];
    }

    /**
     * Sets special_price_less_than_or_equal_to
     *
     * @param double $special_price_less_than_or_equal_to special_price_less_than_or_equal_to
     *
     * @return $this
     */
    public function setSpecialPriceLessThanOrEqualTo($special_price_less_than_or_equal_to)
    {
        $this->container['special_price_less_than_or_equal_to'] = $special_price_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets special_price_not_equal_to
     *
     * @return double
     */
    public function getSpecialPriceNotEqualTo()
    {
        return $this->container['special_price_not_equal_to'];
    }

    /**
     * Sets special_price_not_equal_to
     *
     * @param double $special_price_not_equal_to special_price_not_equal_to
     *
     * @return $this
     */
    public function setSpecialPriceNotEqualTo($special_price_not_equal_to)
    {
        $this->container['special_price_not_equal_to'] = $special_price_not_equal_to;

        return $this;
    }

    /**
     * Gets special_price_between
     *
     * @return double[]
     */
    public function getSpecialPriceBetween()
    {
        return $this->container['special_price_between'];
    }

    /**
     * Sets special_price_between
     *
     * @param double[] $special_price_between special_price_between
     *
     * @return $this
     */
    public function setSpecialPriceBetween($special_price_between)
    {
        $this->container['special_price_between'] = $special_price_between;

        return $this;
    }

    /**
     * Gets special_price_in
     *
     * @return double[]
     */
    public function getSpecialPriceIn()
    {
        return $this->container['special_price_in'];
    }

    /**
     * Sets special_price_in
     *
     * @param double[] $special_price_in special_price_in
     *
     * @return $this
     */
    public function setSpecialPriceIn($special_price_in)
    {
        $this->container['special_price_in'] = $special_price_in;

        return $this;
    }

    /**
     * Gets quantity_left
     *
     * @return double
     */
    public function getQuantityLeft()
    {
        return $this->container['quantity_left'];
    }

    /**
     * Sets quantity_left
     *
     * @param double $quantity_left quantity_left
     *
     * @return $this
     */
    public function setQuantityLeft($quantity_left)
    {
        $this->container['quantity_left'] = $quantity_left;

        return $this;
    }

    /**
     * Gets quantity_left_greater_than_or_equal_to
     *
     * @return double
     */
    public function getQuantityLeftGreaterThanOrEqualTo()
    {
        return $this->container['quantity_left_greater_than_or_equal_to'];
    }

    /**
     * Sets quantity_left_greater_than_or_equal_to
     *
     * @param double $quantity_left_greater_than_or_equal_to quantity_left_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setQuantityLeftGreaterThanOrEqualTo($quantity_left_greater_than_or_equal_to)
    {
        $this->container['quantity_left_greater_than_or_equal_to'] = $quantity_left_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets quantity_left_greater_than
     *
     * @return double
     */
    public function getQuantityLeftGreaterThan()
    {
        return $this->container['quantity_left_greater_than'];
    }

    /**
     * Sets quantity_left_greater_than
     *
     * @param double $quantity_left_greater_than quantity_left_greater_than
     *
     * @return $this
     */
    public function setQuantityLeftGreaterThan($quantity_left_greater_than)
    {
        $this->container['quantity_left_greater_than'] = $quantity_left_greater_than;

        return $this;
    }

    /**
     * Gets quantity_left_less_than
     *
     * @return double
     */
    public function getQuantityLeftLessThan()
    {
        return $this->container['quantity_left_less_than'];
    }

    /**
     * Sets quantity_left_less_than
     *
     * @param double $quantity_left_less_than quantity_left_less_than
     *
     * @return $this
     */
    public function setQuantityLeftLessThan($quantity_left_less_than)
    {
        $this->container['quantity_left_less_than'] = $quantity_left_less_than;

        return $this;
    }

    /**
     * Gets quantity_left_less_than_or_equal_to
     *
     * @return double
     */
    public function getQuantityLeftLessThanOrEqualTo()
    {
        return $this->container['quantity_left_less_than_or_equal_to'];
    }

    /**
     * Sets quantity_left_less_than_or_equal_to
     *
     * @param double $quantity_left_less_than_or_equal_to quantity_left_less_than_or_equal_to
     *
     * @return $this
     */
    public function setQuantityLeftLessThanOrEqualTo($quantity_left_less_than_or_equal_to)
    {
        $this->container['quantity_left_less_than_or_equal_to'] = $quantity_left_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets quantity_left_not_equal_to
     *
     * @return double
     */
    public function getQuantityLeftNotEqualTo()
    {
        return $this->container['quantity_left_not_equal_to'];
    }

    /**
     * Sets quantity_left_not_equal_to
     *
     * @param double $quantity_left_not_equal_to quantity_left_not_equal_to
     *
     * @return $this
     */
    public function setQuantityLeftNotEqualTo($quantity_left_not_equal_to)
    {
        $this->container['quantity_left_not_equal_to'] = $quantity_left_not_equal_to;

        return $this;
    }

    /**
     * Gets quantity_left_between
     *
     * @return double[]
     */
    public function getQuantityLeftBetween()
    {
        return $this->container['quantity_left_between'];
    }

    /**
     * Sets quantity_left_between
     *
     * @param double[] $quantity_left_between quantity_left_between
     *
     * @return $this
     */
    public function setQuantityLeftBetween($quantity_left_between)
    {
        $this->container['quantity_left_between'] = $quantity_left_between;

        return $this;
    }

    /**
     * Gets quantity_left_in
     *
     * @return double[]
     */
    public function getQuantityLeftIn()
    {
        return $this->container['quantity_left_in'];
    }

    /**
     * Sets quantity_left_in
     *
     * @param double[] $quantity_left_in quantity_left_in
     *
     * @return $this
     */
    public function setQuantityLeftIn($quantity_left_in)
    {
        $this->container['quantity_left_in'] = $quantity_left_in;

        return $this;
    }

    /**
     * Gets serial_no
     *
     * @return string
     */
    public function getSerialNo()
    {
        return $this->container['serial_no'];
    }

    /**
     * Sets serial_no
     *
     * @param string $serial_no serial_no
     *
     * @return $this
     */
    public function setSerialNo($serial_no)
    {
        $this->container['serial_no'] = $serial_no;

        return $this;
    }

    /**
     * Gets serial_no_starts_with
     *
     * @return string
     */
    public function getSerialNoStartsWith()
    {
        return $this->container['serial_no_starts_with'];
    }

    /**
     * Sets serial_no_starts_with
     *
     * @param string $serial_no_starts_with serial_no_starts_with
     *
     * @return $this
     */
    public function setSerialNoStartsWith($serial_no_starts_with)
    {
        $this->container['serial_no_starts_with'] = $serial_no_starts_with;

        return $this;
    }

    /**
     * Gets serial_no_ends_with
     *
     * @return string
     */
    public function getSerialNoEndsWith()
    {
        return $this->container['serial_no_ends_with'];
    }

    /**
     * Sets serial_no_ends_with
     *
     * @param string $serial_no_ends_with serial_no_ends_with
     *
     * @return $this
     */
    public function setSerialNoEndsWith($serial_no_ends_with)
    {
        $this->container['serial_no_ends_with'] = $serial_no_ends_with;

        return $this;
    }

    /**
     * Gets serial_no_contains
     *
     * @return string
     */
    public function getSerialNoContains()
    {
        return $this->container['serial_no_contains'];
    }

    /**
     * Sets serial_no_contains
     *
     * @param string $serial_no_contains serial_no_contains
     *
     * @return $this
     */
    public function setSerialNoContains($serial_no_contains)
    {
        $this->container['serial_no_contains'] = $serial_no_contains;

        return $this;
    }

    /**
     * Gets serial_no_like
     *
     * @return string
     */
    public function getSerialNoLike()
    {
        return $this->container['serial_no_like'];
    }

    /**
     * Sets serial_no_like
     *
     * @param string $serial_no_like serial_no_like
     *
     * @return $this
     */
    public function setSerialNoLike($serial_no_like)
    {
        $this->container['serial_no_like'] = $serial_no_like;

        return $this;
    }

    /**
     * Gets serial_no_between
     *
     * @return string[]
     */
    public function getSerialNoBetween()
    {
        return $this->container['serial_no_between'];
    }

    /**
     * Sets serial_no_between
     *
     * @param string[] $serial_no_between serial_no_between
     *
     * @return $this
     */
    public function setSerialNoBetween($serial_no_between)
    {
        $this->container['serial_no_between'] = $serial_no_between;

        return $this;
    }

    /**
     * Gets serial_no_in
     *
     * @return string[]
     */
    public function getSerialNoIn()
    {
        return $this->container['serial_no_in'];
    }

    /**
     * Sets serial_no_in
     *
     * @param string[] $serial_no_in serial_no_in
     *
     * @return $this
     */
    public function setSerialNoIn($serial_no_in)
    {
        $this->container['serial_no_in'] = $serial_no_in;

        return $this;
    }

    /**
     * Gets tax_paid
     *
     * @return double
     */
    public function getTaxPaid()
    {
        return $this->container['tax_paid'];
    }

    /**
     * Sets tax_paid
     *
     * @param double $tax_paid tax_paid
     *
     * @return $this
     */
    public function setTaxPaid($tax_paid)
    {
        $this->container['tax_paid'] = $tax_paid;

        return $this;
    }

    /**
     * Gets tax_paid_greater_than_or_equal_to
     *
     * @return double
     */
    public function getTaxPaidGreaterThanOrEqualTo()
    {
        return $this->container['tax_paid_greater_than_or_equal_to'];
    }

    /**
     * Sets tax_paid_greater_than_or_equal_to
     *
     * @param double $tax_paid_greater_than_or_equal_to tax_paid_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setTaxPaidGreaterThanOrEqualTo($tax_paid_greater_than_or_equal_to)
    {
        $this->container['tax_paid_greater_than_or_equal_to'] = $tax_paid_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets tax_paid_greater_than
     *
     * @return double
     */
    public function getTaxPaidGreaterThan()
    {
        return $this->container['tax_paid_greater_than'];
    }

    /**
     * Sets tax_paid_greater_than
     *
     * @param double $tax_paid_greater_than tax_paid_greater_than
     *
     * @return $this
     */
    public function setTaxPaidGreaterThan($tax_paid_greater_than)
    {
        $this->container['tax_paid_greater_than'] = $tax_paid_greater_than;

        return $this;
    }

    /**
     * Gets tax_paid_less_than
     *
     * @return double
     */
    public function getTaxPaidLessThan()
    {
        return $this->container['tax_paid_less_than'];
    }

    /**
     * Sets tax_paid_less_than
     *
     * @param double $tax_paid_less_than tax_paid_less_than
     *
     * @return $this
     */
    public function setTaxPaidLessThan($tax_paid_less_than)
    {
        $this->container['tax_paid_less_than'] = $tax_paid_less_than;

        return $this;
    }

    /**
     * Gets tax_paid_less_than_or_equal_to
     *
     * @return double
     */
    public function getTaxPaidLessThanOrEqualTo()
    {
        return $this->container['tax_paid_less_than_or_equal_to'];
    }

    /**
     * Sets tax_paid_less_than_or_equal_to
     *
     * @param double $tax_paid_less_than_or_equal_to tax_paid_less_than_or_equal_to
     *
     * @return $this
     */
    public function setTaxPaidLessThanOrEqualTo($tax_paid_less_than_or_equal_to)
    {
        $this->container['tax_paid_less_than_or_equal_to'] = $tax_paid_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets tax_paid_not_equal_to
     *
     * @return double
     */
    public function getTaxPaidNotEqualTo()
    {
        return $this->container['tax_paid_not_equal_to'];
    }

    /**
     * Sets tax_paid_not_equal_to
     *
     * @param double $tax_paid_not_equal_to tax_paid_not_equal_to
     *
     * @return $this
     */
    public function setTaxPaidNotEqualTo($tax_paid_not_equal_to)
    {
        $this->container['tax_paid_not_equal_to'] = $tax_paid_not_equal_to;

        return $this;
    }

    /**
     * Gets tax_paid_between
     *
     * @return double[]
     */
    public function getTaxPaidBetween()
    {
        return $this->container['tax_paid_between'];
    }

    /**
     * Sets tax_paid_between
     *
     * @param double[] $tax_paid_between tax_paid_between
     *
     * @return $this
     */
    public function setTaxPaidBetween($tax_paid_between)
    {
        $this->container['tax_paid_between'] = $tax_paid_between;

        return $this;
    }

    /**
     * Gets tax_paid_in
     *
     * @return double[]
     */
    public function getTaxPaidIn()
    {
        return $this->container['tax_paid_in'];
    }

    /**
     * Sets tax_paid_in
     *
     * @param double[] $tax_paid_in tax_paid_in
     *
     * @return $this
     */
    public function setTaxPaidIn($tax_paid_in)
    {
        $this->container['tax_paid_in'] = $tax_paid_in;

        return $this;
    }

    /**
     * Gets ref
     *
     * @return string
     */
    public function getRef()
    {
        return $this->container['ref'];
    }

    /**
     * Sets ref
     *
     * @param string $ref ref
     *
     * @return $this
     */
    public function setRef($ref)
    {
        $this->container['ref'] = $ref;

        return $this;
    }

    /**
     * Gets ref_starts_with
     *
     * @return string
     */
    public function getRefStartsWith()
    {
        return $this->container['ref_starts_with'];
    }

    /**
     * Sets ref_starts_with
     *
     * @param string $ref_starts_with ref_starts_with
     *
     * @return $this
     */
    public function setRefStartsWith($ref_starts_with)
    {
        $this->container['ref_starts_with'] = $ref_starts_with;

        return $this;
    }

    /**
     * Gets ref_ends_with
     *
     * @return string
     */
    public function getRefEndsWith()
    {
        return $this->container['ref_ends_with'];
    }

    /**
     * Sets ref_ends_with
     *
     * @param string $ref_ends_with ref_ends_with
     *
     * @return $this
     */
    public function setRefEndsWith($ref_ends_with)
    {
        $this->container['ref_ends_with'] = $ref_ends_with;

        return $this;
    }

    /**
     * Gets ref_contains
     *
     * @return string
     */
    public function getRefContains()
    {
        return $this->container['ref_contains'];
    }

    /**
     * Sets ref_contains
     *
     * @param string $ref_contains ref_contains
     *
     * @return $this
     */
    public function setRefContains($ref_contains)
    {
        $this->container['ref_contains'] = $ref_contains;

        return $this;
    }

    /**
     * Gets ref_like
     *
     * @return string
     */
    public function getRefLike()
    {
        return $this->container['ref_like'];
    }

    /**
     * Sets ref_like
     *
     * @param string $ref_like ref_like
     *
     * @return $this
     */
    public function setRefLike($ref_like)
    {
        $this->container['ref_like'] = $ref_like;

        return $this;
    }

    /**
     * Gets ref_between
     *
     * @return string[]
     */
    public function getRefBetween()
    {
        return $this->container['ref_between'];
    }

    /**
     * Sets ref_between
     *
     * @param string[] $ref_between ref_between
     *
     * @return $this
     */
    public function setRefBetween($ref_between)
    {
        $this->container['ref_between'] = $ref_between;

        return $this;
    }

    /**
     * Gets ref_in
     *
     * @return string[]
     */
    public function getRefIn()
    {
        return $this->container['ref_in'];
    }

    /**
     * Sets ref_in
     *
     * @param string[] $ref_in ref_in
     *
     * @return $this
     */
    public function setRefIn($ref_in)
    {
        $this->container['ref_in'] = $ref_in;

        return $this;
    }

    /**
     * Gets source_id
     *
     * @return string
     */
    public function getSourceId()
    {
        return $this->container['source_id'];
    }

    /**
     * Sets source_id
     *
     * @param string $source_id source_id
     *
     * @return $this
     */
    public function setSourceId($source_id)
    {
        $this->container['source_id'] = $source_id;

        return $this;
    }

    /**
     * Gets source_id_starts_with
     *
     * @return string
     */
    public function getSourceIdStartsWith()
    {
        return $this->container['source_id_starts_with'];
    }

    /**
     * Sets source_id_starts_with
     *
     * @param string $source_id_starts_with source_id_starts_with
     *
     * @return $this
     */
    public function setSourceIdStartsWith($source_id_starts_with)
    {
        $this->container['source_id_starts_with'] = $source_id_starts_with;

        return $this;
    }

    /**
     * Gets source_id_ends_with
     *
     * @return string
     */
    public function getSourceIdEndsWith()
    {
        return $this->container['source_id_ends_with'];
    }

    /**
     * Sets source_id_ends_with
     *
     * @param string $source_id_ends_with source_id_ends_with
     *
     * @return $this
     */
    public function setSourceIdEndsWith($source_id_ends_with)
    {
        $this->container['source_id_ends_with'] = $source_id_ends_with;

        return $this;
    }

    /**
     * Gets source_id_contains
     *
     * @return string
     */
    public function getSourceIdContains()
    {
        return $this->container['source_id_contains'];
    }

    /**
     * Sets source_id_contains
     *
     * @param string $source_id_contains source_id_contains
     *
     * @return $this
     */
    public function setSourceIdContains($source_id_contains)
    {
        $this->container['source_id_contains'] = $source_id_contains;

        return $this;
    }

    /**
     * Gets source_id_like
     *
     * @return string
     */
    public function getSourceIdLike()
    {
        return $this->container['source_id_like'];
    }

    /**
     * Sets source_id_like
     *
     * @param string $source_id_like source_id_like
     *
     * @return $this
     */
    public function setSourceIdLike($source_id_like)
    {
        $this->container['source_id_like'] = $source_id_like;

        return $this;
    }

    /**
     * Gets source_id_between
     *
     * @return string[]
     */
    public function getSourceIdBetween()
    {
        return $this->container['source_id_between'];
    }

    /**
     * Sets source_id_between
     *
     * @param string[] $source_id_between source_id_between
     *
     * @return $this
     */
    public function setSourceIdBetween($source_id_between)
    {
        $this->container['source_id_between'] = $source_id_between;

        return $this;
    }

    /**
     * Gets source_id_in
     *
     * @return string[]
     */
    public function getSourceIdIn()
    {
        return $this->container['source_id_in'];
    }

    /**
     * Sets source_id_in
     *
     * @param string[] $source_id_in source_id_in
     *
     * @return $this
     */
    public function setSourceIdIn($source_id_in)
    {
        $this->container['source_id_in'] = $source_id_in;

        return $this;
    }

    /**
     * Gets history_text
     *
     * @return string
     */
    public function getHistoryText()
    {
        return $this->container['history_text'];
    }

    /**
     * Sets history_text
     *
     * @param string $history_text history_text
     *
     * @return $this
     */
    public function setHistoryText($history_text)
    {
        $this->container['history_text'] = $history_text;

        return $this;
    }

    /**
     * Gets history_text_starts_with
     *
     * @return string
     */
    public function getHistoryTextStartsWith()
    {
        return $this->container['history_text_starts_with'];
    }

    /**
     * Sets history_text_starts_with
     *
     * @param string $history_text_starts_with history_text_starts_with
     *
     * @return $this
     */
    public function setHistoryTextStartsWith($history_text_starts_with)
    {
        $this->container['history_text_starts_with'] = $history_text_starts_with;

        return $this;
    }

    /**
     * Gets history_text_ends_with
     *
     * @return string
     */
    public function getHistoryTextEndsWith()
    {
        return $this->container['history_text_ends_with'];
    }

    /**
     * Sets history_text_ends_with
     *
     * @param string $history_text_ends_with history_text_ends_with
     *
     * @return $this
     */
    public function setHistoryTextEndsWith($history_text_ends_with)
    {
        $this->container['history_text_ends_with'] = $history_text_ends_with;

        return $this;
    }

    /**
     * Gets history_text_contains
     *
     * @return string
     */
    public function getHistoryTextContains()
    {
        return $this->container['history_text_contains'];
    }

    /**
     * Sets history_text_contains
     *
     * @param string $history_text_contains history_text_contains
     *
     * @return $this
     */
    public function setHistoryTextContains($history_text_contains)
    {
        $this->container['history_text_contains'] = $history_text_contains;

        return $this;
    }

    /**
     * Gets history_text_like
     *
     * @return string
     */
    public function getHistoryTextLike()
    {
        return $this->container['history_text_like'];
    }

    /**
     * Sets history_text_like
     *
     * @param string $history_text_like history_text_like
     *
     * @return $this
     */
    public function setHistoryTextLike($history_text_like)
    {
        $this->container['history_text_like'] = $history_text_like;

        return $this;
    }

    /**
     * Gets history_text_between
     *
     * @return string[]
     */
    public function getHistoryTextBetween()
    {
        return $this->container['history_text_between'];
    }

    /**
     * Sets history_text_between
     *
     * @param string[] $history_text_between history_text_between
     *
     * @return $this
     */
    public function setHistoryTextBetween($history_text_between)
    {
        $this->container['history_text_between'] = $history_text_between;

        return $this;
    }

    /**
     * Gets history_text_in
     *
     * @return string[]
     */
    public function getHistoryTextIn()
    {
        return $this->container['history_text_in'];
    }

    /**
     * Sets history_text_in
     *
     * @param string[] $history_text_in history_text_in
     *
     * @return $this
     */
    public function setHistoryTextIn($history_text_in)
    {
        $this->container['history_text_in'] = $history_text_in;

        return $this;
    }

    /**
     * Gets quantity_allocated
     *
     * @return double
     */
    public function getQuantityAllocated()
    {
        return $this->container['quantity_allocated'];
    }

    /**
     * Sets quantity_allocated
     *
     * @param double $quantity_allocated quantity_allocated
     *
     * @return $this
     */
    public function setQuantityAllocated($quantity_allocated)
    {
        $this->container['quantity_allocated'] = $quantity_allocated;

        return $this;
    }

    /**
     * Gets quantity_allocated_greater_than_or_equal_to
     *
     * @return double
     */
    public function getQuantityAllocatedGreaterThanOrEqualTo()
    {
        return $this->container['quantity_allocated_greater_than_or_equal_to'];
    }

    /**
     * Sets quantity_allocated_greater_than_or_equal_to
     *
     * @param double $quantity_allocated_greater_than_or_equal_to quantity_allocated_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setQuantityAllocatedGreaterThanOrEqualTo($quantity_allocated_greater_than_or_equal_to)
    {
        $this->container['quantity_allocated_greater_than_or_equal_to'] = $quantity_allocated_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets quantity_allocated_greater_than
     *
     * @return double
     */
    public function getQuantityAllocatedGreaterThan()
    {
        return $this->container['quantity_allocated_greater_than'];
    }

    /**
     * Sets quantity_allocated_greater_than
     *
     * @param double $quantity_allocated_greater_than quantity_allocated_greater_than
     *
     * @return $this
     */
    public function setQuantityAllocatedGreaterThan($quantity_allocated_greater_than)
    {
        $this->container['quantity_allocated_greater_than'] = $quantity_allocated_greater_than;

        return $this;
    }

    /**
     * Gets quantity_allocated_less_than
     *
     * @return double
     */
    public function getQuantityAllocatedLessThan()
    {
        return $this->container['quantity_allocated_less_than'];
    }

    /**
     * Sets quantity_allocated_less_than
     *
     * @param double $quantity_allocated_less_than quantity_allocated_less_than
     *
     * @return $this
     */
    public function setQuantityAllocatedLessThan($quantity_allocated_less_than)
    {
        $this->container['quantity_allocated_less_than'] = $quantity_allocated_less_than;

        return $this;
    }

    /**
     * Gets quantity_allocated_less_than_or_equal_to
     *
     * @return double
     */
    public function getQuantityAllocatedLessThanOrEqualTo()
    {
        return $this->container['quantity_allocated_less_than_or_equal_to'];
    }

    /**
     * Sets quantity_allocated_less_than_or_equal_to
     *
     * @param double $quantity_allocated_less_than_or_equal_to quantity_allocated_less_than_or_equal_to
     *
     * @return $this
     */
    public function setQuantityAllocatedLessThanOrEqualTo($quantity_allocated_less_than_or_equal_to)
    {
        $this->container['quantity_allocated_less_than_or_equal_to'] = $quantity_allocated_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets quantity_allocated_not_equal_to
     *
     * @return double
     */
    public function getQuantityAllocatedNotEqualTo()
    {
        return $this->container['quantity_allocated_not_equal_to'];
    }

    /**
     * Sets quantity_allocated_not_equal_to
     *
     * @param double $quantity_allocated_not_equal_to quantity_allocated_not_equal_to
     *
     * @return $this
     */
    public function setQuantityAllocatedNotEqualTo($quantity_allocated_not_equal_to)
    {
        $this->container['quantity_allocated_not_equal_to'] = $quantity_allocated_not_equal_to;

        return $this;
    }

    /**
     * Gets quantity_allocated_between
     *
     * @return double[]
     */
    public function getQuantityAllocatedBetween()
    {
        return $this->container['quantity_allocated_between'];
    }

    /**
     * Sets quantity_allocated_between
     *
     * @param double[] $quantity_allocated_between quantity_allocated_between
     *
     * @return $this
     */
    public function setQuantityAllocatedBetween($quantity_allocated_between)
    {
        $this->container['quantity_allocated_between'] = $quantity_allocated_between;

        return $this;
    }

    /**
     * Gets quantity_allocated_in
     *
     * @return double[]
     */
    public function getQuantityAllocatedIn()
    {
        return $this->container['quantity_allocated_in'];
    }

    /**
     * Sets quantity_allocated_in
     *
     * @param double[] $quantity_allocated_in quantity_allocated_in
     *
     * @return $this
     */
    public function setQuantityAllocatedIn($quantity_allocated_in)
    {
        $this->container['quantity_allocated_in'] = $quantity_allocated_in;

        return $this;
    }

    /**
     * Gets in_logical_id
     *
     * @return string
     */
    public function getInLogicalId()
    {
        return $this->container['in_logical_id'];
    }

    /**
     * Sets in_logical_id
     *
     * @param string $in_logical_id in_logical_id
     *
     * @return $this
     */
    public function setInLogicalId($in_logical_id)
    {
        $this->container['in_logical_id'] = $in_logical_id;

        return $this;
    }

    /**
     * Gets in_logical_id_starts_with
     *
     * @return string
     */
    public function getInLogicalIdStartsWith()
    {
        return $this->container['in_logical_id_starts_with'];
    }

    /**
     * Sets in_logical_id_starts_with
     *
     * @param string $in_logical_id_starts_with in_logical_id_starts_with
     *
     * @return $this
     */
    public function setInLogicalIdStartsWith($in_logical_id_starts_with)
    {
        $this->container['in_logical_id_starts_with'] = $in_logical_id_starts_with;

        return $this;
    }

    /**
     * Gets in_logical_id_ends_with
     *
     * @return string
     */
    public function getInLogicalIdEndsWith()
    {
        return $this->container['in_logical_id_ends_with'];
    }

    /**
     * Sets in_logical_id_ends_with
     *
     * @param string $in_logical_id_ends_with in_logical_id_ends_with
     *
     * @return $this
     */
    public function setInLogicalIdEndsWith($in_logical_id_ends_with)
    {
        $this->container['in_logical_id_ends_with'] = $in_logical_id_ends_with;

        return $this;
    }

    /**
     * Gets in_logical_id_contains
     *
     * @return string
     */
    public function getInLogicalIdContains()
    {
        return $this->container['in_logical_id_contains'];
    }

    /**
     * Sets in_logical_id_contains
     *
     * @param string $in_logical_id_contains in_logical_id_contains
     *
     * @return $this
     */
    public function setInLogicalIdContains($in_logical_id_contains)
    {
        $this->container['in_logical_id_contains'] = $in_logical_id_contains;

        return $this;
    }

    /**
     * Gets in_logical_id_like
     *
     * @return string
     */
    public function getInLogicalIdLike()
    {
        return $this->container['in_logical_id_like'];
    }

    /**
     * Sets in_logical_id_like
     *
     * @param string $in_logical_id_like in_logical_id_like
     *
     * @return $this
     */
    public function setInLogicalIdLike($in_logical_id_like)
    {
        $this->container['in_logical_id_like'] = $in_logical_id_like;

        return $this;
    }

    /**
     * Gets in_logical_id_between
     *
     * @return string[]
     */
    public function getInLogicalIdBetween()
    {
        return $this->container['in_logical_id_between'];
    }

    /**
     * Sets in_logical_id_between
     *
     * @param string[] $in_logical_id_between in_logical_id_between
     *
     * @return $this
     */
    public function setInLogicalIdBetween($in_logical_id_between)
    {
        $this->container['in_logical_id_between'] = $in_logical_id_between;

        return $this;
    }

    /**
     * Gets in_logical_id_in
     *
     * @return string[]
     */
    public function getInLogicalIdIn()
    {
        return $this->container['in_logical_id_in'];
    }

    /**
     * Sets in_logical_id_in
     *
     * @param string[] $in_logical_id_in in_logical_id_in
     *
     * @return $this
     */
    public function setInLogicalIdIn($in_logical_id_in)
    {
        $this->container['in_logical_id_in'] = $in_logical_id_in;

        return $this;
    }

    /**
     * Gets bin_location_desc
     *
     * @return string
     */
    public function getBinLocationDesc()
    {
        return $this->container['bin_location_desc'];
    }

    /**
     * Sets bin_location_desc
     *
     * @param string $bin_location_desc bin_location_desc
     *
     * @return $this
     */
    public function setBinLocationDesc($bin_location_desc)
    {
        $this->container['bin_location_desc'] = $bin_location_desc;

        return $this;
    }

    /**
     * Gets bin_location_desc_starts_with
     *
     * @return string
     */
    public function getBinLocationDescStartsWith()
    {
        return $this->container['bin_location_desc_starts_with'];
    }

    /**
     * Sets bin_location_desc_starts_with
     *
     * @param string $bin_location_desc_starts_with bin_location_desc_starts_with
     *
     * @return $this
     */
    public function setBinLocationDescStartsWith($bin_location_desc_starts_with)
    {
        $this->container['bin_location_desc_starts_with'] = $bin_location_desc_starts_with;

        return $this;
    }

    /**
     * Gets bin_location_desc_ends_with
     *
     * @return string
     */
    public function getBinLocationDescEndsWith()
    {
        return $this->container['bin_location_desc_ends_with'];
    }

    /**
     * Sets bin_location_desc_ends_with
     *
     * @param string $bin_location_desc_ends_with bin_location_desc_ends_with
     *
     * @return $this
     */
    public function setBinLocationDescEndsWith($bin_location_desc_ends_with)
    {
        $this->container['bin_location_desc_ends_with'] = $bin_location_desc_ends_with;

        return $this;
    }

    /**
     * Gets bin_location_desc_contains
     *
     * @return string
     */
    public function getBinLocationDescContains()
    {
        return $this->container['bin_location_desc_contains'];
    }

    /**
     * Sets bin_location_desc_contains
     *
     * @param string $bin_location_desc_contains bin_location_desc_contains
     *
     * @return $this
     */
    public function setBinLocationDescContains($bin_location_desc_contains)
    {
        $this->container['bin_location_desc_contains'] = $bin_location_desc_contains;

        return $this;
    }

    /**
     * Gets bin_location_desc_like
     *
     * @return string
     */
    public function getBinLocationDescLike()
    {
        return $this->container['bin_location_desc_like'];
    }

    /**
     * Sets bin_location_desc_like
     *
     * @param string $bin_location_desc_like bin_location_desc_like
     *
     * @return $this
     */
    public function setBinLocationDescLike($bin_location_desc_like)
    {
        $this->container['bin_location_desc_like'] = $bin_location_desc_like;

        return $this;
    }

    /**
     * Gets bin_location_desc_between
     *
     * @return string[]
     */
    public function getBinLocationDescBetween()
    {
        return $this->container['bin_location_desc_between'];
    }

    /**
     * Sets bin_location_desc_between
     *
     * @param string[] $bin_location_desc_between bin_location_desc_between
     *
     * @return $this
     */
    public function setBinLocationDescBetween($bin_location_desc_between)
    {
        $this->container['bin_location_desc_between'] = $bin_location_desc_between;

        return $this;
    }

    /**
     * Gets bin_location_desc_in
     *
     * @return string[]
     */
    public function getBinLocationDescIn()
    {
        return $this->container['bin_location_desc_in'];
    }

    /**
     * Sets bin_location_desc_in
     *
     * @param string[] $bin_location_desc_in bin_location_desc_in
     *
     * @return $this
     */
    public function setBinLocationDescIn($bin_location_desc_in)
    {
        $this->container['bin_location_desc_in'] = $bin_location_desc_in;

        return $this;
    }

    /**
     * Gets expiry_date
     *
     * @return \DateTime
     */
    public function getExpiryDate()
    {
        return $this->container['expiry_date'];
    }

    /**
     * Sets expiry_date
     *
     * @param \DateTime $expiry_date expiry_date
     *
     * @return $this
     */
    public function setExpiryDate($expiry_date)
    {
        $this->container['expiry_date'] = $expiry_date;

        return $this;
    }

    /**
     * Gets expiry_date_greater_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getExpiryDateGreaterThanOrEqualTo()
    {
        return $this->container['expiry_date_greater_than_or_equal_to'];
    }

    /**
     * Sets expiry_date_greater_than_or_equal_to
     *
     * @param \DateTime $expiry_date_greater_than_or_equal_to expiry_date_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setExpiryDateGreaterThanOrEqualTo($expiry_date_greater_than_or_equal_to)
    {
        $this->container['expiry_date_greater_than_or_equal_to'] = $expiry_date_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets expiry_date_greater_than
     *
     * @return \DateTime
     */
    public function getExpiryDateGreaterThan()
    {
        return $this->container['expiry_date_greater_than'];
    }

    /**
     * Sets expiry_date_greater_than
     *
     * @param \DateTime $expiry_date_greater_than expiry_date_greater_than
     *
     * @return $this
     */
    public function setExpiryDateGreaterThan($expiry_date_greater_than)
    {
        $this->container['expiry_date_greater_than'] = $expiry_date_greater_than;

        return $this;
    }

    /**
     * Gets expiry_date_less_than
     *
     * @return \DateTime
     */
    public function getExpiryDateLessThan()
    {
        return $this->container['expiry_date_less_than'];
    }

    /**
     * Sets expiry_date_less_than
     *
     * @param \DateTime $expiry_date_less_than expiry_date_less_than
     *
     * @return $this
     */
    public function setExpiryDateLessThan($expiry_date_less_than)
    {
        $this->container['expiry_date_less_than'] = $expiry_date_less_than;

        return $this;
    }

    /**
     * Gets expiry_date_less_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getExpiryDateLessThanOrEqualTo()
    {
        return $this->container['expiry_date_less_than_or_equal_to'];
    }

    /**
     * Sets expiry_date_less_than_or_equal_to
     *
     * @param \DateTime $expiry_date_less_than_or_equal_to expiry_date_less_than_or_equal_to
     *
     * @return $this
     */
    public function setExpiryDateLessThanOrEqualTo($expiry_date_less_than_or_equal_to)
    {
        $this->container['expiry_date_less_than_or_equal_to'] = $expiry_date_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets expiry_date_not_equal_to
     *
     * @return \DateTime
     */
    public function getExpiryDateNotEqualTo()
    {
        return $this->container['expiry_date_not_equal_to'];
    }

    /**
     * Sets expiry_date_not_equal_to
     *
     * @param \DateTime $expiry_date_not_equal_to expiry_date_not_equal_to
     *
     * @return $this
     */
    public function setExpiryDateNotEqualTo($expiry_date_not_equal_to)
    {
        $this->container['expiry_date_not_equal_to'] = $expiry_date_not_equal_to;

        return $this;
    }

    /**
     * Gets expiry_date_between
     *
     * @return \DateTime[]
     */
    public function getExpiryDateBetween()
    {
        return $this->container['expiry_date_between'];
    }

    /**
     * Sets expiry_date_between
     *
     * @param \DateTime[] $expiry_date_between expiry_date_between
     *
     * @return $this
     */
    public function setExpiryDateBetween($expiry_date_between)
    {
        $this->container['expiry_date_between'] = $expiry_date_between;

        return $this;
    }

    /**
     * Gets expiry_date_in
     *
     * @return \DateTime[]
     */
    public function getExpiryDateIn()
    {
        return $this->container['expiry_date_in'];
    }

    /**
     * Sets expiry_date_in
     *
     * @param \DateTime[] $expiry_date_in expiry_date_in
     *
     * @return $this
     */
    public function setExpiryDateIn($expiry_date_in)
    {
        $this->container['expiry_date_in'] = $expiry_date_in;

        return $this;
    }

    /**
     * Gets sy_forms_class_name
     *
     * @return string
     */
    public function getSyFormsClassName()
    {
        return $this->container['sy_forms_class_name'];
    }

    /**
     * Sets sy_forms_class_name
     *
     * @param string $sy_forms_class_name sy_forms_class_name
     *
     * @return $this
     */
    public function setSyFormsClassName($sy_forms_class_name)
    {
        $this->container['sy_forms_class_name'] = $sy_forms_class_name;

        return $this;
    }

    /**
     * Gets sy_forms_class_name_starts_with
     *
     * @return string
     */
    public function getSyFormsClassNameStartsWith()
    {
        return $this->container['sy_forms_class_name_starts_with'];
    }

    /**
     * Sets sy_forms_class_name_starts_with
     *
     * @param string $sy_forms_class_name_starts_with sy_forms_class_name_starts_with
     *
     * @return $this
     */
    public function setSyFormsClassNameStartsWith($sy_forms_class_name_starts_with)
    {
        $this->container['sy_forms_class_name_starts_with'] = $sy_forms_class_name_starts_with;

        return $this;
    }

    /**
     * Gets sy_forms_class_name_ends_with
     *
     * @return string
     */
    public function getSyFormsClassNameEndsWith()
    {
        return $this->container['sy_forms_class_name_ends_with'];
    }

    /**
     * Sets sy_forms_class_name_ends_with
     *
     * @param string $sy_forms_class_name_ends_with sy_forms_class_name_ends_with
     *
     * @return $this
     */
    public function setSyFormsClassNameEndsWith($sy_forms_class_name_ends_with)
    {
        $this->container['sy_forms_class_name_ends_with'] = $sy_forms_class_name_ends_with;

        return $this;
    }

    /**
     * Gets sy_forms_class_name_contains
     *
     * @return string
     */
    public function getSyFormsClassNameContains()
    {
        return $this->container['sy_forms_class_name_contains'];
    }

    /**
     * Sets sy_forms_class_name_contains
     *
     * @param string $sy_forms_class_name_contains sy_forms_class_name_contains
     *
     * @return $this
     */
    public function setSyFormsClassNameContains($sy_forms_class_name_contains)
    {
        $this->container['sy_forms_class_name_contains'] = $sy_forms_class_name_contains;

        return $this;
    }

    /**
     * Gets sy_forms_class_name_like
     *
     * @return string
     */
    public function getSyFormsClassNameLike()
    {
        return $this->container['sy_forms_class_name_like'];
    }

    /**
     * Sets sy_forms_class_name_like
     *
     * @param string $sy_forms_class_name_like sy_forms_class_name_like
     *
     * @return $this
     */
    public function setSyFormsClassNameLike($sy_forms_class_name_like)
    {
        $this->container['sy_forms_class_name_like'] = $sy_forms_class_name_like;

        return $this;
    }

    /**
     * Gets sy_forms_class_name_between
     *
     * @return string[]
     */
    public function getSyFormsClassNameBetween()
    {
        return $this->container['sy_forms_class_name_between'];
    }

    /**
     * Sets sy_forms_class_name_between
     *
     * @param string[] $sy_forms_class_name_between sy_forms_class_name_between
     *
     * @return $this
     */
    public function setSyFormsClassNameBetween($sy_forms_class_name_between)
    {
        $this->container['sy_forms_class_name_between'] = $sy_forms_class_name_between;

        return $this;
    }

    /**
     * Gets sy_forms_class_name_in
     *
     * @return string[]
     */
    public function getSyFormsClassNameIn()
    {
        return $this->container['sy_forms_class_name_in'];
    }

    /**
     * Sets sy_forms_class_name_in
     *
     * @param string[] $sy_forms_class_name_in sy_forms_class_name_in
     *
     * @return $this
     */
    public function setSyFormsClassNameIn($sy_forms_class_name_in)
    {
        $this->container['sy_forms_class_name_in'] = $sy_forms_class_name_in;

        return $this;
    }

    /**
     * Gets skip
     *
     * @return int
     */
    public function getSkip()
    {
        return $this->container['skip'];
    }

    /**
     * Sets skip
     *
     * @param int $skip skip
     *
     * @return $this
     */
    public function setSkip($skip)
    {
        $this->container['skip'] = $skip;

        return $this;
    }

    /**
     * Gets take
     *
     * @return int
     */
    public function getTake()
    {
        return $this->container['take'];
    }

    /**
     * Sets take
     *
     * @param int $take take
     *
     * @return $this
     */
    public function setTake($take)
    {
        $this->container['take'] = $take;

        return $this;
    }

    /**
     * Gets order_by
     *
     * @return string
     */
    public function getOrderBy()
    {
        return $this->container['order_by'];
    }

    /**
     * Sets order_by
     *
     * @param string $order_by order_by
     *
     * @return $this
     */
    public function setOrderBy($order_by)
    {
        $this->container['order_by'] = $order_by;

        return $this;
    }

    /**
     * Gets order_by_desc
     *
     * @return string
     */
    public function getOrderByDesc()
    {
        return $this->container['order_by_desc'];
    }

    /**
     * Sets order_by_desc
     *
     * @param string $order_by_desc order_by_desc
     *
     * @return $this
     */
    public function setOrderByDesc($order_by_desc)
    {
        $this->container['order_by_desc'] = $order_by_desc;

        return $this;
    }

    /**
     * Gets include
     *
     * @return string
     */
    public function getInclude()
    {
        return $this->container['include'];
    }

    /**
     * Sets include
     *
     * @param string $include include
     *
     * @return $this
     */
    public function setInclude($include)
    {
        $this->container['include'] = $include;

        return $this;
    }

    /**
     * Gets fields
     *
     * @return string
     */
    public function getFields()
    {
        return $this->container['fields'];
    }

    /**
     * Sets fields
     *
     * @param string $fields fields
     *
     * @return $this
     */
    public function setFields($fields)
    {
        $this->container['fields'] = $fields;

        return $this;
    }

    /**
     * Gets meta
     *
     * @return \Jiwa\JiwaModel\DictionaryStringString_
     */
    public function getMeta()
    {
        return $this->container['meta'];
    }

    /**
     * Sets meta
     *
     * @param \Jiwa\JiwaModel\DictionaryStringString_ $meta meta
     *
     * @return $this
     */
    public function setMeta($meta)
    {
        $this->container['meta'] = $meta;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


