<?php
/**
 * SalesQuoteSettings
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\Model;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * SalesQuoteSettings Class Doc Comment
 *
 * @category Class
 * @description SalesQuoteSettings
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SalesQuoteSettings implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'SalesQuoteSettings';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'cat1_description' => 'string',
        'cat2_description' => 'string',
        'cat3_description' => 'string',
        'cat4_description' => 'string',
        'cat5_description' => 'string',
        'display_product_up_sell_pop_up' => 'bool',
        'money_decimal_places' => 'int',
        'sales_orders_money_decimal_places' => 'int',
        'sales_orders_money_format_str' => 'string',
        'money_format_str' => 'string',
        'components_fore_colour' => 'int',
        'kit_rounding_fore_colour' => 'int',
        'kit_fore_colour' => 'int',
        'non_inventory_fore_colour' => 'int',
        'default_quantity' => 'double',
        'grouped_caption2' => 'string',
        'allow_invoice_number_override' => 'bool',
        'allow_price_override' => 'bool',
        'allow_other_overrides' => 'bool',
        'allow_manual_part_no_entry' => 'bool',
        'allow_non_inventory_items' => 'bool',
        'allow_tax_rate_overrides' => 'bool',
        'include_value_of_back_orders_in_credit_limit_check' => 'bool',
        'print_invoices_with_zero_quantity_del' => 'bool',
        'invoice_printer_copies' => 'int',
        'print_to_screen' => 'bool',
        'allow_modification_of_printed_unprocessed_invoices' => 'bool',
        'check_for_duplicate_order_nos' => 'bool',
        'use_default_sales_person' => 'bool',
        'default_invoice_type_is_wholesale' => 'bool',
        'link_select' => 'string',
        'link_title' => 'string',
        'link_desc' => 'string',
        'link_key' => 'string',
        'link_id' => 'string',
        'allow_kit_component_override' => 'bool',
        'post_tendered' => 'bool',
        'allow_init_date_edit' => 'bool',
        'use_zero_credit_limit' => 'bool',
        'collect_job_cost_code' => 'bool',
        'ignore_back_order_allocations' => 'bool',
        'use_picking' => 'bool',
        'show_only_users_debtors' => 'bool',
        'allow_save_to_order_when_debtor_on_hold' => 'bool',
        'add_freight_to_all_snapshots' => 'bool',
        'dont_change_pick_prices' => 'bool',
        'auto_kit_pricing' => 'bool',
        'invoices_from_quotes_use_activate_date' => 'bool',
        'grab_soh_from_default_bin' => 'bool',
        'use_tax_exemption' => 'bool',
        'validate_abn' => 'bool',
        'compensate_tax_rounding' => 'bool',
        'use_branching' => 'bool',
        'invoice_type_description1' => 'string',
        'invoice_type_description2' => 'string',
        'allow_invoice_type_change' => 'bool',
        'allow_forward_orders' => 'bool',
        'allow_active_orders' => 'bool',
        'docket_num_header' => 'string',
        'credit_note_header' => 'string',
        'build_payment_reference_from_debtor' => 'bool',
        'quote_no_description' => 'string',
        'short_date_format' => 'string',
        'manual_print_selection' => 'bool',
        'use_direct_tax_if_sell_price_inc_tax' => 'bool',
        'job_code_separator' => 'string',
        'use_kit_rounding_part' => 'bool',
        'kit_rounding_part_id' => 'string',
        'discount_percent_decimal_places' => 'int',
        'default_quote_expiry_days' => 'int',
        'allow_document_manipulation_on_closed_quote' => 'bool',
        'default_document_type_key' => 'string',
        'default_note_type_key' => 'string',
        'copy_sales_quote_includes_notes' => 'bool',
        'copy_sales_quote_includes_documents' => 'bool',
        'dont_apply_debtor_discounts' => 'bool',
        'user_todo_only' => 'bool',
        'do_not_read_soh_levels_for_quotes' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'cat1_description' => null,
        'cat2_description' => null,
        'cat3_description' => null,
        'cat4_description' => null,
        'cat5_description' => null,
        'display_product_up_sell_pop_up' => null,
        'money_decimal_places' => 'int32',
        'sales_orders_money_decimal_places' => 'int32',
        'sales_orders_money_format_str' => null,
        'money_format_str' => null,
        'components_fore_colour' => 'int32',
        'kit_rounding_fore_colour' => 'int32',
        'kit_fore_colour' => 'int32',
        'non_inventory_fore_colour' => 'int32',
        'default_quantity' => 'double',
        'grouped_caption2' => null,
        'allow_invoice_number_override' => null,
        'allow_price_override' => null,
        'allow_other_overrides' => null,
        'allow_manual_part_no_entry' => null,
        'allow_non_inventory_items' => null,
        'allow_tax_rate_overrides' => null,
        'include_value_of_back_orders_in_credit_limit_check' => null,
        'print_invoices_with_zero_quantity_del' => null,
        'invoice_printer_copies' => 'int32',
        'print_to_screen' => null,
        'allow_modification_of_printed_unprocessed_invoices' => null,
        'check_for_duplicate_order_nos' => null,
        'use_default_sales_person' => null,
        'default_invoice_type_is_wholesale' => null,
        'link_select' => null,
        'link_title' => null,
        'link_desc' => null,
        'link_key' => null,
        'link_id' => null,
        'allow_kit_component_override' => null,
        'post_tendered' => null,
        'allow_init_date_edit' => null,
        'use_zero_credit_limit' => null,
        'collect_job_cost_code' => null,
        'ignore_back_order_allocations' => null,
        'use_picking' => null,
        'show_only_users_debtors' => null,
        'allow_save_to_order_when_debtor_on_hold' => null,
        'add_freight_to_all_snapshots' => null,
        'dont_change_pick_prices' => null,
        'auto_kit_pricing' => null,
        'invoices_from_quotes_use_activate_date' => null,
        'grab_soh_from_default_bin' => null,
        'use_tax_exemption' => null,
        'validate_abn' => null,
        'compensate_tax_rounding' => null,
        'use_branching' => null,
        'invoice_type_description1' => null,
        'invoice_type_description2' => null,
        'allow_invoice_type_change' => null,
        'allow_forward_orders' => null,
        'allow_active_orders' => null,
        'docket_num_header' => null,
        'credit_note_header' => null,
        'build_payment_reference_from_debtor' => null,
        'quote_no_description' => null,
        'short_date_format' => null,
        'manual_print_selection' => null,
        'use_direct_tax_if_sell_price_inc_tax' => null,
        'job_code_separator' => null,
        'use_kit_rounding_part' => null,
        'kit_rounding_part_id' => null,
        'discount_percent_decimal_places' => 'int32',
        'default_quote_expiry_days' => 'int32',
        'allow_document_manipulation_on_closed_quote' => null,
        'default_document_type_key' => null,
        'default_note_type_key' => null,
        'copy_sales_quote_includes_notes' => null,
        'copy_sales_quote_includes_documents' => null,
        'dont_apply_debtor_discounts' => null,
        'user_todo_only' => null,
        'do_not_read_soh_levels_for_quotes' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'cat1_description' => 'Cat1Description',
        'cat2_description' => 'Cat2Description',
        'cat3_description' => 'Cat3Description',
        'cat4_description' => 'Cat4Description',
        'cat5_description' => 'Cat5Description',
        'display_product_up_sell_pop_up' => 'DisplayProductUpSellPopUp',
        'money_decimal_places' => 'MoneyDecimalPlaces',
        'sales_orders_money_decimal_places' => 'SalesOrdersMoneyDecimalPlaces',
        'sales_orders_money_format_str' => 'SalesOrdersMoneyFormatStr',
        'money_format_str' => 'MoneyFormatStr',
        'components_fore_colour' => 'ComponentsForeColour',
        'kit_rounding_fore_colour' => 'KitRoundingForeColour',
        'kit_fore_colour' => 'KitForeColour',
        'non_inventory_fore_colour' => 'NonInventoryForeColour',
        'default_quantity' => 'DefaultQuantity',
        'grouped_caption2' => 'GroupedCaption2',
        'allow_invoice_number_override' => 'AllowInvoiceNumberOverride',
        'allow_price_override' => 'AllowPriceOverride',
        'allow_other_overrides' => 'AllowOtherOverrides',
        'allow_manual_part_no_entry' => 'AllowManualPartNoEntry',
        'allow_non_inventory_items' => 'AllowNonInventoryItems',
        'allow_tax_rate_overrides' => 'AllowTaxRateOverrides',
        'include_value_of_back_orders_in_credit_limit_check' => 'IncludeValueOfBackOrdersInCreditLimitCheck',
        'print_invoices_with_zero_quantity_del' => 'PrintInvoicesWithZeroQuantityDel',
        'invoice_printer_copies' => 'InvoicePrinterCopies',
        'print_to_screen' => 'PrintToScreen',
        'allow_modification_of_printed_unprocessed_invoices' => 'AllowModificationOfPrintedUnprocessedInvoices',
        'check_for_duplicate_order_nos' => 'CheckForDuplicateOrderNos',
        'use_default_sales_person' => 'UseDefaultSalesPerson',
        'default_invoice_type_is_wholesale' => 'DefaultInvoiceTypeIsWholesale',
        'link_select' => 'LinkSELECT',
        'link_title' => 'LinkTITLE',
        'link_desc' => 'LinkDESC',
        'link_key' => 'LinkKEY',
        'link_id' => 'LinkID',
        'allow_kit_component_override' => 'AllowKitComponentOverride',
        'post_tendered' => 'PostTendered',
        'allow_init_date_edit' => 'AllowInitDateEdit',
        'use_zero_credit_limit' => 'UseZeroCreditLimit',
        'collect_job_cost_code' => 'CollectJobCostCode',
        'ignore_back_order_allocations' => 'IgnoreBackOrderAllocations',
        'use_picking' => 'UsePicking',
        'show_only_users_debtors' => 'ShowOnlyUsersDebtors',
        'allow_save_to_order_when_debtor_on_hold' => 'AllowSaveToOrderWhenDebtorOnHold',
        'add_freight_to_all_snapshots' => 'AddFreightToAllSnapshots',
        'dont_change_pick_prices' => 'DontChangePickPrices',
        'auto_kit_pricing' => 'AutoKitPricing',
        'invoices_from_quotes_use_activate_date' => 'InvoicesFromQuotesUseActivateDate',
        'grab_soh_from_default_bin' => 'GrabSOHFromDefaultBin',
        'use_tax_exemption' => 'UseTaxExemption',
        'validate_abn' => 'ValidateABN',
        'compensate_tax_rounding' => 'CompensateTaxRounding',
        'use_branching' => 'UseBranching',
        'invoice_type_description1' => 'InvoiceTypeDescription1',
        'invoice_type_description2' => 'InvoiceTypeDescription2',
        'allow_invoice_type_change' => 'AllowInvoiceTypeChange',
        'allow_forward_orders' => 'AllowForwardOrders',
        'allow_active_orders' => 'AllowActiveOrders',
        'docket_num_header' => 'DocketNumHeader',
        'credit_note_header' => 'CreditNoteHeader',
        'build_payment_reference_from_debtor' => 'BuildPaymentReferenceFromDebtor',
        'quote_no_description' => 'QuoteNoDescription',
        'short_date_format' => 'ShortDateFormat',
        'manual_print_selection' => 'ManualPrintSelection',
        'use_direct_tax_if_sell_price_inc_tax' => 'UseDirectTaxIfSellPriceIncTax',
        'job_code_separator' => 'JobCodeSeparator',
        'use_kit_rounding_part' => 'UseKitRoundingPart',
        'kit_rounding_part_id' => 'KitRoundingPartID',
        'discount_percent_decimal_places' => 'DiscountPercentDecimalPlaces',
        'default_quote_expiry_days' => 'DefaultQuoteExpiryDays',
        'allow_document_manipulation_on_closed_quote' => 'AllowDocumentManipulationOnClosedQuote',
        'default_document_type_key' => 'DefaultDocumentTypeKey',
        'default_note_type_key' => 'DefaultNoteTypeKey',
        'copy_sales_quote_includes_notes' => 'CopySalesQuoteIncludesNotes',
        'copy_sales_quote_includes_documents' => 'CopySalesQuoteIncludesDocuments',
        'dont_apply_debtor_discounts' => 'DontApplyDebtorDiscounts',
        'user_todo_only' => 'UserTodoOnly',
        'do_not_read_soh_levels_for_quotes' => 'DoNotReadSOHLevelsForQuotes'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'cat1_description' => 'setCat1Description',
        'cat2_description' => 'setCat2Description',
        'cat3_description' => 'setCat3Description',
        'cat4_description' => 'setCat4Description',
        'cat5_description' => 'setCat5Description',
        'display_product_up_sell_pop_up' => 'setDisplayProductUpSellPopUp',
        'money_decimal_places' => 'setMoneyDecimalPlaces',
        'sales_orders_money_decimal_places' => 'setSalesOrdersMoneyDecimalPlaces',
        'sales_orders_money_format_str' => 'setSalesOrdersMoneyFormatStr',
        'money_format_str' => 'setMoneyFormatStr',
        'components_fore_colour' => 'setComponentsForeColour',
        'kit_rounding_fore_colour' => 'setKitRoundingForeColour',
        'kit_fore_colour' => 'setKitForeColour',
        'non_inventory_fore_colour' => 'setNonInventoryForeColour',
        'default_quantity' => 'setDefaultQuantity',
        'grouped_caption2' => 'setGroupedCaption2',
        'allow_invoice_number_override' => 'setAllowInvoiceNumberOverride',
        'allow_price_override' => 'setAllowPriceOverride',
        'allow_other_overrides' => 'setAllowOtherOverrides',
        'allow_manual_part_no_entry' => 'setAllowManualPartNoEntry',
        'allow_non_inventory_items' => 'setAllowNonInventoryItems',
        'allow_tax_rate_overrides' => 'setAllowTaxRateOverrides',
        'include_value_of_back_orders_in_credit_limit_check' => 'setIncludeValueOfBackOrdersInCreditLimitCheck',
        'print_invoices_with_zero_quantity_del' => 'setPrintInvoicesWithZeroQuantityDel',
        'invoice_printer_copies' => 'setInvoicePrinterCopies',
        'print_to_screen' => 'setPrintToScreen',
        'allow_modification_of_printed_unprocessed_invoices' => 'setAllowModificationOfPrintedUnprocessedInvoices',
        'check_for_duplicate_order_nos' => 'setCheckForDuplicateOrderNos',
        'use_default_sales_person' => 'setUseDefaultSalesPerson',
        'default_invoice_type_is_wholesale' => 'setDefaultInvoiceTypeIsWholesale',
        'link_select' => 'setLinkSelect',
        'link_title' => 'setLinkTitle',
        'link_desc' => 'setLinkDesc',
        'link_key' => 'setLinkKey',
        'link_id' => 'setLinkId',
        'allow_kit_component_override' => 'setAllowKitComponentOverride',
        'post_tendered' => 'setPostTendered',
        'allow_init_date_edit' => 'setAllowInitDateEdit',
        'use_zero_credit_limit' => 'setUseZeroCreditLimit',
        'collect_job_cost_code' => 'setCollectJobCostCode',
        'ignore_back_order_allocations' => 'setIgnoreBackOrderAllocations',
        'use_picking' => 'setUsePicking',
        'show_only_users_debtors' => 'setShowOnlyUsersDebtors',
        'allow_save_to_order_when_debtor_on_hold' => 'setAllowSaveToOrderWhenDebtorOnHold',
        'add_freight_to_all_snapshots' => 'setAddFreightToAllSnapshots',
        'dont_change_pick_prices' => 'setDontChangePickPrices',
        'auto_kit_pricing' => 'setAutoKitPricing',
        'invoices_from_quotes_use_activate_date' => 'setInvoicesFromQuotesUseActivateDate',
        'grab_soh_from_default_bin' => 'setGrabSohFromDefaultBin',
        'use_tax_exemption' => 'setUseTaxExemption',
        'validate_abn' => 'setValidateAbn',
        'compensate_tax_rounding' => 'setCompensateTaxRounding',
        'use_branching' => 'setUseBranching',
        'invoice_type_description1' => 'setInvoiceTypeDescription1',
        'invoice_type_description2' => 'setInvoiceTypeDescription2',
        'allow_invoice_type_change' => 'setAllowInvoiceTypeChange',
        'allow_forward_orders' => 'setAllowForwardOrders',
        'allow_active_orders' => 'setAllowActiveOrders',
        'docket_num_header' => 'setDocketNumHeader',
        'credit_note_header' => 'setCreditNoteHeader',
        'build_payment_reference_from_debtor' => 'setBuildPaymentReferenceFromDebtor',
        'quote_no_description' => 'setQuoteNoDescription',
        'short_date_format' => 'setShortDateFormat',
        'manual_print_selection' => 'setManualPrintSelection',
        'use_direct_tax_if_sell_price_inc_tax' => 'setUseDirectTaxIfSellPriceIncTax',
        'job_code_separator' => 'setJobCodeSeparator',
        'use_kit_rounding_part' => 'setUseKitRoundingPart',
        'kit_rounding_part_id' => 'setKitRoundingPartId',
        'discount_percent_decimal_places' => 'setDiscountPercentDecimalPlaces',
        'default_quote_expiry_days' => 'setDefaultQuoteExpiryDays',
        'allow_document_manipulation_on_closed_quote' => 'setAllowDocumentManipulationOnClosedQuote',
        'default_document_type_key' => 'setDefaultDocumentTypeKey',
        'default_note_type_key' => 'setDefaultNoteTypeKey',
        'copy_sales_quote_includes_notes' => 'setCopySalesQuoteIncludesNotes',
        'copy_sales_quote_includes_documents' => 'setCopySalesQuoteIncludesDocuments',
        'dont_apply_debtor_discounts' => 'setDontApplyDebtorDiscounts',
        'user_todo_only' => 'setUserTodoOnly',
        'do_not_read_soh_levels_for_quotes' => 'setDoNotReadSohLevelsForQuotes'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'cat1_description' => 'getCat1Description',
        'cat2_description' => 'getCat2Description',
        'cat3_description' => 'getCat3Description',
        'cat4_description' => 'getCat4Description',
        'cat5_description' => 'getCat5Description',
        'display_product_up_sell_pop_up' => 'getDisplayProductUpSellPopUp',
        'money_decimal_places' => 'getMoneyDecimalPlaces',
        'sales_orders_money_decimal_places' => 'getSalesOrdersMoneyDecimalPlaces',
        'sales_orders_money_format_str' => 'getSalesOrdersMoneyFormatStr',
        'money_format_str' => 'getMoneyFormatStr',
        'components_fore_colour' => 'getComponentsForeColour',
        'kit_rounding_fore_colour' => 'getKitRoundingForeColour',
        'kit_fore_colour' => 'getKitForeColour',
        'non_inventory_fore_colour' => 'getNonInventoryForeColour',
        'default_quantity' => 'getDefaultQuantity',
        'grouped_caption2' => 'getGroupedCaption2',
        'allow_invoice_number_override' => 'getAllowInvoiceNumberOverride',
        'allow_price_override' => 'getAllowPriceOverride',
        'allow_other_overrides' => 'getAllowOtherOverrides',
        'allow_manual_part_no_entry' => 'getAllowManualPartNoEntry',
        'allow_non_inventory_items' => 'getAllowNonInventoryItems',
        'allow_tax_rate_overrides' => 'getAllowTaxRateOverrides',
        'include_value_of_back_orders_in_credit_limit_check' => 'getIncludeValueOfBackOrdersInCreditLimitCheck',
        'print_invoices_with_zero_quantity_del' => 'getPrintInvoicesWithZeroQuantityDel',
        'invoice_printer_copies' => 'getInvoicePrinterCopies',
        'print_to_screen' => 'getPrintToScreen',
        'allow_modification_of_printed_unprocessed_invoices' => 'getAllowModificationOfPrintedUnprocessedInvoices',
        'check_for_duplicate_order_nos' => 'getCheckForDuplicateOrderNos',
        'use_default_sales_person' => 'getUseDefaultSalesPerson',
        'default_invoice_type_is_wholesale' => 'getDefaultInvoiceTypeIsWholesale',
        'link_select' => 'getLinkSelect',
        'link_title' => 'getLinkTitle',
        'link_desc' => 'getLinkDesc',
        'link_key' => 'getLinkKey',
        'link_id' => 'getLinkId',
        'allow_kit_component_override' => 'getAllowKitComponentOverride',
        'post_tendered' => 'getPostTendered',
        'allow_init_date_edit' => 'getAllowInitDateEdit',
        'use_zero_credit_limit' => 'getUseZeroCreditLimit',
        'collect_job_cost_code' => 'getCollectJobCostCode',
        'ignore_back_order_allocations' => 'getIgnoreBackOrderAllocations',
        'use_picking' => 'getUsePicking',
        'show_only_users_debtors' => 'getShowOnlyUsersDebtors',
        'allow_save_to_order_when_debtor_on_hold' => 'getAllowSaveToOrderWhenDebtorOnHold',
        'add_freight_to_all_snapshots' => 'getAddFreightToAllSnapshots',
        'dont_change_pick_prices' => 'getDontChangePickPrices',
        'auto_kit_pricing' => 'getAutoKitPricing',
        'invoices_from_quotes_use_activate_date' => 'getInvoicesFromQuotesUseActivateDate',
        'grab_soh_from_default_bin' => 'getGrabSohFromDefaultBin',
        'use_tax_exemption' => 'getUseTaxExemption',
        'validate_abn' => 'getValidateAbn',
        'compensate_tax_rounding' => 'getCompensateTaxRounding',
        'use_branching' => 'getUseBranching',
        'invoice_type_description1' => 'getInvoiceTypeDescription1',
        'invoice_type_description2' => 'getInvoiceTypeDescription2',
        'allow_invoice_type_change' => 'getAllowInvoiceTypeChange',
        'allow_forward_orders' => 'getAllowForwardOrders',
        'allow_active_orders' => 'getAllowActiveOrders',
        'docket_num_header' => 'getDocketNumHeader',
        'credit_note_header' => 'getCreditNoteHeader',
        'build_payment_reference_from_debtor' => 'getBuildPaymentReferenceFromDebtor',
        'quote_no_description' => 'getQuoteNoDescription',
        'short_date_format' => 'getShortDateFormat',
        'manual_print_selection' => 'getManualPrintSelection',
        'use_direct_tax_if_sell_price_inc_tax' => 'getUseDirectTaxIfSellPriceIncTax',
        'job_code_separator' => 'getJobCodeSeparator',
        'use_kit_rounding_part' => 'getUseKitRoundingPart',
        'kit_rounding_part_id' => 'getKitRoundingPartId',
        'discount_percent_decimal_places' => 'getDiscountPercentDecimalPlaces',
        'default_quote_expiry_days' => 'getDefaultQuoteExpiryDays',
        'allow_document_manipulation_on_closed_quote' => 'getAllowDocumentManipulationOnClosedQuote',
        'default_document_type_key' => 'getDefaultDocumentTypeKey',
        'default_note_type_key' => 'getDefaultNoteTypeKey',
        'copy_sales_quote_includes_notes' => 'getCopySalesQuoteIncludesNotes',
        'copy_sales_quote_includes_documents' => 'getCopySalesQuoteIncludesDocuments',
        'dont_apply_debtor_discounts' => 'getDontApplyDebtorDiscounts',
        'user_todo_only' => 'getUserTodoOnly',
        'do_not_read_soh_levels_for_quotes' => 'getDoNotReadSohLevelsForQuotes'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['cat1_description'] = isset($data['cat1_description']) ? $data['cat1_description'] : null;
        $this->container['cat2_description'] = isset($data['cat2_description']) ? $data['cat2_description'] : null;
        $this->container['cat3_description'] = isset($data['cat3_description']) ? $data['cat3_description'] : null;
        $this->container['cat4_description'] = isset($data['cat4_description']) ? $data['cat4_description'] : null;
        $this->container['cat5_description'] = isset($data['cat5_description']) ? $data['cat5_description'] : null;
        $this->container['display_product_up_sell_pop_up'] = isset($data['display_product_up_sell_pop_up']) ? $data['display_product_up_sell_pop_up'] : null;
        $this->container['money_decimal_places'] = isset($data['money_decimal_places']) ? $data['money_decimal_places'] : null;
        $this->container['sales_orders_money_decimal_places'] = isset($data['sales_orders_money_decimal_places']) ? $data['sales_orders_money_decimal_places'] : null;
        $this->container['sales_orders_money_format_str'] = isset($data['sales_orders_money_format_str']) ? $data['sales_orders_money_format_str'] : null;
        $this->container['money_format_str'] = isset($data['money_format_str']) ? $data['money_format_str'] : null;
        $this->container['components_fore_colour'] = isset($data['components_fore_colour']) ? $data['components_fore_colour'] : null;
        $this->container['kit_rounding_fore_colour'] = isset($data['kit_rounding_fore_colour']) ? $data['kit_rounding_fore_colour'] : null;
        $this->container['kit_fore_colour'] = isset($data['kit_fore_colour']) ? $data['kit_fore_colour'] : null;
        $this->container['non_inventory_fore_colour'] = isset($data['non_inventory_fore_colour']) ? $data['non_inventory_fore_colour'] : null;
        $this->container['default_quantity'] = isset($data['default_quantity']) ? $data['default_quantity'] : null;
        $this->container['grouped_caption2'] = isset($data['grouped_caption2']) ? $data['grouped_caption2'] : null;
        $this->container['allow_invoice_number_override'] = isset($data['allow_invoice_number_override']) ? $data['allow_invoice_number_override'] : null;
        $this->container['allow_price_override'] = isset($data['allow_price_override']) ? $data['allow_price_override'] : null;
        $this->container['allow_other_overrides'] = isset($data['allow_other_overrides']) ? $data['allow_other_overrides'] : null;
        $this->container['allow_manual_part_no_entry'] = isset($data['allow_manual_part_no_entry']) ? $data['allow_manual_part_no_entry'] : null;
        $this->container['allow_non_inventory_items'] = isset($data['allow_non_inventory_items']) ? $data['allow_non_inventory_items'] : null;
        $this->container['allow_tax_rate_overrides'] = isset($data['allow_tax_rate_overrides']) ? $data['allow_tax_rate_overrides'] : null;
        $this->container['include_value_of_back_orders_in_credit_limit_check'] = isset($data['include_value_of_back_orders_in_credit_limit_check']) ? $data['include_value_of_back_orders_in_credit_limit_check'] : null;
        $this->container['print_invoices_with_zero_quantity_del'] = isset($data['print_invoices_with_zero_quantity_del']) ? $data['print_invoices_with_zero_quantity_del'] : null;
        $this->container['invoice_printer_copies'] = isset($data['invoice_printer_copies']) ? $data['invoice_printer_copies'] : null;
        $this->container['print_to_screen'] = isset($data['print_to_screen']) ? $data['print_to_screen'] : null;
        $this->container['allow_modification_of_printed_unprocessed_invoices'] = isset($data['allow_modification_of_printed_unprocessed_invoices']) ? $data['allow_modification_of_printed_unprocessed_invoices'] : null;
        $this->container['check_for_duplicate_order_nos'] = isset($data['check_for_duplicate_order_nos']) ? $data['check_for_duplicate_order_nos'] : null;
        $this->container['use_default_sales_person'] = isset($data['use_default_sales_person']) ? $data['use_default_sales_person'] : null;
        $this->container['default_invoice_type_is_wholesale'] = isset($data['default_invoice_type_is_wholesale']) ? $data['default_invoice_type_is_wholesale'] : null;
        $this->container['link_select'] = isset($data['link_select']) ? $data['link_select'] : null;
        $this->container['link_title'] = isset($data['link_title']) ? $data['link_title'] : null;
        $this->container['link_desc'] = isset($data['link_desc']) ? $data['link_desc'] : null;
        $this->container['link_key'] = isset($data['link_key']) ? $data['link_key'] : null;
        $this->container['link_id'] = isset($data['link_id']) ? $data['link_id'] : null;
        $this->container['allow_kit_component_override'] = isset($data['allow_kit_component_override']) ? $data['allow_kit_component_override'] : null;
        $this->container['post_tendered'] = isset($data['post_tendered']) ? $data['post_tendered'] : null;
        $this->container['allow_init_date_edit'] = isset($data['allow_init_date_edit']) ? $data['allow_init_date_edit'] : null;
        $this->container['use_zero_credit_limit'] = isset($data['use_zero_credit_limit']) ? $data['use_zero_credit_limit'] : null;
        $this->container['collect_job_cost_code'] = isset($data['collect_job_cost_code']) ? $data['collect_job_cost_code'] : null;
        $this->container['ignore_back_order_allocations'] = isset($data['ignore_back_order_allocations']) ? $data['ignore_back_order_allocations'] : null;
        $this->container['use_picking'] = isset($data['use_picking']) ? $data['use_picking'] : null;
        $this->container['show_only_users_debtors'] = isset($data['show_only_users_debtors']) ? $data['show_only_users_debtors'] : null;
        $this->container['allow_save_to_order_when_debtor_on_hold'] = isset($data['allow_save_to_order_when_debtor_on_hold']) ? $data['allow_save_to_order_when_debtor_on_hold'] : null;
        $this->container['add_freight_to_all_snapshots'] = isset($data['add_freight_to_all_snapshots']) ? $data['add_freight_to_all_snapshots'] : null;
        $this->container['dont_change_pick_prices'] = isset($data['dont_change_pick_prices']) ? $data['dont_change_pick_prices'] : null;
        $this->container['auto_kit_pricing'] = isset($data['auto_kit_pricing']) ? $data['auto_kit_pricing'] : null;
        $this->container['invoices_from_quotes_use_activate_date'] = isset($data['invoices_from_quotes_use_activate_date']) ? $data['invoices_from_quotes_use_activate_date'] : null;
        $this->container['grab_soh_from_default_bin'] = isset($data['grab_soh_from_default_bin']) ? $data['grab_soh_from_default_bin'] : null;
        $this->container['use_tax_exemption'] = isset($data['use_tax_exemption']) ? $data['use_tax_exemption'] : null;
        $this->container['validate_abn'] = isset($data['validate_abn']) ? $data['validate_abn'] : null;
        $this->container['compensate_tax_rounding'] = isset($data['compensate_tax_rounding']) ? $data['compensate_tax_rounding'] : null;
        $this->container['use_branching'] = isset($data['use_branching']) ? $data['use_branching'] : null;
        $this->container['invoice_type_description1'] = isset($data['invoice_type_description1']) ? $data['invoice_type_description1'] : null;
        $this->container['invoice_type_description2'] = isset($data['invoice_type_description2']) ? $data['invoice_type_description2'] : null;
        $this->container['allow_invoice_type_change'] = isset($data['allow_invoice_type_change']) ? $data['allow_invoice_type_change'] : null;
        $this->container['allow_forward_orders'] = isset($data['allow_forward_orders']) ? $data['allow_forward_orders'] : null;
        $this->container['allow_active_orders'] = isset($data['allow_active_orders']) ? $data['allow_active_orders'] : null;
        $this->container['docket_num_header'] = isset($data['docket_num_header']) ? $data['docket_num_header'] : null;
        $this->container['credit_note_header'] = isset($data['credit_note_header']) ? $data['credit_note_header'] : null;
        $this->container['build_payment_reference_from_debtor'] = isset($data['build_payment_reference_from_debtor']) ? $data['build_payment_reference_from_debtor'] : null;
        $this->container['quote_no_description'] = isset($data['quote_no_description']) ? $data['quote_no_description'] : null;
        $this->container['short_date_format'] = isset($data['short_date_format']) ? $data['short_date_format'] : null;
        $this->container['manual_print_selection'] = isset($data['manual_print_selection']) ? $data['manual_print_selection'] : null;
        $this->container['use_direct_tax_if_sell_price_inc_tax'] = isset($data['use_direct_tax_if_sell_price_inc_tax']) ? $data['use_direct_tax_if_sell_price_inc_tax'] : null;
        $this->container['job_code_separator'] = isset($data['job_code_separator']) ? $data['job_code_separator'] : null;
        $this->container['use_kit_rounding_part'] = isset($data['use_kit_rounding_part']) ? $data['use_kit_rounding_part'] : null;
        $this->container['kit_rounding_part_id'] = isset($data['kit_rounding_part_id']) ? $data['kit_rounding_part_id'] : null;
        $this->container['discount_percent_decimal_places'] = isset($data['discount_percent_decimal_places']) ? $data['discount_percent_decimal_places'] : null;
        $this->container['default_quote_expiry_days'] = isset($data['default_quote_expiry_days']) ? $data['default_quote_expiry_days'] : null;
        $this->container['allow_document_manipulation_on_closed_quote'] = isset($data['allow_document_manipulation_on_closed_quote']) ? $data['allow_document_manipulation_on_closed_quote'] : null;
        $this->container['default_document_type_key'] = isset($data['default_document_type_key']) ? $data['default_document_type_key'] : null;
        $this->container['default_note_type_key'] = isset($data['default_note_type_key']) ? $data['default_note_type_key'] : null;
        $this->container['copy_sales_quote_includes_notes'] = isset($data['copy_sales_quote_includes_notes']) ? $data['copy_sales_quote_includes_notes'] : null;
        $this->container['copy_sales_quote_includes_documents'] = isset($data['copy_sales_quote_includes_documents']) ? $data['copy_sales_quote_includes_documents'] : null;
        $this->container['dont_apply_debtor_discounts'] = isset($data['dont_apply_debtor_discounts']) ? $data['dont_apply_debtor_discounts'] : null;
        $this->container['user_todo_only'] = isset($data['user_todo_only']) ? $data['user_todo_only'] : null;
        $this->container['do_not_read_soh_levels_for_quotes'] = isset($data['do_not_read_soh_levels_for_quotes']) ? $data['do_not_read_soh_levels_for_quotes'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets cat1_description
     *
     * @return string
     */
    public function getCat1Description()
    {
        return $this->container['cat1_description'];
    }

    /**
     * Sets cat1_description
     *
     * @param string $cat1_description cat1_description
     *
     * @return $this
     */
    public function setCat1Description($cat1_description)
    {
        $this->container['cat1_description'] = $cat1_description;

        return $this;
    }

    /**
     * Gets cat2_description
     *
     * @return string
     */
    public function getCat2Description()
    {
        return $this->container['cat2_description'];
    }

    /**
     * Sets cat2_description
     *
     * @param string $cat2_description cat2_description
     *
     * @return $this
     */
    public function setCat2Description($cat2_description)
    {
        $this->container['cat2_description'] = $cat2_description;

        return $this;
    }

    /**
     * Gets cat3_description
     *
     * @return string
     */
    public function getCat3Description()
    {
        return $this->container['cat3_description'];
    }

    /**
     * Sets cat3_description
     *
     * @param string $cat3_description cat3_description
     *
     * @return $this
     */
    public function setCat3Description($cat3_description)
    {
        $this->container['cat3_description'] = $cat3_description;

        return $this;
    }

    /**
     * Gets cat4_description
     *
     * @return string
     */
    public function getCat4Description()
    {
        return $this->container['cat4_description'];
    }

    /**
     * Sets cat4_description
     *
     * @param string $cat4_description cat4_description
     *
     * @return $this
     */
    public function setCat4Description($cat4_description)
    {
        $this->container['cat4_description'] = $cat4_description;

        return $this;
    }

    /**
     * Gets cat5_description
     *
     * @return string
     */
    public function getCat5Description()
    {
        return $this->container['cat5_description'];
    }

    /**
     * Sets cat5_description
     *
     * @param string $cat5_description cat5_description
     *
     * @return $this
     */
    public function setCat5Description($cat5_description)
    {
        $this->container['cat5_description'] = $cat5_description;

        return $this;
    }

    /**
     * Gets display_product_up_sell_pop_up
     *
     * @return bool
     */
    public function getDisplayProductUpSellPopUp()
    {
        return $this->container['display_product_up_sell_pop_up'];
    }

    /**
     * Sets display_product_up_sell_pop_up
     *
     * @param bool $display_product_up_sell_pop_up display_product_up_sell_pop_up
     *
     * @return $this
     */
    public function setDisplayProductUpSellPopUp($display_product_up_sell_pop_up)
    {
        $this->container['display_product_up_sell_pop_up'] = $display_product_up_sell_pop_up;

        return $this;
    }

    /**
     * Gets money_decimal_places
     *
     * @return int
     */
    public function getMoneyDecimalPlaces()
    {
        return $this->container['money_decimal_places'];
    }

    /**
     * Sets money_decimal_places
     *
     * @param int $money_decimal_places money_decimal_places
     *
     * @return $this
     */
    public function setMoneyDecimalPlaces($money_decimal_places)
    {
        $this->container['money_decimal_places'] = $money_decimal_places;

        return $this;
    }

    /**
     * Gets sales_orders_money_decimal_places
     *
     * @return int
     */
    public function getSalesOrdersMoneyDecimalPlaces()
    {
        return $this->container['sales_orders_money_decimal_places'];
    }

    /**
     * Sets sales_orders_money_decimal_places
     *
     * @param int $sales_orders_money_decimal_places sales_orders_money_decimal_places
     *
     * @return $this
     */
    public function setSalesOrdersMoneyDecimalPlaces($sales_orders_money_decimal_places)
    {
        $this->container['sales_orders_money_decimal_places'] = $sales_orders_money_decimal_places;

        return $this;
    }

    /**
     * Gets sales_orders_money_format_str
     *
     * @return string
     */
    public function getSalesOrdersMoneyFormatStr()
    {
        return $this->container['sales_orders_money_format_str'];
    }

    /**
     * Sets sales_orders_money_format_str
     *
     * @param string $sales_orders_money_format_str sales_orders_money_format_str
     *
     * @return $this
     */
    public function setSalesOrdersMoneyFormatStr($sales_orders_money_format_str)
    {
        $this->container['sales_orders_money_format_str'] = $sales_orders_money_format_str;

        return $this;
    }

    /**
     * Gets money_format_str
     *
     * @return string
     */
    public function getMoneyFormatStr()
    {
        return $this->container['money_format_str'];
    }

    /**
     * Sets money_format_str
     *
     * @param string $money_format_str money_format_str
     *
     * @return $this
     */
    public function setMoneyFormatStr($money_format_str)
    {
        $this->container['money_format_str'] = $money_format_str;

        return $this;
    }

    /**
     * Gets components_fore_colour
     *
     * @return int
     */
    public function getComponentsForeColour()
    {
        return $this->container['components_fore_colour'];
    }

    /**
     * Sets components_fore_colour
     *
     * @param int $components_fore_colour components_fore_colour
     *
     * @return $this
     */
    public function setComponentsForeColour($components_fore_colour)
    {
        $this->container['components_fore_colour'] = $components_fore_colour;

        return $this;
    }

    /**
     * Gets kit_rounding_fore_colour
     *
     * @return int
     */
    public function getKitRoundingForeColour()
    {
        return $this->container['kit_rounding_fore_colour'];
    }

    /**
     * Sets kit_rounding_fore_colour
     *
     * @param int $kit_rounding_fore_colour kit_rounding_fore_colour
     *
     * @return $this
     */
    public function setKitRoundingForeColour($kit_rounding_fore_colour)
    {
        $this->container['kit_rounding_fore_colour'] = $kit_rounding_fore_colour;

        return $this;
    }

    /**
     * Gets kit_fore_colour
     *
     * @return int
     */
    public function getKitForeColour()
    {
        return $this->container['kit_fore_colour'];
    }

    /**
     * Sets kit_fore_colour
     *
     * @param int $kit_fore_colour kit_fore_colour
     *
     * @return $this
     */
    public function setKitForeColour($kit_fore_colour)
    {
        $this->container['kit_fore_colour'] = $kit_fore_colour;

        return $this;
    }

    /**
     * Gets non_inventory_fore_colour
     *
     * @return int
     */
    public function getNonInventoryForeColour()
    {
        return $this->container['non_inventory_fore_colour'];
    }

    /**
     * Sets non_inventory_fore_colour
     *
     * @param int $non_inventory_fore_colour non_inventory_fore_colour
     *
     * @return $this
     */
    public function setNonInventoryForeColour($non_inventory_fore_colour)
    {
        $this->container['non_inventory_fore_colour'] = $non_inventory_fore_colour;

        return $this;
    }

    /**
     * Gets default_quantity
     *
     * @return double
     */
    public function getDefaultQuantity()
    {
        return $this->container['default_quantity'];
    }

    /**
     * Sets default_quantity
     *
     * @param double $default_quantity default_quantity
     *
     * @return $this
     */
    public function setDefaultQuantity($default_quantity)
    {
        $this->container['default_quantity'] = $default_quantity;

        return $this;
    }

    /**
     * Gets grouped_caption2
     *
     * @return string
     */
    public function getGroupedCaption2()
    {
        return $this->container['grouped_caption2'];
    }

    /**
     * Sets grouped_caption2
     *
     * @param string $grouped_caption2 grouped_caption2
     *
     * @return $this
     */
    public function setGroupedCaption2($grouped_caption2)
    {
        $this->container['grouped_caption2'] = $grouped_caption2;

        return $this;
    }

    /**
     * Gets allow_invoice_number_override
     *
     * @return bool
     */
    public function getAllowInvoiceNumberOverride()
    {
        return $this->container['allow_invoice_number_override'];
    }

    /**
     * Sets allow_invoice_number_override
     *
     * @param bool $allow_invoice_number_override allow_invoice_number_override
     *
     * @return $this
     */
    public function setAllowInvoiceNumberOverride($allow_invoice_number_override)
    {
        $this->container['allow_invoice_number_override'] = $allow_invoice_number_override;

        return $this;
    }

    /**
     * Gets allow_price_override
     *
     * @return bool
     */
    public function getAllowPriceOverride()
    {
        return $this->container['allow_price_override'];
    }

    /**
     * Sets allow_price_override
     *
     * @param bool $allow_price_override allow_price_override
     *
     * @return $this
     */
    public function setAllowPriceOverride($allow_price_override)
    {
        $this->container['allow_price_override'] = $allow_price_override;

        return $this;
    }

    /**
     * Gets allow_other_overrides
     *
     * @return bool
     */
    public function getAllowOtherOverrides()
    {
        return $this->container['allow_other_overrides'];
    }

    /**
     * Sets allow_other_overrides
     *
     * @param bool $allow_other_overrides allow_other_overrides
     *
     * @return $this
     */
    public function setAllowOtherOverrides($allow_other_overrides)
    {
        $this->container['allow_other_overrides'] = $allow_other_overrides;

        return $this;
    }

    /**
     * Gets allow_manual_part_no_entry
     *
     * @return bool
     */
    public function getAllowManualPartNoEntry()
    {
        return $this->container['allow_manual_part_no_entry'];
    }

    /**
     * Sets allow_manual_part_no_entry
     *
     * @param bool $allow_manual_part_no_entry allow_manual_part_no_entry
     *
     * @return $this
     */
    public function setAllowManualPartNoEntry($allow_manual_part_no_entry)
    {
        $this->container['allow_manual_part_no_entry'] = $allow_manual_part_no_entry;

        return $this;
    }

    /**
     * Gets allow_non_inventory_items
     *
     * @return bool
     */
    public function getAllowNonInventoryItems()
    {
        return $this->container['allow_non_inventory_items'];
    }

    /**
     * Sets allow_non_inventory_items
     *
     * @param bool $allow_non_inventory_items allow_non_inventory_items
     *
     * @return $this
     */
    public function setAllowNonInventoryItems($allow_non_inventory_items)
    {
        $this->container['allow_non_inventory_items'] = $allow_non_inventory_items;

        return $this;
    }

    /**
     * Gets allow_tax_rate_overrides
     *
     * @return bool
     */
    public function getAllowTaxRateOverrides()
    {
        return $this->container['allow_tax_rate_overrides'];
    }

    /**
     * Sets allow_tax_rate_overrides
     *
     * @param bool $allow_tax_rate_overrides allow_tax_rate_overrides
     *
     * @return $this
     */
    public function setAllowTaxRateOverrides($allow_tax_rate_overrides)
    {
        $this->container['allow_tax_rate_overrides'] = $allow_tax_rate_overrides;

        return $this;
    }

    /**
     * Gets include_value_of_back_orders_in_credit_limit_check
     *
     * @return bool
     */
    public function getIncludeValueOfBackOrdersInCreditLimitCheck()
    {
        return $this->container['include_value_of_back_orders_in_credit_limit_check'];
    }

    /**
     * Sets include_value_of_back_orders_in_credit_limit_check
     *
     * @param bool $include_value_of_back_orders_in_credit_limit_check include_value_of_back_orders_in_credit_limit_check
     *
     * @return $this
     */
    public function setIncludeValueOfBackOrdersInCreditLimitCheck($include_value_of_back_orders_in_credit_limit_check)
    {
        $this->container['include_value_of_back_orders_in_credit_limit_check'] = $include_value_of_back_orders_in_credit_limit_check;

        return $this;
    }

    /**
     * Gets print_invoices_with_zero_quantity_del
     *
     * @return bool
     */
    public function getPrintInvoicesWithZeroQuantityDel()
    {
        return $this->container['print_invoices_with_zero_quantity_del'];
    }

    /**
     * Sets print_invoices_with_zero_quantity_del
     *
     * @param bool $print_invoices_with_zero_quantity_del print_invoices_with_zero_quantity_del
     *
     * @return $this
     */
    public function setPrintInvoicesWithZeroQuantityDel($print_invoices_with_zero_quantity_del)
    {
        $this->container['print_invoices_with_zero_quantity_del'] = $print_invoices_with_zero_quantity_del;

        return $this;
    }

    /**
     * Gets invoice_printer_copies
     *
     * @return int
     */
    public function getInvoicePrinterCopies()
    {
        return $this->container['invoice_printer_copies'];
    }

    /**
     * Sets invoice_printer_copies
     *
     * @param int $invoice_printer_copies invoice_printer_copies
     *
     * @return $this
     */
    public function setInvoicePrinterCopies($invoice_printer_copies)
    {
        $this->container['invoice_printer_copies'] = $invoice_printer_copies;

        return $this;
    }

    /**
     * Gets print_to_screen
     *
     * @return bool
     */
    public function getPrintToScreen()
    {
        return $this->container['print_to_screen'];
    }

    /**
     * Sets print_to_screen
     *
     * @param bool $print_to_screen print_to_screen
     *
     * @return $this
     */
    public function setPrintToScreen($print_to_screen)
    {
        $this->container['print_to_screen'] = $print_to_screen;

        return $this;
    }

    /**
     * Gets allow_modification_of_printed_unprocessed_invoices
     *
     * @return bool
     */
    public function getAllowModificationOfPrintedUnprocessedInvoices()
    {
        return $this->container['allow_modification_of_printed_unprocessed_invoices'];
    }

    /**
     * Sets allow_modification_of_printed_unprocessed_invoices
     *
     * @param bool $allow_modification_of_printed_unprocessed_invoices allow_modification_of_printed_unprocessed_invoices
     *
     * @return $this
     */
    public function setAllowModificationOfPrintedUnprocessedInvoices($allow_modification_of_printed_unprocessed_invoices)
    {
        $this->container['allow_modification_of_printed_unprocessed_invoices'] = $allow_modification_of_printed_unprocessed_invoices;

        return $this;
    }

    /**
     * Gets check_for_duplicate_order_nos
     *
     * @return bool
     */
    public function getCheckForDuplicateOrderNos()
    {
        return $this->container['check_for_duplicate_order_nos'];
    }

    /**
     * Sets check_for_duplicate_order_nos
     *
     * @param bool $check_for_duplicate_order_nos check_for_duplicate_order_nos
     *
     * @return $this
     */
    public function setCheckForDuplicateOrderNos($check_for_duplicate_order_nos)
    {
        $this->container['check_for_duplicate_order_nos'] = $check_for_duplicate_order_nos;

        return $this;
    }

    /**
     * Gets use_default_sales_person
     *
     * @return bool
     */
    public function getUseDefaultSalesPerson()
    {
        return $this->container['use_default_sales_person'];
    }

    /**
     * Sets use_default_sales_person
     *
     * @param bool $use_default_sales_person use_default_sales_person
     *
     * @return $this
     */
    public function setUseDefaultSalesPerson($use_default_sales_person)
    {
        $this->container['use_default_sales_person'] = $use_default_sales_person;

        return $this;
    }

    /**
     * Gets default_invoice_type_is_wholesale
     *
     * @return bool
     */
    public function getDefaultInvoiceTypeIsWholesale()
    {
        return $this->container['default_invoice_type_is_wholesale'];
    }

    /**
     * Sets default_invoice_type_is_wholesale
     *
     * @param bool $default_invoice_type_is_wholesale default_invoice_type_is_wholesale
     *
     * @return $this
     */
    public function setDefaultInvoiceTypeIsWholesale($default_invoice_type_is_wholesale)
    {
        $this->container['default_invoice_type_is_wholesale'] = $default_invoice_type_is_wholesale;

        return $this;
    }

    /**
     * Gets link_select
     *
     * @return string
     */
    public function getLinkSelect()
    {
        return $this->container['link_select'];
    }

    /**
     * Sets link_select
     *
     * @param string $link_select link_select
     *
     * @return $this
     */
    public function setLinkSelect($link_select)
    {
        $this->container['link_select'] = $link_select;

        return $this;
    }

    /**
     * Gets link_title
     *
     * @return string
     */
    public function getLinkTitle()
    {
        return $this->container['link_title'];
    }

    /**
     * Sets link_title
     *
     * @param string $link_title link_title
     *
     * @return $this
     */
    public function setLinkTitle($link_title)
    {
        $this->container['link_title'] = $link_title;

        return $this;
    }

    /**
     * Gets link_desc
     *
     * @return string
     */
    public function getLinkDesc()
    {
        return $this->container['link_desc'];
    }

    /**
     * Sets link_desc
     *
     * @param string $link_desc link_desc
     *
     * @return $this
     */
    public function setLinkDesc($link_desc)
    {
        $this->container['link_desc'] = $link_desc;

        return $this;
    }

    /**
     * Gets link_key
     *
     * @return string
     */
    public function getLinkKey()
    {
        return $this->container['link_key'];
    }

    /**
     * Sets link_key
     *
     * @param string $link_key link_key
     *
     * @return $this
     */
    public function setLinkKey($link_key)
    {
        $this->container['link_key'] = $link_key;

        return $this;
    }

    /**
     * Gets link_id
     *
     * @return string
     */
    public function getLinkId()
    {
        return $this->container['link_id'];
    }

    /**
     * Sets link_id
     *
     * @param string $link_id link_id
     *
     * @return $this
     */
    public function setLinkId($link_id)
    {
        $this->container['link_id'] = $link_id;

        return $this;
    }

    /**
     * Gets allow_kit_component_override
     *
     * @return bool
     */
    public function getAllowKitComponentOverride()
    {
        return $this->container['allow_kit_component_override'];
    }

    /**
     * Sets allow_kit_component_override
     *
     * @param bool $allow_kit_component_override allow_kit_component_override
     *
     * @return $this
     */
    public function setAllowKitComponentOverride($allow_kit_component_override)
    {
        $this->container['allow_kit_component_override'] = $allow_kit_component_override;

        return $this;
    }

    /**
     * Gets post_tendered
     *
     * @return bool
     */
    public function getPostTendered()
    {
        return $this->container['post_tendered'];
    }

    /**
     * Sets post_tendered
     *
     * @param bool $post_tendered post_tendered
     *
     * @return $this
     */
    public function setPostTendered($post_tendered)
    {
        $this->container['post_tendered'] = $post_tendered;

        return $this;
    }

    /**
     * Gets allow_init_date_edit
     *
     * @return bool
     */
    public function getAllowInitDateEdit()
    {
        return $this->container['allow_init_date_edit'];
    }

    /**
     * Sets allow_init_date_edit
     *
     * @param bool $allow_init_date_edit allow_init_date_edit
     *
     * @return $this
     */
    public function setAllowInitDateEdit($allow_init_date_edit)
    {
        $this->container['allow_init_date_edit'] = $allow_init_date_edit;

        return $this;
    }

    /**
     * Gets use_zero_credit_limit
     *
     * @return bool
     */
    public function getUseZeroCreditLimit()
    {
        return $this->container['use_zero_credit_limit'];
    }

    /**
     * Sets use_zero_credit_limit
     *
     * @param bool $use_zero_credit_limit use_zero_credit_limit
     *
     * @return $this
     */
    public function setUseZeroCreditLimit($use_zero_credit_limit)
    {
        $this->container['use_zero_credit_limit'] = $use_zero_credit_limit;

        return $this;
    }

    /**
     * Gets collect_job_cost_code
     *
     * @return bool
     */
    public function getCollectJobCostCode()
    {
        return $this->container['collect_job_cost_code'];
    }

    /**
     * Sets collect_job_cost_code
     *
     * @param bool $collect_job_cost_code collect_job_cost_code
     *
     * @return $this
     */
    public function setCollectJobCostCode($collect_job_cost_code)
    {
        $this->container['collect_job_cost_code'] = $collect_job_cost_code;

        return $this;
    }

    /**
     * Gets ignore_back_order_allocations
     *
     * @return bool
     */
    public function getIgnoreBackOrderAllocations()
    {
        return $this->container['ignore_back_order_allocations'];
    }

    /**
     * Sets ignore_back_order_allocations
     *
     * @param bool $ignore_back_order_allocations ignore_back_order_allocations
     *
     * @return $this
     */
    public function setIgnoreBackOrderAllocations($ignore_back_order_allocations)
    {
        $this->container['ignore_back_order_allocations'] = $ignore_back_order_allocations;

        return $this;
    }

    /**
     * Gets use_picking
     *
     * @return bool
     */
    public function getUsePicking()
    {
        return $this->container['use_picking'];
    }

    /**
     * Sets use_picking
     *
     * @param bool $use_picking use_picking
     *
     * @return $this
     */
    public function setUsePicking($use_picking)
    {
        $this->container['use_picking'] = $use_picking;

        return $this;
    }

    /**
     * Gets show_only_users_debtors
     *
     * @return bool
     */
    public function getShowOnlyUsersDebtors()
    {
        return $this->container['show_only_users_debtors'];
    }

    /**
     * Sets show_only_users_debtors
     *
     * @param bool $show_only_users_debtors show_only_users_debtors
     *
     * @return $this
     */
    public function setShowOnlyUsersDebtors($show_only_users_debtors)
    {
        $this->container['show_only_users_debtors'] = $show_only_users_debtors;

        return $this;
    }

    /**
     * Gets allow_save_to_order_when_debtor_on_hold
     *
     * @return bool
     */
    public function getAllowSaveToOrderWhenDebtorOnHold()
    {
        return $this->container['allow_save_to_order_when_debtor_on_hold'];
    }

    /**
     * Sets allow_save_to_order_when_debtor_on_hold
     *
     * @param bool $allow_save_to_order_when_debtor_on_hold allow_save_to_order_when_debtor_on_hold
     *
     * @return $this
     */
    public function setAllowSaveToOrderWhenDebtorOnHold($allow_save_to_order_when_debtor_on_hold)
    {
        $this->container['allow_save_to_order_when_debtor_on_hold'] = $allow_save_to_order_when_debtor_on_hold;

        return $this;
    }

    /**
     * Gets add_freight_to_all_snapshots
     *
     * @return bool
     */
    public function getAddFreightToAllSnapshots()
    {
        return $this->container['add_freight_to_all_snapshots'];
    }

    /**
     * Sets add_freight_to_all_snapshots
     *
     * @param bool $add_freight_to_all_snapshots add_freight_to_all_snapshots
     *
     * @return $this
     */
    public function setAddFreightToAllSnapshots($add_freight_to_all_snapshots)
    {
        $this->container['add_freight_to_all_snapshots'] = $add_freight_to_all_snapshots;

        return $this;
    }

    /**
     * Gets dont_change_pick_prices
     *
     * @return bool
     */
    public function getDontChangePickPrices()
    {
        return $this->container['dont_change_pick_prices'];
    }

    /**
     * Sets dont_change_pick_prices
     *
     * @param bool $dont_change_pick_prices dont_change_pick_prices
     *
     * @return $this
     */
    public function setDontChangePickPrices($dont_change_pick_prices)
    {
        $this->container['dont_change_pick_prices'] = $dont_change_pick_prices;

        return $this;
    }

    /**
     * Gets auto_kit_pricing
     *
     * @return bool
     */
    public function getAutoKitPricing()
    {
        return $this->container['auto_kit_pricing'];
    }

    /**
     * Sets auto_kit_pricing
     *
     * @param bool $auto_kit_pricing auto_kit_pricing
     *
     * @return $this
     */
    public function setAutoKitPricing($auto_kit_pricing)
    {
        $this->container['auto_kit_pricing'] = $auto_kit_pricing;

        return $this;
    }

    /**
     * Gets invoices_from_quotes_use_activate_date
     *
     * @return bool
     */
    public function getInvoicesFromQuotesUseActivateDate()
    {
        return $this->container['invoices_from_quotes_use_activate_date'];
    }

    /**
     * Sets invoices_from_quotes_use_activate_date
     *
     * @param bool $invoices_from_quotes_use_activate_date invoices_from_quotes_use_activate_date
     *
     * @return $this
     */
    public function setInvoicesFromQuotesUseActivateDate($invoices_from_quotes_use_activate_date)
    {
        $this->container['invoices_from_quotes_use_activate_date'] = $invoices_from_quotes_use_activate_date;

        return $this;
    }

    /**
     * Gets grab_soh_from_default_bin
     *
     * @return bool
     */
    public function getGrabSohFromDefaultBin()
    {
        return $this->container['grab_soh_from_default_bin'];
    }

    /**
     * Sets grab_soh_from_default_bin
     *
     * @param bool $grab_soh_from_default_bin grab_soh_from_default_bin
     *
     * @return $this
     */
    public function setGrabSohFromDefaultBin($grab_soh_from_default_bin)
    {
        $this->container['grab_soh_from_default_bin'] = $grab_soh_from_default_bin;

        return $this;
    }

    /**
     * Gets use_tax_exemption
     *
     * @return bool
     */
    public function getUseTaxExemption()
    {
        return $this->container['use_tax_exemption'];
    }

    /**
     * Sets use_tax_exemption
     *
     * @param bool $use_tax_exemption use_tax_exemption
     *
     * @return $this
     */
    public function setUseTaxExemption($use_tax_exemption)
    {
        $this->container['use_tax_exemption'] = $use_tax_exemption;

        return $this;
    }

    /**
     * Gets validate_abn
     *
     * @return bool
     */
    public function getValidateAbn()
    {
        return $this->container['validate_abn'];
    }

    /**
     * Sets validate_abn
     *
     * @param bool $validate_abn validate_abn
     *
     * @return $this
     */
    public function setValidateAbn($validate_abn)
    {
        $this->container['validate_abn'] = $validate_abn;

        return $this;
    }

    /**
     * Gets compensate_tax_rounding
     *
     * @return bool
     */
    public function getCompensateTaxRounding()
    {
        return $this->container['compensate_tax_rounding'];
    }

    /**
     * Sets compensate_tax_rounding
     *
     * @param bool $compensate_tax_rounding compensate_tax_rounding
     *
     * @return $this
     */
    public function setCompensateTaxRounding($compensate_tax_rounding)
    {
        $this->container['compensate_tax_rounding'] = $compensate_tax_rounding;

        return $this;
    }

    /**
     * Gets use_branching
     *
     * @return bool
     */
    public function getUseBranching()
    {
        return $this->container['use_branching'];
    }

    /**
     * Sets use_branching
     *
     * @param bool $use_branching use_branching
     *
     * @return $this
     */
    public function setUseBranching($use_branching)
    {
        $this->container['use_branching'] = $use_branching;

        return $this;
    }

    /**
     * Gets invoice_type_description1
     *
     * @return string
     */
    public function getInvoiceTypeDescription1()
    {
        return $this->container['invoice_type_description1'];
    }

    /**
     * Sets invoice_type_description1
     *
     * @param string $invoice_type_description1 invoice_type_description1
     *
     * @return $this
     */
    public function setInvoiceTypeDescription1($invoice_type_description1)
    {
        $this->container['invoice_type_description1'] = $invoice_type_description1;

        return $this;
    }

    /**
     * Gets invoice_type_description2
     *
     * @return string
     */
    public function getInvoiceTypeDescription2()
    {
        return $this->container['invoice_type_description2'];
    }

    /**
     * Sets invoice_type_description2
     *
     * @param string $invoice_type_description2 invoice_type_description2
     *
     * @return $this
     */
    public function setInvoiceTypeDescription2($invoice_type_description2)
    {
        $this->container['invoice_type_description2'] = $invoice_type_description2;

        return $this;
    }

    /**
     * Gets allow_invoice_type_change
     *
     * @return bool
     */
    public function getAllowInvoiceTypeChange()
    {
        return $this->container['allow_invoice_type_change'];
    }

    /**
     * Sets allow_invoice_type_change
     *
     * @param bool $allow_invoice_type_change allow_invoice_type_change
     *
     * @return $this
     */
    public function setAllowInvoiceTypeChange($allow_invoice_type_change)
    {
        $this->container['allow_invoice_type_change'] = $allow_invoice_type_change;

        return $this;
    }

    /**
     * Gets allow_forward_orders
     *
     * @return bool
     */
    public function getAllowForwardOrders()
    {
        return $this->container['allow_forward_orders'];
    }

    /**
     * Sets allow_forward_orders
     *
     * @param bool $allow_forward_orders allow_forward_orders
     *
     * @return $this
     */
    public function setAllowForwardOrders($allow_forward_orders)
    {
        $this->container['allow_forward_orders'] = $allow_forward_orders;

        return $this;
    }

    /**
     * Gets allow_active_orders
     *
     * @return bool
     */
    public function getAllowActiveOrders()
    {
        return $this->container['allow_active_orders'];
    }

    /**
     * Sets allow_active_orders
     *
     * @param bool $allow_active_orders allow_active_orders
     *
     * @return $this
     */
    public function setAllowActiveOrders($allow_active_orders)
    {
        $this->container['allow_active_orders'] = $allow_active_orders;

        return $this;
    }

    /**
     * Gets docket_num_header
     *
     * @return string
     */
    public function getDocketNumHeader()
    {
        return $this->container['docket_num_header'];
    }

    /**
     * Sets docket_num_header
     *
     * @param string $docket_num_header docket_num_header
     *
     * @return $this
     */
    public function setDocketNumHeader($docket_num_header)
    {
        $this->container['docket_num_header'] = $docket_num_header;

        return $this;
    }

    /**
     * Gets credit_note_header
     *
     * @return string
     */
    public function getCreditNoteHeader()
    {
        return $this->container['credit_note_header'];
    }

    /**
     * Sets credit_note_header
     *
     * @param string $credit_note_header credit_note_header
     *
     * @return $this
     */
    public function setCreditNoteHeader($credit_note_header)
    {
        $this->container['credit_note_header'] = $credit_note_header;

        return $this;
    }

    /**
     * Gets build_payment_reference_from_debtor
     *
     * @return bool
     */
    public function getBuildPaymentReferenceFromDebtor()
    {
        return $this->container['build_payment_reference_from_debtor'];
    }

    /**
     * Sets build_payment_reference_from_debtor
     *
     * @param bool $build_payment_reference_from_debtor build_payment_reference_from_debtor
     *
     * @return $this
     */
    public function setBuildPaymentReferenceFromDebtor($build_payment_reference_from_debtor)
    {
        $this->container['build_payment_reference_from_debtor'] = $build_payment_reference_from_debtor;

        return $this;
    }

    /**
     * Gets quote_no_description
     *
     * @return string
     */
    public function getQuoteNoDescription()
    {
        return $this->container['quote_no_description'];
    }

    /**
     * Sets quote_no_description
     *
     * @param string $quote_no_description quote_no_description
     *
     * @return $this
     */
    public function setQuoteNoDescription($quote_no_description)
    {
        $this->container['quote_no_description'] = $quote_no_description;

        return $this;
    }

    /**
     * Gets short_date_format
     *
     * @return string
     */
    public function getShortDateFormat()
    {
        return $this->container['short_date_format'];
    }

    /**
     * Sets short_date_format
     *
     * @param string $short_date_format short_date_format
     *
     * @return $this
     */
    public function setShortDateFormat($short_date_format)
    {
        $this->container['short_date_format'] = $short_date_format;

        return $this;
    }

    /**
     * Gets manual_print_selection
     *
     * @return bool
     */
    public function getManualPrintSelection()
    {
        return $this->container['manual_print_selection'];
    }

    /**
     * Sets manual_print_selection
     *
     * @param bool $manual_print_selection manual_print_selection
     *
     * @return $this
     */
    public function setManualPrintSelection($manual_print_selection)
    {
        $this->container['manual_print_selection'] = $manual_print_selection;

        return $this;
    }

    /**
     * Gets use_direct_tax_if_sell_price_inc_tax
     *
     * @return bool
     */
    public function getUseDirectTaxIfSellPriceIncTax()
    {
        return $this->container['use_direct_tax_if_sell_price_inc_tax'];
    }

    /**
     * Sets use_direct_tax_if_sell_price_inc_tax
     *
     * @param bool $use_direct_tax_if_sell_price_inc_tax use_direct_tax_if_sell_price_inc_tax
     *
     * @return $this
     */
    public function setUseDirectTaxIfSellPriceIncTax($use_direct_tax_if_sell_price_inc_tax)
    {
        $this->container['use_direct_tax_if_sell_price_inc_tax'] = $use_direct_tax_if_sell_price_inc_tax;

        return $this;
    }

    /**
     * Gets job_code_separator
     *
     * @return string
     */
    public function getJobCodeSeparator()
    {
        return $this->container['job_code_separator'];
    }

    /**
     * Sets job_code_separator
     *
     * @param string $job_code_separator job_code_separator
     *
     * @return $this
     */
    public function setJobCodeSeparator($job_code_separator)
    {
        $this->container['job_code_separator'] = $job_code_separator;

        return $this;
    }

    /**
     * Gets use_kit_rounding_part
     *
     * @return bool
     */
    public function getUseKitRoundingPart()
    {
        return $this->container['use_kit_rounding_part'];
    }

    /**
     * Sets use_kit_rounding_part
     *
     * @param bool $use_kit_rounding_part use_kit_rounding_part
     *
     * @return $this
     */
    public function setUseKitRoundingPart($use_kit_rounding_part)
    {
        $this->container['use_kit_rounding_part'] = $use_kit_rounding_part;

        return $this;
    }

    /**
     * Gets kit_rounding_part_id
     *
     * @return string
     */
    public function getKitRoundingPartId()
    {
        return $this->container['kit_rounding_part_id'];
    }

    /**
     * Sets kit_rounding_part_id
     *
     * @param string $kit_rounding_part_id kit_rounding_part_id
     *
     * @return $this
     */
    public function setKitRoundingPartId($kit_rounding_part_id)
    {
        $this->container['kit_rounding_part_id'] = $kit_rounding_part_id;

        return $this;
    }

    /**
     * Gets discount_percent_decimal_places
     *
     * @return int
     */
    public function getDiscountPercentDecimalPlaces()
    {
        return $this->container['discount_percent_decimal_places'];
    }

    /**
     * Sets discount_percent_decimal_places
     *
     * @param int $discount_percent_decimal_places discount_percent_decimal_places
     *
     * @return $this
     */
    public function setDiscountPercentDecimalPlaces($discount_percent_decimal_places)
    {
        $this->container['discount_percent_decimal_places'] = $discount_percent_decimal_places;

        return $this;
    }

    /**
     * Gets default_quote_expiry_days
     *
     * @return int
     */
    public function getDefaultQuoteExpiryDays()
    {
        return $this->container['default_quote_expiry_days'];
    }

    /**
     * Sets default_quote_expiry_days
     *
     * @param int $default_quote_expiry_days default_quote_expiry_days
     *
     * @return $this
     */
    public function setDefaultQuoteExpiryDays($default_quote_expiry_days)
    {
        $this->container['default_quote_expiry_days'] = $default_quote_expiry_days;

        return $this;
    }

    /**
     * Gets allow_document_manipulation_on_closed_quote
     *
     * @return bool
     */
    public function getAllowDocumentManipulationOnClosedQuote()
    {
        return $this->container['allow_document_manipulation_on_closed_quote'];
    }

    /**
     * Sets allow_document_manipulation_on_closed_quote
     *
     * @param bool $allow_document_manipulation_on_closed_quote allow_document_manipulation_on_closed_quote
     *
     * @return $this
     */
    public function setAllowDocumentManipulationOnClosedQuote($allow_document_manipulation_on_closed_quote)
    {
        $this->container['allow_document_manipulation_on_closed_quote'] = $allow_document_manipulation_on_closed_quote;

        return $this;
    }

    /**
     * Gets default_document_type_key
     *
     * @return string
     */
    public function getDefaultDocumentTypeKey()
    {
        return $this->container['default_document_type_key'];
    }

    /**
     * Sets default_document_type_key
     *
     * @param string $default_document_type_key default_document_type_key
     *
     * @return $this
     */
    public function setDefaultDocumentTypeKey($default_document_type_key)
    {
        $this->container['default_document_type_key'] = $default_document_type_key;

        return $this;
    }

    /**
     * Gets default_note_type_key
     *
     * @return string
     */
    public function getDefaultNoteTypeKey()
    {
        return $this->container['default_note_type_key'];
    }

    /**
     * Sets default_note_type_key
     *
     * @param string $default_note_type_key default_note_type_key
     *
     * @return $this
     */
    public function setDefaultNoteTypeKey($default_note_type_key)
    {
        $this->container['default_note_type_key'] = $default_note_type_key;

        return $this;
    }

    /**
     * Gets copy_sales_quote_includes_notes
     *
     * @return bool
     */
    public function getCopySalesQuoteIncludesNotes()
    {
        return $this->container['copy_sales_quote_includes_notes'];
    }

    /**
     * Sets copy_sales_quote_includes_notes
     *
     * @param bool $copy_sales_quote_includes_notes copy_sales_quote_includes_notes
     *
     * @return $this
     */
    public function setCopySalesQuoteIncludesNotes($copy_sales_quote_includes_notes)
    {
        $this->container['copy_sales_quote_includes_notes'] = $copy_sales_quote_includes_notes;

        return $this;
    }

    /**
     * Gets copy_sales_quote_includes_documents
     *
     * @return bool
     */
    public function getCopySalesQuoteIncludesDocuments()
    {
        return $this->container['copy_sales_quote_includes_documents'];
    }

    /**
     * Sets copy_sales_quote_includes_documents
     *
     * @param bool $copy_sales_quote_includes_documents copy_sales_quote_includes_documents
     *
     * @return $this
     */
    public function setCopySalesQuoteIncludesDocuments($copy_sales_quote_includes_documents)
    {
        $this->container['copy_sales_quote_includes_documents'] = $copy_sales_quote_includes_documents;

        return $this;
    }

    /**
     * Gets dont_apply_debtor_discounts
     *
     * @return bool
     */
    public function getDontApplyDebtorDiscounts()
    {
        return $this->container['dont_apply_debtor_discounts'];
    }

    /**
     * Sets dont_apply_debtor_discounts
     *
     * @param bool $dont_apply_debtor_discounts dont_apply_debtor_discounts
     *
     * @return $this
     */
    public function setDontApplyDebtorDiscounts($dont_apply_debtor_discounts)
    {
        $this->container['dont_apply_debtor_discounts'] = $dont_apply_debtor_discounts;

        return $this;
    }

    /**
     * Gets user_todo_only
     *
     * @return bool
     */
    public function getUserTodoOnly()
    {
        return $this->container['user_todo_only'];
    }

    /**
     * Sets user_todo_only
     *
     * @param bool $user_todo_only user_todo_only
     *
     * @return $this
     */
    public function setUserTodoOnly($user_todo_only)
    {
        $this->container['user_todo_only'] = $user_todo_only;

        return $this;
    }

    /**
     * Gets do_not_read_soh_levels_for_quotes
     *
     * @return bool
     */
    public function getDoNotReadSohLevelsForQuotes()
    {
        return $this->container['do_not_read_soh_levels_for_quotes'];
    }

    /**
     * Sets do_not_read_soh_levels_for_quotes
     *
     * @param bool $do_not_read_soh_levels_for_quotes do_not_read_soh_levels_for_quotes
     *
     * @return $this
     */
    public function setDoNotReadSohLevelsForQuotes($do_not_read_soh_levels_for_quotes)
    {
        $this->container['do_not_read_soh_levels_for_quotes'] = $do_not_read_soh_levels_for_quotes;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


