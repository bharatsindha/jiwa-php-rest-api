<?php
/**
 * InventoryLogicalOrder
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\Model;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * InventoryLogicalOrder Class Doc Comment
 *
 * @category Class
 * @description InventoryLogicalOrder
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InventoryLogicalOrder implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'InventoryLogicalOrder';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'logical_order_id' => 'string',
        'logical_order_warehouse_logical_warehouse_id' => 'string',
        'logical_order_warehouse_logical_description' => 'string',
        'logical_order_warehouse_physical_warehouse_id' => 'string',
        'logical_order_warehouse_physical_description' => 'string',
        'logical_order_central_warehouse_logical_id' => 'string',
        'logical_order_central_warehouse_logical_description' => 'string',
        'logical_order_central_warehouse_physical_id' => 'string',
        'logical_order_central_warehouse_physical_description' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'logical_order_id' => null,
        'logical_order_warehouse_logical_warehouse_id' => null,
        'logical_order_warehouse_logical_description' => null,
        'logical_order_warehouse_physical_warehouse_id' => null,
        'logical_order_warehouse_physical_description' => null,
        'logical_order_central_warehouse_logical_id' => null,
        'logical_order_central_warehouse_logical_description' => null,
        'logical_order_central_warehouse_physical_id' => null,
        'logical_order_central_warehouse_physical_description' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'logical_order_id' => 'LogicalOrderID',
        'logical_order_warehouse_logical_warehouse_id' => 'LogicalOrderWarehouseLogicalWarehouseID',
        'logical_order_warehouse_logical_description' => 'LogicalOrderWarehouseLogicalDescription',
        'logical_order_warehouse_physical_warehouse_id' => 'LogicalOrderWarehousePhysicalWarehouseID',
        'logical_order_warehouse_physical_description' => 'LogicalOrderWarehousePhysicalDescription',
        'logical_order_central_warehouse_logical_id' => 'LogicalOrderCentralWarehouseLogicalID',
        'logical_order_central_warehouse_logical_description' => 'LogicalOrderCentralWarehouseLogicalDescription',
        'logical_order_central_warehouse_physical_id' => 'LogicalOrderCentralWarehousePhysicalID',
        'logical_order_central_warehouse_physical_description' => 'LogicalOrderCentralWarehousePhysicalDescription'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'logical_order_id' => 'setLogicalOrderId',
        'logical_order_warehouse_logical_warehouse_id' => 'setLogicalOrderWarehouseLogicalWarehouseId',
        'logical_order_warehouse_logical_description' => 'setLogicalOrderWarehouseLogicalDescription',
        'logical_order_warehouse_physical_warehouse_id' => 'setLogicalOrderWarehousePhysicalWarehouseId',
        'logical_order_warehouse_physical_description' => 'setLogicalOrderWarehousePhysicalDescription',
        'logical_order_central_warehouse_logical_id' => 'setLogicalOrderCentralWarehouseLogicalId',
        'logical_order_central_warehouse_logical_description' => 'setLogicalOrderCentralWarehouseLogicalDescription',
        'logical_order_central_warehouse_physical_id' => 'setLogicalOrderCentralWarehousePhysicalId',
        'logical_order_central_warehouse_physical_description' => 'setLogicalOrderCentralWarehousePhysicalDescription'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'logical_order_id' => 'getLogicalOrderId',
        'logical_order_warehouse_logical_warehouse_id' => 'getLogicalOrderWarehouseLogicalWarehouseId',
        'logical_order_warehouse_logical_description' => 'getLogicalOrderWarehouseLogicalDescription',
        'logical_order_warehouse_physical_warehouse_id' => 'getLogicalOrderWarehousePhysicalWarehouseId',
        'logical_order_warehouse_physical_description' => 'getLogicalOrderWarehousePhysicalDescription',
        'logical_order_central_warehouse_logical_id' => 'getLogicalOrderCentralWarehouseLogicalId',
        'logical_order_central_warehouse_logical_description' => 'getLogicalOrderCentralWarehouseLogicalDescription',
        'logical_order_central_warehouse_physical_id' => 'getLogicalOrderCentralWarehousePhysicalId',
        'logical_order_central_warehouse_physical_description' => 'getLogicalOrderCentralWarehousePhysicalDescription'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['logical_order_id'] = isset($data['logical_order_id']) ? $data['logical_order_id'] : null;
        $this->container['logical_order_warehouse_logical_warehouse_id'] = isset($data['logical_order_warehouse_logical_warehouse_id']) ? $data['logical_order_warehouse_logical_warehouse_id'] : null;
        $this->container['logical_order_warehouse_logical_description'] = isset($data['logical_order_warehouse_logical_description']) ? $data['logical_order_warehouse_logical_description'] : null;
        $this->container['logical_order_warehouse_physical_warehouse_id'] = isset($data['logical_order_warehouse_physical_warehouse_id']) ? $data['logical_order_warehouse_physical_warehouse_id'] : null;
        $this->container['logical_order_warehouse_physical_description'] = isset($data['logical_order_warehouse_physical_description']) ? $data['logical_order_warehouse_physical_description'] : null;
        $this->container['logical_order_central_warehouse_logical_id'] = isset($data['logical_order_central_warehouse_logical_id']) ? $data['logical_order_central_warehouse_logical_id'] : null;
        $this->container['logical_order_central_warehouse_logical_description'] = isset($data['logical_order_central_warehouse_logical_description']) ? $data['logical_order_central_warehouse_logical_description'] : null;
        $this->container['logical_order_central_warehouse_physical_id'] = isset($data['logical_order_central_warehouse_physical_id']) ? $data['logical_order_central_warehouse_physical_id'] : null;
        $this->container['logical_order_central_warehouse_physical_description'] = isset($data['logical_order_central_warehouse_physical_description']) ? $data['logical_order_central_warehouse_physical_description'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets logical_order_id
     *
     * @return string
     */
    public function getLogicalOrderId()
    {
        return $this->container['logical_order_id'];
    }

    /**
     * Sets logical_order_id
     *
     * @param string $logical_order_id logical_order_id
     *
     * @return $this
     */
    public function setLogicalOrderId($logical_order_id)
    {
        $this->container['logical_order_id'] = $logical_order_id;

        return $this;
    }

    /**
     * Gets logical_order_warehouse_logical_warehouse_id
     *
     * @return string
     */
    public function getLogicalOrderWarehouseLogicalWarehouseId()
    {
        return $this->container['logical_order_warehouse_logical_warehouse_id'];
    }

    /**
     * Sets logical_order_warehouse_logical_warehouse_id
     *
     * @param string $logical_order_warehouse_logical_warehouse_id logical_order_warehouse_logical_warehouse_id
     *
     * @return $this
     */
    public function setLogicalOrderWarehouseLogicalWarehouseId($logical_order_warehouse_logical_warehouse_id)
    {
        $this->container['logical_order_warehouse_logical_warehouse_id'] = $logical_order_warehouse_logical_warehouse_id;

        return $this;
    }

    /**
     * Gets logical_order_warehouse_logical_description
     *
     * @return string
     */
    public function getLogicalOrderWarehouseLogicalDescription()
    {
        return $this->container['logical_order_warehouse_logical_description'];
    }

    /**
     * Sets logical_order_warehouse_logical_description
     *
     * @param string $logical_order_warehouse_logical_description logical_order_warehouse_logical_description
     *
     * @return $this
     */
    public function setLogicalOrderWarehouseLogicalDescription($logical_order_warehouse_logical_description)
    {
        $this->container['logical_order_warehouse_logical_description'] = $logical_order_warehouse_logical_description;

        return $this;
    }

    /**
     * Gets logical_order_warehouse_physical_warehouse_id
     *
     * @return string
     */
    public function getLogicalOrderWarehousePhysicalWarehouseId()
    {
        return $this->container['logical_order_warehouse_physical_warehouse_id'];
    }

    /**
     * Sets logical_order_warehouse_physical_warehouse_id
     *
     * @param string $logical_order_warehouse_physical_warehouse_id logical_order_warehouse_physical_warehouse_id
     *
     * @return $this
     */
    public function setLogicalOrderWarehousePhysicalWarehouseId($logical_order_warehouse_physical_warehouse_id)
    {
        $this->container['logical_order_warehouse_physical_warehouse_id'] = $logical_order_warehouse_physical_warehouse_id;

        return $this;
    }

    /**
     * Gets logical_order_warehouse_physical_description
     *
     * @return string
     */
    public function getLogicalOrderWarehousePhysicalDescription()
    {
        return $this->container['logical_order_warehouse_physical_description'];
    }

    /**
     * Sets logical_order_warehouse_physical_description
     *
     * @param string $logical_order_warehouse_physical_description logical_order_warehouse_physical_description
     *
     * @return $this
     */
    public function setLogicalOrderWarehousePhysicalDescription($logical_order_warehouse_physical_description)
    {
        $this->container['logical_order_warehouse_physical_description'] = $logical_order_warehouse_physical_description;

        return $this;
    }

    /**
     * Gets logical_order_central_warehouse_logical_id
     *
     * @return string
     */
    public function getLogicalOrderCentralWarehouseLogicalId()
    {
        return $this->container['logical_order_central_warehouse_logical_id'];
    }

    /**
     * Sets logical_order_central_warehouse_logical_id
     *
     * @param string $logical_order_central_warehouse_logical_id logical_order_central_warehouse_logical_id
     *
     * @return $this
     */
    public function setLogicalOrderCentralWarehouseLogicalId($logical_order_central_warehouse_logical_id)
    {
        $this->container['logical_order_central_warehouse_logical_id'] = $logical_order_central_warehouse_logical_id;

        return $this;
    }

    /**
     * Gets logical_order_central_warehouse_logical_description
     *
     * @return string
     */
    public function getLogicalOrderCentralWarehouseLogicalDescription()
    {
        return $this->container['logical_order_central_warehouse_logical_description'];
    }

    /**
     * Sets logical_order_central_warehouse_logical_description
     *
     * @param string $logical_order_central_warehouse_logical_description logical_order_central_warehouse_logical_description
     *
     * @return $this
     */
    public function setLogicalOrderCentralWarehouseLogicalDescription($logical_order_central_warehouse_logical_description)
    {
        $this->container['logical_order_central_warehouse_logical_description'] = $logical_order_central_warehouse_logical_description;

        return $this;
    }

    /**
     * Gets logical_order_central_warehouse_physical_id
     *
     * @return string
     */
    public function getLogicalOrderCentralWarehousePhysicalId()
    {
        return $this->container['logical_order_central_warehouse_physical_id'];
    }

    /**
     * Sets logical_order_central_warehouse_physical_id
     *
     * @param string $logical_order_central_warehouse_physical_id logical_order_central_warehouse_physical_id
     *
     * @return $this
     */
    public function setLogicalOrderCentralWarehousePhysicalId($logical_order_central_warehouse_physical_id)
    {
        $this->container['logical_order_central_warehouse_physical_id'] = $logical_order_central_warehouse_physical_id;

        return $this;
    }

    /**
     * Gets logical_order_central_warehouse_physical_description
     *
     * @return string
     */
    public function getLogicalOrderCentralWarehousePhysicalDescription()
    {
        return $this->container['logical_order_central_warehouse_physical_description'];
    }

    /**
     * Sets logical_order_central_warehouse_physical_description
     *
     * @param string $logical_order_central_warehouse_physical_description logical_order_central_warehouse_physical_description
     *
     * @return $this
     */
    public function setLogicalOrderCentralWarehousePhysicalDescription($logical_order_central_warehouse_physical_description)
    {
        $this->container['logical_order_central_warehouse_physical_description'] = $logical_order_central_warehouse_physical_description;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


