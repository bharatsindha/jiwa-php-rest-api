<?php
/**
 * DebtorContactNamePOSTRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\Model;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * DebtorContactNamePOSTRequest Class Doc Comment
 *
 * @category Class
 * @description DebtorContactNamePOSTRequest
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DebtorContactNamePOSTRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'DebtorContactNamePOSTRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'debtor_id' => 'string',
        'default_contact' => 'bool',
        'debtor_contact' => 'bool',
        'creditor_contact' => 'bool',
        'contact_id' => 'string',
        'account_no' => 'string',
        'title' => 'string',
        'first_name' => 'string',
        'surname' => 'string',
        'primary_position_id' => 'string',
        'primary_position_name' => 'string',
        'secondary_position_id' => 'string',
        'secondary_position_name' => 'string',
        'tertiary_position_id' => 'string',
        'tertiary_position_name' => 'string',
        'phone' => 'string',
        'mobile' => 'string',
        'fax' => 'string',
        'email_address' => 'string',
        'prospect_id' => 'string',
        'logon_code' => 'string',
        'logon_password' => 'string',
        'external_app_rec_id' => 'string',
        'logon_code_changed_by_user' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'debtor_id' => null,
        'default_contact' => null,
        'debtor_contact' => null,
        'creditor_contact' => null,
        'contact_id' => null,
        'account_no' => null,
        'title' => null,
        'first_name' => null,
        'surname' => null,
        'primary_position_id' => null,
        'primary_position_name' => null,
        'secondary_position_id' => null,
        'secondary_position_name' => null,
        'tertiary_position_id' => null,
        'tertiary_position_name' => null,
        'phone' => null,
        'mobile' => null,
        'fax' => null,
        'email_address' => null,
        'prospect_id' => null,
        'logon_code' => null,
        'logon_password' => null,
        'external_app_rec_id' => null,
        'logon_code_changed_by_user' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'debtor_id' => 'DebtorID',
        'default_contact' => 'DefaultContact',
        'debtor_contact' => 'DebtorContact',
        'creditor_contact' => 'CreditorContact',
        'contact_id' => 'ContactID',
        'account_no' => 'AccountNo',
        'title' => 'Title',
        'first_name' => 'FirstName',
        'surname' => 'Surname',
        'primary_position_id' => 'PrimaryPositionID',
        'primary_position_name' => 'PrimaryPositionName',
        'secondary_position_id' => 'SecondaryPositionID',
        'secondary_position_name' => 'SecondaryPositionName',
        'tertiary_position_id' => 'TertiaryPositionID',
        'tertiary_position_name' => 'TertiaryPositionName',
        'phone' => 'Phone',
        'mobile' => 'Mobile',
        'fax' => 'Fax',
        'email_address' => 'EmailAddress',
        'prospect_id' => 'ProspectID',
        'logon_code' => 'LogonCode',
        'logon_password' => 'LogonPassword',
        'external_app_rec_id' => 'ExternalAppRecID',
        'logon_code_changed_by_user' => 'LogonCodeChangedByUser'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'debtor_id' => 'setDebtorId',
        'default_contact' => 'setDefaultContact',
        'debtor_contact' => 'setDebtorContact',
        'creditor_contact' => 'setCreditorContact',
        'contact_id' => 'setContactId',
        'account_no' => 'setAccountNo',
        'title' => 'setTitle',
        'first_name' => 'setFirstName',
        'surname' => 'setSurname',
        'primary_position_id' => 'setPrimaryPositionId',
        'primary_position_name' => 'setPrimaryPositionName',
        'secondary_position_id' => 'setSecondaryPositionId',
        'secondary_position_name' => 'setSecondaryPositionName',
        'tertiary_position_id' => 'setTertiaryPositionId',
        'tertiary_position_name' => 'setTertiaryPositionName',
        'phone' => 'setPhone',
        'mobile' => 'setMobile',
        'fax' => 'setFax',
        'email_address' => 'setEmailAddress',
        'prospect_id' => 'setProspectId',
        'logon_code' => 'setLogonCode',
        'logon_password' => 'setLogonPassword',
        'external_app_rec_id' => 'setExternalAppRecId',
        'logon_code_changed_by_user' => 'setLogonCodeChangedByUser'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'debtor_id' => 'getDebtorId',
        'default_contact' => 'getDefaultContact',
        'debtor_contact' => 'getDebtorContact',
        'creditor_contact' => 'getCreditorContact',
        'contact_id' => 'getContactId',
        'account_no' => 'getAccountNo',
        'title' => 'getTitle',
        'first_name' => 'getFirstName',
        'surname' => 'getSurname',
        'primary_position_id' => 'getPrimaryPositionId',
        'primary_position_name' => 'getPrimaryPositionName',
        'secondary_position_id' => 'getSecondaryPositionId',
        'secondary_position_name' => 'getSecondaryPositionName',
        'tertiary_position_id' => 'getTertiaryPositionId',
        'tertiary_position_name' => 'getTertiaryPositionName',
        'phone' => 'getPhone',
        'mobile' => 'getMobile',
        'fax' => 'getFax',
        'email_address' => 'getEmailAddress',
        'prospect_id' => 'getProspectId',
        'logon_code' => 'getLogonCode',
        'logon_password' => 'getLogonPassword',
        'external_app_rec_id' => 'getExternalAppRecId',
        'logon_code_changed_by_user' => 'getLogonCodeChangedByUser'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['debtor_id'] = isset($data['debtor_id']) ? $data['debtor_id'] : null;
        $this->container['default_contact'] = isset($data['default_contact']) ? $data['default_contact'] : null;
        $this->container['debtor_contact'] = isset($data['debtor_contact']) ? $data['debtor_contact'] : null;
        $this->container['creditor_contact'] = isset($data['creditor_contact']) ? $data['creditor_contact'] : null;
        $this->container['contact_id'] = isset($data['contact_id']) ? $data['contact_id'] : null;
        $this->container['account_no'] = isset($data['account_no']) ? $data['account_no'] : null;
        $this->container['title'] = isset($data['title']) ? $data['title'] : null;
        $this->container['first_name'] = isset($data['first_name']) ? $data['first_name'] : null;
        $this->container['surname'] = isset($data['surname']) ? $data['surname'] : null;
        $this->container['primary_position_id'] = isset($data['primary_position_id']) ? $data['primary_position_id'] : null;
        $this->container['primary_position_name'] = isset($data['primary_position_name']) ? $data['primary_position_name'] : null;
        $this->container['secondary_position_id'] = isset($data['secondary_position_id']) ? $data['secondary_position_id'] : null;
        $this->container['secondary_position_name'] = isset($data['secondary_position_name']) ? $data['secondary_position_name'] : null;
        $this->container['tertiary_position_id'] = isset($data['tertiary_position_id']) ? $data['tertiary_position_id'] : null;
        $this->container['tertiary_position_name'] = isset($data['tertiary_position_name']) ? $data['tertiary_position_name'] : null;
        $this->container['phone'] = isset($data['phone']) ? $data['phone'] : null;
        $this->container['mobile'] = isset($data['mobile']) ? $data['mobile'] : null;
        $this->container['fax'] = isset($data['fax']) ? $data['fax'] : null;
        $this->container['email_address'] = isset($data['email_address']) ? $data['email_address'] : null;
        $this->container['prospect_id'] = isset($data['prospect_id']) ? $data['prospect_id'] : null;
        $this->container['logon_code'] = isset($data['logon_code']) ? $data['logon_code'] : null;
        $this->container['logon_password'] = isset($data['logon_password']) ? $data['logon_password'] : null;
        $this->container['external_app_rec_id'] = isset($data['external_app_rec_id']) ? $data['external_app_rec_id'] : null;
        $this->container['logon_code_changed_by_user'] = isset($data['logon_code_changed_by_user']) ? $data['logon_code_changed_by_user'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets debtor_id
     *
     * @return string
     */
    public function getDebtorId()
    {
        return $this->container['debtor_id'];
    }

    /**
     * Sets debtor_id
     *
     * @param string $debtor_id debtor_id
     *
     * @return $this
     */
    public function setDebtorId($debtor_id)
    {
        $this->container['debtor_id'] = $debtor_id;

        return $this;
    }

    /**
     * Gets default_contact
     *
     * @return bool
     */
    public function getDefaultContact()
    {
        return $this->container['default_contact'];
    }

    /**
     * Sets default_contact
     *
     * @param bool $default_contact default_contact
     *
     * @return $this
     */
    public function setDefaultContact($default_contact)
    {
        $this->container['default_contact'] = $default_contact;

        return $this;
    }

    /**
     * Gets debtor_contact
     *
     * @return bool
     */
    public function getDebtorContact()
    {
        return $this->container['debtor_contact'];
    }

    /**
     * Sets debtor_contact
     *
     * @param bool $debtor_contact debtor_contact
     *
     * @return $this
     */
    public function setDebtorContact($debtor_contact)
    {
        $this->container['debtor_contact'] = $debtor_contact;

        return $this;
    }

    /**
     * Gets creditor_contact
     *
     * @return bool
     */
    public function getCreditorContact()
    {
        return $this->container['creditor_contact'];
    }

    /**
     * Sets creditor_contact
     *
     * @param bool $creditor_contact creditor_contact
     *
     * @return $this
     */
    public function setCreditorContact($creditor_contact)
    {
        $this->container['creditor_contact'] = $creditor_contact;

        return $this;
    }

    /**
     * Gets contact_id
     *
     * @return string
     */
    public function getContactId()
    {
        return $this->container['contact_id'];
    }

    /**
     * Sets contact_id
     *
     * @param string $contact_id contact_id
     *
     * @return $this
     */
    public function setContactId($contact_id)
    {
        $this->container['contact_id'] = $contact_id;

        return $this;
    }

    /**
     * Gets account_no
     *
     * @return string
     */
    public function getAccountNo()
    {
        return $this->container['account_no'];
    }

    /**
     * Sets account_no
     *
     * @param string $account_no account_no
     *
     * @return $this
     */
    public function setAccountNo($account_no)
    {
        $this->container['account_no'] = $account_no;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string $title title
     *
     * @return $this
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets first_name
     *
     * @return string
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     *
     * @param string $first_name first_name
     *
     * @return $this
     */
    public function setFirstName($first_name)
    {
        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets surname
     *
     * @return string
     */
    public function getSurname()
    {
        return $this->container['surname'];
    }

    /**
     * Sets surname
     *
     * @param string $surname surname
     *
     * @return $this
     */
    public function setSurname($surname)
    {
        $this->container['surname'] = $surname;

        return $this;
    }

    /**
     * Gets primary_position_id
     *
     * @return string
     */
    public function getPrimaryPositionId()
    {
        return $this->container['primary_position_id'];
    }

    /**
     * Sets primary_position_id
     *
     * @param string $primary_position_id primary_position_id
     *
     * @return $this
     */
    public function setPrimaryPositionId($primary_position_id)
    {
        $this->container['primary_position_id'] = $primary_position_id;

        return $this;
    }

    /**
     * Gets primary_position_name
     *
     * @return string
     */
    public function getPrimaryPositionName()
    {
        return $this->container['primary_position_name'];
    }

    /**
     * Sets primary_position_name
     *
     * @param string $primary_position_name primary_position_name
     *
     * @return $this
     */
    public function setPrimaryPositionName($primary_position_name)
    {
        $this->container['primary_position_name'] = $primary_position_name;

        return $this;
    }

    /**
     * Gets secondary_position_id
     *
     * @return string
     */
    public function getSecondaryPositionId()
    {
        return $this->container['secondary_position_id'];
    }

    /**
     * Sets secondary_position_id
     *
     * @param string $secondary_position_id secondary_position_id
     *
     * @return $this
     */
    public function setSecondaryPositionId($secondary_position_id)
    {
        $this->container['secondary_position_id'] = $secondary_position_id;

        return $this;
    }

    /**
     * Gets secondary_position_name
     *
     * @return string
     */
    public function getSecondaryPositionName()
    {
        return $this->container['secondary_position_name'];
    }

    /**
     * Sets secondary_position_name
     *
     * @param string $secondary_position_name secondary_position_name
     *
     * @return $this
     */
    public function setSecondaryPositionName($secondary_position_name)
    {
        $this->container['secondary_position_name'] = $secondary_position_name;

        return $this;
    }

    /**
     * Gets tertiary_position_id
     *
     * @return string
     */
    public function getTertiaryPositionId()
    {
        return $this->container['tertiary_position_id'];
    }

    /**
     * Sets tertiary_position_id
     *
     * @param string $tertiary_position_id tertiary_position_id
     *
     * @return $this
     */
    public function setTertiaryPositionId($tertiary_position_id)
    {
        $this->container['tertiary_position_id'] = $tertiary_position_id;

        return $this;
    }

    /**
     * Gets tertiary_position_name
     *
     * @return string
     */
    public function getTertiaryPositionName()
    {
        return $this->container['tertiary_position_name'];
    }

    /**
     * Sets tertiary_position_name
     *
     * @param string $tertiary_position_name tertiary_position_name
     *
     * @return $this
     */
    public function setTertiaryPositionName($tertiary_position_name)
    {
        $this->container['tertiary_position_name'] = $tertiary_position_name;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return string
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param string $phone phone
     *
     * @return $this
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets mobile
     *
     * @return string
     */
    public function getMobile()
    {
        return $this->container['mobile'];
    }

    /**
     * Sets mobile
     *
     * @param string $mobile mobile
     *
     * @return $this
     */
    public function setMobile($mobile)
    {
        $this->container['mobile'] = $mobile;

        return $this;
    }

    /**
     * Gets fax
     *
     * @return string
     */
    public function getFax()
    {
        return $this->container['fax'];
    }

    /**
     * Sets fax
     *
     * @param string $fax fax
     *
     * @return $this
     */
    public function setFax($fax)
    {
        $this->container['fax'] = $fax;

        return $this;
    }

    /**
     * Gets email_address
     *
     * @return string
     */
    public function getEmailAddress()
    {
        return $this->container['email_address'];
    }

    /**
     * Sets email_address
     *
     * @param string $email_address email_address
     *
     * @return $this
     */
    public function setEmailAddress($email_address)
    {
        $this->container['email_address'] = $email_address;

        return $this;
    }

    /**
     * Gets prospect_id
     *
     * @return string
     */
    public function getProspectId()
    {
        return $this->container['prospect_id'];
    }

    /**
     * Sets prospect_id
     *
     * @param string $prospect_id prospect_id
     *
     * @return $this
     */
    public function setProspectId($prospect_id)
    {
        $this->container['prospect_id'] = $prospect_id;

        return $this;
    }

    /**
     * Gets logon_code
     *
     * @return string
     */
    public function getLogonCode()
    {
        return $this->container['logon_code'];
    }

    /**
     * Sets logon_code
     *
     * @param string $logon_code logon_code
     *
     * @return $this
     */
    public function setLogonCode($logon_code)
    {
        $this->container['logon_code'] = $logon_code;

        return $this;
    }

    /**
     * Gets logon_password
     *
     * @return string
     */
    public function getLogonPassword()
    {
        return $this->container['logon_password'];
    }

    /**
     * Sets logon_password
     *
     * @param string $logon_password logon_password
     *
     * @return $this
     */
    public function setLogonPassword($logon_password)
    {
        $this->container['logon_password'] = $logon_password;

        return $this;
    }

    /**
     * Gets external_app_rec_id
     *
     * @return string
     */
    public function getExternalAppRecId()
    {
        return $this->container['external_app_rec_id'];
    }

    /**
     * Sets external_app_rec_id
     *
     * @param string $external_app_rec_id external_app_rec_id
     *
     * @return $this
     */
    public function setExternalAppRecId($external_app_rec_id)
    {
        $this->container['external_app_rec_id'] = $external_app_rec_id;

        return $this;
    }

    /**
     * Gets logon_code_changed_by_user
     *
     * @return bool
     */
    public function getLogonCodeChangedByUser()
    {
        return $this->container['logon_code_changed_by_user'];
    }

    /**
     * Sets logon_code_changed_by_user
     *
     * @param bool $logon_code_changed_by_user logon_code_changed_by_user
     *
     * @return $this
     */
    public function setLogonCodeChangedByUser($logon_code_changed_by_user)
    {
        $this->container['logon_code_changed_by_user'] = $logon_code_changed_by_user;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


