<?php
/**
 * POMain
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\JiwaModel;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * POMain Class Doc Comment
 *
 * @category Class
 * @description PO_Main
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class POMain implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PO_Main';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'order_id' => 'string',
        'last_saved_date_time' => '\DateTime',
        'creditor_id' => 'string',
        'order_no' => 'string',
        'ordered_date' => '\DateTime',
        'header1' => 'string',
        'header2' => 'string',
        'header5' => 'string',
        'status' => 'int',
        'order_type' => 'int',
        'order_type_inv_id' => 'string',
        'in_logical_id' => 'string',
        'order_supplier_type' => 'int',
        'central_warehouse_id' => 'string',
        'tax_total' => 'double',
        'currency_id' => 'string',
        'in_transit_warehouse_id' => 'string',
        'reference' => 'string',
        'po_workflows_rec_id' => 'string',
        'hr_staff_rec_id' => 'string',
        'cr_warehouse_warehouse_id' => 'string',
        'freight' => 'double',
        'duty' => 'double',
        'insurance' => 'double',
        'freight_tax_id' => 'string',
        'freight_tax_rate' => 'double',
        'freight_tax_amount' => 'double',
        'duty_tax_id' => 'string',
        'duty_tax_rate' => 'double',
        'duty_tax_amount' => 'double',
        'insurance_tax_id' => 'string',
        'insurance_tax_rate' => 'double',
        'insurance_tax_amount' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'order_id' => null,
        'last_saved_date_time' => 'date-time',
        'creditor_id' => null,
        'order_no' => null,
        'ordered_date' => 'date-time',
        'header1' => null,
        'header2' => null,
        'header5' => null,
        'status' => 'int32',
        'order_type' => 'int32',
        'order_type_inv_id' => null,
        'in_logical_id' => null,
        'order_supplier_type' => 'int32',
        'central_warehouse_id' => null,
        'tax_total' => 'double',
        'currency_id' => null,
        'in_transit_warehouse_id' => null,
        'reference' => null,
        'po_workflows_rec_id' => null,
        'hr_staff_rec_id' => null,
        'cr_warehouse_warehouse_id' => null,
        'freight' => 'double',
        'duty' => 'double',
        'insurance' => 'double',
        'freight_tax_id' => null,
        'freight_tax_rate' => 'double',
        'freight_tax_amount' => 'double',
        'duty_tax_id' => null,
        'duty_tax_rate' => 'double',
        'duty_tax_amount' => 'double',
        'insurance_tax_id' => null,
        'insurance_tax_rate' => 'double',
        'insurance_tax_amount' => 'double'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'order_id' => 'OrderID',
        'last_saved_date_time' => 'LastSavedDateTime',
        'creditor_id' => 'CreditorID',
        'order_no' => 'OrderNo',
        'ordered_date' => 'OrderedDate',
        'header1' => 'Header1',
        'header2' => 'Header2',
        'header5' => 'Header5',
        'status' => 'Status',
        'order_type' => 'OrderType',
        'order_type_inv_id' => 'OrderTypeInvID',
        'in_logical_id' => 'IN_LogicalID',
        'order_supplier_type' => 'OrderSupplierType',
        'central_warehouse_id' => 'CentralWarehouseID',
        'tax_total' => 'TaxTotal',
        'currency_id' => 'CurrencyID',
        'in_transit_warehouse_id' => 'InTransitWarehouseID',
        'reference' => 'Reference',
        'po_workflows_rec_id' => 'PO_Workflows_RecID',
        'hr_staff_rec_id' => 'HR_Staff_RecID',
        'cr_warehouse_warehouse_id' => 'CR_Warehouse_WarehouseID',
        'freight' => 'Freight',
        'duty' => 'Duty',
        'insurance' => 'Insurance',
        'freight_tax_id' => 'FreightTaxID',
        'freight_tax_rate' => 'FreightTaxRate',
        'freight_tax_amount' => 'FreightTaxAmount',
        'duty_tax_id' => 'DutyTaxID',
        'duty_tax_rate' => 'DutyTaxRate',
        'duty_tax_amount' => 'DutyTaxAmount',
        'insurance_tax_id' => 'InsuranceTaxID',
        'insurance_tax_rate' => 'InsuranceTaxRate',
        'insurance_tax_amount' => 'InsuranceTaxAmount'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'order_id' => 'setOrderId',
        'last_saved_date_time' => 'setLastSavedDateTime',
        'creditor_id' => 'setCreditorId',
        'order_no' => 'setOrderNo',
        'ordered_date' => 'setOrderedDate',
        'header1' => 'setHeader1',
        'header2' => 'setHeader2',
        'header5' => 'setHeader5',
        'status' => 'setStatus',
        'order_type' => 'setOrderType',
        'order_type_inv_id' => 'setOrderTypeInvId',
        'in_logical_id' => 'setInLogicalId',
        'order_supplier_type' => 'setOrderSupplierType',
        'central_warehouse_id' => 'setCentralWarehouseId',
        'tax_total' => 'setTaxTotal',
        'currency_id' => 'setCurrencyId',
        'in_transit_warehouse_id' => 'setInTransitWarehouseId',
        'reference' => 'setReference',
        'po_workflows_rec_id' => 'setPoWorkflowsRecId',
        'hr_staff_rec_id' => 'setHrStaffRecId',
        'cr_warehouse_warehouse_id' => 'setCrWarehouseWarehouseId',
        'freight' => 'setFreight',
        'duty' => 'setDuty',
        'insurance' => 'setInsurance',
        'freight_tax_id' => 'setFreightTaxId',
        'freight_tax_rate' => 'setFreightTaxRate',
        'freight_tax_amount' => 'setFreightTaxAmount',
        'duty_tax_id' => 'setDutyTaxId',
        'duty_tax_rate' => 'setDutyTaxRate',
        'duty_tax_amount' => 'setDutyTaxAmount',
        'insurance_tax_id' => 'setInsuranceTaxId',
        'insurance_tax_rate' => 'setInsuranceTaxRate',
        'insurance_tax_amount' => 'setInsuranceTaxAmount'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'order_id' => 'getOrderId',
        'last_saved_date_time' => 'getLastSavedDateTime',
        'creditor_id' => 'getCreditorId',
        'order_no' => 'getOrderNo',
        'ordered_date' => 'getOrderedDate',
        'header1' => 'getHeader1',
        'header2' => 'getHeader2',
        'header5' => 'getHeader5',
        'status' => 'getStatus',
        'order_type' => 'getOrderType',
        'order_type_inv_id' => 'getOrderTypeInvId',
        'in_logical_id' => 'getInLogicalId',
        'order_supplier_type' => 'getOrderSupplierType',
        'central_warehouse_id' => 'getCentralWarehouseId',
        'tax_total' => 'getTaxTotal',
        'currency_id' => 'getCurrencyId',
        'in_transit_warehouse_id' => 'getInTransitWarehouseId',
        'reference' => 'getReference',
        'po_workflows_rec_id' => 'getPoWorkflowsRecId',
        'hr_staff_rec_id' => 'getHrStaffRecId',
        'cr_warehouse_warehouse_id' => 'getCrWarehouseWarehouseId',
        'freight' => 'getFreight',
        'duty' => 'getDuty',
        'insurance' => 'getInsurance',
        'freight_tax_id' => 'getFreightTaxId',
        'freight_tax_rate' => 'getFreightTaxRate',
        'freight_tax_amount' => 'getFreightTaxAmount',
        'duty_tax_id' => 'getDutyTaxId',
        'duty_tax_rate' => 'getDutyTaxRate',
        'duty_tax_amount' => 'getDutyTaxAmount',
        'insurance_tax_id' => 'getInsuranceTaxId',
        'insurance_tax_rate' => 'getInsuranceTaxRate',
        'insurance_tax_amount' => 'getInsuranceTaxAmount'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['order_id'] = isset($data['order_id']) ? $data['order_id'] : null;
        $this->container['last_saved_date_time'] = isset($data['last_saved_date_time']) ? $data['last_saved_date_time'] : null;
        $this->container['creditor_id'] = isset($data['creditor_id']) ? $data['creditor_id'] : null;
        $this->container['order_no'] = isset($data['order_no']) ? $data['order_no'] : null;
        $this->container['ordered_date'] = isset($data['ordered_date']) ? $data['ordered_date'] : null;
        $this->container['header1'] = isset($data['header1']) ? $data['header1'] : null;
        $this->container['header2'] = isset($data['header2']) ? $data['header2'] : null;
        $this->container['header5'] = isset($data['header5']) ? $data['header5'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['order_type'] = isset($data['order_type']) ? $data['order_type'] : null;
        $this->container['order_type_inv_id'] = isset($data['order_type_inv_id']) ? $data['order_type_inv_id'] : null;
        $this->container['in_logical_id'] = isset($data['in_logical_id']) ? $data['in_logical_id'] : null;
        $this->container['order_supplier_type'] = isset($data['order_supplier_type']) ? $data['order_supplier_type'] : null;
        $this->container['central_warehouse_id'] = isset($data['central_warehouse_id']) ? $data['central_warehouse_id'] : null;
        $this->container['tax_total'] = isset($data['tax_total']) ? $data['tax_total'] : null;
        $this->container['currency_id'] = isset($data['currency_id']) ? $data['currency_id'] : null;
        $this->container['in_transit_warehouse_id'] = isset($data['in_transit_warehouse_id']) ? $data['in_transit_warehouse_id'] : null;
        $this->container['reference'] = isset($data['reference']) ? $data['reference'] : null;
        $this->container['po_workflows_rec_id'] = isset($data['po_workflows_rec_id']) ? $data['po_workflows_rec_id'] : null;
        $this->container['hr_staff_rec_id'] = isset($data['hr_staff_rec_id']) ? $data['hr_staff_rec_id'] : null;
        $this->container['cr_warehouse_warehouse_id'] = isset($data['cr_warehouse_warehouse_id']) ? $data['cr_warehouse_warehouse_id'] : null;
        $this->container['freight'] = isset($data['freight']) ? $data['freight'] : null;
        $this->container['duty'] = isset($data['duty']) ? $data['duty'] : null;
        $this->container['insurance'] = isset($data['insurance']) ? $data['insurance'] : null;
        $this->container['freight_tax_id'] = isset($data['freight_tax_id']) ? $data['freight_tax_id'] : null;
        $this->container['freight_tax_rate'] = isset($data['freight_tax_rate']) ? $data['freight_tax_rate'] : null;
        $this->container['freight_tax_amount'] = isset($data['freight_tax_amount']) ? $data['freight_tax_amount'] : null;
        $this->container['duty_tax_id'] = isset($data['duty_tax_id']) ? $data['duty_tax_id'] : null;
        $this->container['duty_tax_rate'] = isset($data['duty_tax_rate']) ? $data['duty_tax_rate'] : null;
        $this->container['duty_tax_amount'] = isset($data['duty_tax_amount']) ? $data['duty_tax_amount'] : null;
        $this->container['insurance_tax_id'] = isset($data['insurance_tax_id']) ? $data['insurance_tax_id'] : null;
        $this->container['insurance_tax_rate'] = isset($data['insurance_tax_rate']) ? $data['insurance_tax_rate'] : null;
        $this->container['insurance_tax_amount'] = isset($data['insurance_tax_amount']) ? $data['insurance_tax_amount'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets order_id
     *
     * @return string
     */
    public function getOrderId()
    {
        return $this->container['order_id'];
    }

    /**
     * Sets order_id
     *
     * @param string $order_id order_id
     *
     * @return $this
     */
    public function setOrderId($order_id)
    {
        $this->container['order_id'] = $order_id;

        return $this;
    }

    /**
     * Gets last_saved_date_time
     *
     * @return \DateTime
     */
    public function getLastSavedDateTime()
    {
        return $this->container['last_saved_date_time'];
    }

    /**
     * Sets last_saved_date_time
     *
     * @param \DateTime $last_saved_date_time last_saved_date_time
     *
     * @return $this
     */
    public function setLastSavedDateTime($last_saved_date_time)
    {
        $this->container['last_saved_date_time'] = $last_saved_date_time;

        return $this;
    }

    /**
     * Gets creditor_id
     *
     * @return string
     */
    public function getCreditorId()
    {
        return $this->container['creditor_id'];
    }

    /**
     * Sets creditor_id
     *
     * @param string $creditor_id creditor_id
     *
     * @return $this
     */
    public function setCreditorId($creditor_id)
    {
        $this->container['creditor_id'] = $creditor_id;

        return $this;
    }

    /**
     * Gets order_no
     *
     * @return string
     */
    public function getOrderNo()
    {
        return $this->container['order_no'];
    }

    /**
     * Sets order_no
     *
     * @param string $order_no order_no
     *
     * @return $this
     */
    public function setOrderNo($order_no)
    {
        $this->container['order_no'] = $order_no;

        return $this;
    }

    /**
     * Gets ordered_date
     *
     * @return \DateTime
     */
    public function getOrderedDate()
    {
        return $this->container['ordered_date'];
    }

    /**
     * Sets ordered_date
     *
     * @param \DateTime $ordered_date ordered_date
     *
     * @return $this
     */
    public function setOrderedDate($ordered_date)
    {
        $this->container['ordered_date'] = $ordered_date;

        return $this;
    }

    /**
     * Gets header1
     *
     * @return string
     */
    public function getHeader1()
    {
        return $this->container['header1'];
    }

    /**
     * Sets header1
     *
     * @param string $header1 header1
     *
     * @return $this
     */
    public function setHeader1($header1)
    {
        $this->container['header1'] = $header1;

        return $this;
    }

    /**
     * Gets header2
     *
     * @return string
     */
    public function getHeader2()
    {
        return $this->container['header2'];
    }

    /**
     * Sets header2
     *
     * @param string $header2 header2
     *
     * @return $this
     */
    public function setHeader2($header2)
    {
        $this->container['header2'] = $header2;

        return $this;
    }

    /**
     * Gets header5
     *
     * @return string
     */
    public function getHeader5()
    {
        return $this->container['header5'];
    }

    /**
     * Sets header5
     *
     * @param string $header5 header5
     *
     * @return $this
     */
    public function setHeader5($header5)
    {
        $this->container['header5'] = $header5;

        return $this;
    }

    /**
     * Gets status
     *
     * @return int
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param int $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets order_type
     *
     * @return int
     */
    public function getOrderType()
    {
        return $this->container['order_type'];
    }

    /**
     * Sets order_type
     *
     * @param int $order_type order_type
     *
     * @return $this
     */
    public function setOrderType($order_type)
    {
        $this->container['order_type'] = $order_type;

        return $this;
    }

    /**
     * Gets order_type_inv_id
     *
     * @return string
     */
    public function getOrderTypeInvId()
    {
        return $this->container['order_type_inv_id'];
    }

    /**
     * Sets order_type_inv_id
     *
     * @param string $order_type_inv_id order_type_inv_id
     *
     * @return $this
     */
    public function setOrderTypeInvId($order_type_inv_id)
    {
        $this->container['order_type_inv_id'] = $order_type_inv_id;

        return $this;
    }

    /**
     * Gets in_logical_id
     *
     * @return string
     */
    public function getInLogicalId()
    {
        return $this->container['in_logical_id'];
    }

    /**
     * Sets in_logical_id
     *
     * @param string $in_logical_id in_logical_id
     *
     * @return $this
     */
    public function setInLogicalId($in_logical_id)
    {
        $this->container['in_logical_id'] = $in_logical_id;

        return $this;
    }

    /**
     * Gets order_supplier_type
     *
     * @return int
     */
    public function getOrderSupplierType()
    {
        return $this->container['order_supplier_type'];
    }

    /**
     * Sets order_supplier_type
     *
     * @param int $order_supplier_type order_supplier_type
     *
     * @return $this
     */
    public function setOrderSupplierType($order_supplier_type)
    {
        $this->container['order_supplier_type'] = $order_supplier_type;

        return $this;
    }

    /**
     * Gets central_warehouse_id
     *
     * @return string
     */
    public function getCentralWarehouseId()
    {
        return $this->container['central_warehouse_id'];
    }

    /**
     * Sets central_warehouse_id
     *
     * @param string $central_warehouse_id central_warehouse_id
     *
     * @return $this
     */
    public function setCentralWarehouseId($central_warehouse_id)
    {
        $this->container['central_warehouse_id'] = $central_warehouse_id;

        return $this;
    }

    /**
     * Gets tax_total
     *
     * @return double
     */
    public function getTaxTotal()
    {
        return $this->container['tax_total'];
    }

    /**
     * Sets tax_total
     *
     * @param double $tax_total tax_total
     *
     * @return $this
     */
    public function setTaxTotal($tax_total)
    {
        $this->container['tax_total'] = $tax_total;

        return $this;
    }

    /**
     * Gets currency_id
     *
     * @return string
     */
    public function getCurrencyId()
    {
        return $this->container['currency_id'];
    }

    /**
     * Sets currency_id
     *
     * @param string $currency_id currency_id
     *
     * @return $this
     */
    public function setCurrencyId($currency_id)
    {
        $this->container['currency_id'] = $currency_id;

        return $this;
    }

    /**
     * Gets in_transit_warehouse_id
     *
     * @return string
     */
    public function getInTransitWarehouseId()
    {
        return $this->container['in_transit_warehouse_id'];
    }

    /**
     * Sets in_transit_warehouse_id
     *
     * @param string $in_transit_warehouse_id in_transit_warehouse_id
     *
     * @return $this
     */
    public function setInTransitWarehouseId($in_transit_warehouse_id)
    {
        $this->container['in_transit_warehouse_id'] = $in_transit_warehouse_id;

        return $this;
    }

    /**
     * Gets reference
     *
     * @return string
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string $reference reference
     *
     * @return $this
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets po_workflows_rec_id
     *
     * @return string
     */
    public function getPoWorkflowsRecId()
    {
        return $this->container['po_workflows_rec_id'];
    }

    /**
     * Sets po_workflows_rec_id
     *
     * @param string $po_workflows_rec_id po_workflows_rec_id
     *
     * @return $this
     */
    public function setPoWorkflowsRecId($po_workflows_rec_id)
    {
        $this->container['po_workflows_rec_id'] = $po_workflows_rec_id;

        return $this;
    }

    /**
     * Gets hr_staff_rec_id
     *
     * @return string
     */
    public function getHrStaffRecId()
    {
        return $this->container['hr_staff_rec_id'];
    }

    /**
     * Sets hr_staff_rec_id
     *
     * @param string $hr_staff_rec_id hr_staff_rec_id
     *
     * @return $this
     */
    public function setHrStaffRecId($hr_staff_rec_id)
    {
        $this->container['hr_staff_rec_id'] = $hr_staff_rec_id;

        return $this;
    }

    /**
     * Gets cr_warehouse_warehouse_id
     *
     * @return string
     */
    public function getCrWarehouseWarehouseId()
    {
        return $this->container['cr_warehouse_warehouse_id'];
    }

    /**
     * Sets cr_warehouse_warehouse_id
     *
     * @param string $cr_warehouse_warehouse_id cr_warehouse_warehouse_id
     *
     * @return $this
     */
    public function setCrWarehouseWarehouseId($cr_warehouse_warehouse_id)
    {
        $this->container['cr_warehouse_warehouse_id'] = $cr_warehouse_warehouse_id;

        return $this;
    }

    /**
     * Gets freight
     *
     * @return double
     */
    public function getFreight()
    {
        return $this->container['freight'];
    }

    /**
     * Sets freight
     *
     * @param double $freight freight
     *
     * @return $this
     */
    public function setFreight($freight)
    {
        $this->container['freight'] = $freight;

        return $this;
    }

    /**
     * Gets duty
     *
     * @return double
     */
    public function getDuty()
    {
        return $this->container['duty'];
    }

    /**
     * Sets duty
     *
     * @param double $duty duty
     *
     * @return $this
     */
    public function setDuty($duty)
    {
        $this->container['duty'] = $duty;

        return $this;
    }

    /**
     * Gets insurance
     *
     * @return double
     */
    public function getInsurance()
    {
        return $this->container['insurance'];
    }

    /**
     * Sets insurance
     *
     * @param double $insurance insurance
     *
     * @return $this
     */
    public function setInsurance($insurance)
    {
        $this->container['insurance'] = $insurance;

        return $this;
    }

    /**
     * Gets freight_tax_id
     *
     * @return string
     */
    public function getFreightTaxId()
    {
        return $this->container['freight_tax_id'];
    }

    /**
     * Sets freight_tax_id
     *
     * @param string $freight_tax_id freight_tax_id
     *
     * @return $this
     */
    public function setFreightTaxId($freight_tax_id)
    {
        $this->container['freight_tax_id'] = $freight_tax_id;

        return $this;
    }

    /**
     * Gets freight_tax_rate
     *
     * @return double
     */
    public function getFreightTaxRate()
    {
        return $this->container['freight_tax_rate'];
    }

    /**
     * Sets freight_tax_rate
     *
     * @param double $freight_tax_rate freight_tax_rate
     *
     * @return $this
     */
    public function setFreightTaxRate($freight_tax_rate)
    {
        $this->container['freight_tax_rate'] = $freight_tax_rate;

        return $this;
    }

    /**
     * Gets freight_tax_amount
     *
     * @return double
     */
    public function getFreightTaxAmount()
    {
        return $this->container['freight_tax_amount'];
    }

    /**
     * Sets freight_tax_amount
     *
     * @param double $freight_tax_amount freight_tax_amount
     *
     * @return $this
     */
    public function setFreightTaxAmount($freight_tax_amount)
    {
        $this->container['freight_tax_amount'] = $freight_tax_amount;

        return $this;
    }

    /**
     * Gets duty_tax_id
     *
     * @return string
     */
    public function getDutyTaxId()
    {
        return $this->container['duty_tax_id'];
    }

    /**
     * Sets duty_tax_id
     *
     * @param string $duty_tax_id duty_tax_id
     *
     * @return $this
     */
    public function setDutyTaxId($duty_tax_id)
    {
        $this->container['duty_tax_id'] = $duty_tax_id;

        return $this;
    }

    /**
     * Gets duty_tax_rate
     *
     * @return double
     */
    public function getDutyTaxRate()
    {
        return $this->container['duty_tax_rate'];
    }

    /**
     * Sets duty_tax_rate
     *
     * @param double $duty_tax_rate duty_tax_rate
     *
     * @return $this
     */
    public function setDutyTaxRate($duty_tax_rate)
    {
        $this->container['duty_tax_rate'] = $duty_tax_rate;

        return $this;
    }

    /**
     * Gets duty_tax_amount
     *
     * @return double
     */
    public function getDutyTaxAmount()
    {
        return $this->container['duty_tax_amount'];
    }

    /**
     * Sets duty_tax_amount
     *
     * @param double $duty_tax_amount duty_tax_amount
     *
     * @return $this
     */
    public function setDutyTaxAmount($duty_tax_amount)
    {
        $this->container['duty_tax_amount'] = $duty_tax_amount;

        return $this;
    }

    /**
     * Gets insurance_tax_id
     *
     * @return string
     */
    public function getInsuranceTaxId()
    {
        return $this->container['insurance_tax_id'];
    }

    /**
     * Sets insurance_tax_id
     *
     * @param string $insurance_tax_id insurance_tax_id
     *
     * @return $this
     */
    public function setInsuranceTaxId($insurance_tax_id)
    {
        $this->container['insurance_tax_id'] = $insurance_tax_id;

        return $this;
    }

    /**
     * Gets insurance_tax_rate
     *
     * @return double
     */
    public function getInsuranceTaxRate()
    {
        return $this->container['insurance_tax_rate'];
    }

    /**
     * Sets insurance_tax_rate
     *
     * @param double $insurance_tax_rate insurance_tax_rate
     *
     * @return $this
     */
    public function setInsuranceTaxRate($insurance_tax_rate)
    {
        $this->container['insurance_tax_rate'] = $insurance_tax_rate;

        return $this;
    }

    /**
     * Gets insurance_tax_amount
     *
     * @return double
     */
    public function getInsuranceTaxAmount()
    {
        return $this->container['insurance_tax_amount'];
    }

    /**
     * Sets insurance_tax_amount
     *
     * @param double $insurance_tax_amount insurance_tax_amount
     *
     * @return $this
     */
    public function setInsuranceTaxAmount($insurance_tax_amount)
    {
        $this->container['insurance_tax_amount'] = $insurance_tax_amount;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


