<?php
/**
 * INPhysicalQuery
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\Model;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * INPhysicalQuery Class Doc Comment
 *
 * @category Class
 * @description IN_PhysicalQuery
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class INPhysicalQuery implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'IN_PhysicalQuery';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'in_physical_id' => 'string',
        'in_physical_id_starts_with' => 'string',
        'in_physical_id_ends_with' => 'string',
        'in_physical_id_contains' => 'string',
        'in_physical_id_like' => 'string',
        'in_physical_id_between' => 'string[]',
        'in_physical_id_in' => 'string[]',
        'last_saved_date_time' => '\DateTime',
        'last_saved_date_time_greater_than_or_equal_to' => '\DateTime',
        'last_saved_date_time_greater_than' => '\DateTime',
        'last_saved_date_time_less_than' => '\DateTime',
        'last_saved_date_time_less_than_or_equal_to' => '\DateTime',
        'last_saved_date_time_not_equal_to' => '\DateTime',
        'last_saved_date_time_between' => '\DateTime[]',
        'last_saved_date_time_in' => '\DateTime[]',
        'description' => 'string',
        'description_starts_with' => 'string',
        'description_ends_with' => 'string',
        'description_contains' => 'string',
        'description_like' => 'string',
        'description_between' => 'string[]',
        'description_in' => 'string[]',
        'address1' => 'string',
        'address1_starts_with' => 'string',
        'address1_ends_with' => 'string',
        'address1_contains' => 'string',
        'address1_like' => 'string',
        'address1_between' => 'string[]',
        'address1_in' => 'string[]',
        'address2' => 'string',
        'address2_starts_with' => 'string',
        'address2_ends_with' => 'string',
        'address2_contains' => 'string',
        'address2_like' => 'string',
        'address2_between' => 'string[]',
        'address2_in' => 'string[]',
        'address3' => 'string',
        'address3_starts_with' => 'string',
        'address3_ends_with' => 'string',
        'address3_contains' => 'string',
        'address3_like' => 'string',
        'address3_between' => 'string[]',
        'address3_in' => 'string[]',
        'address4' => 'string',
        'address4_starts_with' => 'string',
        'address4_ends_with' => 'string',
        'address4_contains' => 'string',
        'address4_like' => 'string',
        'address4_between' => 'string[]',
        'address4_in' => 'string[]',
        'post_code' => 'string',
        'post_code_starts_with' => 'string',
        'post_code_ends_with' => 'string',
        'post_code_contains' => 'string',
        'post_code_like' => 'string',
        'post_code_between' => 'string[]',
        'post_code_in' => 'string[]',
        'phone' => 'string',
        'phone_starts_with' => 'string',
        'phone_ends_with' => 'string',
        'phone_contains' => 'string',
        'phone_like' => 'string',
        'phone_between' => 'string[]',
        'phone_in' => 'string[]',
        'fax' => 'string',
        'fax_starts_with' => 'string',
        'fax_ends_with' => 'string',
        'fax_contains' => 'string',
        'fax_like' => 'string',
        'fax_between' => 'string[]',
        'fax_in' => 'string[]',
        'ref_comment' => 'string',
        'ref_comment_starts_with' => 'string',
        'ref_comment_ends_with' => 'string',
        'ref_comment_contains' => 'string',
        'ref_comment_like' => 'string',
        'ref_comment_between' => 'string[]',
        'ref_comment_in' => 'string[]',
        'skip' => 'int',
        'take' => 'int',
        'order_by' => 'string',
        'order_by_desc' => 'string',
        'include' => 'string',
        'fields' => 'string',
        'meta' => '\Jiwa\Model\DictionaryStringString_'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'in_physical_id' => null,
        'in_physical_id_starts_with' => null,
        'in_physical_id_ends_with' => null,
        'in_physical_id_contains' => null,
        'in_physical_id_like' => null,
        'in_physical_id_between' => null,
        'in_physical_id_in' => null,
        'last_saved_date_time' => 'date-time',
        'last_saved_date_time_greater_than_or_equal_to' => 'date-time',
        'last_saved_date_time_greater_than' => 'date-time',
        'last_saved_date_time_less_than' => 'date-time',
        'last_saved_date_time_less_than_or_equal_to' => 'date-time',
        'last_saved_date_time_not_equal_to' => 'date-time',
        'last_saved_date_time_between' => 'date-time',
        'last_saved_date_time_in' => 'date-time',
        'description' => null,
        'description_starts_with' => null,
        'description_ends_with' => null,
        'description_contains' => null,
        'description_like' => null,
        'description_between' => null,
        'description_in' => null,
        'address1' => null,
        'address1_starts_with' => null,
        'address1_ends_with' => null,
        'address1_contains' => null,
        'address1_like' => null,
        'address1_between' => null,
        'address1_in' => null,
        'address2' => null,
        'address2_starts_with' => null,
        'address2_ends_with' => null,
        'address2_contains' => null,
        'address2_like' => null,
        'address2_between' => null,
        'address2_in' => null,
        'address3' => null,
        'address3_starts_with' => null,
        'address3_ends_with' => null,
        'address3_contains' => null,
        'address3_like' => null,
        'address3_between' => null,
        'address3_in' => null,
        'address4' => null,
        'address4_starts_with' => null,
        'address4_ends_with' => null,
        'address4_contains' => null,
        'address4_like' => null,
        'address4_between' => null,
        'address4_in' => null,
        'post_code' => null,
        'post_code_starts_with' => null,
        'post_code_ends_with' => null,
        'post_code_contains' => null,
        'post_code_like' => null,
        'post_code_between' => null,
        'post_code_in' => null,
        'phone' => null,
        'phone_starts_with' => null,
        'phone_ends_with' => null,
        'phone_contains' => null,
        'phone_like' => null,
        'phone_between' => null,
        'phone_in' => null,
        'fax' => null,
        'fax_starts_with' => null,
        'fax_ends_with' => null,
        'fax_contains' => null,
        'fax_like' => null,
        'fax_between' => null,
        'fax_in' => null,
        'ref_comment' => null,
        'ref_comment_starts_with' => null,
        'ref_comment_ends_with' => null,
        'ref_comment_contains' => null,
        'ref_comment_like' => null,
        'ref_comment_between' => null,
        'ref_comment_in' => null,
        'skip' => 'int32',
        'take' => 'int32',
        'order_by' => null,
        'order_by_desc' => null,
        'include' => null,
        'fields' => null,
        'meta' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'in_physical_id' => 'IN_PhysicalID',
        'in_physical_id_starts_with' => 'IN_PhysicalIDStartsWith',
        'in_physical_id_ends_with' => 'IN_PhysicalIDEndsWith',
        'in_physical_id_contains' => 'IN_PhysicalIDContains',
        'in_physical_id_like' => 'IN_PhysicalIDLike',
        'in_physical_id_between' => 'IN_PhysicalIDBetween',
        'in_physical_id_in' => 'IN_PhysicalIDIn',
        'last_saved_date_time' => 'LastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'LastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'LastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'LastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'LastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'LastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'LastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'LastSavedDateTimeIn',
        'description' => 'Description',
        'description_starts_with' => 'DescriptionStartsWith',
        'description_ends_with' => 'DescriptionEndsWith',
        'description_contains' => 'DescriptionContains',
        'description_like' => 'DescriptionLike',
        'description_between' => 'DescriptionBetween',
        'description_in' => 'DescriptionIn',
        'address1' => 'Address1',
        'address1_starts_with' => 'Address1StartsWith',
        'address1_ends_with' => 'Address1EndsWith',
        'address1_contains' => 'Address1Contains',
        'address1_like' => 'Address1Like',
        'address1_between' => 'Address1Between',
        'address1_in' => 'Address1In',
        'address2' => 'Address2',
        'address2_starts_with' => 'Address2StartsWith',
        'address2_ends_with' => 'Address2EndsWith',
        'address2_contains' => 'Address2Contains',
        'address2_like' => 'Address2Like',
        'address2_between' => 'Address2Between',
        'address2_in' => 'Address2In',
        'address3' => 'Address3',
        'address3_starts_with' => 'Address3StartsWith',
        'address3_ends_with' => 'Address3EndsWith',
        'address3_contains' => 'Address3Contains',
        'address3_like' => 'Address3Like',
        'address3_between' => 'Address3Between',
        'address3_in' => 'Address3In',
        'address4' => 'Address4',
        'address4_starts_with' => 'Address4StartsWith',
        'address4_ends_with' => 'Address4EndsWith',
        'address4_contains' => 'Address4Contains',
        'address4_like' => 'Address4Like',
        'address4_between' => 'Address4Between',
        'address4_in' => 'Address4In',
        'post_code' => 'PostCode',
        'post_code_starts_with' => 'PostCodeStartsWith',
        'post_code_ends_with' => 'PostCodeEndsWith',
        'post_code_contains' => 'PostCodeContains',
        'post_code_like' => 'PostCodeLike',
        'post_code_between' => 'PostCodeBetween',
        'post_code_in' => 'PostCodeIn',
        'phone' => 'Phone',
        'phone_starts_with' => 'PhoneStartsWith',
        'phone_ends_with' => 'PhoneEndsWith',
        'phone_contains' => 'PhoneContains',
        'phone_like' => 'PhoneLike',
        'phone_between' => 'PhoneBetween',
        'phone_in' => 'PhoneIn',
        'fax' => 'Fax',
        'fax_starts_with' => 'FaxStartsWith',
        'fax_ends_with' => 'FaxEndsWith',
        'fax_contains' => 'FaxContains',
        'fax_like' => 'FaxLike',
        'fax_between' => 'FaxBetween',
        'fax_in' => 'FaxIn',
        'ref_comment' => 'RefComment',
        'ref_comment_starts_with' => 'RefCommentStartsWith',
        'ref_comment_ends_with' => 'RefCommentEndsWith',
        'ref_comment_contains' => 'RefCommentContains',
        'ref_comment_like' => 'RefCommentLike',
        'ref_comment_between' => 'RefCommentBetween',
        'ref_comment_in' => 'RefCommentIn',
        'skip' => 'Skip',
        'take' => 'Take',
        'order_by' => 'OrderBy',
        'order_by_desc' => 'OrderByDesc',
        'include' => 'Include',
        'fields' => 'Fields',
        'meta' => 'Meta'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'in_physical_id' => 'setInPhysicalId',
        'in_physical_id_starts_with' => 'setInPhysicalIdStartsWith',
        'in_physical_id_ends_with' => 'setInPhysicalIdEndsWith',
        'in_physical_id_contains' => 'setInPhysicalIdContains',
        'in_physical_id_like' => 'setInPhysicalIdLike',
        'in_physical_id_between' => 'setInPhysicalIdBetween',
        'in_physical_id_in' => 'setInPhysicalIdIn',
        'last_saved_date_time' => 'setLastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'setLastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'setLastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'setLastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'setLastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'setLastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'setLastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'setLastSavedDateTimeIn',
        'description' => 'setDescription',
        'description_starts_with' => 'setDescriptionStartsWith',
        'description_ends_with' => 'setDescriptionEndsWith',
        'description_contains' => 'setDescriptionContains',
        'description_like' => 'setDescriptionLike',
        'description_between' => 'setDescriptionBetween',
        'description_in' => 'setDescriptionIn',
        'address1' => 'setAddress1',
        'address1_starts_with' => 'setAddress1StartsWith',
        'address1_ends_with' => 'setAddress1EndsWith',
        'address1_contains' => 'setAddress1Contains',
        'address1_like' => 'setAddress1Like',
        'address1_between' => 'setAddress1Between',
        'address1_in' => 'setAddress1In',
        'address2' => 'setAddress2',
        'address2_starts_with' => 'setAddress2StartsWith',
        'address2_ends_with' => 'setAddress2EndsWith',
        'address2_contains' => 'setAddress2Contains',
        'address2_like' => 'setAddress2Like',
        'address2_between' => 'setAddress2Between',
        'address2_in' => 'setAddress2In',
        'address3' => 'setAddress3',
        'address3_starts_with' => 'setAddress3StartsWith',
        'address3_ends_with' => 'setAddress3EndsWith',
        'address3_contains' => 'setAddress3Contains',
        'address3_like' => 'setAddress3Like',
        'address3_between' => 'setAddress3Between',
        'address3_in' => 'setAddress3In',
        'address4' => 'setAddress4',
        'address4_starts_with' => 'setAddress4StartsWith',
        'address4_ends_with' => 'setAddress4EndsWith',
        'address4_contains' => 'setAddress4Contains',
        'address4_like' => 'setAddress4Like',
        'address4_between' => 'setAddress4Between',
        'address4_in' => 'setAddress4In',
        'post_code' => 'setPostCode',
        'post_code_starts_with' => 'setPostCodeStartsWith',
        'post_code_ends_with' => 'setPostCodeEndsWith',
        'post_code_contains' => 'setPostCodeContains',
        'post_code_like' => 'setPostCodeLike',
        'post_code_between' => 'setPostCodeBetween',
        'post_code_in' => 'setPostCodeIn',
        'phone' => 'setPhone',
        'phone_starts_with' => 'setPhoneStartsWith',
        'phone_ends_with' => 'setPhoneEndsWith',
        'phone_contains' => 'setPhoneContains',
        'phone_like' => 'setPhoneLike',
        'phone_between' => 'setPhoneBetween',
        'phone_in' => 'setPhoneIn',
        'fax' => 'setFax',
        'fax_starts_with' => 'setFaxStartsWith',
        'fax_ends_with' => 'setFaxEndsWith',
        'fax_contains' => 'setFaxContains',
        'fax_like' => 'setFaxLike',
        'fax_between' => 'setFaxBetween',
        'fax_in' => 'setFaxIn',
        'ref_comment' => 'setRefComment',
        'ref_comment_starts_with' => 'setRefCommentStartsWith',
        'ref_comment_ends_with' => 'setRefCommentEndsWith',
        'ref_comment_contains' => 'setRefCommentContains',
        'ref_comment_like' => 'setRefCommentLike',
        'ref_comment_between' => 'setRefCommentBetween',
        'ref_comment_in' => 'setRefCommentIn',
        'skip' => 'setSkip',
        'take' => 'setTake',
        'order_by' => 'setOrderBy',
        'order_by_desc' => 'setOrderByDesc',
        'include' => 'setInclude',
        'fields' => 'setFields',
        'meta' => 'setMeta'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'in_physical_id' => 'getInPhysicalId',
        'in_physical_id_starts_with' => 'getInPhysicalIdStartsWith',
        'in_physical_id_ends_with' => 'getInPhysicalIdEndsWith',
        'in_physical_id_contains' => 'getInPhysicalIdContains',
        'in_physical_id_like' => 'getInPhysicalIdLike',
        'in_physical_id_between' => 'getInPhysicalIdBetween',
        'in_physical_id_in' => 'getInPhysicalIdIn',
        'last_saved_date_time' => 'getLastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'getLastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'getLastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'getLastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'getLastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'getLastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'getLastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'getLastSavedDateTimeIn',
        'description' => 'getDescription',
        'description_starts_with' => 'getDescriptionStartsWith',
        'description_ends_with' => 'getDescriptionEndsWith',
        'description_contains' => 'getDescriptionContains',
        'description_like' => 'getDescriptionLike',
        'description_between' => 'getDescriptionBetween',
        'description_in' => 'getDescriptionIn',
        'address1' => 'getAddress1',
        'address1_starts_with' => 'getAddress1StartsWith',
        'address1_ends_with' => 'getAddress1EndsWith',
        'address1_contains' => 'getAddress1Contains',
        'address1_like' => 'getAddress1Like',
        'address1_between' => 'getAddress1Between',
        'address1_in' => 'getAddress1In',
        'address2' => 'getAddress2',
        'address2_starts_with' => 'getAddress2StartsWith',
        'address2_ends_with' => 'getAddress2EndsWith',
        'address2_contains' => 'getAddress2Contains',
        'address2_like' => 'getAddress2Like',
        'address2_between' => 'getAddress2Between',
        'address2_in' => 'getAddress2In',
        'address3' => 'getAddress3',
        'address3_starts_with' => 'getAddress3StartsWith',
        'address3_ends_with' => 'getAddress3EndsWith',
        'address3_contains' => 'getAddress3Contains',
        'address3_like' => 'getAddress3Like',
        'address3_between' => 'getAddress3Between',
        'address3_in' => 'getAddress3In',
        'address4' => 'getAddress4',
        'address4_starts_with' => 'getAddress4StartsWith',
        'address4_ends_with' => 'getAddress4EndsWith',
        'address4_contains' => 'getAddress4Contains',
        'address4_like' => 'getAddress4Like',
        'address4_between' => 'getAddress4Between',
        'address4_in' => 'getAddress4In',
        'post_code' => 'getPostCode',
        'post_code_starts_with' => 'getPostCodeStartsWith',
        'post_code_ends_with' => 'getPostCodeEndsWith',
        'post_code_contains' => 'getPostCodeContains',
        'post_code_like' => 'getPostCodeLike',
        'post_code_between' => 'getPostCodeBetween',
        'post_code_in' => 'getPostCodeIn',
        'phone' => 'getPhone',
        'phone_starts_with' => 'getPhoneStartsWith',
        'phone_ends_with' => 'getPhoneEndsWith',
        'phone_contains' => 'getPhoneContains',
        'phone_like' => 'getPhoneLike',
        'phone_between' => 'getPhoneBetween',
        'phone_in' => 'getPhoneIn',
        'fax' => 'getFax',
        'fax_starts_with' => 'getFaxStartsWith',
        'fax_ends_with' => 'getFaxEndsWith',
        'fax_contains' => 'getFaxContains',
        'fax_like' => 'getFaxLike',
        'fax_between' => 'getFaxBetween',
        'fax_in' => 'getFaxIn',
        'ref_comment' => 'getRefComment',
        'ref_comment_starts_with' => 'getRefCommentStartsWith',
        'ref_comment_ends_with' => 'getRefCommentEndsWith',
        'ref_comment_contains' => 'getRefCommentContains',
        'ref_comment_like' => 'getRefCommentLike',
        'ref_comment_between' => 'getRefCommentBetween',
        'ref_comment_in' => 'getRefCommentIn',
        'skip' => 'getSkip',
        'take' => 'getTake',
        'order_by' => 'getOrderBy',
        'order_by_desc' => 'getOrderByDesc',
        'include' => 'getInclude',
        'fields' => 'getFields',
        'meta' => 'getMeta'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['in_physical_id'] = isset($data['in_physical_id']) ? $data['in_physical_id'] : null;
        $this->container['in_physical_id_starts_with'] = isset($data['in_physical_id_starts_with']) ? $data['in_physical_id_starts_with'] : null;
        $this->container['in_physical_id_ends_with'] = isset($data['in_physical_id_ends_with']) ? $data['in_physical_id_ends_with'] : null;
        $this->container['in_physical_id_contains'] = isset($data['in_physical_id_contains']) ? $data['in_physical_id_contains'] : null;
        $this->container['in_physical_id_like'] = isset($data['in_physical_id_like']) ? $data['in_physical_id_like'] : null;
        $this->container['in_physical_id_between'] = isset($data['in_physical_id_between']) ? $data['in_physical_id_between'] : null;
        $this->container['in_physical_id_in'] = isset($data['in_physical_id_in']) ? $data['in_physical_id_in'] : null;
        $this->container['last_saved_date_time'] = isset($data['last_saved_date_time']) ? $data['last_saved_date_time'] : null;
        $this->container['last_saved_date_time_greater_than_or_equal_to'] = isset($data['last_saved_date_time_greater_than_or_equal_to']) ? $data['last_saved_date_time_greater_than_or_equal_to'] : null;
        $this->container['last_saved_date_time_greater_than'] = isset($data['last_saved_date_time_greater_than']) ? $data['last_saved_date_time_greater_than'] : null;
        $this->container['last_saved_date_time_less_than'] = isset($data['last_saved_date_time_less_than']) ? $data['last_saved_date_time_less_than'] : null;
        $this->container['last_saved_date_time_less_than_or_equal_to'] = isset($data['last_saved_date_time_less_than_or_equal_to']) ? $data['last_saved_date_time_less_than_or_equal_to'] : null;
        $this->container['last_saved_date_time_not_equal_to'] = isset($data['last_saved_date_time_not_equal_to']) ? $data['last_saved_date_time_not_equal_to'] : null;
        $this->container['last_saved_date_time_between'] = isset($data['last_saved_date_time_between']) ? $data['last_saved_date_time_between'] : null;
        $this->container['last_saved_date_time_in'] = isset($data['last_saved_date_time_in']) ? $data['last_saved_date_time_in'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['description_starts_with'] = isset($data['description_starts_with']) ? $data['description_starts_with'] : null;
        $this->container['description_ends_with'] = isset($data['description_ends_with']) ? $data['description_ends_with'] : null;
        $this->container['description_contains'] = isset($data['description_contains']) ? $data['description_contains'] : null;
        $this->container['description_like'] = isset($data['description_like']) ? $data['description_like'] : null;
        $this->container['description_between'] = isset($data['description_between']) ? $data['description_between'] : null;
        $this->container['description_in'] = isset($data['description_in']) ? $data['description_in'] : null;
        $this->container['address1'] = isset($data['address1']) ? $data['address1'] : null;
        $this->container['address1_starts_with'] = isset($data['address1_starts_with']) ? $data['address1_starts_with'] : null;
        $this->container['address1_ends_with'] = isset($data['address1_ends_with']) ? $data['address1_ends_with'] : null;
        $this->container['address1_contains'] = isset($data['address1_contains']) ? $data['address1_contains'] : null;
        $this->container['address1_like'] = isset($data['address1_like']) ? $data['address1_like'] : null;
        $this->container['address1_between'] = isset($data['address1_between']) ? $data['address1_between'] : null;
        $this->container['address1_in'] = isset($data['address1_in']) ? $data['address1_in'] : null;
        $this->container['address2'] = isset($data['address2']) ? $data['address2'] : null;
        $this->container['address2_starts_with'] = isset($data['address2_starts_with']) ? $data['address2_starts_with'] : null;
        $this->container['address2_ends_with'] = isset($data['address2_ends_with']) ? $data['address2_ends_with'] : null;
        $this->container['address2_contains'] = isset($data['address2_contains']) ? $data['address2_contains'] : null;
        $this->container['address2_like'] = isset($data['address2_like']) ? $data['address2_like'] : null;
        $this->container['address2_between'] = isset($data['address2_between']) ? $data['address2_between'] : null;
        $this->container['address2_in'] = isset($data['address2_in']) ? $data['address2_in'] : null;
        $this->container['address3'] = isset($data['address3']) ? $data['address3'] : null;
        $this->container['address3_starts_with'] = isset($data['address3_starts_with']) ? $data['address3_starts_with'] : null;
        $this->container['address3_ends_with'] = isset($data['address3_ends_with']) ? $data['address3_ends_with'] : null;
        $this->container['address3_contains'] = isset($data['address3_contains']) ? $data['address3_contains'] : null;
        $this->container['address3_like'] = isset($data['address3_like']) ? $data['address3_like'] : null;
        $this->container['address3_between'] = isset($data['address3_between']) ? $data['address3_between'] : null;
        $this->container['address3_in'] = isset($data['address3_in']) ? $data['address3_in'] : null;
        $this->container['address4'] = isset($data['address4']) ? $data['address4'] : null;
        $this->container['address4_starts_with'] = isset($data['address4_starts_with']) ? $data['address4_starts_with'] : null;
        $this->container['address4_ends_with'] = isset($data['address4_ends_with']) ? $data['address4_ends_with'] : null;
        $this->container['address4_contains'] = isset($data['address4_contains']) ? $data['address4_contains'] : null;
        $this->container['address4_like'] = isset($data['address4_like']) ? $data['address4_like'] : null;
        $this->container['address4_between'] = isset($data['address4_between']) ? $data['address4_between'] : null;
        $this->container['address4_in'] = isset($data['address4_in']) ? $data['address4_in'] : null;
        $this->container['post_code'] = isset($data['post_code']) ? $data['post_code'] : null;
        $this->container['post_code_starts_with'] = isset($data['post_code_starts_with']) ? $data['post_code_starts_with'] : null;
        $this->container['post_code_ends_with'] = isset($data['post_code_ends_with']) ? $data['post_code_ends_with'] : null;
        $this->container['post_code_contains'] = isset($data['post_code_contains']) ? $data['post_code_contains'] : null;
        $this->container['post_code_like'] = isset($data['post_code_like']) ? $data['post_code_like'] : null;
        $this->container['post_code_between'] = isset($data['post_code_between']) ? $data['post_code_between'] : null;
        $this->container['post_code_in'] = isset($data['post_code_in']) ? $data['post_code_in'] : null;
        $this->container['phone'] = isset($data['phone']) ? $data['phone'] : null;
        $this->container['phone_starts_with'] = isset($data['phone_starts_with']) ? $data['phone_starts_with'] : null;
        $this->container['phone_ends_with'] = isset($data['phone_ends_with']) ? $data['phone_ends_with'] : null;
        $this->container['phone_contains'] = isset($data['phone_contains']) ? $data['phone_contains'] : null;
        $this->container['phone_like'] = isset($data['phone_like']) ? $data['phone_like'] : null;
        $this->container['phone_between'] = isset($data['phone_between']) ? $data['phone_between'] : null;
        $this->container['phone_in'] = isset($data['phone_in']) ? $data['phone_in'] : null;
        $this->container['fax'] = isset($data['fax']) ? $data['fax'] : null;
        $this->container['fax_starts_with'] = isset($data['fax_starts_with']) ? $data['fax_starts_with'] : null;
        $this->container['fax_ends_with'] = isset($data['fax_ends_with']) ? $data['fax_ends_with'] : null;
        $this->container['fax_contains'] = isset($data['fax_contains']) ? $data['fax_contains'] : null;
        $this->container['fax_like'] = isset($data['fax_like']) ? $data['fax_like'] : null;
        $this->container['fax_between'] = isset($data['fax_between']) ? $data['fax_between'] : null;
        $this->container['fax_in'] = isset($data['fax_in']) ? $data['fax_in'] : null;
        $this->container['ref_comment'] = isset($data['ref_comment']) ? $data['ref_comment'] : null;
        $this->container['ref_comment_starts_with'] = isset($data['ref_comment_starts_with']) ? $data['ref_comment_starts_with'] : null;
        $this->container['ref_comment_ends_with'] = isset($data['ref_comment_ends_with']) ? $data['ref_comment_ends_with'] : null;
        $this->container['ref_comment_contains'] = isset($data['ref_comment_contains']) ? $data['ref_comment_contains'] : null;
        $this->container['ref_comment_like'] = isset($data['ref_comment_like']) ? $data['ref_comment_like'] : null;
        $this->container['ref_comment_between'] = isset($data['ref_comment_between']) ? $data['ref_comment_between'] : null;
        $this->container['ref_comment_in'] = isset($data['ref_comment_in']) ? $data['ref_comment_in'] : null;
        $this->container['skip'] = isset($data['skip']) ? $data['skip'] : null;
        $this->container['take'] = isset($data['take']) ? $data['take'] : null;
        $this->container['order_by'] = isset($data['order_by']) ? $data['order_by'] : null;
        $this->container['order_by_desc'] = isset($data['order_by_desc']) ? $data['order_by_desc'] : null;
        $this->container['include'] = isset($data['include']) ? $data['include'] : null;
        $this->container['fields'] = isset($data['fields']) ? $data['fields'] : null;
        $this->container['meta'] = isset($data['meta']) ? $data['meta'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets in_physical_id
     *
     * @return string
     */
    public function getInPhysicalId()
    {
        return $this->container['in_physical_id'];
    }

    /**
     * Sets in_physical_id
     *
     * @param string $in_physical_id in_physical_id
     *
     * @return $this
     */
    public function setInPhysicalId($in_physical_id)
    {
        $this->container['in_physical_id'] = $in_physical_id;

        return $this;
    }

    /**
     * Gets in_physical_id_starts_with
     *
     * @return string
     */
    public function getInPhysicalIdStartsWith()
    {
        return $this->container['in_physical_id_starts_with'];
    }

    /**
     * Sets in_physical_id_starts_with
     *
     * @param string $in_physical_id_starts_with in_physical_id_starts_with
     *
     * @return $this
     */
    public function setInPhysicalIdStartsWith($in_physical_id_starts_with)
    {
        $this->container['in_physical_id_starts_with'] = $in_physical_id_starts_with;

        return $this;
    }

    /**
     * Gets in_physical_id_ends_with
     *
     * @return string
     */
    public function getInPhysicalIdEndsWith()
    {
        return $this->container['in_physical_id_ends_with'];
    }

    /**
     * Sets in_physical_id_ends_with
     *
     * @param string $in_physical_id_ends_with in_physical_id_ends_with
     *
     * @return $this
     */
    public function setInPhysicalIdEndsWith($in_physical_id_ends_with)
    {
        $this->container['in_physical_id_ends_with'] = $in_physical_id_ends_with;

        return $this;
    }

    /**
     * Gets in_physical_id_contains
     *
     * @return string
     */
    public function getInPhysicalIdContains()
    {
        return $this->container['in_physical_id_contains'];
    }

    /**
     * Sets in_physical_id_contains
     *
     * @param string $in_physical_id_contains in_physical_id_contains
     *
     * @return $this
     */
    public function setInPhysicalIdContains($in_physical_id_contains)
    {
        $this->container['in_physical_id_contains'] = $in_physical_id_contains;

        return $this;
    }

    /**
     * Gets in_physical_id_like
     *
     * @return string
     */
    public function getInPhysicalIdLike()
    {
        return $this->container['in_physical_id_like'];
    }

    /**
     * Sets in_physical_id_like
     *
     * @param string $in_physical_id_like in_physical_id_like
     *
     * @return $this
     */
    public function setInPhysicalIdLike($in_physical_id_like)
    {
        $this->container['in_physical_id_like'] = $in_physical_id_like;

        return $this;
    }

    /**
     * Gets in_physical_id_between
     *
     * @return string[]
     */
    public function getInPhysicalIdBetween()
    {
        return $this->container['in_physical_id_between'];
    }

    /**
     * Sets in_physical_id_between
     *
     * @param string[] $in_physical_id_between in_physical_id_between
     *
     * @return $this
     */
    public function setInPhysicalIdBetween($in_physical_id_between)
    {
        $this->container['in_physical_id_between'] = $in_physical_id_between;

        return $this;
    }

    /**
     * Gets in_physical_id_in
     *
     * @return string[]
     */
    public function getInPhysicalIdIn()
    {
        return $this->container['in_physical_id_in'];
    }

    /**
     * Sets in_physical_id_in
     *
     * @param string[] $in_physical_id_in in_physical_id_in
     *
     * @return $this
     */
    public function setInPhysicalIdIn($in_physical_id_in)
    {
        $this->container['in_physical_id_in'] = $in_physical_id_in;

        return $this;
    }

    /**
     * Gets last_saved_date_time
     *
     * @return \DateTime
     */
    public function getLastSavedDateTime()
    {
        return $this->container['last_saved_date_time'];
    }

    /**
     * Sets last_saved_date_time
     *
     * @param \DateTime $last_saved_date_time last_saved_date_time
     *
     * @return $this
     */
    public function setLastSavedDateTime($last_saved_date_time)
    {
        $this->container['last_saved_date_time'] = $last_saved_date_time;

        return $this;
    }

    /**
     * Gets last_saved_date_time_greater_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeGreaterThanOrEqualTo()
    {
        return $this->container['last_saved_date_time_greater_than_or_equal_to'];
    }

    /**
     * Sets last_saved_date_time_greater_than_or_equal_to
     *
     * @param \DateTime $last_saved_date_time_greater_than_or_equal_to last_saved_date_time_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeGreaterThanOrEqualTo($last_saved_date_time_greater_than_or_equal_to)
    {
        $this->container['last_saved_date_time_greater_than_or_equal_to'] = $last_saved_date_time_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_greater_than
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeGreaterThan()
    {
        return $this->container['last_saved_date_time_greater_than'];
    }

    /**
     * Sets last_saved_date_time_greater_than
     *
     * @param \DateTime $last_saved_date_time_greater_than last_saved_date_time_greater_than
     *
     * @return $this
     */
    public function setLastSavedDateTimeGreaterThan($last_saved_date_time_greater_than)
    {
        $this->container['last_saved_date_time_greater_than'] = $last_saved_date_time_greater_than;

        return $this;
    }

    /**
     * Gets last_saved_date_time_less_than
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeLessThan()
    {
        return $this->container['last_saved_date_time_less_than'];
    }

    /**
     * Sets last_saved_date_time_less_than
     *
     * @param \DateTime $last_saved_date_time_less_than last_saved_date_time_less_than
     *
     * @return $this
     */
    public function setLastSavedDateTimeLessThan($last_saved_date_time_less_than)
    {
        $this->container['last_saved_date_time_less_than'] = $last_saved_date_time_less_than;

        return $this;
    }

    /**
     * Gets last_saved_date_time_less_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeLessThanOrEqualTo()
    {
        return $this->container['last_saved_date_time_less_than_or_equal_to'];
    }

    /**
     * Sets last_saved_date_time_less_than_or_equal_to
     *
     * @param \DateTime $last_saved_date_time_less_than_or_equal_to last_saved_date_time_less_than_or_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeLessThanOrEqualTo($last_saved_date_time_less_than_or_equal_to)
    {
        $this->container['last_saved_date_time_less_than_or_equal_to'] = $last_saved_date_time_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_not_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeNotEqualTo()
    {
        return $this->container['last_saved_date_time_not_equal_to'];
    }

    /**
     * Sets last_saved_date_time_not_equal_to
     *
     * @param \DateTime $last_saved_date_time_not_equal_to last_saved_date_time_not_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeNotEqualTo($last_saved_date_time_not_equal_to)
    {
        $this->container['last_saved_date_time_not_equal_to'] = $last_saved_date_time_not_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_between
     *
     * @return \DateTime[]
     */
    public function getLastSavedDateTimeBetween()
    {
        return $this->container['last_saved_date_time_between'];
    }

    /**
     * Sets last_saved_date_time_between
     *
     * @param \DateTime[] $last_saved_date_time_between last_saved_date_time_between
     *
     * @return $this
     */
    public function setLastSavedDateTimeBetween($last_saved_date_time_between)
    {
        $this->container['last_saved_date_time_between'] = $last_saved_date_time_between;

        return $this;
    }

    /**
     * Gets last_saved_date_time_in
     *
     * @return \DateTime[]
     */
    public function getLastSavedDateTimeIn()
    {
        return $this->container['last_saved_date_time_in'];
    }

    /**
     * Sets last_saved_date_time_in
     *
     * @param \DateTime[] $last_saved_date_time_in last_saved_date_time_in
     *
     * @return $this
     */
    public function setLastSavedDateTimeIn($last_saved_date_time_in)
    {
        $this->container['last_saved_date_time_in'] = $last_saved_date_time_in;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets description_starts_with
     *
     * @return string
     */
    public function getDescriptionStartsWith()
    {
        return $this->container['description_starts_with'];
    }

    /**
     * Sets description_starts_with
     *
     * @param string $description_starts_with description_starts_with
     *
     * @return $this
     */
    public function setDescriptionStartsWith($description_starts_with)
    {
        $this->container['description_starts_with'] = $description_starts_with;

        return $this;
    }

    /**
     * Gets description_ends_with
     *
     * @return string
     */
    public function getDescriptionEndsWith()
    {
        return $this->container['description_ends_with'];
    }

    /**
     * Sets description_ends_with
     *
     * @param string $description_ends_with description_ends_with
     *
     * @return $this
     */
    public function setDescriptionEndsWith($description_ends_with)
    {
        $this->container['description_ends_with'] = $description_ends_with;

        return $this;
    }

    /**
     * Gets description_contains
     *
     * @return string
     */
    public function getDescriptionContains()
    {
        return $this->container['description_contains'];
    }

    /**
     * Sets description_contains
     *
     * @param string $description_contains description_contains
     *
     * @return $this
     */
    public function setDescriptionContains($description_contains)
    {
        $this->container['description_contains'] = $description_contains;

        return $this;
    }

    /**
     * Gets description_like
     *
     * @return string
     */
    public function getDescriptionLike()
    {
        return $this->container['description_like'];
    }

    /**
     * Sets description_like
     *
     * @param string $description_like description_like
     *
     * @return $this
     */
    public function setDescriptionLike($description_like)
    {
        $this->container['description_like'] = $description_like;

        return $this;
    }

    /**
     * Gets description_between
     *
     * @return string[]
     */
    public function getDescriptionBetween()
    {
        return $this->container['description_between'];
    }

    /**
     * Sets description_between
     *
     * @param string[] $description_between description_between
     *
     * @return $this
     */
    public function setDescriptionBetween($description_between)
    {
        $this->container['description_between'] = $description_between;

        return $this;
    }

    /**
     * Gets description_in
     *
     * @return string[]
     */
    public function getDescriptionIn()
    {
        return $this->container['description_in'];
    }

    /**
     * Sets description_in
     *
     * @param string[] $description_in description_in
     *
     * @return $this
     */
    public function setDescriptionIn($description_in)
    {
        $this->container['description_in'] = $description_in;

        return $this;
    }

    /**
     * Gets address1
     *
     * @return string
     */
    public function getAddress1()
    {
        return $this->container['address1'];
    }

    /**
     * Sets address1
     *
     * @param string $address1 address1
     *
     * @return $this
     */
    public function setAddress1($address1)
    {
        $this->container['address1'] = $address1;

        return $this;
    }

    /**
     * Gets address1_starts_with
     *
     * @return string
     */
    public function getAddress1StartsWith()
    {
        return $this->container['address1_starts_with'];
    }

    /**
     * Sets address1_starts_with
     *
     * @param string $address1_starts_with address1_starts_with
     *
     * @return $this
     */
    public function setAddress1StartsWith($address1_starts_with)
    {
        $this->container['address1_starts_with'] = $address1_starts_with;

        return $this;
    }

    /**
     * Gets address1_ends_with
     *
     * @return string
     */
    public function getAddress1EndsWith()
    {
        return $this->container['address1_ends_with'];
    }

    /**
     * Sets address1_ends_with
     *
     * @param string $address1_ends_with address1_ends_with
     *
     * @return $this
     */
    public function setAddress1EndsWith($address1_ends_with)
    {
        $this->container['address1_ends_with'] = $address1_ends_with;

        return $this;
    }

    /**
     * Gets address1_contains
     *
     * @return string
     */
    public function getAddress1Contains()
    {
        return $this->container['address1_contains'];
    }

    /**
     * Sets address1_contains
     *
     * @param string $address1_contains address1_contains
     *
     * @return $this
     */
    public function setAddress1Contains($address1_contains)
    {
        $this->container['address1_contains'] = $address1_contains;

        return $this;
    }

    /**
     * Gets address1_like
     *
     * @return string
     */
    public function getAddress1Like()
    {
        return $this->container['address1_like'];
    }

    /**
     * Sets address1_like
     *
     * @param string $address1_like address1_like
     *
     * @return $this
     */
    public function setAddress1Like($address1_like)
    {
        $this->container['address1_like'] = $address1_like;

        return $this;
    }

    /**
     * Gets address1_between
     *
     * @return string[]
     */
    public function getAddress1Between()
    {
        return $this->container['address1_between'];
    }

    /**
     * Sets address1_between
     *
     * @param string[] $address1_between address1_between
     *
     * @return $this
     */
    public function setAddress1Between($address1_between)
    {
        $this->container['address1_between'] = $address1_between;

        return $this;
    }

    /**
     * Gets address1_in
     *
     * @return string[]
     */
    public function getAddress1In()
    {
        return $this->container['address1_in'];
    }

    /**
     * Sets address1_in
     *
     * @param string[] $address1_in address1_in
     *
     * @return $this
     */
    public function setAddress1In($address1_in)
    {
        $this->container['address1_in'] = $address1_in;

        return $this;
    }

    /**
     * Gets address2
     *
     * @return string
     */
    public function getAddress2()
    {
        return $this->container['address2'];
    }

    /**
     * Sets address2
     *
     * @param string $address2 address2
     *
     * @return $this
     */
    public function setAddress2($address2)
    {
        $this->container['address2'] = $address2;

        return $this;
    }

    /**
     * Gets address2_starts_with
     *
     * @return string
     */
    public function getAddress2StartsWith()
    {
        return $this->container['address2_starts_with'];
    }

    /**
     * Sets address2_starts_with
     *
     * @param string $address2_starts_with address2_starts_with
     *
     * @return $this
     */
    public function setAddress2StartsWith($address2_starts_with)
    {
        $this->container['address2_starts_with'] = $address2_starts_with;

        return $this;
    }

    /**
     * Gets address2_ends_with
     *
     * @return string
     */
    public function getAddress2EndsWith()
    {
        return $this->container['address2_ends_with'];
    }

    /**
     * Sets address2_ends_with
     *
     * @param string $address2_ends_with address2_ends_with
     *
     * @return $this
     */
    public function setAddress2EndsWith($address2_ends_with)
    {
        $this->container['address2_ends_with'] = $address2_ends_with;

        return $this;
    }

    /**
     * Gets address2_contains
     *
     * @return string
     */
    public function getAddress2Contains()
    {
        return $this->container['address2_contains'];
    }

    /**
     * Sets address2_contains
     *
     * @param string $address2_contains address2_contains
     *
     * @return $this
     */
    public function setAddress2Contains($address2_contains)
    {
        $this->container['address2_contains'] = $address2_contains;

        return $this;
    }

    /**
     * Gets address2_like
     *
     * @return string
     */
    public function getAddress2Like()
    {
        return $this->container['address2_like'];
    }

    /**
     * Sets address2_like
     *
     * @param string $address2_like address2_like
     *
     * @return $this
     */
    public function setAddress2Like($address2_like)
    {
        $this->container['address2_like'] = $address2_like;

        return $this;
    }

    /**
     * Gets address2_between
     *
     * @return string[]
     */
    public function getAddress2Between()
    {
        return $this->container['address2_between'];
    }

    /**
     * Sets address2_between
     *
     * @param string[] $address2_between address2_between
     *
     * @return $this
     */
    public function setAddress2Between($address2_between)
    {
        $this->container['address2_between'] = $address2_between;

        return $this;
    }

    /**
     * Gets address2_in
     *
     * @return string[]
     */
    public function getAddress2In()
    {
        return $this->container['address2_in'];
    }

    /**
     * Sets address2_in
     *
     * @param string[] $address2_in address2_in
     *
     * @return $this
     */
    public function setAddress2In($address2_in)
    {
        $this->container['address2_in'] = $address2_in;

        return $this;
    }

    /**
     * Gets address3
     *
     * @return string
     */
    public function getAddress3()
    {
        return $this->container['address3'];
    }

    /**
     * Sets address3
     *
     * @param string $address3 address3
     *
     * @return $this
     */
    public function setAddress3($address3)
    {
        $this->container['address3'] = $address3;

        return $this;
    }

    /**
     * Gets address3_starts_with
     *
     * @return string
     */
    public function getAddress3StartsWith()
    {
        return $this->container['address3_starts_with'];
    }

    /**
     * Sets address3_starts_with
     *
     * @param string $address3_starts_with address3_starts_with
     *
     * @return $this
     */
    public function setAddress3StartsWith($address3_starts_with)
    {
        $this->container['address3_starts_with'] = $address3_starts_with;

        return $this;
    }

    /**
     * Gets address3_ends_with
     *
     * @return string
     */
    public function getAddress3EndsWith()
    {
        return $this->container['address3_ends_with'];
    }

    /**
     * Sets address3_ends_with
     *
     * @param string $address3_ends_with address3_ends_with
     *
     * @return $this
     */
    public function setAddress3EndsWith($address3_ends_with)
    {
        $this->container['address3_ends_with'] = $address3_ends_with;

        return $this;
    }

    /**
     * Gets address3_contains
     *
     * @return string
     */
    public function getAddress3Contains()
    {
        return $this->container['address3_contains'];
    }

    /**
     * Sets address3_contains
     *
     * @param string $address3_contains address3_contains
     *
     * @return $this
     */
    public function setAddress3Contains($address3_contains)
    {
        $this->container['address3_contains'] = $address3_contains;

        return $this;
    }

    /**
     * Gets address3_like
     *
     * @return string
     */
    public function getAddress3Like()
    {
        return $this->container['address3_like'];
    }

    /**
     * Sets address3_like
     *
     * @param string $address3_like address3_like
     *
     * @return $this
     */
    public function setAddress3Like($address3_like)
    {
        $this->container['address3_like'] = $address3_like;

        return $this;
    }

    /**
     * Gets address3_between
     *
     * @return string[]
     */
    public function getAddress3Between()
    {
        return $this->container['address3_between'];
    }

    /**
     * Sets address3_between
     *
     * @param string[] $address3_between address3_between
     *
     * @return $this
     */
    public function setAddress3Between($address3_between)
    {
        $this->container['address3_between'] = $address3_between;

        return $this;
    }

    /**
     * Gets address3_in
     *
     * @return string[]
     */
    public function getAddress3In()
    {
        return $this->container['address3_in'];
    }

    /**
     * Sets address3_in
     *
     * @param string[] $address3_in address3_in
     *
     * @return $this
     */
    public function setAddress3In($address3_in)
    {
        $this->container['address3_in'] = $address3_in;

        return $this;
    }

    /**
     * Gets address4
     *
     * @return string
     */
    public function getAddress4()
    {
        return $this->container['address4'];
    }

    /**
     * Sets address4
     *
     * @param string $address4 address4
     *
     * @return $this
     */
    public function setAddress4($address4)
    {
        $this->container['address4'] = $address4;

        return $this;
    }

    /**
     * Gets address4_starts_with
     *
     * @return string
     */
    public function getAddress4StartsWith()
    {
        return $this->container['address4_starts_with'];
    }

    /**
     * Sets address4_starts_with
     *
     * @param string $address4_starts_with address4_starts_with
     *
     * @return $this
     */
    public function setAddress4StartsWith($address4_starts_with)
    {
        $this->container['address4_starts_with'] = $address4_starts_with;

        return $this;
    }

    /**
     * Gets address4_ends_with
     *
     * @return string
     */
    public function getAddress4EndsWith()
    {
        return $this->container['address4_ends_with'];
    }

    /**
     * Sets address4_ends_with
     *
     * @param string $address4_ends_with address4_ends_with
     *
     * @return $this
     */
    public function setAddress4EndsWith($address4_ends_with)
    {
        $this->container['address4_ends_with'] = $address4_ends_with;

        return $this;
    }

    /**
     * Gets address4_contains
     *
     * @return string
     */
    public function getAddress4Contains()
    {
        return $this->container['address4_contains'];
    }

    /**
     * Sets address4_contains
     *
     * @param string $address4_contains address4_contains
     *
     * @return $this
     */
    public function setAddress4Contains($address4_contains)
    {
        $this->container['address4_contains'] = $address4_contains;

        return $this;
    }

    /**
     * Gets address4_like
     *
     * @return string
     */
    public function getAddress4Like()
    {
        return $this->container['address4_like'];
    }

    /**
     * Sets address4_like
     *
     * @param string $address4_like address4_like
     *
     * @return $this
     */
    public function setAddress4Like($address4_like)
    {
        $this->container['address4_like'] = $address4_like;

        return $this;
    }

    /**
     * Gets address4_between
     *
     * @return string[]
     */
    public function getAddress4Between()
    {
        return $this->container['address4_between'];
    }

    /**
     * Sets address4_between
     *
     * @param string[] $address4_between address4_between
     *
     * @return $this
     */
    public function setAddress4Between($address4_between)
    {
        $this->container['address4_between'] = $address4_between;

        return $this;
    }

    /**
     * Gets address4_in
     *
     * @return string[]
     */
    public function getAddress4In()
    {
        return $this->container['address4_in'];
    }

    /**
     * Sets address4_in
     *
     * @param string[] $address4_in address4_in
     *
     * @return $this
     */
    public function setAddress4In($address4_in)
    {
        $this->container['address4_in'] = $address4_in;

        return $this;
    }

    /**
     * Gets post_code
     *
     * @return string
     */
    public function getPostCode()
    {
        return $this->container['post_code'];
    }

    /**
     * Sets post_code
     *
     * @param string $post_code post_code
     *
     * @return $this
     */
    public function setPostCode($post_code)
    {
        $this->container['post_code'] = $post_code;

        return $this;
    }

    /**
     * Gets post_code_starts_with
     *
     * @return string
     */
    public function getPostCodeStartsWith()
    {
        return $this->container['post_code_starts_with'];
    }

    /**
     * Sets post_code_starts_with
     *
     * @param string $post_code_starts_with post_code_starts_with
     *
     * @return $this
     */
    public function setPostCodeStartsWith($post_code_starts_with)
    {
        $this->container['post_code_starts_with'] = $post_code_starts_with;

        return $this;
    }

    /**
     * Gets post_code_ends_with
     *
     * @return string
     */
    public function getPostCodeEndsWith()
    {
        return $this->container['post_code_ends_with'];
    }

    /**
     * Sets post_code_ends_with
     *
     * @param string $post_code_ends_with post_code_ends_with
     *
     * @return $this
     */
    public function setPostCodeEndsWith($post_code_ends_with)
    {
        $this->container['post_code_ends_with'] = $post_code_ends_with;

        return $this;
    }

    /**
     * Gets post_code_contains
     *
     * @return string
     */
    public function getPostCodeContains()
    {
        return $this->container['post_code_contains'];
    }

    /**
     * Sets post_code_contains
     *
     * @param string $post_code_contains post_code_contains
     *
     * @return $this
     */
    public function setPostCodeContains($post_code_contains)
    {
        $this->container['post_code_contains'] = $post_code_contains;

        return $this;
    }

    /**
     * Gets post_code_like
     *
     * @return string
     */
    public function getPostCodeLike()
    {
        return $this->container['post_code_like'];
    }

    /**
     * Sets post_code_like
     *
     * @param string $post_code_like post_code_like
     *
     * @return $this
     */
    public function setPostCodeLike($post_code_like)
    {
        $this->container['post_code_like'] = $post_code_like;

        return $this;
    }

    /**
     * Gets post_code_between
     *
     * @return string[]
     */
    public function getPostCodeBetween()
    {
        return $this->container['post_code_between'];
    }

    /**
     * Sets post_code_between
     *
     * @param string[] $post_code_between post_code_between
     *
     * @return $this
     */
    public function setPostCodeBetween($post_code_between)
    {
        $this->container['post_code_between'] = $post_code_between;

        return $this;
    }

    /**
     * Gets post_code_in
     *
     * @return string[]
     */
    public function getPostCodeIn()
    {
        return $this->container['post_code_in'];
    }

    /**
     * Sets post_code_in
     *
     * @param string[] $post_code_in post_code_in
     *
     * @return $this
     */
    public function setPostCodeIn($post_code_in)
    {
        $this->container['post_code_in'] = $post_code_in;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return string
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param string $phone phone
     *
     * @return $this
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets phone_starts_with
     *
     * @return string
     */
    public function getPhoneStartsWith()
    {
        return $this->container['phone_starts_with'];
    }

    /**
     * Sets phone_starts_with
     *
     * @param string $phone_starts_with phone_starts_with
     *
     * @return $this
     */
    public function setPhoneStartsWith($phone_starts_with)
    {
        $this->container['phone_starts_with'] = $phone_starts_with;

        return $this;
    }

    /**
     * Gets phone_ends_with
     *
     * @return string
     */
    public function getPhoneEndsWith()
    {
        return $this->container['phone_ends_with'];
    }

    /**
     * Sets phone_ends_with
     *
     * @param string $phone_ends_with phone_ends_with
     *
     * @return $this
     */
    public function setPhoneEndsWith($phone_ends_with)
    {
        $this->container['phone_ends_with'] = $phone_ends_with;

        return $this;
    }

    /**
     * Gets phone_contains
     *
     * @return string
     */
    public function getPhoneContains()
    {
        return $this->container['phone_contains'];
    }

    /**
     * Sets phone_contains
     *
     * @param string $phone_contains phone_contains
     *
     * @return $this
     */
    public function setPhoneContains($phone_contains)
    {
        $this->container['phone_contains'] = $phone_contains;

        return $this;
    }

    /**
     * Gets phone_like
     *
     * @return string
     */
    public function getPhoneLike()
    {
        return $this->container['phone_like'];
    }

    /**
     * Sets phone_like
     *
     * @param string $phone_like phone_like
     *
     * @return $this
     */
    public function setPhoneLike($phone_like)
    {
        $this->container['phone_like'] = $phone_like;

        return $this;
    }

    /**
     * Gets phone_between
     *
     * @return string[]
     */
    public function getPhoneBetween()
    {
        return $this->container['phone_between'];
    }

    /**
     * Sets phone_between
     *
     * @param string[] $phone_between phone_between
     *
     * @return $this
     */
    public function setPhoneBetween($phone_between)
    {
        $this->container['phone_between'] = $phone_between;

        return $this;
    }

    /**
     * Gets phone_in
     *
     * @return string[]
     */
    public function getPhoneIn()
    {
        return $this->container['phone_in'];
    }

    /**
     * Sets phone_in
     *
     * @param string[] $phone_in phone_in
     *
     * @return $this
     */
    public function setPhoneIn($phone_in)
    {
        $this->container['phone_in'] = $phone_in;

        return $this;
    }

    /**
     * Gets fax
     *
     * @return string
     */
    public function getFax()
    {
        return $this->container['fax'];
    }

    /**
     * Sets fax
     *
     * @param string $fax fax
     *
     * @return $this
     */
    public function setFax($fax)
    {
        $this->container['fax'] = $fax;

        return $this;
    }

    /**
     * Gets fax_starts_with
     *
     * @return string
     */
    public function getFaxStartsWith()
    {
        return $this->container['fax_starts_with'];
    }

    /**
     * Sets fax_starts_with
     *
     * @param string $fax_starts_with fax_starts_with
     *
     * @return $this
     */
    public function setFaxStartsWith($fax_starts_with)
    {
        $this->container['fax_starts_with'] = $fax_starts_with;

        return $this;
    }

    /**
     * Gets fax_ends_with
     *
     * @return string
     */
    public function getFaxEndsWith()
    {
        return $this->container['fax_ends_with'];
    }

    /**
     * Sets fax_ends_with
     *
     * @param string $fax_ends_with fax_ends_with
     *
     * @return $this
     */
    public function setFaxEndsWith($fax_ends_with)
    {
        $this->container['fax_ends_with'] = $fax_ends_with;

        return $this;
    }

    /**
     * Gets fax_contains
     *
     * @return string
     */
    public function getFaxContains()
    {
        return $this->container['fax_contains'];
    }

    /**
     * Sets fax_contains
     *
     * @param string $fax_contains fax_contains
     *
     * @return $this
     */
    public function setFaxContains($fax_contains)
    {
        $this->container['fax_contains'] = $fax_contains;

        return $this;
    }

    /**
     * Gets fax_like
     *
     * @return string
     */
    public function getFaxLike()
    {
        return $this->container['fax_like'];
    }

    /**
     * Sets fax_like
     *
     * @param string $fax_like fax_like
     *
     * @return $this
     */
    public function setFaxLike($fax_like)
    {
        $this->container['fax_like'] = $fax_like;

        return $this;
    }

    /**
     * Gets fax_between
     *
     * @return string[]
     */
    public function getFaxBetween()
    {
        return $this->container['fax_between'];
    }

    /**
     * Sets fax_between
     *
     * @param string[] $fax_between fax_between
     *
     * @return $this
     */
    public function setFaxBetween($fax_between)
    {
        $this->container['fax_between'] = $fax_between;

        return $this;
    }

    /**
     * Gets fax_in
     *
     * @return string[]
     */
    public function getFaxIn()
    {
        return $this->container['fax_in'];
    }

    /**
     * Sets fax_in
     *
     * @param string[] $fax_in fax_in
     *
     * @return $this
     */
    public function setFaxIn($fax_in)
    {
        $this->container['fax_in'] = $fax_in;

        return $this;
    }

    /**
     * Gets ref_comment
     *
     * @return string
     */
    public function getRefComment()
    {
        return $this->container['ref_comment'];
    }

    /**
     * Sets ref_comment
     *
     * @param string $ref_comment ref_comment
     *
     * @return $this
     */
    public function setRefComment($ref_comment)
    {
        $this->container['ref_comment'] = $ref_comment;

        return $this;
    }

    /**
     * Gets ref_comment_starts_with
     *
     * @return string
     */
    public function getRefCommentStartsWith()
    {
        return $this->container['ref_comment_starts_with'];
    }

    /**
     * Sets ref_comment_starts_with
     *
     * @param string $ref_comment_starts_with ref_comment_starts_with
     *
     * @return $this
     */
    public function setRefCommentStartsWith($ref_comment_starts_with)
    {
        $this->container['ref_comment_starts_with'] = $ref_comment_starts_with;

        return $this;
    }

    /**
     * Gets ref_comment_ends_with
     *
     * @return string
     */
    public function getRefCommentEndsWith()
    {
        return $this->container['ref_comment_ends_with'];
    }

    /**
     * Sets ref_comment_ends_with
     *
     * @param string $ref_comment_ends_with ref_comment_ends_with
     *
     * @return $this
     */
    public function setRefCommentEndsWith($ref_comment_ends_with)
    {
        $this->container['ref_comment_ends_with'] = $ref_comment_ends_with;

        return $this;
    }

    /**
     * Gets ref_comment_contains
     *
     * @return string
     */
    public function getRefCommentContains()
    {
        return $this->container['ref_comment_contains'];
    }

    /**
     * Sets ref_comment_contains
     *
     * @param string $ref_comment_contains ref_comment_contains
     *
     * @return $this
     */
    public function setRefCommentContains($ref_comment_contains)
    {
        $this->container['ref_comment_contains'] = $ref_comment_contains;

        return $this;
    }

    /**
     * Gets ref_comment_like
     *
     * @return string
     */
    public function getRefCommentLike()
    {
        return $this->container['ref_comment_like'];
    }

    /**
     * Sets ref_comment_like
     *
     * @param string $ref_comment_like ref_comment_like
     *
     * @return $this
     */
    public function setRefCommentLike($ref_comment_like)
    {
        $this->container['ref_comment_like'] = $ref_comment_like;

        return $this;
    }

    /**
     * Gets ref_comment_between
     *
     * @return string[]
     */
    public function getRefCommentBetween()
    {
        return $this->container['ref_comment_between'];
    }

    /**
     * Sets ref_comment_between
     *
     * @param string[] $ref_comment_between ref_comment_between
     *
     * @return $this
     */
    public function setRefCommentBetween($ref_comment_between)
    {
        $this->container['ref_comment_between'] = $ref_comment_between;

        return $this;
    }

    /**
     * Gets ref_comment_in
     *
     * @return string[]
     */
    public function getRefCommentIn()
    {
        return $this->container['ref_comment_in'];
    }

    /**
     * Sets ref_comment_in
     *
     * @param string[] $ref_comment_in ref_comment_in
     *
     * @return $this
     */
    public function setRefCommentIn($ref_comment_in)
    {
        $this->container['ref_comment_in'] = $ref_comment_in;

        return $this;
    }

    /**
     * Gets skip
     *
     * @return int
     */
    public function getSkip()
    {
        return $this->container['skip'];
    }

    /**
     * Sets skip
     *
     * @param int $skip skip
     *
     * @return $this
     */
    public function setSkip($skip)
    {
        $this->container['skip'] = $skip;

        return $this;
    }

    /**
     * Gets take
     *
     * @return int
     */
    public function getTake()
    {
        return $this->container['take'];
    }

    /**
     * Sets take
     *
     * @param int $take take
     *
     * @return $this
     */
    public function setTake($take)
    {
        $this->container['take'] = $take;

        return $this;
    }

    /**
     * Gets order_by
     *
     * @return string
     */
    public function getOrderBy()
    {
        return $this->container['order_by'];
    }

    /**
     * Sets order_by
     *
     * @param string $order_by order_by
     *
     * @return $this
     */
    public function setOrderBy($order_by)
    {
        $this->container['order_by'] = $order_by;

        return $this;
    }

    /**
     * Gets order_by_desc
     *
     * @return string
     */
    public function getOrderByDesc()
    {
        return $this->container['order_by_desc'];
    }

    /**
     * Sets order_by_desc
     *
     * @param string $order_by_desc order_by_desc
     *
     * @return $this
     */
    public function setOrderByDesc($order_by_desc)
    {
        $this->container['order_by_desc'] = $order_by_desc;

        return $this;
    }

    /**
     * Gets include
     *
     * @return string
     */
    public function getInclude()
    {
        return $this->container['include'];
    }

    /**
     * Sets include
     *
     * @param string $include include
     *
     * @return $this
     */
    public function setInclude($include)
    {
        $this->container['include'] = $include;

        return $this;
    }

    /**
     * Gets fields
     *
     * @return string
     */
    public function getFields()
    {
        return $this->container['fields'];
    }

    /**
     * Sets fields
     *
     * @param string $fields fields
     *
     * @return $this
     */
    public function setFields($fields)
    {
        $this->container['fields'] = $fields;

        return $this;
    }

    /**
     * Gets meta
     *
     * @return \Jiwa\Model\DictionaryStringString_
     */
    public function getMeta()
    {
        return $this->container['meta'];
    }

    /**
     * Sets meta
     *
     * @param \Jiwa\Model\DictionaryStringString_ $meta meta
     *
     * @return $this
     */
    public function setMeta($meta)
    {
        $this->container['meta'] = $meta;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


