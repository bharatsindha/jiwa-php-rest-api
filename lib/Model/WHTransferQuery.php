<?php
/**
 * WHTransferQuery
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\JiwaModel;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * WHTransferQuery Class Doc Comment
 *
 * @category Class
 * @description WH_TransferQuery
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class WHTransferQuery implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'WH_TransferQuery';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'wh_transfer_id' => 'string',
        'wh_transfer_id_starts_with' => 'string',
        'wh_transfer_id_ends_with' => 'string',
        'wh_transfer_id_contains' => 'string',
        'wh_transfer_id_like' => 'string',
        'wh_transfer_id_between' => 'string[]',
        'wh_transfer_id_in' => 'string[]',
        'last_saved_date_time' => '\DateTime',
        'last_saved_date_time_greater_than_or_equal_to' => '\DateTime',
        'last_saved_date_time_greater_than' => '\DateTime',
        'last_saved_date_time_less_than' => '\DateTime',
        'last_saved_date_time_less_than_or_equal_to' => '\DateTime',
        'last_saved_date_time_not_equal_to' => '\DateTime',
        'last_saved_date_time_between' => '\DateTime[]',
        'last_saved_date_time_in' => '\DateTime[]',
        'transfer_date' => '\DateTime',
        'transfer_date_greater_than_or_equal_to' => '\DateTime',
        'transfer_date_greater_than' => '\DateTime',
        'transfer_date_less_than' => '\DateTime',
        'transfer_date_less_than_or_equal_to' => '\DateTime',
        'transfer_date_not_equal_to' => '\DateTime',
        'transfer_date_between' => '\DateTime[]',
        'transfer_date_in' => '\DateTime[]',
        'activate_date' => '\DateTime',
        'activate_date_greater_than_or_equal_to' => '\DateTime',
        'activate_date_greater_than' => '\DateTime',
        'activate_date_less_than' => '\DateTime',
        'activate_date_less_than_or_equal_to' => '\DateTime',
        'activate_date_not_equal_to' => '\DateTime',
        'activate_date_between' => '\DateTime[]',
        'activate_date_in' => '\DateTime[]',
        'status' => 'int',
        'status_greater_than_or_equal_to' => 'int',
        'status_greater_than' => 'int',
        'status_less_than' => 'int',
        'status_less_than_or_equal_to' => 'int',
        'status_not_equal_to' => 'int',
        'status_between' => 'int[]',
        'status_in' => 'int[]',
        'transfer_by' => 'string',
        'transfer_by_starts_with' => 'string',
        'transfer_by_ends_with' => 'string',
        'transfer_by_contains' => 'string',
        'transfer_by_like' => 'string',
        'transfer_by_between' => 'string[]',
        'transfer_by_in' => 'string[]',
        'ref' => 'string',
        'ref_starts_with' => 'string',
        'ref_ends_with' => 'string',
        'ref_contains' => 'string',
        'ref_like' => 'string',
        'ref_between' => 'string[]',
        'ref_in' => 'string[]',
        'notes' => 'string',
        'notes_starts_with' => 'string',
        'notes_ends_with' => 'string',
        'notes_contains' => 'string',
        'notes_like' => 'string',
        'notes_between' => 'string[]',
        'notes_in' => 'string[]',
        'source_type' => 'int',
        'source_type_greater_than_or_equal_to' => 'int',
        'source_type_greater_than' => 'int',
        'source_type_less_than' => 'int',
        'source_type_less_than_or_equal_to' => 'int',
        'source_type_not_equal_to' => 'int',
        'source_type_between' => 'int[]',
        'source_type_in' => 'int[]',
        'source_id' => 'string',
        'source_id_starts_with' => 'string',
        'source_id_ends_with' => 'string',
        'source_id_contains' => 'string',
        'source_id_like' => 'string',
        'source_id_between' => 'string[]',
        'source_id_in' => 'string[]',
        'src_in_logical_id' => 'string',
        'src_in_logical_id_starts_with' => 'string',
        'src_in_logical_id_ends_with' => 'string',
        'src_in_logical_id_contains' => 'string',
        'src_in_logical_id_like' => 'string',
        'src_in_logical_id_between' => 'string[]',
        'src_in_logical_id_in' => 'string[]',
        'dst_in_logical_id' => 'string',
        'dst_in_logical_id_starts_with' => 'string',
        'dst_in_logical_id_ends_with' => 'string',
        'dst_in_logical_id_contains' => 'string',
        'dst_in_logical_id_like' => 'string',
        'dst_in_logical_id_between' => 'string[]',
        'dst_in_logical_id_in' => 'string[]',
        'transfer_no' => 'string',
        'transfer_no_starts_with' => 'string',
        'transfer_no_ends_with' => 'string',
        'transfer_no_contains' => 'string',
        'transfer_no_like' => 'string',
        'transfer_no_between' => 'string[]',
        'transfer_no_in' => 'string[]',
        'in_transit' => 'bool',
        'transit_notes' => 'string',
        'transit_notes_starts_with' => 'string',
        'transit_notes_ends_with' => 'string',
        'transit_notes_contains' => 'string',
        'transit_notes_like' => 'string',
        'transit_notes_between' => 'string[]',
        'transit_notes_in' => 'string[]',
        'in_transit_id' => 'string',
        'in_transit_id_starts_with' => 'string',
        'in_transit_id_ends_with' => 'string',
        'in_transit_id_contains' => 'string',
        'in_transit_id_like' => 'string',
        'in_transit_id_between' => 'string[]',
        'in_transit_id_in' => 'string[]',
        'added_cost1' => 'double',
        'added_cost1_greater_than_or_equal_to' => 'double',
        'added_cost1_greater_than' => 'double',
        'added_cost1_less_than' => 'double',
        'added_cost1_less_than_or_equal_to' => 'double',
        'added_cost1_not_equal_to' => 'double',
        'added_cost1_between' => 'double[]',
        'added_cost1_in' => 'double[]',
        'added_cost2' => 'double',
        'added_cost2_greater_than_or_equal_to' => 'double',
        'added_cost2_greater_than' => 'double',
        'added_cost2_less_than' => 'double',
        'added_cost2_less_than_or_equal_to' => 'double',
        'added_cost2_not_equal_to' => 'double',
        'added_cost2_between' => 'double[]',
        'added_cost2_in' => 'double[]',
        'added_cost3' => 'double',
        'added_cost3_greater_than_or_equal_to' => 'double',
        'added_cost3_greater_than' => 'double',
        'added_cost3_less_than' => 'double',
        'added_cost3_less_than_or_equal_to' => 'double',
        'added_cost3_not_equal_to' => 'double',
        'added_cost3_between' => 'double[]',
        'added_cost3_in' => 'double[]',
        'picked_by' => 'string',
        'picked_by_starts_with' => 'string',
        'picked_by_ends_with' => 'string',
        'picked_by_contains' => 'string',
        'picked_by_like' => 'string',
        'picked_by_between' => 'string[]',
        'picked_by_in' => 'string[]',
        'received_by' => 'string',
        'received_by_starts_with' => 'string',
        'received_by_ends_with' => 'string',
        'received_by_contains' => 'string',
        'received_by_like' => 'string',
        'received_by_between' => 'string[]',
        'received_by_in' => 'string[]',
        'type' => 'int',
        'type_greater_than_or_equal_to' => 'int',
        'type_greater_than' => 'int',
        'type_less_than' => 'int',
        'type_less_than_or_equal_to' => 'int',
        'type_not_equal_to' => 'int',
        'type_between' => 'int[]',
        'type_in' => 'int[]',
        'add_cost_method' => 'string',
        'add_cost_method_starts_with' => 'string',
        'add_cost_method_ends_with' => 'string',
        'add_cost_method_contains' => 'string',
        'add_cost_method_like' => 'string',
        'add_cost_method_between' => 'string[]',
        'add_cost_method_in' => 'string[]',
        'skip' => 'int',
        'take' => 'int',
        'order_by' => 'string',
        'order_by_desc' => 'string',
        'include' => 'string',
        'fields' => 'string',
        'meta' => '\Jiwa\JiwaModel\DictionaryStringString_'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'wh_transfer_id' => null,
        'wh_transfer_id_starts_with' => null,
        'wh_transfer_id_ends_with' => null,
        'wh_transfer_id_contains' => null,
        'wh_transfer_id_like' => null,
        'wh_transfer_id_between' => null,
        'wh_transfer_id_in' => null,
        'last_saved_date_time' => 'date-time',
        'last_saved_date_time_greater_than_or_equal_to' => 'date-time',
        'last_saved_date_time_greater_than' => 'date-time',
        'last_saved_date_time_less_than' => 'date-time',
        'last_saved_date_time_less_than_or_equal_to' => 'date-time',
        'last_saved_date_time_not_equal_to' => 'date-time',
        'last_saved_date_time_between' => 'date-time',
        'last_saved_date_time_in' => 'date-time',
        'transfer_date' => 'date-time',
        'transfer_date_greater_than_or_equal_to' => 'date-time',
        'transfer_date_greater_than' => 'date-time',
        'transfer_date_less_than' => 'date-time',
        'transfer_date_less_than_or_equal_to' => 'date-time',
        'transfer_date_not_equal_to' => 'date-time',
        'transfer_date_between' => 'date-time',
        'transfer_date_in' => 'date-time',
        'activate_date' => 'date-time',
        'activate_date_greater_than_or_equal_to' => 'date-time',
        'activate_date_greater_than' => 'date-time',
        'activate_date_less_than' => 'date-time',
        'activate_date_less_than_or_equal_to' => 'date-time',
        'activate_date_not_equal_to' => 'date-time',
        'activate_date_between' => 'date-time',
        'activate_date_in' => 'date-time',
        'status' => 'int32',
        'status_greater_than_or_equal_to' => 'int32',
        'status_greater_than' => 'int32',
        'status_less_than' => 'int32',
        'status_less_than_or_equal_to' => 'int32',
        'status_not_equal_to' => 'int32',
        'status_between' => 'int32',
        'status_in' => 'int32',
        'transfer_by' => null,
        'transfer_by_starts_with' => null,
        'transfer_by_ends_with' => null,
        'transfer_by_contains' => null,
        'transfer_by_like' => null,
        'transfer_by_between' => null,
        'transfer_by_in' => null,
        'ref' => null,
        'ref_starts_with' => null,
        'ref_ends_with' => null,
        'ref_contains' => null,
        'ref_like' => null,
        'ref_between' => null,
        'ref_in' => null,
        'notes' => null,
        'notes_starts_with' => null,
        'notes_ends_with' => null,
        'notes_contains' => null,
        'notes_like' => null,
        'notes_between' => null,
        'notes_in' => null,
        'source_type' => 'int32',
        'source_type_greater_than_or_equal_to' => 'int32',
        'source_type_greater_than' => 'int32',
        'source_type_less_than' => 'int32',
        'source_type_less_than_or_equal_to' => 'int32',
        'source_type_not_equal_to' => 'int32',
        'source_type_between' => 'int32',
        'source_type_in' => 'int32',
        'source_id' => null,
        'source_id_starts_with' => null,
        'source_id_ends_with' => null,
        'source_id_contains' => null,
        'source_id_like' => null,
        'source_id_between' => null,
        'source_id_in' => null,
        'src_in_logical_id' => null,
        'src_in_logical_id_starts_with' => null,
        'src_in_logical_id_ends_with' => null,
        'src_in_logical_id_contains' => null,
        'src_in_logical_id_like' => null,
        'src_in_logical_id_between' => null,
        'src_in_logical_id_in' => null,
        'dst_in_logical_id' => null,
        'dst_in_logical_id_starts_with' => null,
        'dst_in_logical_id_ends_with' => null,
        'dst_in_logical_id_contains' => null,
        'dst_in_logical_id_like' => null,
        'dst_in_logical_id_between' => null,
        'dst_in_logical_id_in' => null,
        'transfer_no' => null,
        'transfer_no_starts_with' => null,
        'transfer_no_ends_with' => null,
        'transfer_no_contains' => null,
        'transfer_no_like' => null,
        'transfer_no_between' => null,
        'transfer_no_in' => null,
        'in_transit' => null,
        'transit_notes' => null,
        'transit_notes_starts_with' => null,
        'transit_notes_ends_with' => null,
        'transit_notes_contains' => null,
        'transit_notes_like' => null,
        'transit_notes_between' => null,
        'transit_notes_in' => null,
        'in_transit_id' => null,
        'in_transit_id_starts_with' => null,
        'in_transit_id_ends_with' => null,
        'in_transit_id_contains' => null,
        'in_transit_id_like' => null,
        'in_transit_id_between' => null,
        'in_transit_id_in' => null,
        'added_cost1' => 'double',
        'added_cost1_greater_than_or_equal_to' => 'double',
        'added_cost1_greater_than' => 'double',
        'added_cost1_less_than' => 'double',
        'added_cost1_less_than_or_equal_to' => 'double',
        'added_cost1_not_equal_to' => 'double',
        'added_cost1_between' => 'double',
        'added_cost1_in' => 'double',
        'added_cost2' => 'double',
        'added_cost2_greater_than_or_equal_to' => 'double',
        'added_cost2_greater_than' => 'double',
        'added_cost2_less_than' => 'double',
        'added_cost2_less_than_or_equal_to' => 'double',
        'added_cost2_not_equal_to' => 'double',
        'added_cost2_between' => 'double',
        'added_cost2_in' => 'double',
        'added_cost3' => 'double',
        'added_cost3_greater_than_or_equal_to' => 'double',
        'added_cost3_greater_than' => 'double',
        'added_cost3_less_than' => 'double',
        'added_cost3_less_than_or_equal_to' => 'double',
        'added_cost3_not_equal_to' => 'double',
        'added_cost3_between' => 'double',
        'added_cost3_in' => 'double',
        'picked_by' => null,
        'picked_by_starts_with' => null,
        'picked_by_ends_with' => null,
        'picked_by_contains' => null,
        'picked_by_like' => null,
        'picked_by_between' => null,
        'picked_by_in' => null,
        'received_by' => null,
        'received_by_starts_with' => null,
        'received_by_ends_with' => null,
        'received_by_contains' => null,
        'received_by_like' => null,
        'received_by_between' => null,
        'received_by_in' => null,
        'type' => 'int32',
        'type_greater_than_or_equal_to' => 'int32',
        'type_greater_than' => 'int32',
        'type_less_than' => 'int32',
        'type_less_than_or_equal_to' => 'int32',
        'type_not_equal_to' => 'int32',
        'type_between' => 'int32',
        'type_in' => 'int32',
        'add_cost_method' => null,
        'add_cost_method_starts_with' => null,
        'add_cost_method_ends_with' => null,
        'add_cost_method_contains' => null,
        'add_cost_method_like' => null,
        'add_cost_method_between' => null,
        'add_cost_method_in' => null,
        'skip' => 'int32',
        'take' => 'int32',
        'order_by' => null,
        'order_by_desc' => null,
        'include' => null,
        'fields' => null,
        'meta' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'wh_transfer_id' => 'WH_TransferID',
        'wh_transfer_id_starts_with' => 'WH_TransferIDStartsWith',
        'wh_transfer_id_ends_with' => 'WH_TransferIDEndsWith',
        'wh_transfer_id_contains' => 'WH_TransferIDContains',
        'wh_transfer_id_like' => 'WH_TransferIDLike',
        'wh_transfer_id_between' => 'WH_TransferIDBetween',
        'wh_transfer_id_in' => 'WH_TransferIDIn',
        'last_saved_date_time' => 'LastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'LastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'LastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'LastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'LastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'LastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'LastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'LastSavedDateTimeIn',
        'transfer_date' => 'TransferDate',
        'transfer_date_greater_than_or_equal_to' => 'TransferDateGreaterThanOrEqualTo',
        'transfer_date_greater_than' => 'TransferDateGreaterThan',
        'transfer_date_less_than' => 'TransferDateLessThan',
        'transfer_date_less_than_or_equal_to' => 'TransferDateLessThanOrEqualTo',
        'transfer_date_not_equal_to' => 'TransferDateNotEqualTo',
        'transfer_date_between' => 'TransferDateBetween',
        'transfer_date_in' => 'TransferDateIn',
        'activate_date' => 'ActivateDate',
        'activate_date_greater_than_or_equal_to' => 'ActivateDateGreaterThanOrEqualTo',
        'activate_date_greater_than' => 'ActivateDateGreaterThan',
        'activate_date_less_than' => 'ActivateDateLessThan',
        'activate_date_less_than_or_equal_to' => 'ActivateDateLessThanOrEqualTo',
        'activate_date_not_equal_to' => 'ActivateDateNotEqualTo',
        'activate_date_between' => 'ActivateDateBetween',
        'activate_date_in' => 'ActivateDateIn',
        'status' => 'Status',
        'status_greater_than_or_equal_to' => 'StatusGreaterThanOrEqualTo',
        'status_greater_than' => 'StatusGreaterThan',
        'status_less_than' => 'StatusLessThan',
        'status_less_than_or_equal_to' => 'StatusLessThanOrEqualTo',
        'status_not_equal_to' => 'StatusNotEqualTo',
        'status_between' => 'StatusBetween',
        'status_in' => 'StatusIn',
        'transfer_by' => 'TransferBy',
        'transfer_by_starts_with' => 'TransferByStartsWith',
        'transfer_by_ends_with' => 'TransferByEndsWith',
        'transfer_by_contains' => 'TransferByContains',
        'transfer_by_like' => 'TransferByLike',
        'transfer_by_between' => 'TransferByBetween',
        'transfer_by_in' => 'TransferByIn',
        'ref' => 'Ref',
        'ref_starts_with' => 'RefStartsWith',
        'ref_ends_with' => 'RefEndsWith',
        'ref_contains' => 'RefContains',
        'ref_like' => 'RefLike',
        'ref_between' => 'RefBetween',
        'ref_in' => 'RefIn',
        'notes' => 'Notes',
        'notes_starts_with' => 'NotesStartsWith',
        'notes_ends_with' => 'NotesEndsWith',
        'notes_contains' => 'NotesContains',
        'notes_like' => 'NotesLike',
        'notes_between' => 'NotesBetween',
        'notes_in' => 'NotesIn',
        'source_type' => 'SourceType',
        'source_type_greater_than_or_equal_to' => 'SourceTypeGreaterThanOrEqualTo',
        'source_type_greater_than' => 'SourceTypeGreaterThan',
        'source_type_less_than' => 'SourceTypeLessThan',
        'source_type_less_than_or_equal_to' => 'SourceTypeLessThanOrEqualTo',
        'source_type_not_equal_to' => 'SourceTypeNotEqualTo',
        'source_type_between' => 'SourceTypeBetween',
        'source_type_in' => 'SourceTypeIn',
        'source_id' => 'SourceID',
        'source_id_starts_with' => 'SourceIDStartsWith',
        'source_id_ends_with' => 'SourceIDEndsWith',
        'source_id_contains' => 'SourceIDContains',
        'source_id_like' => 'SourceIDLike',
        'source_id_between' => 'SourceIDBetween',
        'source_id_in' => 'SourceIDIn',
        'src_in_logical_id' => 'SrcIN_LogicalID',
        'src_in_logical_id_starts_with' => 'SrcIN_LogicalIDStartsWith',
        'src_in_logical_id_ends_with' => 'SrcIN_LogicalIDEndsWith',
        'src_in_logical_id_contains' => 'SrcIN_LogicalIDContains',
        'src_in_logical_id_like' => 'SrcIN_LogicalIDLike',
        'src_in_logical_id_between' => 'SrcIN_LogicalIDBetween',
        'src_in_logical_id_in' => 'SrcIN_LogicalIDIn',
        'dst_in_logical_id' => 'DstIN_LogicalID',
        'dst_in_logical_id_starts_with' => 'DstIN_LogicalIDStartsWith',
        'dst_in_logical_id_ends_with' => 'DstIN_LogicalIDEndsWith',
        'dst_in_logical_id_contains' => 'DstIN_LogicalIDContains',
        'dst_in_logical_id_like' => 'DstIN_LogicalIDLike',
        'dst_in_logical_id_between' => 'DstIN_LogicalIDBetween',
        'dst_in_logical_id_in' => 'DstIN_LogicalIDIn',
        'transfer_no' => 'TransferNo',
        'transfer_no_starts_with' => 'TransferNoStartsWith',
        'transfer_no_ends_with' => 'TransferNoEndsWith',
        'transfer_no_contains' => 'TransferNoContains',
        'transfer_no_like' => 'TransferNoLike',
        'transfer_no_between' => 'TransferNoBetween',
        'transfer_no_in' => 'TransferNoIn',
        'in_transit' => 'InTransit',
        'transit_notes' => 'TransitNotes',
        'transit_notes_starts_with' => 'TransitNotesStartsWith',
        'transit_notes_ends_with' => 'TransitNotesEndsWith',
        'transit_notes_contains' => 'TransitNotesContains',
        'transit_notes_like' => 'TransitNotesLike',
        'transit_notes_between' => 'TransitNotesBetween',
        'transit_notes_in' => 'TransitNotesIn',
        'in_transit_id' => 'IN_TransitID',
        'in_transit_id_starts_with' => 'IN_TransitIDStartsWith',
        'in_transit_id_ends_with' => 'IN_TransitIDEndsWith',
        'in_transit_id_contains' => 'IN_TransitIDContains',
        'in_transit_id_like' => 'IN_TransitIDLike',
        'in_transit_id_between' => 'IN_TransitIDBetween',
        'in_transit_id_in' => 'IN_TransitIDIn',
        'added_cost1' => 'AddedCost1',
        'added_cost1_greater_than_or_equal_to' => 'AddedCost1GreaterThanOrEqualTo',
        'added_cost1_greater_than' => 'AddedCost1GreaterThan',
        'added_cost1_less_than' => 'AddedCost1LessThan',
        'added_cost1_less_than_or_equal_to' => 'AddedCost1LessThanOrEqualTo',
        'added_cost1_not_equal_to' => 'AddedCost1NotEqualTo',
        'added_cost1_between' => 'AddedCost1Between',
        'added_cost1_in' => 'AddedCost1In',
        'added_cost2' => 'AddedCost2',
        'added_cost2_greater_than_or_equal_to' => 'AddedCost2GreaterThanOrEqualTo',
        'added_cost2_greater_than' => 'AddedCost2GreaterThan',
        'added_cost2_less_than' => 'AddedCost2LessThan',
        'added_cost2_less_than_or_equal_to' => 'AddedCost2LessThanOrEqualTo',
        'added_cost2_not_equal_to' => 'AddedCost2NotEqualTo',
        'added_cost2_between' => 'AddedCost2Between',
        'added_cost2_in' => 'AddedCost2In',
        'added_cost3' => 'AddedCost3',
        'added_cost3_greater_than_or_equal_to' => 'AddedCost3GreaterThanOrEqualTo',
        'added_cost3_greater_than' => 'AddedCost3GreaterThan',
        'added_cost3_less_than' => 'AddedCost3LessThan',
        'added_cost3_less_than_or_equal_to' => 'AddedCost3LessThanOrEqualTo',
        'added_cost3_not_equal_to' => 'AddedCost3NotEqualTo',
        'added_cost3_between' => 'AddedCost3Between',
        'added_cost3_in' => 'AddedCost3In',
        'picked_by' => 'PickedBy',
        'picked_by_starts_with' => 'PickedByStartsWith',
        'picked_by_ends_with' => 'PickedByEndsWith',
        'picked_by_contains' => 'PickedByContains',
        'picked_by_like' => 'PickedByLike',
        'picked_by_between' => 'PickedByBetween',
        'picked_by_in' => 'PickedByIn',
        'received_by' => 'ReceivedBy',
        'received_by_starts_with' => 'ReceivedByStartsWith',
        'received_by_ends_with' => 'ReceivedByEndsWith',
        'received_by_contains' => 'ReceivedByContains',
        'received_by_like' => 'ReceivedByLike',
        'received_by_between' => 'ReceivedByBetween',
        'received_by_in' => 'ReceivedByIn',
        'type' => 'Type',
        'type_greater_than_or_equal_to' => 'TypeGreaterThanOrEqualTo',
        'type_greater_than' => 'TypeGreaterThan',
        'type_less_than' => 'TypeLessThan',
        'type_less_than_or_equal_to' => 'TypeLessThanOrEqualTo',
        'type_not_equal_to' => 'TypeNotEqualTo',
        'type_between' => 'TypeBetween',
        'type_in' => 'TypeIn',
        'add_cost_method' => 'AddCostMethod',
        'add_cost_method_starts_with' => 'AddCostMethodStartsWith',
        'add_cost_method_ends_with' => 'AddCostMethodEndsWith',
        'add_cost_method_contains' => 'AddCostMethodContains',
        'add_cost_method_like' => 'AddCostMethodLike',
        'add_cost_method_between' => 'AddCostMethodBetween',
        'add_cost_method_in' => 'AddCostMethodIn',
        'skip' => 'Skip',
        'take' => 'Take',
        'order_by' => 'OrderBy',
        'order_by_desc' => 'OrderByDesc',
        'include' => 'Include',
        'fields' => 'Fields',
        'meta' => 'Meta'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'wh_transfer_id' => 'setWhTransferId',
        'wh_transfer_id_starts_with' => 'setWhTransferIdStartsWith',
        'wh_transfer_id_ends_with' => 'setWhTransferIdEndsWith',
        'wh_transfer_id_contains' => 'setWhTransferIdContains',
        'wh_transfer_id_like' => 'setWhTransferIdLike',
        'wh_transfer_id_between' => 'setWhTransferIdBetween',
        'wh_transfer_id_in' => 'setWhTransferIdIn',
        'last_saved_date_time' => 'setLastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'setLastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'setLastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'setLastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'setLastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'setLastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'setLastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'setLastSavedDateTimeIn',
        'transfer_date' => 'setTransferDate',
        'transfer_date_greater_than_or_equal_to' => 'setTransferDateGreaterThanOrEqualTo',
        'transfer_date_greater_than' => 'setTransferDateGreaterThan',
        'transfer_date_less_than' => 'setTransferDateLessThan',
        'transfer_date_less_than_or_equal_to' => 'setTransferDateLessThanOrEqualTo',
        'transfer_date_not_equal_to' => 'setTransferDateNotEqualTo',
        'transfer_date_between' => 'setTransferDateBetween',
        'transfer_date_in' => 'setTransferDateIn',
        'activate_date' => 'setActivateDate',
        'activate_date_greater_than_or_equal_to' => 'setActivateDateGreaterThanOrEqualTo',
        'activate_date_greater_than' => 'setActivateDateGreaterThan',
        'activate_date_less_than' => 'setActivateDateLessThan',
        'activate_date_less_than_or_equal_to' => 'setActivateDateLessThanOrEqualTo',
        'activate_date_not_equal_to' => 'setActivateDateNotEqualTo',
        'activate_date_between' => 'setActivateDateBetween',
        'activate_date_in' => 'setActivateDateIn',
        'status' => 'setStatus',
        'status_greater_than_or_equal_to' => 'setStatusGreaterThanOrEqualTo',
        'status_greater_than' => 'setStatusGreaterThan',
        'status_less_than' => 'setStatusLessThan',
        'status_less_than_or_equal_to' => 'setStatusLessThanOrEqualTo',
        'status_not_equal_to' => 'setStatusNotEqualTo',
        'status_between' => 'setStatusBetween',
        'status_in' => 'setStatusIn',
        'transfer_by' => 'setTransferBy',
        'transfer_by_starts_with' => 'setTransferByStartsWith',
        'transfer_by_ends_with' => 'setTransferByEndsWith',
        'transfer_by_contains' => 'setTransferByContains',
        'transfer_by_like' => 'setTransferByLike',
        'transfer_by_between' => 'setTransferByBetween',
        'transfer_by_in' => 'setTransferByIn',
        'ref' => 'setRef',
        'ref_starts_with' => 'setRefStartsWith',
        'ref_ends_with' => 'setRefEndsWith',
        'ref_contains' => 'setRefContains',
        'ref_like' => 'setRefLike',
        'ref_between' => 'setRefBetween',
        'ref_in' => 'setRefIn',
        'notes' => 'setNotes',
        'notes_starts_with' => 'setNotesStartsWith',
        'notes_ends_with' => 'setNotesEndsWith',
        'notes_contains' => 'setNotesContains',
        'notes_like' => 'setNotesLike',
        'notes_between' => 'setNotesBetween',
        'notes_in' => 'setNotesIn',
        'source_type' => 'setSourceType',
        'source_type_greater_than_or_equal_to' => 'setSourceTypeGreaterThanOrEqualTo',
        'source_type_greater_than' => 'setSourceTypeGreaterThan',
        'source_type_less_than' => 'setSourceTypeLessThan',
        'source_type_less_than_or_equal_to' => 'setSourceTypeLessThanOrEqualTo',
        'source_type_not_equal_to' => 'setSourceTypeNotEqualTo',
        'source_type_between' => 'setSourceTypeBetween',
        'source_type_in' => 'setSourceTypeIn',
        'source_id' => 'setSourceId',
        'source_id_starts_with' => 'setSourceIdStartsWith',
        'source_id_ends_with' => 'setSourceIdEndsWith',
        'source_id_contains' => 'setSourceIdContains',
        'source_id_like' => 'setSourceIdLike',
        'source_id_between' => 'setSourceIdBetween',
        'source_id_in' => 'setSourceIdIn',
        'src_in_logical_id' => 'setSrcInLogicalId',
        'src_in_logical_id_starts_with' => 'setSrcInLogicalIdStartsWith',
        'src_in_logical_id_ends_with' => 'setSrcInLogicalIdEndsWith',
        'src_in_logical_id_contains' => 'setSrcInLogicalIdContains',
        'src_in_logical_id_like' => 'setSrcInLogicalIdLike',
        'src_in_logical_id_between' => 'setSrcInLogicalIdBetween',
        'src_in_logical_id_in' => 'setSrcInLogicalIdIn',
        'dst_in_logical_id' => 'setDstInLogicalId',
        'dst_in_logical_id_starts_with' => 'setDstInLogicalIdStartsWith',
        'dst_in_logical_id_ends_with' => 'setDstInLogicalIdEndsWith',
        'dst_in_logical_id_contains' => 'setDstInLogicalIdContains',
        'dst_in_logical_id_like' => 'setDstInLogicalIdLike',
        'dst_in_logical_id_between' => 'setDstInLogicalIdBetween',
        'dst_in_logical_id_in' => 'setDstInLogicalIdIn',
        'transfer_no' => 'setTransferNo',
        'transfer_no_starts_with' => 'setTransferNoStartsWith',
        'transfer_no_ends_with' => 'setTransferNoEndsWith',
        'transfer_no_contains' => 'setTransferNoContains',
        'transfer_no_like' => 'setTransferNoLike',
        'transfer_no_between' => 'setTransferNoBetween',
        'transfer_no_in' => 'setTransferNoIn',
        'in_transit' => 'setInTransit',
        'transit_notes' => 'setTransitNotes',
        'transit_notes_starts_with' => 'setTransitNotesStartsWith',
        'transit_notes_ends_with' => 'setTransitNotesEndsWith',
        'transit_notes_contains' => 'setTransitNotesContains',
        'transit_notes_like' => 'setTransitNotesLike',
        'transit_notes_between' => 'setTransitNotesBetween',
        'transit_notes_in' => 'setTransitNotesIn',
        'in_transit_id' => 'setInTransitId',
        'in_transit_id_starts_with' => 'setInTransitIdStartsWith',
        'in_transit_id_ends_with' => 'setInTransitIdEndsWith',
        'in_transit_id_contains' => 'setInTransitIdContains',
        'in_transit_id_like' => 'setInTransitIdLike',
        'in_transit_id_between' => 'setInTransitIdBetween',
        'in_transit_id_in' => 'setInTransitIdIn',
        'added_cost1' => 'setAddedCost1',
        'added_cost1_greater_than_or_equal_to' => 'setAddedCost1GreaterThanOrEqualTo',
        'added_cost1_greater_than' => 'setAddedCost1GreaterThan',
        'added_cost1_less_than' => 'setAddedCost1LessThan',
        'added_cost1_less_than_or_equal_to' => 'setAddedCost1LessThanOrEqualTo',
        'added_cost1_not_equal_to' => 'setAddedCost1NotEqualTo',
        'added_cost1_between' => 'setAddedCost1Between',
        'added_cost1_in' => 'setAddedCost1In',
        'added_cost2' => 'setAddedCost2',
        'added_cost2_greater_than_or_equal_to' => 'setAddedCost2GreaterThanOrEqualTo',
        'added_cost2_greater_than' => 'setAddedCost2GreaterThan',
        'added_cost2_less_than' => 'setAddedCost2LessThan',
        'added_cost2_less_than_or_equal_to' => 'setAddedCost2LessThanOrEqualTo',
        'added_cost2_not_equal_to' => 'setAddedCost2NotEqualTo',
        'added_cost2_between' => 'setAddedCost2Between',
        'added_cost2_in' => 'setAddedCost2In',
        'added_cost3' => 'setAddedCost3',
        'added_cost3_greater_than_or_equal_to' => 'setAddedCost3GreaterThanOrEqualTo',
        'added_cost3_greater_than' => 'setAddedCost3GreaterThan',
        'added_cost3_less_than' => 'setAddedCost3LessThan',
        'added_cost3_less_than_or_equal_to' => 'setAddedCost3LessThanOrEqualTo',
        'added_cost3_not_equal_to' => 'setAddedCost3NotEqualTo',
        'added_cost3_between' => 'setAddedCost3Between',
        'added_cost3_in' => 'setAddedCost3In',
        'picked_by' => 'setPickedBy',
        'picked_by_starts_with' => 'setPickedByStartsWith',
        'picked_by_ends_with' => 'setPickedByEndsWith',
        'picked_by_contains' => 'setPickedByContains',
        'picked_by_like' => 'setPickedByLike',
        'picked_by_between' => 'setPickedByBetween',
        'picked_by_in' => 'setPickedByIn',
        'received_by' => 'setReceivedBy',
        'received_by_starts_with' => 'setReceivedByStartsWith',
        'received_by_ends_with' => 'setReceivedByEndsWith',
        'received_by_contains' => 'setReceivedByContains',
        'received_by_like' => 'setReceivedByLike',
        'received_by_between' => 'setReceivedByBetween',
        'received_by_in' => 'setReceivedByIn',
        'type' => 'setType',
        'type_greater_than_or_equal_to' => 'setTypeGreaterThanOrEqualTo',
        'type_greater_than' => 'setTypeGreaterThan',
        'type_less_than' => 'setTypeLessThan',
        'type_less_than_or_equal_to' => 'setTypeLessThanOrEqualTo',
        'type_not_equal_to' => 'setTypeNotEqualTo',
        'type_between' => 'setTypeBetween',
        'type_in' => 'setTypeIn',
        'add_cost_method' => 'setAddCostMethod',
        'add_cost_method_starts_with' => 'setAddCostMethodStartsWith',
        'add_cost_method_ends_with' => 'setAddCostMethodEndsWith',
        'add_cost_method_contains' => 'setAddCostMethodContains',
        'add_cost_method_like' => 'setAddCostMethodLike',
        'add_cost_method_between' => 'setAddCostMethodBetween',
        'add_cost_method_in' => 'setAddCostMethodIn',
        'skip' => 'setSkip',
        'take' => 'setTake',
        'order_by' => 'setOrderBy',
        'order_by_desc' => 'setOrderByDesc',
        'include' => 'setInclude',
        'fields' => 'setFields',
        'meta' => 'setMeta'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'wh_transfer_id' => 'getWhTransferId',
        'wh_transfer_id_starts_with' => 'getWhTransferIdStartsWith',
        'wh_transfer_id_ends_with' => 'getWhTransferIdEndsWith',
        'wh_transfer_id_contains' => 'getWhTransferIdContains',
        'wh_transfer_id_like' => 'getWhTransferIdLike',
        'wh_transfer_id_between' => 'getWhTransferIdBetween',
        'wh_transfer_id_in' => 'getWhTransferIdIn',
        'last_saved_date_time' => 'getLastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'getLastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'getLastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'getLastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'getLastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'getLastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'getLastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'getLastSavedDateTimeIn',
        'transfer_date' => 'getTransferDate',
        'transfer_date_greater_than_or_equal_to' => 'getTransferDateGreaterThanOrEqualTo',
        'transfer_date_greater_than' => 'getTransferDateGreaterThan',
        'transfer_date_less_than' => 'getTransferDateLessThan',
        'transfer_date_less_than_or_equal_to' => 'getTransferDateLessThanOrEqualTo',
        'transfer_date_not_equal_to' => 'getTransferDateNotEqualTo',
        'transfer_date_between' => 'getTransferDateBetween',
        'transfer_date_in' => 'getTransferDateIn',
        'activate_date' => 'getActivateDate',
        'activate_date_greater_than_or_equal_to' => 'getActivateDateGreaterThanOrEqualTo',
        'activate_date_greater_than' => 'getActivateDateGreaterThan',
        'activate_date_less_than' => 'getActivateDateLessThan',
        'activate_date_less_than_or_equal_to' => 'getActivateDateLessThanOrEqualTo',
        'activate_date_not_equal_to' => 'getActivateDateNotEqualTo',
        'activate_date_between' => 'getActivateDateBetween',
        'activate_date_in' => 'getActivateDateIn',
        'status' => 'getStatus',
        'status_greater_than_or_equal_to' => 'getStatusGreaterThanOrEqualTo',
        'status_greater_than' => 'getStatusGreaterThan',
        'status_less_than' => 'getStatusLessThan',
        'status_less_than_or_equal_to' => 'getStatusLessThanOrEqualTo',
        'status_not_equal_to' => 'getStatusNotEqualTo',
        'status_between' => 'getStatusBetween',
        'status_in' => 'getStatusIn',
        'transfer_by' => 'getTransferBy',
        'transfer_by_starts_with' => 'getTransferByStartsWith',
        'transfer_by_ends_with' => 'getTransferByEndsWith',
        'transfer_by_contains' => 'getTransferByContains',
        'transfer_by_like' => 'getTransferByLike',
        'transfer_by_between' => 'getTransferByBetween',
        'transfer_by_in' => 'getTransferByIn',
        'ref' => 'getRef',
        'ref_starts_with' => 'getRefStartsWith',
        'ref_ends_with' => 'getRefEndsWith',
        'ref_contains' => 'getRefContains',
        'ref_like' => 'getRefLike',
        'ref_between' => 'getRefBetween',
        'ref_in' => 'getRefIn',
        'notes' => 'getNotes',
        'notes_starts_with' => 'getNotesStartsWith',
        'notes_ends_with' => 'getNotesEndsWith',
        'notes_contains' => 'getNotesContains',
        'notes_like' => 'getNotesLike',
        'notes_between' => 'getNotesBetween',
        'notes_in' => 'getNotesIn',
        'source_type' => 'getSourceType',
        'source_type_greater_than_or_equal_to' => 'getSourceTypeGreaterThanOrEqualTo',
        'source_type_greater_than' => 'getSourceTypeGreaterThan',
        'source_type_less_than' => 'getSourceTypeLessThan',
        'source_type_less_than_or_equal_to' => 'getSourceTypeLessThanOrEqualTo',
        'source_type_not_equal_to' => 'getSourceTypeNotEqualTo',
        'source_type_between' => 'getSourceTypeBetween',
        'source_type_in' => 'getSourceTypeIn',
        'source_id' => 'getSourceId',
        'source_id_starts_with' => 'getSourceIdStartsWith',
        'source_id_ends_with' => 'getSourceIdEndsWith',
        'source_id_contains' => 'getSourceIdContains',
        'source_id_like' => 'getSourceIdLike',
        'source_id_between' => 'getSourceIdBetween',
        'source_id_in' => 'getSourceIdIn',
        'src_in_logical_id' => 'getSrcInLogicalId',
        'src_in_logical_id_starts_with' => 'getSrcInLogicalIdStartsWith',
        'src_in_logical_id_ends_with' => 'getSrcInLogicalIdEndsWith',
        'src_in_logical_id_contains' => 'getSrcInLogicalIdContains',
        'src_in_logical_id_like' => 'getSrcInLogicalIdLike',
        'src_in_logical_id_between' => 'getSrcInLogicalIdBetween',
        'src_in_logical_id_in' => 'getSrcInLogicalIdIn',
        'dst_in_logical_id' => 'getDstInLogicalId',
        'dst_in_logical_id_starts_with' => 'getDstInLogicalIdStartsWith',
        'dst_in_logical_id_ends_with' => 'getDstInLogicalIdEndsWith',
        'dst_in_logical_id_contains' => 'getDstInLogicalIdContains',
        'dst_in_logical_id_like' => 'getDstInLogicalIdLike',
        'dst_in_logical_id_between' => 'getDstInLogicalIdBetween',
        'dst_in_logical_id_in' => 'getDstInLogicalIdIn',
        'transfer_no' => 'getTransferNo',
        'transfer_no_starts_with' => 'getTransferNoStartsWith',
        'transfer_no_ends_with' => 'getTransferNoEndsWith',
        'transfer_no_contains' => 'getTransferNoContains',
        'transfer_no_like' => 'getTransferNoLike',
        'transfer_no_between' => 'getTransferNoBetween',
        'transfer_no_in' => 'getTransferNoIn',
        'in_transit' => 'getInTransit',
        'transit_notes' => 'getTransitNotes',
        'transit_notes_starts_with' => 'getTransitNotesStartsWith',
        'transit_notes_ends_with' => 'getTransitNotesEndsWith',
        'transit_notes_contains' => 'getTransitNotesContains',
        'transit_notes_like' => 'getTransitNotesLike',
        'transit_notes_between' => 'getTransitNotesBetween',
        'transit_notes_in' => 'getTransitNotesIn',
        'in_transit_id' => 'getInTransitId',
        'in_transit_id_starts_with' => 'getInTransitIdStartsWith',
        'in_transit_id_ends_with' => 'getInTransitIdEndsWith',
        'in_transit_id_contains' => 'getInTransitIdContains',
        'in_transit_id_like' => 'getInTransitIdLike',
        'in_transit_id_between' => 'getInTransitIdBetween',
        'in_transit_id_in' => 'getInTransitIdIn',
        'added_cost1' => 'getAddedCost1',
        'added_cost1_greater_than_or_equal_to' => 'getAddedCost1GreaterThanOrEqualTo',
        'added_cost1_greater_than' => 'getAddedCost1GreaterThan',
        'added_cost1_less_than' => 'getAddedCost1LessThan',
        'added_cost1_less_than_or_equal_to' => 'getAddedCost1LessThanOrEqualTo',
        'added_cost1_not_equal_to' => 'getAddedCost1NotEqualTo',
        'added_cost1_between' => 'getAddedCost1Between',
        'added_cost1_in' => 'getAddedCost1In',
        'added_cost2' => 'getAddedCost2',
        'added_cost2_greater_than_or_equal_to' => 'getAddedCost2GreaterThanOrEqualTo',
        'added_cost2_greater_than' => 'getAddedCost2GreaterThan',
        'added_cost2_less_than' => 'getAddedCost2LessThan',
        'added_cost2_less_than_or_equal_to' => 'getAddedCost2LessThanOrEqualTo',
        'added_cost2_not_equal_to' => 'getAddedCost2NotEqualTo',
        'added_cost2_between' => 'getAddedCost2Between',
        'added_cost2_in' => 'getAddedCost2In',
        'added_cost3' => 'getAddedCost3',
        'added_cost3_greater_than_or_equal_to' => 'getAddedCost3GreaterThanOrEqualTo',
        'added_cost3_greater_than' => 'getAddedCost3GreaterThan',
        'added_cost3_less_than' => 'getAddedCost3LessThan',
        'added_cost3_less_than_or_equal_to' => 'getAddedCost3LessThanOrEqualTo',
        'added_cost3_not_equal_to' => 'getAddedCost3NotEqualTo',
        'added_cost3_between' => 'getAddedCost3Between',
        'added_cost3_in' => 'getAddedCost3In',
        'picked_by' => 'getPickedBy',
        'picked_by_starts_with' => 'getPickedByStartsWith',
        'picked_by_ends_with' => 'getPickedByEndsWith',
        'picked_by_contains' => 'getPickedByContains',
        'picked_by_like' => 'getPickedByLike',
        'picked_by_between' => 'getPickedByBetween',
        'picked_by_in' => 'getPickedByIn',
        'received_by' => 'getReceivedBy',
        'received_by_starts_with' => 'getReceivedByStartsWith',
        'received_by_ends_with' => 'getReceivedByEndsWith',
        'received_by_contains' => 'getReceivedByContains',
        'received_by_like' => 'getReceivedByLike',
        'received_by_between' => 'getReceivedByBetween',
        'received_by_in' => 'getReceivedByIn',
        'type' => 'getType',
        'type_greater_than_or_equal_to' => 'getTypeGreaterThanOrEqualTo',
        'type_greater_than' => 'getTypeGreaterThan',
        'type_less_than' => 'getTypeLessThan',
        'type_less_than_or_equal_to' => 'getTypeLessThanOrEqualTo',
        'type_not_equal_to' => 'getTypeNotEqualTo',
        'type_between' => 'getTypeBetween',
        'type_in' => 'getTypeIn',
        'add_cost_method' => 'getAddCostMethod',
        'add_cost_method_starts_with' => 'getAddCostMethodStartsWith',
        'add_cost_method_ends_with' => 'getAddCostMethodEndsWith',
        'add_cost_method_contains' => 'getAddCostMethodContains',
        'add_cost_method_like' => 'getAddCostMethodLike',
        'add_cost_method_between' => 'getAddCostMethodBetween',
        'add_cost_method_in' => 'getAddCostMethodIn',
        'skip' => 'getSkip',
        'take' => 'getTake',
        'order_by' => 'getOrderBy',
        'order_by_desc' => 'getOrderByDesc',
        'include' => 'getInclude',
        'fields' => 'getFields',
        'meta' => 'getMeta'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['wh_transfer_id'] = isset($data['wh_transfer_id']) ? $data['wh_transfer_id'] : null;
        $this->container['wh_transfer_id_starts_with'] = isset($data['wh_transfer_id_starts_with']) ? $data['wh_transfer_id_starts_with'] : null;
        $this->container['wh_transfer_id_ends_with'] = isset($data['wh_transfer_id_ends_with']) ? $data['wh_transfer_id_ends_with'] : null;
        $this->container['wh_transfer_id_contains'] = isset($data['wh_transfer_id_contains']) ? $data['wh_transfer_id_contains'] : null;
        $this->container['wh_transfer_id_like'] = isset($data['wh_transfer_id_like']) ? $data['wh_transfer_id_like'] : null;
        $this->container['wh_transfer_id_between'] = isset($data['wh_transfer_id_between']) ? $data['wh_transfer_id_between'] : null;
        $this->container['wh_transfer_id_in'] = isset($data['wh_transfer_id_in']) ? $data['wh_transfer_id_in'] : null;
        $this->container['last_saved_date_time'] = isset($data['last_saved_date_time']) ? $data['last_saved_date_time'] : null;
        $this->container['last_saved_date_time_greater_than_or_equal_to'] = isset($data['last_saved_date_time_greater_than_or_equal_to']) ? $data['last_saved_date_time_greater_than_or_equal_to'] : null;
        $this->container['last_saved_date_time_greater_than'] = isset($data['last_saved_date_time_greater_than']) ? $data['last_saved_date_time_greater_than'] : null;
        $this->container['last_saved_date_time_less_than'] = isset($data['last_saved_date_time_less_than']) ? $data['last_saved_date_time_less_than'] : null;
        $this->container['last_saved_date_time_less_than_or_equal_to'] = isset($data['last_saved_date_time_less_than_or_equal_to']) ? $data['last_saved_date_time_less_than_or_equal_to'] : null;
        $this->container['last_saved_date_time_not_equal_to'] = isset($data['last_saved_date_time_not_equal_to']) ? $data['last_saved_date_time_not_equal_to'] : null;
        $this->container['last_saved_date_time_between'] = isset($data['last_saved_date_time_between']) ? $data['last_saved_date_time_between'] : null;
        $this->container['last_saved_date_time_in'] = isset($data['last_saved_date_time_in']) ? $data['last_saved_date_time_in'] : null;
        $this->container['transfer_date'] = isset($data['transfer_date']) ? $data['transfer_date'] : null;
        $this->container['transfer_date_greater_than_or_equal_to'] = isset($data['transfer_date_greater_than_or_equal_to']) ? $data['transfer_date_greater_than_or_equal_to'] : null;
        $this->container['transfer_date_greater_than'] = isset($data['transfer_date_greater_than']) ? $data['transfer_date_greater_than'] : null;
        $this->container['transfer_date_less_than'] = isset($data['transfer_date_less_than']) ? $data['transfer_date_less_than'] : null;
        $this->container['transfer_date_less_than_or_equal_to'] = isset($data['transfer_date_less_than_or_equal_to']) ? $data['transfer_date_less_than_or_equal_to'] : null;
        $this->container['transfer_date_not_equal_to'] = isset($data['transfer_date_not_equal_to']) ? $data['transfer_date_not_equal_to'] : null;
        $this->container['transfer_date_between'] = isset($data['transfer_date_between']) ? $data['transfer_date_between'] : null;
        $this->container['transfer_date_in'] = isset($data['transfer_date_in']) ? $data['transfer_date_in'] : null;
        $this->container['activate_date'] = isset($data['activate_date']) ? $data['activate_date'] : null;
        $this->container['activate_date_greater_than_or_equal_to'] = isset($data['activate_date_greater_than_or_equal_to']) ? $data['activate_date_greater_than_or_equal_to'] : null;
        $this->container['activate_date_greater_than'] = isset($data['activate_date_greater_than']) ? $data['activate_date_greater_than'] : null;
        $this->container['activate_date_less_than'] = isset($data['activate_date_less_than']) ? $data['activate_date_less_than'] : null;
        $this->container['activate_date_less_than_or_equal_to'] = isset($data['activate_date_less_than_or_equal_to']) ? $data['activate_date_less_than_or_equal_to'] : null;
        $this->container['activate_date_not_equal_to'] = isset($data['activate_date_not_equal_to']) ? $data['activate_date_not_equal_to'] : null;
        $this->container['activate_date_between'] = isset($data['activate_date_between']) ? $data['activate_date_between'] : null;
        $this->container['activate_date_in'] = isset($data['activate_date_in']) ? $data['activate_date_in'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['status_greater_than_or_equal_to'] = isset($data['status_greater_than_or_equal_to']) ? $data['status_greater_than_or_equal_to'] : null;
        $this->container['status_greater_than'] = isset($data['status_greater_than']) ? $data['status_greater_than'] : null;
        $this->container['status_less_than'] = isset($data['status_less_than']) ? $data['status_less_than'] : null;
        $this->container['status_less_than_or_equal_to'] = isset($data['status_less_than_or_equal_to']) ? $data['status_less_than_or_equal_to'] : null;
        $this->container['status_not_equal_to'] = isset($data['status_not_equal_to']) ? $data['status_not_equal_to'] : null;
        $this->container['status_between'] = isset($data['status_between']) ? $data['status_between'] : null;
        $this->container['status_in'] = isset($data['status_in']) ? $data['status_in'] : null;
        $this->container['transfer_by'] = isset($data['transfer_by']) ? $data['transfer_by'] : null;
        $this->container['transfer_by_starts_with'] = isset($data['transfer_by_starts_with']) ? $data['transfer_by_starts_with'] : null;
        $this->container['transfer_by_ends_with'] = isset($data['transfer_by_ends_with']) ? $data['transfer_by_ends_with'] : null;
        $this->container['transfer_by_contains'] = isset($data['transfer_by_contains']) ? $data['transfer_by_contains'] : null;
        $this->container['transfer_by_like'] = isset($data['transfer_by_like']) ? $data['transfer_by_like'] : null;
        $this->container['transfer_by_between'] = isset($data['transfer_by_between']) ? $data['transfer_by_between'] : null;
        $this->container['transfer_by_in'] = isset($data['transfer_by_in']) ? $data['transfer_by_in'] : null;
        $this->container['ref'] = isset($data['ref']) ? $data['ref'] : null;
        $this->container['ref_starts_with'] = isset($data['ref_starts_with']) ? $data['ref_starts_with'] : null;
        $this->container['ref_ends_with'] = isset($data['ref_ends_with']) ? $data['ref_ends_with'] : null;
        $this->container['ref_contains'] = isset($data['ref_contains']) ? $data['ref_contains'] : null;
        $this->container['ref_like'] = isset($data['ref_like']) ? $data['ref_like'] : null;
        $this->container['ref_between'] = isset($data['ref_between']) ? $data['ref_between'] : null;
        $this->container['ref_in'] = isset($data['ref_in']) ? $data['ref_in'] : null;
        $this->container['notes'] = isset($data['notes']) ? $data['notes'] : null;
        $this->container['notes_starts_with'] = isset($data['notes_starts_with']) ? $data['notes_starts_with'] : null;
        $this->container['notes_ends_with'] = isset($data['notes_ends_with']) ? $data['notes_ends_with'] : null;
        $this->container['notes_contains'] = isset($data['notes_contains']) ? $data['notes_contains'] : null;
        $this->container['notes_like'] = isset($data['notes_like']) ? $data['notes_like'] : null;
        $this->container['notes_between'] = isset($data['notes_between']) ? $data['notes_between'] : null;
        $this->container['notes_in'] = isset($data['notes_in']) ? $data['notes_in'] : null;
        $this->container['source_type'] = isset($data['source_type']) ? $data['source_type'] : null;
        $this->container['source_type_greater_than_or_equal_to'] = isset($data['source_type_greater_than_or_equal_to']) ? $data['source_type_greater_than_or_equal_to'] : null;
        $this->container['source_type_greater_than'] = isset($data['source_type_greater_than']) ? $data['source_type_greater_than'] : null;
        $this->container['source_type_less_than'] = isset($data['source_type_less_than']) ? $data['source_type_less_than'] : null;
        $this->container['source_type_less_than_or_equal_to'] = isset($data['source_type_less_than_or_equal_to']) ? $data['source_type_less_than_or_equal_to'] : null;
        $this->container['source_type_not_equal_to'] = isset($data['source_type_not_equal_to']) ? $data['source_type_not_equal_to'] : null;
        $this->container['source_type_between'] = isset($data['source_type_between']) ? $data['source_type_between'] : null;
        $this->container['source_type_in'] = isset($data['source_type_in']) ? $data['source_type_in'] : null;
        $this->container['source_id'] = isset($data['source_id']) ? $data['source_id'] : null;
        $this->container['source_id_starts_with'] = isset($data['source_id_starts_with']) ? $data['source_id_starts_with'] : null;
        $this->container['source_id_ends_with'] = isset($data['source_id_ends_with']) ? $data['source_id_ends_with'] : null;
        $this->container['source_id_contains'] = isset($data['source_id_contains']) ? $data['source_id_contains'] : null;
        $this->container['source_id_like'] = isset($data['source_id_like']) ? $data['source_id_like'] : null;
        $this->container['source_id_between'] = isset($data['source_id_between']) ? $data['source_id_between'] : null;
        $this->container['source_id_in'] = isset($data['source_id_in']) ? $data['source_id_in'] : null;
        $this->container['src_in_logical_id'] = isset($data['src_in_logical_id']) ? $data['src_in_logical_id'] : null;
        $this->container['src_in_logical_id_starts_with'] = isset($data['src_in_logical_id_starts_with']) ? $data['src_in_logical_id_starts_with'] : null;
        $this->container['src_in_logical_id_ends_with'] = isset($data['src_in_logical_id_ends_with']) ? $data['src_in_logical_id_ends_with'] : null;
        $this->container['src_in_logical_id_contains'] = isset($data['src_in_logical_id_contains']) ? $data['src_in_logical_id_contains'] : null;
        $this->container['src_in_logical_id_like'] = isset($data['src_in_logical_id_like']) ? $data['src_in_logical_id_like'] : null;
        $this->container['src_in_logical_id_between'] = isset($data['src_in_logical_id_between']) ? $data['src_in_logical_id_between'] : null;
        $this->container['src_in_logical_id_in'] = isset($data['src_in_logical_id_in']) ? $data['src_in_logical_id_in'] : null;
        $this->container['dst_in_logical_id'] = isset($data['dst_in_logical_id']) ? $data['dst_in_logical_id'] : null;
        $this->container['dst_in_logical_id_starts_with'] = isset($data['dst_in_logical_id_starts_with']) ? $data['dst_in_logical_id_starts_with'] : null;
        $this->container['dst_in_logical_id_ends_with'] = isset($data['dst_in_logical_id_ends_with']) ? $data['dst_in_logical_id_ends_with'] : null;
        $this->container['dst_in_logical_id_contains'] = isset($data['dst_in_logical_id_contains']) ? $data['dst_in_logical_id_contains'] : null;
        $this->container['dst_in_logical_id_like'] = isset($data['dst_in_logical_id_like']) ? $data['dst_in_logical_id_like'] : null;
        $this->container['dst_in_logical_id_between'] = isset($data['dst_in_logical_id_between']) ? $data['dst_in_logical_id_between'] : null;
        $this->container['dst_in_logical_id_in'] = isset($data['dst_in_logical_id_in']) ? $data['dst_in_logical_id_in'] : null;
        $this->container['transfer_no'] = isset($data['transfer_no']) ? $data['transfer_no'] : null;
        $this->container['transfer_no_starts_with'] = isset($data['transfer_no_starts_with']) ? $data['transfer_no_starts_with'] : null;
        $this->container['transfer_no_ends_with'] = isset($data['transfer_no_ends_with']) ? $data['transfer_no_ends_with'] : null;
        $this->container['transfer_no_contains'] = isset($data['transfer_no_contains']) ? $data['transfer_no_contains'] : null;
        $this->container['transfer_no_like'] = isset($data['transfer_no_like']) ? $data['transfer_no_like'] : null;
        $this->container['transfer_no_between'] = isset($data['transfer_no_between']) ? $data['transfer_no_between'] : null;
        $this->container['transfer_no_in'] = isset($data['transfer_no_in']) ? $data['transfer_no_in'] : null;
        $this->container['in_transit'] = isset($data['in_transit']) ? $data['in_transit'] : null;
        $this->container['transit_notes'] = isset($data['transit_notes']) ? $data['transit_notes'] : null;
        $this->container['transit_notes_starts_with'] = isset($data['transit_notes_starts_with']) ? $data['transit_notes_starts_with'] : null;
        $this->container['transit_notes_ends_with'] = isset($data['transit_notes_ends_with']) ? $data['transit_notes_ends_with'] : null;
        $this->container['transit_notes_contains'] = isset($data['transit_notes_contains']) ? $data['transit_notes_contains'] : null;
        $this->container['transit_notes_like'] = isset($data['transit_notes_like']) ? $data['transit_notes_like'] : null;
        $this->container['transit_notes_between'] = isset($data['transit_notes_between']) ? $data['transit_notes_between'] : null;
        $this->container['transit_notes_in'] = isset($data['transit_notes_in']) ? $data['transit_notes_in'] : null;
        $this->container['in_transit_id'] = isset($data['in_transit_id']) ? $data['in_transit_id'] : null;
        $this->container['in_transit_id_starts_with'] = isset($data['in_transit_id_starts_with']) ? $data['in_transit_id_starts_with'] : null;
        $this->container['in_transit_id_ends_with'] = isset($data['in_transit_id_ends_with']) ? $data['in_transit_id_ends_with'] : null;
        $this->container['in_transit_id_contains'] = isset($data['in_transit_id_contains']) ? $data['in_transit_id_contains'] : null;
        $this->container['in_transit_id_like'] = isset($data['in_transit_id_like']) ? $data['in_transit_id_like'] : null;
        $this->container['in_transit_id_between'] = isset($data['in_transit_id_between']) ? $data['in_transit_id_between'] : null;
        $this->container['in_transit_id_in'] = isset($data['in_transit_id_in']) ? $data['in_transit_id_in'] : null;
        $this->container['added_cost1'] = isset($data['added_cost1']) ? $data['added_cost1'] : null;
        $this->container['added_cost1_greater_than_or_equal_to'] = isset($data['added_cost1_greater_than_or_equal_to']) ? $data['added_cost1_greater_than_or_equal_to'] : null;
        $this->container['added_cost1_greater_than'] = isset($data['added_cost1_greater_than']) ? $data['added_cost1_greater_than'] : null;
        $this->container['added_cost1_less_than'] = isset($data['added_cost1_less_than']) ? $data['added_cost1_less_than'] : null;
        $this->container['added_cost1_less_than_or_equal_to'] = isset($data['added_cost1_less_than_or_equal_to']) ? $data['added_cost1_less_than_or_equal_to'] : null;
        $this->container['added_cost1_not_equal_to'] = isset($data['added_cost1_not_equal_to']) ? $data['added_cost1_not_equal_to'] : null;
        $this->container['added_cost1_between'] = isset($data['added_cost1_between']) ? $data['added_cost1_between'] : null;
        $this->container['added_cost1_in'] = isset($data['added_cost1_in']) ? $data['added_cost1_in'] : null;
        $this->container['added_cost2'] = isset($data['added_cost2']) ? $data['added_cost2'] : null;
        $this->container['added_cost2_greater_than_or_equal_to'] = isset($data['added_cost2_greater_than_or_equal_to']) ? $data['added_cost2_greater_than_or_equal_to'] : null;
        $this->container['added_cost2_greater_than'] = isset($data['added_cost2_greater_than']) ? $data['added_cost2_greater_than'] : null;
        $this->container['added_cost2_less_than'] = isset($data['added_cost2_less_than']) ? $data['added_cost2_less_than'] : null;
        $this->container['added_cost2_less_than_or_equal_to'] = isset($data['added_cost2_less_than_or_equal_to']) ? $data['added_cost2_less_than_or_equal_to'] : null;
        $this->container['added_cost2_not_equal_to'] = isset($data['added_cost2_not_equal_to']) ? $data['added_cost2_not_equal_to'] : null;
        $this->container['added_cost2_between'] = isset($data['added_cost2_between']) ? $data['added_cost2_between'] : null;
        $this->container['added_cost2_in'] = isset($data['added_cost2_in']) ? $data['added_cost2_in'] : null;
        $this->container['added_cost3'] = isset($data['added_cost3']) ? $data['added_cost3'] : null;
        $this->container['added_cost3_greater_than_or_equal_to'] = isset($data['added_cost3_greater_than_or_equal_to']) ? $data['added_cost3_greater_than_or_equal_to'] : null;
        $this->container['added_cost3_greater_than'] = isset($data['added_cost3_greater_than']) ? $data['added_cost3_greater_than'] : null;
        $this->container['added_cost3_less_than'] = isset($data['added_cost3_less_than']) ? $data['added_cost3_less_than'] : null;
        $this->container['added_cost3_less_than_or_equal_to'] = isset($data['added_cost3_less_than_or_equal_to']) ? $data['added_cost3_less_than_or_equal_to'] : null;
        $this->container['added_cost3_not_equal_to'] = isset($data['added_cost3_not_equal_to']) ? $data['added_cost3_not_equal_to'] : null;
        $this->container['added_cost3_between'] = isset($data['added_cost3_between']) ? $data['added_cost3_between'] : null;
        $this->container['added_cost3_in'] = isset($data['added_cost3_in']) ? $data['added_cost3_in'] : null;
        $this->container['picked_by'] = isset($data['picked_by']) ? $data['picked_by'] : null;
        $this->container['picked_by_starts_with'] = isset($data['picked_by_starts_with']) ? $data['picked_by_starts_with'] : null;
        $this->container['picked_by_ends_with'] = isset($data['picked_by_ends_with']) ? $data['picked_by_ends_with'] : null;
        $this->container['picked_by_contains'] = isset($data['picked_by_contains']) ? $data['picked_by_contains'] : null;
        $this->container['picked_by_like'] = isset($data['picked_by_like']) ? $data['picked_by_like'] : null;
        $this->container['picked_by_between'] = isset($data['picked_by_between']) ? $data['picked_by_between'] : null;
        $this->container['picked_by_in'] = isset($data['picked_by_in']) ? $data['picked_by_in'] : null;
        $this->container['received_by'] = isset($data['received_by']) ? $data['received_by'] : null;
        $this->container['received_by_starts_with'] = isset($data['received_by_starts_with']) ? $data['received_by_starts_with'] : null;
        $this->container['received_by_ends_with'] = isset($data['received_by_ends_with']) ? $data['received_by_ends_with'] : null;
        $this->container['received_by_contains'] = isset($data['received_by_contains']) ? $data['received_by_contains'] : null;
        $this->container['received_by_like'] = isset($data['received_by_like']) ? $data['received_by_like'] : null;
        $this->container['received_by_between'] = isset($data['received_by_between']) ? $data['received_by_between'] : null;
        $this->container['received_by_in'] = isset($data['received_by_in']) ? $data['received_by_in'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['type_greater_than_or_equal_to'] = isset($data['type_greater_than_or_equal_to']) ? $data['type_greater_than_or_equal_to'] : null;
        $this->container['type_greater_than'] = isset($data['type_greater_than']) ? $data['type_greater_than'] : null;
        $this->container['type_less_than'] = isset($data['type_less_than']) ? $data['type_less_than'] : null;
        $this->container['type_less_than_or_equal_to'] = isset($data['type_less_than_or_equal_to']) ? $data['type_less_than_or_equal_to'] : null;
        $this->container['type_not_equal_to'] = isset($data['type_not_equal_to']) ? $data['type_not_equal_to'] : null;
        $this->container['type_between'] = isset($data['type_between']) ? $data['type_between'] : null;
        $this->container['type_in'] = isset($data['type_in']) ? $data['type_in'] : null;
        $this->container['add_cost_method'] = isset($data['add_cost_method']) ? $data['add_cost_method'] : null;
        $this->container['add_cost_method_starts_with'] = isset($data['add_cost_method_starts_with']) ? $data['add_cost_method_starts_with'] : null;
        $this->container['add_cost_method_ends_with'] = isset($data['add_cost_method_ends_with']) ? $data['add_cost_method_ends_with'] : null;
        $this->container['add_cost_method_contains'] = isset($data['add_cost_method_contains']) ? $data['add_cost_method_contains'] : null;
        $this->container['add_cost_method_like'] = isset($data['add_cost_method_like']) ? $data['add_cost_method_like'] : null;
        $this->container['add_cost_method_between'] = isset($data['add_cost_method_between']) ? $data['add_cost_method_between'] : null;
        $this->container['add_cost_method_in'] = isset($data['add_cost_method_in']) ? $data['add_cost_method_in'] : null;
        $this->container['skip'] = isset($data['skip']) ? $data['skip'] : null;
        $this->container['take'] = isset($data['take']) ? $data['take'] : null;
        $this->container['order_by'] = isset($data['order_by']) ? $data['order_by'] : null;
        $this->container['order_by_desc'] = isset($data['order_by_desc']) ? $data['order_by_desc'] : null;
        $this->container['include'] = isset($data['include']) ? $data['include'] : null;
        $this->container['fields'] = isset($data['fields']) ? $data['fields'] : null;
        $this->container['meta'] = isset($data['meta']) ? $data['meta'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets wh_transfer_id
     *
     * @return string
     */
    public function getWhTransferId()
    {
        return $this->container['wh_transfer_id'];
    }

    /**
     * Sets wh_transfer_id
     *
     * @param string $wh_transfer_id wh_transfer_id
     *
     * @return $this
     */
    public function setWhTransferId($wh_transfer_id)
    {
        $this->container['wh_transfer_id'] = $wh_transfer_id;

        return $this;
    }

    /**
     * Gets wh_transfer_id_starts_with
     *
     * @return string
     */
    public function getWhTransferIdStartsWith()
    {
        return $this->container['wh_transfer_id_starts_with'];
    }

    /**
     * Sets wh_transfer_id_starts_with
     *
     * @param string $wh_transfer_id_starts_with wh_transfer_id_starts_with
     *
     * @return $this
     */
    public function setWhTransferIdStartsWith($wh_transfer_id_starts_with)
    {
        $this->container['wh_transfer_id_starts_with'] = $wh_transfer_id_starts_with;

        return $this;
    }

    /**
     * Gets wh_transfer_id_ends_with
     *
     * @return string
     */
    public function getWhTransferIdEndsWith()
    {
        return $this->container['wh_transfer_id_ends_with'];
    }

    /**
     * Sets wh_transfer_id_ends_with
     *
     * @param string $wh_transfer_id_ends_with wh_transfer_id_ends_with
     *
     * @return $this
     */
    public function setWhTransferIdEndsWith($wh_transfer_id_ends_with)
    {
        $this->container['wh_transfer_id_ends_with'] = $wh_transfer_id_ends_with;

        return $this;
    }

    /**
     * Gets wh_transfer_id_contains
     *
     * @return string
     */
    public function getWhTransferIdContains()
    {
        return $this->container['wh_transfer_id_contains'];
    }

    /**
     * Sets wh_transfer_id_contains
     *
     * @param string $wh_transfer_id_contains wh_transfer_id_contains
     *
     * @return $this
     */
    public function setWhTransferIdContains($wh_transfer_id_contains)
    {
        $this->container['wh_transfer_id_contains'] = $wh_transfer_id_contains;

        return $this;
    }

    /**
     * Gets wh_transfer_id_like
     *
     * @return string
     */
    public function getWhTransferIdLike()
    {
        return $this->container['wh_transfer_id_like'];
    }

    /**
     * Sets wh_transfer_id_like
     *
     * @param string $wh_transfer_id_like wh_transfer_id_like
     *
     * @return $this
     */
    public function setWhTransferIdLike($wh_transfer_id_like)
    {
        $this->container['wh_transfer_id_like'] = $wh_transfer_id_like;

        return $this;
    }

    /**
     * Gets wh_transfer_id_between
     *
     * @return string[]
     */
    public function getWhTransferIdBetween()
    {
        return $this->container['wh_transfer_id_between'];
    }

    /**
     * Sets wh_transfer_id_between
     *
     * @param string[] $wh_transfer_id_between wh_transfer_id_between
     *
     * @return $this
     */
    public function setWhTransferIdBetween($wh_transfer_id_between)
    {
        $this->container['wh_transfer_id_between'] = $wh_transfer_id_between;

        return $this;
    }

    /**
     * Gets wh_transfer_id_in
     *
     * @return string[]
     */
    public function getWhTransferIdIn()
    {
        return $this->container['wh_transfer_id_in'];
    }

    /**
     * Sets wh_transfer_id_in
     *
     * @param string[] $wh_transfer_id_in wh_transfer_id_in
     *
     * @return $this
     */
    public function setWhTransferIdIn($wh_transfer_id_in)
    {
        $this->container['wh_transfer_id_in'] = $wh_transfer_id_in;

        return $this;
    }

    /**
     * Gets last_saved_date_time
     *
     * @return \DateTime
     */
    public function getLastSavedDateTime()
    {
        return $this->container['last_saved_date_time'];
    }

    /**
     * Sets last_saved_date_time
     *
     * @param \DateTime $last_saved_date_time last_saved_date_time
     *
     * @return $this
     */
    public function setLastSavedDateTime($last_saved_date_time)
    {
        $this->container['last_saved_date_time'] = $last_saved_date_time;

        return $this;
    }

    /**
     * Gets last_saved_date_time_greater_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeGreaterThanOrEqualTo()
    {
        return $this->container['last_saved_date_time_greater_than_or_equal_to'];
    }

    /**
     * Sets last_saved_date_time_greater_than_or_equal_to
     *
     * @param \DateTime $last_saved_date_time_greater_than_or_equal_to last_saved_date_time_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeGreaterThanOrEqualTo($last_saved_date_time_greater_than_or_equal_to)
    {
        $this->container['last_saved_date_time_greater_than_or_equal_to'] = $last_saved_date_time_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_greater_than
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeGreaterThan()
    {
        return $this->container['last_saved_date_time_greater_than'];
    }

    /**
     * Sets last_saved_date_time_greater_than
     *
     * @param \DateTime $last_saved_date_time_greater_than last_saved_date_time_greater_than
     *
     * @return $this
     */
    public function setLastSavedDateTimeGreaterThan($last_saved_date_time_greater_than)
    {
        $this->container['last_saved_date_time_greater_than'] = $last_saved_date_time_greater_than;

        return $this;
    }

    /**
     * Gets last_saved_date_time_less_than
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeLessThan()
    {
        return $this->container['last_saved_date_time_less_than'];
    }

    /**
     * Sets last_saved_date_time_less_than
     *
     * @param \DateTime $last_saved_date_time_less_than last_saved_date_time_less_than
     *
     * @return $this
     */
    public function setLastSavedDateTimeLessThan($last_saved_date_time_less_than)
    {
        $this->container['last_saved_date_time_less_than'] = $last_saved_date_time_less_than;

        return $this;
    }

    /**
     * Gets last_saved_date_time_less_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeLessThanOrEqualTo()
    {
        return $this->container['last_saved_date_time_less_than_or_equal_to'];
    }

    /**
     * Sets last_saved_date_time_less_than_or_equal_to
     *
     * @param \DateTime $last_saved_date_time_less_than_or_equal_to last_saved_date_time_less_than_or_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeLessThanOrEqualTo($last_saved_date_time_less_than_or_equal_to)
    {
        $this->container['last_saved_date_time_less_than_or_equal_to'] = $last_saved_date_time_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_not_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeNotEqualTo()
    {
        return $this->container['last_saved_date_time_not_equal_to'];
    }

    /**
     * Sets last_saved_date_time_not_equal_to
     *
     * @param \DateTime $last_saved_date_time_not_equal_to last_saved_date_time_not_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeNotEqualTo($last_saved_date_time_not_equal_to)
    {
        $this->container['last_saved_date_time_not_equal_to'] = $last_saved_date_time_not_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_between
     *
     * @return \DateTime[]
     */
    public function getLastSavedDateTimeBetween()
    {
        return $this->container['last_saved_date_time_between'];
    }

    /**
     * Sets last_saved_date_time_between
     *
     * @param \DateTime[] $last_saved_date_time_between last_saved_date_time_between
     *
     * @return $this
     */
    public function setLastSavedDateTimeBetween($last_saved_date_time_between)
    {
        $this->container['last_saved_date_time_between'] = $last_saved_date_time_between;

        return $this;
    }

    /**
     * Gets last_saved_date_time_in
     *
     * @return \DateTime[]
     */
    public function getLastSavedDateTimeIn()
    {
        return $this->container['last_saved_date_time_in'];
    }

    /**
     * Sets last_saved_date_time_in
     *
     * @param \DateTime[] $last_saved_date_time_in last_saved_date_time_in
     *
     * @return $this
     */
    public function setLastSavedDateTimeIn($last_saved_date_time_in)
    {
        $this->container['last_saved_date_time_in'] = $last_saved_date_time_in;

        return $this;
    }

    /**
     * Gets transfer_date
     *
     * @return \DateTime
     */
    public function getTransferDate()
    {
        return $this->container['transfer_date'];
    }

    /**
     * Sets transfer_date
     *
     * @param \DateTime $transfer_date transfer_date
     *
     * @return $this
     */
    public function setTransferDate($transfer_date)
    {
        $this->container['transfer_date'] = $transfer_date;

        return $this;
    }

    /**
     * Gets transfer_date_greater_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getTransferDateGreaterThanOrEqualTo()
    {
        return $this->container['transfer_date_greater_than_or_equal_to'];
    }

    /**
     * Sets transfer_date_greater_than_or_equal_to
     *
     * @param \DateTime $transfer_date_greater_than_or_equal_to transfer_date_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setTransferDateGreaterThanOrEqualTo($transfer_date_greater_than_or_equal_to)
    {
        $this->container['transfer_date_greater_than_or_equal_to'] = $transfer_date_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets transfer_date_greater_than
     *
     * @return \DateTime
     */
    public function getTransferDateGreaterThan()
    {
        return $this->container['transfer_date_greater_than'];
    }

    /**
     * Sets transfer_date_greater_than
     *
     * @param \DateTime $transfer_date_greater_than transfer_date_greater_than
     *
     * @return $this
     */
    public function setTransferDateGreaterThan($transfer_date_greater_than)
    {
        $this->container['transfer_date_greater_than'] = $transfer_date_greater_than;

        return $this;
    }

    /**
     * Gets transfer_date_less_than
     *
     * @return \DateTime
     */
    public function getTransferDateLessThan()
    {
        return $this->container['transfer_date_less_than'];
    }

    /**
     * Sets transfer_date_less_than
     *
     * @param \DateTime $transfer_date_less_than transfer_date_less_than
     *
     * @return $this
     */
    public function setTransferDateLessThan($transfer_date_less_than)
    {
        $this->container['transfer_date_less_than'] = $transfer_date_less_than;

        return $this;
    }

    /**
     * Gets transfer_date_less_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getTransferDateLessThanOrEqualTo()
    {
        return $this->container['transfer_date_less_than_or_equal_to'];
    }

    /**
     * Sets transfer_date_less_than_or_equal_to
     *
     * @param \DateTime $transfer_date_less_than_or_equal_to transfer_date_less_than_or_equal_to
     *
     * @return $this
     */
    public function setTransferDateLessThanOrEqualTo($transfer_date_less_than_or_equal_to)
    {
        $this->container['transfer_date_less_than_or_equal_to'] = $transfer_date_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets transfer_date_not_equal_to
     *
     * @return \DateTime
     */
    public function getTransferDateNotEqualTo()
    {
        return $this->container['transfer_date_not_equal_to'];
    }

    /**
     * Sets transfer_date_not_equal_to
     *
     * @param \DateTime $transfer_date_not_equal_to transfer_date_not_equal_to
     *
     * @return $this
     */
    public function setTransferDateNotEqualTo($transfer_date_not_equal_to)
    {
        $this->container['transfer_date_not_equal_to'] = $transfer_date_not_equal_to;

        return $this;
    }

    /**
     * Gets transfer_date_between
     *
     * @return \DateTime[]
     */
    public function getTransferDateBetween()
    {
        return $this->container['transfer_date_between'];
    }

    /**
     * Sets transfer_date_between
     *
     * @param \DateTime[] $transfer_date_between transfer_date_between
     *
     * @return $this
     */
    public function setTransferDateBetween($transfer_date_between)
    {
        $this->container['transfer_date_between'] = $transfer_date_between;

        return $this;
    }

    /**
     * Gets transfer_date_in
     *
     * @return \DateTime[]
     */
    public function getTransferDateIn()
    {
        return $this->container['transfer_date_in'];
    }

    /**
     * Sets transfer_date_in
     *
     * @param \DateTime[] $transfer_date_in transfer_date_in
     *
     * @return $this
     */
    public function setTransferDateIn($transfer_date_in)
    {
        $this->container['transfer_date_in'] = $transfer_date_in;

        return $this;
    }

    /**
     * Gets activate_date
     *
     * @return \DateTime
     */
    public function getActivateDate()
    {
        return $this->container['activate_date'];
    }

    /**
     * Sets activate_date
     *
     * @param \DateTime $activate_date activate_date
     *
     * @return $this
     */
    public function setActivateDate($activate_date)
    {
        $this->container['activate_date'] = $activate_date;

        return $this;
    }

    /**
     * Gets activate_date_greater_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getActivateDateGreaterThanOrEqualTo()
    {
        return $this->container['activate_date_greater_than_or_equal_to'];
    }

    /**
     * Sets activate_date_greater_than_or_equal_to
     *
     * @param \DateTime $activate_date_greater_than_or_equal_to activate_date_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setActivateDateGreaterThanOrEqualTo($activate_date_greater_than_or_equal_to)
    {
        $this->container['activate_date_greater_than_or_equal_to'] = $activate_date_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets activate_date_greater_than
     *
     * @return \DateTime
     */
    public function getActivateDateGreaterThan()
    {
        return $this->container['activate_date_greater_than'];
    }

    /**
     * Sets activate_date_greater_than
     *
     * @param \DateTime $activate_date_greater_than activate_date_greater_than
     *
     * @return $this
     */
    public function setActivateDateGreaterThan($activate_date_greater_than)
    {
        $this->container['activate_date_greater_than'] = $activate_date_greater_than;

        return $this;
    }

    /**
     * Gets activate_date_less_than
     *
     * @return \DateTime
     */
    public function getActivateDateLessThan()
    {
        return $this->container['activate_date_less_than'];
    }

    /**
     * Sets activate_date_less_than
     *
     * @param \DateTime $activate_date_less_than activate_date_less_than
     *
     * @return $this
     */
    public function setActivateDateLessThan($activate_date_less_than)
    {
        $this->container['activate_date_less_than'] = $activate_date_less_than;

        return $this;
    }

    /**
     * Gets activate_date_less_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getActivateDateLessThanOrEqualTo()
    {
        return $this->container['activate_date_less_than_or_equal_to'];
    }

    /**
     * Sets activate_date_less_than_or_equal_to
     *
     * @param \DateTime $activate_date_less_than_or_equal_to activate_date_less_than_or_equal_to
     *
     * @return $this
     */
    public function setActivateDateLessThanOrEqualTo($activate_date_less_than_or_equal_to)
    {
        $this->container['activate_date_less_than_or_equal_to'] = $activate_date_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets activate_date_not_equal_to
     *
     * @return \DateTime
     */
    public function getActivateDateNotEqualTo()
    {
        return $this->container['activate_date_not_equal_to'];
    }

    /**
     * Sets activate_date_not_equal_to
     *
     * @param \DateTime $activate_date_not_equal_to activate_date_not_equal_to
     *
     * @return $this
     */
    public function setActivateDateNotEqualTo($activate_date_not_equal_to)
    {
        $this->container['activate_date_not_equal_to'] = $activate_date_not_equal_to;

        return $this;
    }

    /**
     * Gets activate_date_between
     *
     * @return \DateTime[]
     */
    public function getActivateDateBetween()
    {
        return $this->container['activate_date_between'];
    }

    /**
     * Sets activate_date_between
     *
     * @param \DateTime[] $activate_date_between activate_date_between
     *
     * @return $this
     */
    public function setActivateDateBetween($activate_date_between)
    {
        $this->container['activate_date_between'] = $activate_date_between;

        return $this;
    }

    /**
     * Gets activate_date_in
     *
     * @return \DateTime[]
     */
    public function getActivateDateIn()
    {
        return $this->container['activate_date_in'];
    }

    /**
     * Sets activate_date_in
     *
     * @param \DateTime[] $activate_date_in activate_date_in
     *
     * @return $this
     */
    public function setActivateDateIn($activate_date_in)
    {
        $this->container['activate_date_in'] = $activate_date_in;

        return $this;
    }

    /**
     * Gets status
     *
     * @return int
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param int $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets status_greater_than_or_equal_to
     *
     * @return int
     */
    public function getStatusGreaterThanOrEqualTo()
    {
        return $this->container['status_greater_than_or_equal_to'];
    }

    /**
     * Sets status_greater_than_or_equal_to
     *
     * @param int $status_greater_than_or_equal_to status_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setStatusGreaterThanOrEqualTo($status_greater_than_or_equal_to)
    {
        $this->container['status_greater_than_or_equal_to'] = $status_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets status_greater_than
     *
     * @return int
     */
    public function getStatusGreaterThan()
    {
        return $this->container['status_greater_than'];
    }

    /**
     * Sets status_greater_than
     *
     * @param int $status_greater_than status_greater_than
     *
     * @return $this
     */
    public function setStatusGreaterThan($status_greater_than)
    {
        $this->container['status_greater_than'] = $status_greater_than;

        return $this;
    }

    /**
     * Gets status_less_than
     *
     * @return int
     */
    public function getStatusLessThan()
    {
        return $this->container['status_less_than'];
    }

    /**
     * Sets status_less_than
     *
     * @param int $status_less_than status_less_than
     *
     * @return $this
     */
    public function setStatusLessThan($status_less_than)
    {
        $this->container['status_less_than'] = $status_less_than;

        return $this;
    }

    /**
     * Gets status_less_than_or_equal_to
     *
     * @return int
     */
    public function getStatusLessThanOrEqualTo()
    {
        return $this->container['status_less_than_or_equal_to'];
    }

    /**
     * Sets status_less_than_or_equal_to
     *
     * @param int $status_less_than_or_equal_to status_less_than_or_equal_to
     *
     * @return $this
     */
    public function setStatusLessThanOrEqualTo($status_less_than_or_equal_to)
    {
        $this->container['status_less_than_or_equal_to'] = $status_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets status_not_equal_to
     *
     * @return int
     */
    public function getStatusNotEqualTo()
    {
        return $this->container['status_not_equal_to'];
    }

    /**
     * Sets status_not_equal_to
     *
     * @param int $status_not_equal_to status_not_equal_to
     *
     * @return $this
     */
    public function setStatusNotEqualTo($status_not_equal_to)
    {
        $this->container['status_not_equal_to'] = $status_not_equal_to;

        return $this;
    }

    /**
     * Gets status_between
     *
     * @return int[]
     */
    public function getStatusBetween()
    {
        return $this->container['status_between'];
    }

    /**
     * Sets status_between
     *
     * @param int[] $status_between status_between
     *
     * @return $this
     */
    public function setStatusBetween($status_between)
    {
        $this->container['status_between'] = $status_between;

        return $this;
    }

    /**
     * Gets status_in
     *
     * @return int[]
     */
    public function getStatusIn()
    {
        return $this->container['status_in'];
    }

    /**
     * Sets status_in
     *
     * @param int[] $status_in status_in
     *
     * @return $this
     */
    public function setStatusIn($status_in)
    {
        $this->container['status_in'] = $status_in;

        return $this;
    }

    /**
     * Gets transfer_by
     *
     * @return string
     */
    public function getTransferBy()
    {
        return $this->container['transfer_by'];
    }

    /**
     * Sets transfer_by
     *
     * @param string $transfer_by transfer_by
     *
     * @return $this
     */
    public function setTransferBy($transfer_by)
    {
        $this->container['transfer_by'] = $transfer_by;

        return $this;
    }

    /**
     * Gets transfer_by_starts_with
     *
     * @return string
     */
    public function getTransferByStartsWith()
    {
        return $this->container['transfer_by_starts_with'];
    }

    /**
     * Sets transfer_by_starts_with
     *
     * @param string $transfer_by_starts_with transfer_by_starts_with
     *
     * @return $this
     */
    public function setTransferByStartsWith($transfer_by_starts_with)
    {
        $this->container['transfer_by_starts_with'] = $transfer_by_starts_with;

        return $this;
    }

    /**
     * Gets transfer_by_ends_with
     *
     * @return string
     */
    public function getTransferByEndsWith()
    {
        return $this->container['transfer_by_ends_with'];
    }

    /**
     * Sets transfer_by_ends_with
     *
     * @param string $transfer_by_ends_with transfer_by_ends_with
     *
     * @return $this
     */
    public function setTransferByEndsWith($transfer_by_ends_with)
    {
        $this->container['transfer_by_ends_with'] = $transfer_by_ends_with;

        return $this;
    }

    /**
     * Gets transfer_by_contains
     *
     * @return string
     */
    public function getTransferByContains()
    {
        return $this->container['transfer_by_contains'];
    }

    /**
     * Sets transfer_by_contains
     *
     * @param string $transfer_by_contains transfer_by_contains
     *
     * @return $this
     */
    public function setTransferByContains($transfer_by_contains)
    {
        $this->container['transfer_by_contains'] = $transfer_by_contains;

        return $this;
    }

    /**
     * Gets transfer_by_like
     *
     * @return string
     */
    public function getTransferByLike()
    {
        return $this->container['transfer_by_like'];
    }

    /**
     * Sets transfer_by_like
     *
     * @param string $transfer_by_like transfer_by_like
     *
     * @return $this
     */
    public function setTransferByLike($transfer_by_like)
    {
        $this->container['transfer_by_like'] = $transfer_by_like;

        return $this;
    }

    /**
     * Gets transfer_by_between
     *
     * @return string[]
     */
    public function getTransferByBetween()
    {
        return $this->container['transfer_by_between'];
    }

    /**
     * Sets transfer_by_between
     *
     * @param string[] $transfer_by_between transfer_by_between
     *
     * @return $this
     */
    public function setTransferByBetween($transfer_by_between)
    {
        $this->container['transfer_by_between'] = $transfer_by_between;

        return $this;
    }

    /**
     * Gets transfer_by_in
     *
     * @return string[]
     */
    public function getTransferByIn()
    {
        return $this->container['transfer_by_in'];
    }

    /**
     * Sets transfer_by_in
     *
     * @param string[] $transfer_by_in transfer_by_in
     *
     * @return $this
     */
    public function setTransferByIn($transfer_by_in)
    {
        $this->container['transfer_by_in'] = $transfer_by_in;

        return $this;
    }

    /**
     * Gets ref
     *
     * @return string
     */
    public function getRef()
    {
        return $this->container['ref'];
    }

    /**
     * Sets ref
     *
     * @param string $ref ref
     *
     * @return $this
     */
    public function setRef($ref)
    {
        $this->container['ref'] = $ref;

        return $this;
    }

    /**
     * Gets ref_starts_with
     *
     * @return string
     */
    public function getRefStartsWith()
    {
        return $this->container['ref_starts_with'];
    }

    /**
     * Sets ref_starts_with
     *
     * @param string $ref_starts_with ref_starts_with
     *
     * @return $this
     */
    public function setRefStartsWith($ref_starts_with)
    {
        $this->container['ref_starts_with'] = $ref_starts_with;

        return $this;
    }

    /**
     * Gets ref_ends_with
     *
     * @return string
     */
    public function getRefEndsWith()
    {
        return $this->container['ref_ends_with'];
    }

    /**
     * Sets ref_ends_with
     *
     * @param string $ref_ends_with ref_ends_with
     *
     * @return $this
     */
    public function setRefEndsWith($ref_ends_with)
    {
        $this->container['ref_ends_with'] = $ref_ends_with;

        return $this;
    }

    /**
     * Gets ref_contains
     *
     * @return string
     */
    public function getRefContains()
    {
        return $this->container['ref_contains'];
    }

    /**
     * Sets ref_contains
     *
     * @param string $ref_contains ref_contains
     *
     * @return $this
     */
    public function setRefContains($ref_contains)
    {
        $this->container['ref_contains'] = $ref_contains;

        return $this;
    }

    /**
     * Gets ref_like
     *
     * @return string
     */
    public function getRefLike()
    {
        return $this->container['ref_like'];
    }

    /**
     * Sets ref_like
     *
     * @param string $ref_like ref_like
     *
     * @return $this
     */
    public function setRefLike($ref_like)
    {
        $this->container['ref_like'] = $ref_like;

        return $this;
    }

    /**
     * Gets ref_between
     *
     * @return string[]
     */
    public function getRefBetween()
    {
        return $this->container['ref_between'];
    }

    /**
     * Sets ref_between
     *
     * @param string[] $ref_between ref_between
     *
     * @return $this
     */
    public function setRefBetween($ref_between)
    {
        $this->container['ref_between'] = $ref_between;

        return $this;
    }

    /**
     * Gets ref_in
     *
     * @return string[]
     */
    public function getRefIn()
    {
        return $this->container['ref_in'];
    }

    /**
     * Sets ref_in
     *
     * @param string[] $ref_in ref_in
     *
     * @return $this
     */
    public function setRefIn($ref_in)
    {
        $this->container['ref_in'] = $ref_in;

        return $this;
    }

    /**
     * Gets notes
     *
     * @return string
     */
    public function getNotes()
    {
        return $this->container['notes'];
    }

    /**
     * Sets notes
     *
     * @param string $notes notes
     *
     * @return $this
     */
    public function setNotes($notes)
    {
        $this->container['notes'] = $notes;

        return $this;
    }

    /**
     * Gets notes_starts_with
     *
     * @return string
     */
    public function getNotesStartsWith()
    {
        return $this->container['notes_starts_with'];
    }

    /**
     * Sets notes_starts_with
     *
     * @param string $notes_starts_with notes_starts_with
     *
     * @return $this
     */
    public function setNotesStartsWith($notes_starts_with)
    {
        $this->container['notes_starts_with'] = $notes_starts_with;

        return $this;
    }

    /**
     * Gets notes_ends_with
     *
     * @return string
     */
    public function getNotesEndsWith()
    {
        return $this->container['notes_ends_with'];
    }

    /**
     * Sets notes_ends_with
     *
     * @param string $notes_ends_with notes_ends_with
     *
     * @return $this
     */
    public function setNotesEndsWith($notes_ends_with)
    {
        $this->container['notes_ends_with'] = $notes_ends_with;

        return $this;
    }

    /**
     * Gets notes_contains
     *
     * @return string
     */
    public function getNotesContains()
    {
        return $this->container['notes_contains'];
    }

    /**
     * Sets notes_contains
     *
     * @param string $notes_contains notes_contains
     *
     * @return $this
     */
    public function setNotesContains($notes_contains)
    {
        $this->container['notes_contains'] = $notes_contains;

        return $this;
    }

    /**
     * Gets notes_like
     *
     * @return string
     */
    public function getNotesLike()
    {
        return $this->container['notes_like'];
    }

    /**
     * Sets notes_like
     *
     * @param string $notes_like notes_like
     *
     * @return $this
     */
    public function setNotesLike($notes_like)
    {
        $this->container['notes_like'] = $notes_like;

        return $this;
    }

    /**
     * Gets notes_between
     *
     * @return string[]
     */
    public function getNotesBetween()
    {
        return $this->container['notes_between'];
    }

    /**
     * Sets notes_between
     *
     * @param string[] $notes_between notes_between
     *
     * @return $this
     */
    public function setNotesBetween($notes_between)
    {
        $this->container['notes_between'] = $notes_between;

        return $this;
    }

    /**
     * Gets notes_in
     *
     * @return string[]
     */
    public function getNotesIn()
    {
        return $this->container['notes_in'];
    }

    /**
     * Sets notes_in
     *
     * @param string[] $notes_in notes_in
     *
     * @return $this
     */
    public function setNotesIn($notes_in)
    {
        $this->container['notes_in'] = $notes_in;

        return $this;
    }

    /**
     * Gets source_type
     *
     * @return int
     */
    public function getSourceType()
    {
        return $this->container['source_type'];
    }

    /**
     * Sets source_type
     *
     * @param int $source_type source_type
     *
     * @return $this
     */
    public function setSourceType($source_type)
    {
        $this->container['source_type'] = $source_type;

        return $this;
    }

    /**
     * Gets source_type_greater_than_or_equal_to
     *
     * @return int
     */
    public function getSourceTypeGreaterThanOrEqualTo()
    {
        return $this->container['source_type_greater_than_or_equal_to'];
    }

    /**
     * Sets source_type_greater_than_or_equal_to
     *
     * @param int $source_type_greater_than_or_equal_to source_type_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setSourceTypeGreaterThanOrEqualTo($source_type_greater_than_or_equal_to)
    {
        $this->container['source_type_greater_than_or_equal_to'] = $source_type_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets source_type_greater_than
     *
     * @return int
     */
    public function getSourceTypeGreaterThan()
    {
        return $this->container['source_type_greater_than'];
    }

    /**
     * Sets source_type_greater_than
     *
     * @param int $source_type_greater_than source_type_greater_than
     *
     * @return $this
     */
    public function setSourceTypeGreaterThan($source_type_greater_than)
    {
        $this->container['source_type_greater_than'] = $source_type_greater_than;

        return $this;
    }

    /**
     * Gets source_type_less_than
     *
     * @return int
     */
    public function getSourceTypeLessThan()
    {
        return $this->container['source_type_less_than'];
    }

    /**
     * Sets source_type_less_than
     *
     * @param int $source_type_less_than source_type_less_than
     *
     * @return $this
     */
    public function setSourceTypeLessThan($source_type_less_than)
    {
        $this->container['source_type_less_than'] = $source_type_less_than;

        return $this;
    }

    /**
     * Gets source_type_less_than_or_equal_to
     *
     * @return int
     */
    public function getSourceTypeLessThanOrEqualTo()
    {
        return $this->container['source_type_less_than_or_equal_to'];
    }

    /**
     * Sets source_type_less_than_or_equal_to
     *
     * @param int $source_type_less_than_or_equal_to source_type_less_than_or_equal_to
     *
     * @return $this
     */
    public function setSourceTypeLessThanOrEqualTo($source_type_less_than_or_equal_to)
    {
        $this->container['source_type_less_than_or_equal_to'] = $source_type_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets source_type_not_equal_to
     *
     * @return int
     */
    public function getSourceTypeNotEqualTo()
    {
        return $this->container['source_type_not_equal_to'];
    }

    /**
     * Sets source_type_not_equal_to
     *
     * @param int $source_type_not_equal_to source_type_not_equal_to
     *
     * @return $this
     */
    public function setSourceTypeNotEqualTo($source_type_not_equal_to)
    {
        $this->container['source_type_not_equal_to'] = $source_type_not_equal_to;

        return $this;
    }

    /**
     * Gets source_type_between
     *
     * @return int[]
     */
    public function getSourceTypeBetween()
    {
        return $this->container['source_type_between'];
    }

    /**
     * Sets source_type_between
     *
     * @param int[] $source_type_between source_type_between
     *
     * @return $this
     */
    public function setSourceTypeBetween($source_type_between)
    {
        $this->container['source_type_between'] = $source_type_between;

        return $this;
    }

    /**
     * Gets source_type_in
     *
     * @return int[]
     */
    public function getSourceTypeIn()
    {
        return $this->container['source_type_in'];
    }

    /**
     * Sets source_type_in
     *
     * @param int[] $source_type_in source_type_in
     *
     * @return $this
     */
    public function setSourceTypeIn($source_type_in)
    {
        $this->container['source_type_in'] = $source_type_in;

        return $this;
    }

    /**
     * Gets source_id
     *
     * @return string
     */
    public function getSourceId()
    {
        return $this->container['source_id'];
    }

    /**
     * Sets source_id
     *
     * @param string $source_id source_id
     *
     * @return $this
     */
    public function setSourceId($source_id)
    {
        $this->container['source_id'] = $source_id;

        return $this;
    }

    /**
     * Gets source_id_starts_with
     *
     * @return string
     */
    public function getSourceIdStartsWith()
    {
        return $this->container['source_id_starts_with'];
    }

    /**
     * Sets source_id_starts_with
     *
     * @param string $source_id_starts_with source_id_starts_with
     *
     * @return $this
     */
    public function setSourceIdStartsWith($source_id_starts_with)
    {
        $this->container['source_id_starts_with'] = $source_id_starts_with;

        return $this;
    }

    /**
     * Gets source_id_ends_with
     *
     * @return string
     */
    public function getSourceIdEndsWith()
    {
        return $this->container['source_id_ends_with'];
    }

    /**
     * Sets source_id_ends_with
     *
     * @param string $source_id_ends_with source_id_ends_with
     *
     * @return $this
     */
    public function setSourceIdEndsWith($source_id_ends_with)
    {
        $this->container['source_id_ends_with'] = $source_id_ends_with;

        return $this;
    }

    /**
     * Gets source_id_contains
     *
     * @return string
     */
    public function getSourceIdContains()
    {
        return $this->container['source_id_contains'];
    }

    /**
     * Sets source_id_contains
     *
     * @param string $source_id_contains source_id_contains
     *
     * @return $this
     */
    public function setSourceIdContains($source_id_contains)
    {
        $this->container['source_id_contains'] = $source_id_contains;

        return $this;
    }

    /**
     * Gets source_id_like
     *
     * @return string
     */
    public function getSourceIdLike()
    {
        return $this->container['source_id_like'];
    }

    /**
     * Sets source_id_like
     *
     * @param string $source_id_like source_id_like
     *
     * @return $this
     */
    public function setSourceIdLike($source_id_like)
    {
        $this->container['source_id_like'] = $source_id_like;

        return $this;
    }

    /**
     * Gets source_id_between
     *
     * @return string[]
     */
    public function getSourceIdBetween()
    {
        return $this->container['source_id_between'];
    }

    /**
     * Sets source_id_between
     *
     * @param string[] $source_id_between source_id_between
     *
     * @return $this
     */
    public function setSourceIdBetween($source_id_between)
    {
        $this->container['source_id_between'] = $source_id_between;

        return $this;
    }

    /**
     * Gets source_id_in
     *
     * @return string[]
     */
    public function getSourceIdIn()
    {
        return $this->container['source_id_in'];
    }

    /**
     * Sets source_id_in
     *
     * @param string[] $source_id_in source_id_in
     *
     * @return $this
     */
    public function setSourceIdIn($source_id_in)
    {
        $this->container['source_id_in'] = $source_id_in;

        return $this;
    }

    /**
     * Gets src_in_logical_id
     *
     * @return string
     */
    public function getSrcInLogicalId()
    {
        return $this->container['src_in_logical_id'];
    }

    /**
     * Sets src_in_logical_id
     *
     * @param string $src_in_logical_id src_in_logical_id
     *
     * @return $this
     */
    public function setSrcInLogicalId($src_in_logical_id)
    {
        $this->container['src_in_logical_id'] = $src_in_logical_id;

        return $this;
    }

    /**
     * Gets src_in_logical_id_starts_with
     *
     * @return string
     */
    public function getSrcInLogicalIdStartsWith()
    {
        return $this->container['src_in_logical_id_starts_with'];
    }

    /**
     * Sets src_in_logical_id_starts_with
     *
     * @param string $src_in_logical_id_starts_with src_in_logical_id_starts_with
     *
     * @return $this
     */
    public function setSrcInLogicalIdStartsWith($src_in_logical_id_starts_with)
    {
        $this->container['src_in_logical_id_starts_with'] = $src_in_logical_id_starts_with;

        return $this;
    }

    /**
     * Gets src_in_logical_id_ends_with
     *
     * @return string
     */
    public function getSrcInLogicalIdEndsWith()
    {
        return $this->container['src_in_logical_id_ends_with'];
    }

    /**
     * Sets src_in_logical_id_ends_with
     *
     * @param string $src_in_logical_id_ends_with src_in_logical_id_ends_with
     *
     * @return $this
     */
    public function setSrcInLogicalIdEndsWith($src_in_logical_id_ends_with)
    {
        $this->container['src_in_logical_id_ends_with'] = $src_in_logical_id_ends_with;

        return $this;
    }

    /**
     * Gets src_in_logical_id_contains
     *
     * @return string
     */
    public function getSrcInLogicalIdContains()
    {
        return $this->container['src_in_logical_id_contains'];
    }

    /**
     * Sets src_in_logical_id_contains
     *
     * @param string $src_in_logical_id_contains src_in_logical_id_contains
     *
     * @return $this
     */
    public function setSrcInLogicalIdContains($src_in_logical_id_contains)
    {
        $this->container['src_in_logical_id_contains'] = $src_in_logical_id_contains;

        return $this;
    }

    /**
     * Gets src_in_logical_id_like
     *
     * @return string
     */
    public function getSrcInLogicalIdLike()
    {
        return $this->container['src_in_logical_id_like'];
    }

    /**
     * Sets src_in_logical_id_like
     *
     * @param string $src_in_logical_id_like src_in_logical_id_like
     *
     * @return $this
     */
    public function setSrcInLogicalIdLike($src_in_logical_id_like)
    {
        $this->container['src_in_logical_id_like'] = $src_in_logical_id_like;

        return $this;
    }

    /**
     * Gets src_in_logical_id_between
     *
     * @return string[]
     */
    public function getSrcInLogicalIdBetween()
    {
        return $this->container['src_in_logical_id_between'];
    }

    /**
     * Sets src_in_logical_id_between
     *
     * @param string[] $src_in_logical_id_between src_in_logical_id_between
     *
     * @return $this
     */
    public function setSrcInLogicalIdBetween($src_in_logical_id_between)
    {
        $this->container['src_in_logical_id_between'] = $src_in_logical_id_between;

        return $this;
    }

    /**
     * Gets src_in_logical_id_in
     *
     * @return string[]
     */
    public function getSrcInLogicalIdIn()
    {
        return $this->container['src_in_logical_id_in'];
    }

    /**
     * Sets src_in_logical_id_in
     *
     * @param string[] $src_in_logical_id_in src_in_logical_id_in
     *
     * @return $this
     */
    public function setSrcInLogicalIdIn($src_in_logical_id_in)
    {
        $this->container['src_in_logical_id_in'] = $src_in_logical_id_in;

        return $this;
    }

    /**
     * Gets dst_in_logical_id
     *
     * @return string
     */
    public function getDstInLogicalId()
    {
        return $this->container['dst_in_logical_id'];
    }

    /**
     * Sets dst_in_logical_id
     *
     * @param string $dst_in_logical_id dst_in_logical_id
     *
     * @return $this
     */
    public function setDstInLogicalId($dst_in_logical_id)
    {
        $this->container['dst_in_logical_id'] = $dst_in_logical_id;

        return $this;
    }

    /**
     * Gets dst_in_logical_id_starts_with
     *
     * @return string
     */
    public function getDstInLogicalIdStartsWith()
    {
        return $this->container['dst_in_logical_id_starts_with'];
    }

    /**
     * Sets dst_in_logical_id_starts_with
     *
     * @param string $dst_in_logical_id_starts_with dst_in_logical_id_starts_with
     *
     * @return $this
     */
    public function setDstInLogicalIdStartsWith($dst_in_logical_id_starts_with)
    {
        $this->container['dst_in_logical_id_starts_with'] = $dst_in_logical_id_starts_with;

        return $this;
    }

    /**
     * Gets dst_in_logical_id_ends_with
     *
     * @return string
     */
    public function getDstInLogicalIdEndsWith()
    {
        return $this->container['dst_in_logical_id_ends_with'];
    }

    /**
     * Sets dst_in_logical_id_ends_with
     *
     * @param string $dst_in_logical_id_ends_with dst_in_logical_id_ends_with
     *
     * @return $this
     */
    public function setDstInLogicalIdEndsWith($dst_in_logical_id_ends_with)
    {
        $this->container['dst_in_logical_id_ends_with'] = $dst_in_logical_id_ends_with;

        return $this;
    }

    /**
     * Gets dst_in_logical_id_contains
     *
     * @return string
     */
    public function getDstInLogicalIdContains()
    {
        return $this->container['dst_in_logical_id_contains'];
    }

    /**
     * Sets dst_in_logical_id_contains
     *
     * @param string $dst_in_logical_id_contains dst_in_logical_id_contains
     *
     * @return $this
     */
    public function setDstInLogicalIdContains($dst_in_logical_id_contains)
    {
        $this->container['dst_in_logical_id_contains'] = $dst_in_logical_id_contains;

        return $this;
    }

    /**
     * Gets dst_in_logical_id_like
     *
     * @return string
     */
    public function getDstInLogicalIdLike()
    {
        return $this->container['dst_in_logical_id_like'];
    }

    /**
     * Sets dst_in_logical_id_like
     *
     * @param string $dst_in_logical_id_like dst_in_logical_id_like
     *
     * @return $this
     */
    public function setDstInLogicalIdLike($dst_in_logical_id_like)
    {
        $this->container['dst_in_logical_id_like'] = $dst_in_logical_id_like;

        return $this;
    }

    /**
     * Gets dst_in_logical_id_between
     *
     * @return string[]
     */
    public function getDstInLogicalIdBetween()
    {
        return $this->container['dst_in_logical_id_between'];
    }

    /**
     * Sets dst_in_logical_id_between
     *
     * @param string[] $dst_in_logical_id_between dst_in_logical_id_between
     *
     * @return $this
     */
    public function setDstInLogicalIdBetween($dst_in_logical_id_between)
    {
        $this->container['dst_in_logical_id_between'] = $dst_in_logical_id_between;

        return $this;
    }

    /**
     * Gets dst_in_logical_id_in
     *
     * @return string[]
     */
    public function getDstInLogicalIdIn()
    {
        return $this->container['dst_in_logical_id_in'];
    }

    /**
     * Sets dst_in_logical_id_in
     *
     * @param string[] $dst_in_logical_id_in dst_in_logical_id_in
     *
     * @return $this
     */
    public function setDstInLogicalIdIn($dst_in_logical_id_in)
    {
        $this->container['dst_in_logical_id_in'] = $dst_in_logical_id_in;

        return $this;
    }

    /**
     * Gets transfer_no
     *
     * @return string
     */
    public function getTransferNo()
    {
        return $this->container['transfer_no'];
    }

    /**
     * Sets transfer_no
     *
     * @param string $transfer_no transfer_no
     *
     * @return $this
     */
    public function setTransferNo($transfer_no)
    {
        $this->container['transfer_no'] = $transfer_no;

        return $this;
    }

    /**
     * Gets transfer_no_starts_with
     *
     * @return string
     */
    public function getTransferNoStartsWith()
    {
        return $this->container['transfer_no_starts_with'];
    }

    /**
     * Sets transfer_no_starts_with
     *
     * @param string $transfer_no_starts_with transfer_no_starts_with
     *
     * @return $this
     */
    public function setTransferNoStartsWith($transfer_no_starts_with)
    {
        $this->container['transfer_no_starts_with'] = $transfer_no_starts_with;

        return $this;
    }

    /**
     * Gets transfer_no_ends_with
     *
     * @return string
     */
    public function getTransferNoEndsWith()
    {
        return $this->container['transfer_no_ends_with'];
    }

    /**
     * Sets transfer_no_ends_with
     *
     * @param string $transfer_no_ends_with transfer_no_ends_with
     *
     * @return $this
     */
    public function setTransferNoEndsWith($transfer_no_ends_with)
    {
        $this->container['transfer_no_ends_with'] = $transfer_no_ends_with;

        return $this;
    }

    /**
     * Gets transfer_no_contains
     *
     * @return string
     */
    public function getTransferNoContains()
    {
        return $this->container['transfer_no_contains'];
    }

    /**
     * Sets transfer_no_contains
     *
     * @param string $transfer_no_contains transfer_no_contains
     *
     * @return $this
     */
    public function setTransferNoContains($transfer_no_contains)
    {
        $this->container['transfer_no_contains'] = $transfer_no_contains;

        return $this;
    }

    /**
     * Gets transfer_no_like
     *
     * @return string
     */
    public function getTransferNoLike()
    {
        return $this->container['transfer_no_like'];
    }

    /**
     * Sets transfer_no_like
     *
     * @param string $transfer_no_like transfer_no_like
     *
     * @return $this
     */
    public function setTransferNoLike($transfer_no_like)
    {
        $this->container['transfer_no_like'] = $transfer_no_like;

        return $this;
    }

    /**
     * Gets transfer_no_between
     *
     * @return string[]
     */
    public function getTransferNoBetween()
    {
        return $this->container['transfer_no_between'];
    }

    /**
     * Sets transfer_no_between
     *
     * @param string[] $transfer_no_between transfer_no_between
     *
     * @return $this
     */
    public function setTransferNoBetween($transfer_no_between)
    {
        $this->container['transfer_no_between'] = $transfer_no_between;

        return $this;
    }

    /**
     * Gets transfer_no_in
     *
     * @return string[]
     */
    public function getTransferNoIn()
    {
        return $this->container['transfer_no_in'];
    }

    /**
     * Sets transfer_no_in
     *
     * @param string[] $transfer_no_in transfer_no_in
     *
     * @return $this
     */
    public function setTransferNoIn($transfer_no_in)
    {
        $this->container['transfer_no_in'] = $transfer_no_in;

        return $this;
    }

    /**
     * Gets in_transit
     *
     * @return bool
     */
    public function getInTransit()
    {
        return $this->container['in_transit'];
    }

    /**
     * Sets in_transit
     *
     * @param bool $in_transit in_transit
     *
     * @return $this
     */
    public function setInTransit($in_transit)
    {
        $this->container['in_transit'] = $in_transit;

        return $this;
    }

    /**
     * Gets transit_notes
     *
     * @return string
     */
    public function getTransitNotes()
    {
        return $this->container['transit_notes'];
    }

    /**
     * Sets transit_notes
     *
     * @param string $transit_notes transit_notes
     *
     * @return $this
     */
    public function setTransitNotes($transit_notes)
    {
        $this->container['transit_notes'] = $transit_notes;

        return $this;
    }

    /**
     * Gets transit_notes_starts_with
     *
     * @return string
     */
    public function getTransitNotesStartsWith()
    {
        return $this->container['transit_notes_starts_with'];
    }

    /**
     * Sets transit_notes_starts_with
     *
     * @param string $transit_notes_starts_with transit_notes_starts_with
     *
     * @return $this
     */
    public function setTransitNotesStartsWith($transit_notes_starts_with)
    {
        $this->container['transit_notes_starts_with'] = $transit_notes_starts_with;

        return $this;
    }

    /**
     * Gets transit_notes_ends_with
     *
     * @return string
     */
    public function getTransitNotesEndsWith()
    {
        return $this->container['transit_notes_ends_with'];
    }

    /**
     * Sets transit_notes_ends_with
     *
     * @param string $transit_notes_ends_with transit_notes_ends_with
     *
     * @return $this
     */
    public function setTransitNotesEndsWith($transit_notes_ends_with)
    {
        $this->container['transit_notes_ends_with'] = $transit_notes_ends_with;

        return $this;
    }

    /**
     * Gets transit_notes_contains
     *
     * @return string
     */
    public function getTransitNotesContains()
    {
        return $this->container['transit_notes_contains'];
    }

    /**
     * Sets transit_notes_contains
     *
     * @param string $transit_notes_contains transit_notes_contains
     *
     * @return $this
     */
    public function setTransitNotesContains($transit_notes_contains)
    {
        $this->container['transit_notes_contains'] = $transit_notes_contains;

        return $this;
    }

    /**
     * Gets transit_notes_like
     *
     * @return string
     */
    public function getTransitNotesLike()
    {
        return $this->container['transit_notes_like'];
    }

    /**
     * Sets transit_notes_like
     *
     * @param string $transit_notes_like transit_notes_like
     *
     * @return $this
     */
    public function setTransitNotesLike($transit_notes_like)
    {
        $this->container['transit_notes_like'] = $transit_notes_like;

        return $this;
    }

    /**
     * Gets transit_notes_between
     *
     * @return string[]
     */
    public function getTransitNotesBetween()
    {
        return $this->container['transit_notes_between'];
    }

    /**
     * Sets transit_notes_between
     *
     * @param string[] $transit_notes_between transit_notes_between
     *
     * @return $this
     */
    public function setTransitNotesBetween($transit_notes_between)
    {
        $this->container['transit_notes_between'] = $transit_notes_between;

        return $this;
    }

    /**
     * Gets transit_notes_in
     *
     * @return string[]
     */
    public function getTransitNotesIn()
    {
        return $this->container['transit_notes_in'];
    }

    /**
     * Sets transit_notes_in
     *
     * @param string[] $transit_notes_in transit_notes_in
     *
     * @return $this
     */
    public function setTransitNotesIn($transit_notes_in)
    {
        $this->container['transit_notes_in'] = $transit_notes_in;

        return $this;
    }

    /**
     * Gets in_transit_id
     *
     * @return string
     */
    public function getInTransitId()
    {
        return $this->container['in_transit_id'];
    }

    /**
     * Sets in_transit_id
     *
     * @param string $in_transit_id in_transit_id
     *
     * @return $this
     */
    public function setInTransitId($in_transit_id)
    {
        $this->container['in_transit_id'] = $in_transit_id;

        return $this;
    }

    /**
     * Gets in_transit_id_starts_with
     *
     * @return string
     */
    public function getInTransitIdStartsWith()
    {
        return $this->container['in_transit_id_starts_with'];
    }

    /**
     * Sets in_transit_id_starts_with
     *
     * @param string $in_transit_id_starts_with in_transit_id_starts_with
     *
     * @return $this
     */
    public function setInTransitIdStartsWith($in_transit_id_starts_with)
    {
        $this->container['in_transit_id_starts_with'] = $in_transit_id_starts_with;

        return $this;
    }

    /**
     * Gets in_transit_id_ends_with
     *
     * @return string
     */
    public function getInTransitIdEndsWith()
    {
        return $this->container['in_transit_id_ends_with'];
    }

    /**
     * Sets in_transit_id_ends_with
     *
     * @param string $in_transit_id_ends_with in_transit_id_ends_with
     *
     * @return $this
     */
    public function setInTransitIdEndsWith($in_transit_id_ends_with)
    {
        $this->container['in_transit_id_ends_with'] = $in_transit_id_ends_with;

        return $this;
    }

    /**
     * Gets in_transit_id_contains
     *
     * @return string
     */
    public function getInTransitIdContains()
    {
        return $this->container['in_transit_id_contains'];
    }

    /**
     * Sets in_transit_id_contains
     *
     * @param string $in_transit_id_contains in_transit_id_contains
     *
     * @return $this
     */
    public function setInTransitIdContains($in_transit_id_contains)
    {
        $this->container['in_transit_id_contains'] = $in_transit_id_contains;

        return $this;
    }

    /**
     * Gets in_transit_id_like
     *
     * @return string
     */
    public function getInTransitIdLike()
    {
        return $this->container['in_transit_id_like'];
    }

    /**
     * Sets in_transit_id_like
     *
     * @param string $in_transit_id_like in_transit_id_like
     *
     * @return $this
     */
    public function setInTransitIdLike($in_transit_id_like)
    {
        $this->container['in_transit_id_like'] = $in_transit_id_like;

        return $this;
    }

    /**
     * Gets in_transit_id_between
     *
     * @return string[]
     */
    public function getInTransitIdBetween()
    {
        return $this->container['in_transit_id_between'];
    }

    /**
     * Sets in_transit_id_between
     *
     * @param string[] $in_transit_id_between in_transit_id_between
     *
     * @return $this
     */
    public function setInTransitIdBetween($in_transit_id_between)
    {
        $this->container['in_transit_id_between'] = $in_transit_id_between;

        return $this;
    }

    /**
     * Gets in_transit_id_in
     *
     * @return string[]
     */
    public function getInTransitIdIn()
    {
        return $this->container['in_transit_id_in'];
    }

    /**
     * Sets in_transit_id_in
     *
     * @param string[] $in_transit_id_in in_transit_id_in
     *
     * @return $this
     */
    public function setInTransitIdIn($in_transit_id_in)
    {
        $this->container['in_transit_id_in'] = $in_transit_id_in;

        return $this;
    }

    /**
     * Gets added_cost1
     *
     * @return double
     */
    public function getAddedCost1()
    {
        return $this->container['added_cost1'];
    }

    /**
     * Sets added_cost1
     *
     * @param double $added_cost1 added_cost1
     *
     * @return $this
     */
    public function setAddedCost1($added_cost1)
    {
        $this->container['added_cost1'] = $added_cost1;

        return $this;
    }

    /**
     * Gets added_cost1_greater_than_or_equal_to
     *
     * @return double
     */
    public function getAddedCost1GreaterThanOrEqualTo()
    {
        return $this->container['added_cost1_greater_than_or_equal_to'];
    }

    /**
     * Sets added_cost1_greater_than_or_equal_to
     *
     * @param double $added_cost1_greater_than_or_equal_to added_cost1_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setAddedCost1GreaterThanOrEqualTo($added_cost1_greater_than_or_equal_to)
    {
        $this->container['added_cost1_greater_than_or_equal_to'] = $added_cost1_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets added_cost1_greater_than
     *
     * @return double
     */
    public function getAddedCost1GreaterThan()
    {
        return $this->container['added_cost1_greater_than'];
    }

    /**
     * Sets added_cost1_greater_than
     *
     * @param double $added_cost1_greater_than added_cost1_greater_than
     *
     * @return $this
     */
    public function setAddedCost1GreaterThan($added_cost1_greater_than)
    {
        $this->container['added_cost1_greater_than'] = $added_cost1_greater_than;

        return $this;
    }

    /**
     * Gets added_cost1_less_than
     *
     * @return double
     */
    public function getAddedCost1LessThan()
    {
        return $this->container['added_cost1_less_than'];
    }

    /**
     * Sets added_cost1_less_than
     *
     * @param double $added_cost1_less_than added_cost1_less_than
     *
     * @return $this
     */
    public function setAddedCost1LessThan($added_cost1_less_than)
    {
        $this->container['added_cost1_less_than'] = $added_cost1_less_than;

        return $this;
    }

    /**
     * Gets added_cost1_less_than_or_equal_to
     *
     * @return double
     */
    public function getAddedCost1LessThanOrEqualTo()
    {
        return $this->container['added_cost1_less_than_or_equal_to'];
    }

    /**
     * Sets added_cost1_less_than_or_equal_to
     *
     * @param double $added_cost1_less_than_or_equal_to added_cost1_less_than_or_equal_to
     *
     * @return $this
     */
    public function setAddedCost1LessThanOrEqualTo($added_cost1_less_than_or_equal_to)
    {
        $this->container['added_cost1_less_than_or_equal_to'] = $added_cost1_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets added_cost1_not_equal_to
     *
     * @return double
     */
    public function getAddedCost1NotEqualTo()
    {
        return $this->container['added_cost1_not_equal_to'];
    }

    /**
     * Sets added_cost1_not_equal_to
     *
     * @param double $added_cost1_not_equal_to added_cost1_not_equal_to
     *
     * @return $this
     */
    public function setAddedCost1NotEqualTo($added_cost1_not_equal_to)
    {
        $this->container['added_cost1_not_equal_to'] = $added_cost1_not_equal_to;

        return $this;
    }

    /**
     * Gets added_cost1_between
     *
     * @return double[]
     */
    public function getAddedCost1Between()
    {
        return $this->container['added_cost1_between'];
    }

    /**
     * Sets added_cost1_between
     *
     * @param double[] $added_cost1_between added_cost1_between
     *
     * @return $this
     */
    public function setAddedCost1Between($added_cost1_between)
    {
        $this->container['added_cost1_between'] = $added_cost1_between;

        return $this;
    }

    /**
     * Gets added_cost1_in
     *
     * @return double[]
     */
    public function getAddedCost1In()
    {
        return $this->container['added_cost1_in'];
    }

    /**
     * Sets added_cost1_in
     *
     * @param double[] $added_cost1_in added_cost1_in
     *
     * @return $this
     */
    public function setAddedCost1In($added_cost1_in)
    {
        $this->container['added_cost1_in'] = $added_cost1_in;

        return $this;
    }

    /**
     * Gets added_cost2
     *
     * @return double
     */
    public function getAddedCost2()
    {
        return $this->container['added_cost2'];
    }

    /**
     * Sets added_cost2
     *
     * @param double $added_cost2 added_cost2
     *
     * @return $this
     */
    public function setAddedCost2($added_cost2)
    {
        $this->container['added_cost2'] = $added_cost2;

        return $this;
    }

    /**
     * Gets added_cost2_greater_than_or_equal_to
     *
     * @return double
     */
    public function getAddedCost2GreaterThanOrEqualTo()
    {
        return $this->container['added_cost2_greater_than_or_equal_to'];
    }

    /**
     * Sets added_cost2_greater_than_or_equal_to
     *
     * @param double $added_cost2_greater_than_or_equal_to added_cost2_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setAddedCost2GreaterThanOrEqualTo($added_cost2_greater_than_or_equal_to)
    {
        $this->container['added_cost2_greater_than_or_equal_to'] = $added_cost2_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets added_cost2_greater_than
     *
     * @return double
     */
    public function getAddedCost2GreaterThan()
    {
        return $this->container['added_cost2_greater_than'];
    }

    /**
     * Sets added_cost2_greater_than
     *
     * @param double $added_cost2_greater_than added_cost2_greater_than
     *
     * @return $this
     */
    public function setAddedCost2GreaterThan($added_cost2_greater_than)
    {
        $this->container['added_cost2_greater_than'] = $added_cost2_greater_than;

        return $this;
    }

    /**
     * Gets added_cost2_less_than
     *
     * @return double
     */
    public function getAddedCost2LessThan()
    {
        return $this->container['added_cost2_less_than'];
    }

    /**
     * Sets added_cost2_less_than
     *
     * @param double $added_cost2_less_than added_cost2_less_than
     *
     * @return $this
     */
    public function setAddedCost2LessThan($added_cost2_less_than)
    {
        $this->container['added_cost2_less_than'] = $added_cost2_less_than;

        return $this;
    }

    /**
     * Gets added_cost2_less_than_or_equal_to
     *
     * @return double
     */
    public function getAddedCost2LessThanOrEqualTo()
    {
        return $this->container['added_cost2_less_than_or_equal_to'];
    }

    /**
     * Sets added_cost2_less_than_or_equal_to
     *
     * @param double $added_cost2_less_than_or_equal_to added_cost2_less_than_or_equal_to
     *
     * @return $this
     */
    public function setAddedCost2LessThanOrEqualTo($added_cost2_less_than_or_equal_to)
    {
        $this->container['added_cost2_less_than_or_equal_to'] = $added_cost2_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets added_cost2_not_equal_to
     *
     * @return double
     */
    public function getAddedCost2NotEqualTo()
    {
        return $this->container['added_cost2_not_equal_to'];
    }

    /**
     * Sets added_cost2_not_equal_to
     *
     * @param double $added_cost2_not_equal_to added_cost2_not_equal_to
     *
     * @return $this
     */
    public function setAddedCost2NotEqualTo($added_cost2_not_equal_to)
    {
        $this->container['added_cost2_not_equal_to'] = $added_cost2_not_equal_to;

        return $this;
    }

    /**
     * Gets added_cost2_between
     *
     * @return double[]
     */
    public function getAddedCost2Between()
    {
        return $this->container['added_cost2_between'];
    }

    /**
     * Sets added_cost2_between
     *
     * @param double[] $added_cost2_between added_cost2_between
     *
     * @return $this
     */
    public function setAddedCost2Between($added_cost2_between)
    {
        $this->container['added_cost2_between'] = $added_cost2_between;

        return $this;
    }

    /**
     * Gets added_cost2_in
     *
     * @return double[]
     */
    public function getAddedCost2In()
    {
        return $this->container['added_cost2_in'];
    }

    /**
     * Sets added_cost2_in
     *
     * @param double[] $added_cost2_in added_cost2_in
     *
     * @return $this
     */
    public function setAddedCost2In($added_cost2_in)
    {
        $this->container['added_cost2_in'] = $added_cost2_in;

        return $this;
    }

    /**
     * Gets added_cost3
     *
     * @return double
     */
    public function getAddedCost3()
    {
        return $this->container['added_cost3'];
    }

    /**
     * Sets added_cost3
     *
     * @param double $added_cost3 added_cost3
     *
     * @return $this
     */
    public function setAddedCost3($added_cost3)
    {
        $this->container['added_cost3'] = $added_cost3;

        return $this;
    }

    /**
     * Gets added_cost3_greater_than_or_equal_to
     *
     * @return double
     */
    public function getAddedCost3GreaterThanOrEqualTo()
    {
        return $this->container['added_cost3_greater_than_or_equal_to'];
    }

    /**
     * Sets added_cost3_greater_than_or_equal_to
     *
     * @param double $added_cost3_greater_than_or_equal_to added_cost3_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setAddedCost3GreaterThanOrEqualTo($added_cost3_greater_than_or_equal_to)
    {
        $this->container['added_cost3_greater_than_or_equal_to'] = $added_cost3_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets added_cost3_greater_than
     *
     * @return double
     */
    public function getAddedCost3GreaterThan()
    {
        return $this->container['added_cost3_greater_than'];
    }

    /**
     * Sets added_cost3_greater_than
     *
     * @param double $added_cost3_greater_than added_cost3_greater_than
     *
     * @return $this
     */
    public function setAddedCost3GreaterThan($added_cost3_greater_than)
    {
        $this->container['added_cost3_greater_than'] = $added_cost3_greater_than;

        return $this;
    }

    /**
     * Gets added_cost3_less_than
     *
     * @return double
     */
    public function getAddedCost3LessThan()
    {
        return $this->container['added_cost3_less_than'];
    }

    /**
     * Sets added_cost3_less_than
     *
     * @param double $added_cost3_less_than added_cost3_less_than
     *
     * @return $this
     */
    public function setAddedCost3LessThan($added_cost3_less_than)
    {
        $this->container['added_cost3_less_than'] = $added_cost3_less_than;

        return $this;
    }

    /**
     * Gets added_cost3_less_than_or_equal_to
     *
     * @return double
     */
    public function getAddedCost3LessThanOrEqualTo()
    {
        return $this->container['added_cost3_less_than_or_equal_to'];
    }

    /**
     * Sets added_cost3_less_than_or_equal_to
     *
     * @param double $added_cost3_less_than_or_equal_to added_cost3_less_than_or_equal_to
     *
     * @return $this
     */
    public function setAddedCost3LessThanOrEqualTo($added_cost3_less_than_or_equal_to)
    {
        $this->container['added_cost3_less_than_or_equal_to'] = $added_cost3_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets added_cost3_not_equal_to
     *
     * @return double
     */
    public function getAddedCost3NotEqualTo()
    {
        return $this->container['added_cost3_not_equal_to'];
    }

    /**
     * Sets added_cost3_not_equal_to
     *
     * @param double $added_cost3_not_equal_to added_cost3_not_equal_to
     *
     * @return $this
     */
    public function setAddedCost3NotEqualTo($added_cost3_not_equal_to)
    {
        $this->container['added_cost3_not_equal_to'] = $added_cost3_not_equal_to;

        return $this;
    }

    /**
     * Gets added_cost3_between
     *
     * @return double[]
     */
    public function getAddedCost3Between()
    {
        return $this->container['added_cost3_between'];
    }

    /**
     * Sets added_cost3_between
     *
     * @param double[] $added_cost3_between added_cost3_between
     *
     * @return $this
     */
    public function setAddedCost3Between($added_cost3_between)
    {
        $this->container['added_cost3_between'] = $added_cost3_between;

        return $this;
    }

    /**
     * Gets added_cost3_in
     *
     * @return double[]
     */
    public function getAddedCost3In()
    {
        return $this->container['added_cost3_in'];
    }

    /**
     * Sets added_cost3_in
     *
     * @param double[] $added_cost3_in added_cost3_in
     *
     * @return $this
     */
    public function setAddedCost3In($added_cost3_in)
    {
        $this->container['added_cost3_in'] = $added_cost3_in;

        return $this;
    }

    /**
     * Gets picked_by
     *
     * @return string
     */
    public function getPickedBy()
    {
        return $this->container['picked_by'];
    }

    /**
     * Sets picked_by
     *
     * @param string $picked_by picked_by
     *
     * @return $this
     */
    public function setPickedBy($picked_by)
    {
        $this->container['picked_by'] = $picked_by;

        return $this;
    }

    /**
     * Gets picked_by_starts_with
     *
     * @return string
     */
    public function getPickedByStartsWith()
    {
        return $this->container['picked_by_starts_with'];
    }

    /**
     * Sets picked_by_starts_with
     *
     * @param string $picked_by_starts_with picked_by_starts_with
     *
     * @return $this
     */
    public function setPickedByStartsWith($picked_by_starts_with)
    {
        $this->container['picked_by_starts_with'] = $picked_by_starts_with;

        return $this;
    }

    /**
     * Gets picked_by_ends_with
     *
     * @return string
     */
    public function getPickedByEndsWith()
    {
        return $this->container['picked_by_ends_with'];
    }

    /**
     * Sets picked_by_ends_with
     *
     * @param string $picked_by_ends_with picked_by_ends_with
     *
     * @return $this
     */
    public function setPickedByEndsWith($picked_by_ends_with)
    {
        $this->container['picked_by_ends_with'] = $picked_by_ends_with;

        return $this;
    }

    /**
     * Gets picked_by_contains
     *
     * @return string
     */
    public function getPickedByContains()
    {
        return $this->container['picked_by_contains'];
    }

    /**
     * Sets picked_by_contains
     *
     * @param string $picked_by_contains picked_by_contains
     *
     * @return $this
     */
    public function setPickedByContains($picked_by_contains)
    {
        $this->container['picked_by_contains'] = $picked_by_contains;

        return $this;
    }

    /**
     * Gets picked_by_like
     *
     * @return string
     */
    public function getPickedByLike()
    {
        return $this->container['picked_by_like'];
    }

    /**
     * Sets picked_by_like
     *
     * @param string $picked_by_like picked_by_like
     *
     * @return $this
     */
    public function setPickedByLike($picked_by_like)
    {
        $this->container['picked_by_like'] = $picked_by_like;

        return $this;
    }

    /**
     * Gets picked_by_between
     *
     * @return string[]
     */
    public function getPickedByBetween()
    {
        return $this->container['picked_by_between'];
    }

    /**
     * Sets picked_by_between
     *
     * @param string[] $picked_by_between picked_by_between
     *
     * @return $this
     */
    public function setPickedByBetween($picked_by_between)
    {
        $this->container['picked_by_between'] = $picked_by_between;

        return $this;
    }

    /**
     * Gets picked_by_in
     *
     * @return string[]
     */
    public function getPickedByIn()
    {
        return $this->container['picked_by_in'];
    }

    /**
     * Sets picked_by_in
     *
     * @param string[] $picked_by_in picked_by_in
     *
     * @return $this
     */
    public function setPickedByIn($picked_by_in)
    {
        $this->container['picked_by_in'] = $picked_by_in;

        return $this;
    }

    /**
     * Gets received_by
     *
     * @return string
     */
    public function getReceivedBy()
    {
        return $this->container['received_by'];
    }

    /**
     * Sets received_by
     *
     * @param string $received_by received_by
     *
     * @return $this
     */
    public function setReceivedBy($received_by)
    {
        $this->container['received_by'] = $received_by;

        return $this;
    }

    /**
     * Gets received_by_starts_with
     *
     * @return string
     */
    public function getReceivedByStartsWith()
    {
        return $this->container['received_by_starts_with'];
    }

    /**
     * Sets received_by_starts_with
     *
     * @param string $received_by_starts_with received_by_starts_with
     *
     * @return $this
     */
    public function setReceivedByStartsWith($received_by_starts_with)
    {
        $this->container['received_by_starts_with'] = $received_by_starts_with;

        return $this;
    }

    /**
     * Gets received_by_ends_with
     *
     * @return string
     */
    public function getReceivedByEndsWith()
    {
        return $this->container['received_by_ends_with'];
    }

    /**
     * Sets received_by_ends_with
     *
     * @param string $received_by_ends_with received_by_ends_with
     *
     * @return $this
     */
    public function setReceivedByEndsWith($received_by_ends_with)
    {
        $this->container['received_by_ends_with'] = $received_by_ends_with;

        return $this;
    }

    /**
     * Gets received_by_contains
     *
     * @return string
     */
    public function getReceivedByContains()
    {
        return $this->container['received_by_contains'];
    }

    /**
     * Sets received_by_contains
     *
     * @param string $received_by_contains received_by_contains
     *
     * @return $this
     */
    public function setReceivedByContains($received_by_contains)
    {
        $this->container['received_by_contains'] = $received_by_contains;

        return $this;
    }

    /**
     * Gets received_by_like
     *
     * @return string
     */
    public function getReceivedByLike()
    {
        return $this->container['received_by_like'];
    }

    /**
     * Sets received_by_like
     *
     * @param string $received_by_like received_by_like
     *
     * @return $this
     */
    public function setReceivedByLike($received_by_like)
    {
        $this->container['received_by_like'] = $received_by_like;

        return $this;
    }

    /**
     * Gets received_by_between
     *
     * @return string[]
     */
    public function getReceivedByBetween()
    {
        return $this->container['received_by_between'];
    }

    /**
     * Sets received_by_between
     *
     * @param string[] $received_by_between received_by_between
     *
     * @return $this
     */
    public function setReceivedByBetween($received_by_between)
    {
        $this->container['received_by_between'] = $received_by_between;

        return $this;
    }

    /**
     * Gets received_by_in
     *
     * @return string[]
     */
    public function getReceivedByIn()
    {
        return $this->container['received_by_in'];
    }

    /**
     * Sets received_by_in
     *
     * @param string[] $received_by_in received_by_in
     *
     * @return $this
     */
    public function setReceivedByIn($received_by_in)
    {
        $this->container['received_by_in'] = $received_by_in;

        return $this;
    }

    /**
     * Gets type
     *
     * @return int
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param int $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets type_greater_than_or_equal_to
     *
     * @return int
     */
    public function getTypeGreaterThanOrEqualTo()
    {
        return $this->container['type_greater_than_or_equal_to'];
    }

    /**
     * Sets type_greater_than_or_equal_to
     *
     * @param int $type_greater_than_or_equal_to type_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setTypeGreaterThanOrEqualTo($type_greater_than_or_equal_to)
    {
        $this->container['type_greater_than_or_equal_to'] = $type_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets type_greater_than
     *
     * @return int
     */
    public function getTypeGreaterThan()
    {
        return $this->container['type_greater_than'];
    }

    /**
     * Sets type_greater_than
     *
     * @param int $type_greater_than type_greater_than
     *
     * @return $this
     */
    public function setTypeGreaterThan($type_greater_than)
    {
        $this->container['type_greater_than'] = $type_greater_than;

        return $this;
    }

    /**
     * Gets type_less_than
     *
     * @return int
     */
    public function getTypeLessThan()
    {
        return $this->container['type_less_than'];
    }

    /**
     * Sets type_less_than
     *
     * @param int $type_less_than type_less_than
     *
     * @return $this
     */
    public function setTypeLessThan($type_less_than)
    {
        $this->container['type_less_than'] = $type_less_than;

        return $this;
    }

    /**
     * Gets type_less_than_or_equal_to
     *
     * @return int
     */
    public function getTypeLessThanOrEqualTo()
    {
        return $this->container['type_less_than_or_equal_to'];
    }

    /**
     * Sets type_less_than_or_equal_to
     *
     * @param int $type_less_than_or_equal_to type_less_than_or_equal_to
     *
     * @return $this
     */
    public function setTypeLessThanOrEqualTo($type_less_than_or_equal_to)
    {
        $this->container['type_less_than_or_equal_to'] = $type_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets type_not_equal_to
     *
     * @return int
     */
    public function getTypeNotEqualTo()
    {
        return $this->container['type_not_equal_to'];
    }

    /**
     * Sets type_not_equal_to
     *
     * @param int $type_not_equal_to type_not_equal_to
     *
     * @return $this
     */
    public function setTypeNotEqualTo($type_not_equal_to)
    {
        $this->container['type_not_equal_to'] = $type_not_equal_to;

        return $this;
    }

    /**
     * Gets type_between
     *
     * @return int[]
     */
    public function getTypeBetween()
    {
        return $this->container['type_between'];
    }

    /**
     * Sets type_between
     *
     * @param int[] $type_between type_between
     *
     * @return $this
     */
    public function setTypeBetween($type_between)
    {
        $this->container['type_between'] = $type_between;

        return $this;
    }

    /**
     * Gets type_in
     *
     * @return int[]
     */
    public function getTypeIn()
    {
        return $this->container['type_in'];
    }

    /**
     * Sets type_in
     *
     * @param int[] $type_in type_in
     *
     * @return $this
     */
    public function setTypeIn($type_in)
    {
        $this->container['type_in'] = $type_in;

        return $this;
    }

    /**
     * Gets add_cost_method
     *
     * @return string
     */
    public function getAddCostMethod()
    {
        return $this->container['add_cost_method'];
    }

    /**
     * Sets add_cost_method
     *
     * @param string $add_cost_method add_cost_method
     *
     * @return $this
     */
    public function setAddCostMethod($add_cost_method)
    {
        $this->container['add_cost_method'] = $add_cost_method;

        return $this;
    }

    /**
     * Gets add_cost_method_starts_with
     *
     * @return string
     */
    public function getAddCostMethodStartsWith()
    {
        return $this->container['add_cost_method_starts_with'];
    }

    /**
     * Sets add_cost_method_starts_with
     *
     * @param string $add_cost_method_starts_with add_cost_method_starts_with
     *
     * @return $this
     */
    public function setAddCostMethodStartsWith($add_cost_method_starts_with)
    {
        $this->container['add_cost_method_starts_with'] = $add_cost_method_starts_with;

        return $this;
    }

    /**
     * Gets add_cost_method_ends_with
     *
     * @return string
     */
    public function getAddCostMethodEndsWith()
    {
        return $this->container['add_cost_method_ends_with'];
    }

    /**
     * Sets add_cost_method_ends_with
     *
     * @param string $add_cost_method_ends_with add_cost_method_ends_with
     *
     * @return $this
     */
    public function setAddCostMethodEndsWith($add_cost_method_ends_with)
    {
        $this->container['add_cost_method_ends_with'] = $add_cost_method_ends_with;

        return $this;
    }

    /**
     * Gets add_cost_method_contains
     *
     * @return string
     */
    public function getAddCostMethodContains()
    {
        return $this->container['add_cost_method_contains'];
    }

    /**
     * Sets add_cost_method_contains
     *
     * @param string $add_cost_method_contains add_cost_method_contains
     *
     * @return $this
     */
    public function setAddCostMethodContains($add_cost_method_contains)
    {
        $this->container['add_cost_method_contains'] = $add_cost_method_contains;

        return $this;
    }

    /**
     * Gets add_cost_method_like
     *
     * @return string
     */
    public function getAddCostMethodLike()
    {
        return $this->container['add_cost_method_like'];
    }

    /**
     * Sets add_cost_method_like
     *
     * @param string $add_cost_method_like add_cost_method_like
     *
     * @return $this
     */
    public function setAddCostMethodLike($add_cost_method_like)
    {
        $this->container['add_cost_method_like'] = $add_cost_method_like;

        return $this;
    }

    /**
     * Gets add_cost_method_between
     *
     * @return string[]
     */
    public function getAddCostMethodBetween()
    {
        return $this->container['add_cost_method_between'];
    }

    /**
     * Sets add_cost_method_between
     *
     * @param string[] $add_cost_method_between add_cost_method_between
     *
     * @return $this
     */
    public function setAddCostMethodBetween($add_cost_method_between)
    {
        $this->container['add_cost_method_between'] = $add_cost_method_between;

        return $this;
    }

    /**
     * Gets add_cost_method_in
     *
     * @return string[]
     */
    public function getAddCostMethodIn()
    {
        return $this->container['add_cost_method_in'];
    }

    /**
     * Sets add_cost_method_in
     *
     * @param string[] $add_cost_method_in add_cost_method_in
     *
     * @return $this
     */
    public function setAddCostMethodIn($add_cost_method_in)
    {
        $this->container['add_cost_method_in'] = $add_cost_method_in;

        return $this;
    }

    /**
     * Gets skip
     *
     * @return int
     */
    public function getSkip()
    {
        return $this->container['skip'];
    }

    /**
     * Sets skip
     *
     * @param int $skip skip
     *
     * @return $this
     */
    public function setSkip($skip)
    {
        $this->container['skip'] = $skip;

        return $this;
    }

    /**
     * Gets take
     *
     * @return int
     */
    public function getTake()
    {
        return $this->container['take'];
    }

    /**
     * Sets take
     *
     * @param int $take take
     *
     * @return $this
     */
    public function setTake($take)
    {
        $this->container['take'] = $take;

        return $this;
    }

    /**
     * Gets order_by
     *
     * @return string
     */
    public function getOrderBy()
    {
        return $this->container['order_by'];
    }

    /**
     * Sets order_by
     *
     * @param string $order_by order_by
     *
     * @return $this
     */
    public function setOrderBy($order_by)
    {
        $this->container['order_by'] = $order_by;

        return $this;
    }

    /**
     * Gets order_by_desc
     *
     * @return string
     */
    public function getOrderByDesc()
    {
        return $this->container['order_by_desc'];
    }

    /**
     * Sets order_by_desc
     *
     * @param string $order_by_desc order_by_desc
     *
     * @return $this
     */
    public function setOrderByDesc($order_by_desc)
    {
        $this->container['order_by_desc'] = $order_by_desc;

        return $this;
    }

    /**
     * Gets include
     *
     * @return string
     */
    public function getInclude()
    {
        return $this->container['include'];
    }

    /**
     * Sets include
     *
     * @param string $include include
     *
     * @return $this
     */
    public function setInclude($include)
    {
        $this->container['include'] = $include;

        return $this;
    }

    /**
     * Gets fields
     *
     * @return string
     */
    public function getFields()
    {
        return $this->container['fields'];
    }

    /**
     * Sets fields
     *
     * @param string $fields fields
     *
     * @return $this
     */
    public function setFields($fields)
    {
        $this->container['fields'] = $fields;

        return $this;
    }

    /**
     * Gets meta
     *
     * @return \Jiwa\JiwaModel\DictionaryStringString_
     */
    public function getMeta()
    {
        return $this->container['meta'];
    }

    /**
     * Sets meta
     *
     * @param \Jiwa\JiwaModel\DictionaryStringString_ $meta meta
     *
     * @return $this
     */
    public function setMeta($meta)
    {
        $this->container['meta'] = $meta;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


