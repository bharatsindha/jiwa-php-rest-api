<?php
/**
 * INLogicalQuery
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\Model;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * INLogicalQuery Class Doc Comment
 *
 * @category Class
 * @description IN_LogicalQuery
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class INLogicalQuery implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'IN_LogicalQuery';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'in_logical_id' => 'string',
        'in_logical_id_starts_with' => 'string',
        'in_logical_id_ends_with' => 'string',
        'in_logical_id_contains' => 'string',
        'in_logical_id_like' => 'string',
        'in_logical_id_between' => 'string[]',
        'in_logical_id_in' => 'string[]',
        'in_physical_id' => 'string',
        'in_physical_id_starts_with' => 'string',
        'in_physical_id_ends_with' => 'string',
        'in_physical_id_contains' => 'string',
        'in_physical_id_like' => 'string',
        'in_physical_id_between' => 'string[]',
        'in_physical_id_in' => 'string[]',
        'last_saved_date_time' => '\DateTime',
        'last_saved_date_time_greater_than_or_equal_to' => '\DateTime',
        'last_saved_date_time_greater_than' => '\DateTime',
        'last_saved_date_time_less_than' => '\DateTime',
        'last_saved_date_time_less_than_or_equal_to' => '\DateTime',
        'last_saved_date_time_not_equal_to' => '\DateTime',
        'last_saved_date_time_between' => '\DateTime[]',
        'last_saved_date_time_in' => '\DateTime[]',
        'description' => 'string',
        'description_starts_with' => 'string',
        'description_ends_with' => 'string',
        'description_contains' => 'string',
        'description_like' => 'string',
        'description_between' => 'string[]',
        'description_in' => 'string[]',
        'ledger_mask' => 'string',
        'ledger_mask_starts_with' => 'string',
        'ledger_mask_ends_with' => 'string',
        'ledger_mask_contains' => 'string',
        'ledger_mask_like' => 'string',
        'ledger_mask_between' => 'string[]',
        'ledger_mask_in' => 'string[]',
        'warehouse_code' => 'string',
        'warehouse_code_starts_with' => 'string',
        'warehouse_code_ends_with' => 'string',
        'warehouse_code_contains' => 'string',
        'warehouse_code_like' => 'string',
        'warehouse_code_between' => 'string[]',
        'warehouse_code_in' => 'string[]',
        'in_transit' => 'bool',
        'default_in_transit' => 'bool',
        'in_region_rec_id' => 'string',
        'in_region_rec_id_starts_with' => 'string',
        'in_region_rec_id_ends_with' => 'string',
        'in_region_rec_id_contains' => 'string',
        'in_region_rec_id_like' => 'string',
        'in_region_rec_id_between' => 'string[]',
        'in_region_rec_id_in' => 'string[]',
        'item_no' => 'int',
        'item_no_greater_than_or_equal_to' => 'int',
        'item_no_greater_than' => 'int',
        'item_no_less_than' => 'int',
        'item_no_less_than_or_equal_to' => 'int',
        'item_no_not_equal_to' => 'int',
        'item_no_between' => 'int[]',
        'item_no_in' => 'int[]',
        'row_hash' => 'string',
        'colour' => 'int',
        'colour_greater_than_or_equal_to' => 'int',
        'colour_greater_than' => 'int',
        'colour_less_than' => 'int',
        'colour_less_than_or_equal_to' => 'int',
        'colour_not_equal_to' => 'int',
        'colour_between' => 'int[]',
        'colour_in' => 'int[]',
        'skip' => 'int',
        'take' => 'int',
        'order_by' => 'string',
        'order_by_desc' => 'string',
        'include' => 'string',
        'fields' => 'string',
        'meta' => '\Jiwa\Model\DictionaryStringString_'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'in_logical_id' => null,
        'in_logical_id_starts_with' => null,
        'in_logical_id_ends_with' => null,
        'in_logical_id_contains' => null,
        'in_logical_id_like' => null,
        'in_logical_id_between' => null,
        'in_logical_id_in' => null,
        'in_physical_id' => null,
        'in_physical_id_starts_with' => null,
        'in_physical_id_ends_with' => null,
        'in_physical_id_contains' => null,
        'in_physical_id_like' => null,
        'in_physical_id_between' => null,
        'in_physical_id_in' => null,
        'last_saved_date_time' => 'date-time',
        'last_saved_date_time_greater_than_or_equal_to' => 'date-time',
        'last_saved_date_time_greater_than' => 'date-time',
        'last_saved_date_time_less_than' => 'date-time',
        'last_saved_date_time_less_than_or_equal_to' => 'date-time',
        'last_saved_date_time_not_equal_to' => 'date-time',
        'last_saved_date_time_between' => 'date-time',
        'last_saved_date_time_in' => 'date-time',
        'description' => null,
        'description_starts_with' => null,
        'description_ends_with' => null,
        'description_contains' => null,
        'description_like' => null,
        'description_between' => null,
        'description_in' => null,
        'ledger_mask' => null,
        'ledger_mask_starts_with' => null,
        'ledger_mask_ends_with' => null,
        'ledger_mask_contains' => null,
        'ledger_mask_like' => null,
        'ledger_mask_between' => null,
        'ledger_mask_in' => null,
        'warehouse_code' => null,
        'warehouse_code_starts_with' => null,
        'warehouse_code_ends_with' => null,
        'warehouse_code_contains' => null,
        'warehouse_code_like' => null,
        'warehouse_code_between' => null,
        'warehouse_code_in' => null,
        'in_transit' => null,
        'default_in_transit' => null,
        'in_region_rec_id' => null,
        'in_region_rec_id_starts_with' => null,
        'in_region_rec_id_ends_with' => null,
        'in_region_rec_id_contains' => null,
        'in_region_rec_id_like' => null,
        'in_region_rec_id_between' => null,
        'in_region_rec_id_in' => null,
        'item_no' => 'int32',
        'item_no_greater_than_or_equal_to' => 'int32',
        'item_no_greater_than' => 'int32',
        'item_no_less_than' => 'int32',
        'item_no_less_than_or_equal_to' => 'int32',
        'item_no_not_equal_to' => 'int32',
        'item_no_between' => 'int32',
        'item_no_in' => 'int32',
        'row_hash' => 'byte',
        'colour' => 'int32',
        'colour_greater_than_or_equal_to' => 'int32',
        'colour_greater_than' => 'int32',
        'colour_less_than' => 'int32',
        'colour_less_than_or_equal_to' => 'int32',
        'colour_not_equal_to' => 'int32',
        'colour_between' => 'int32',
        'colour_in' => 'int32',
        'skip' => 'int32',
        'take' => 'int32',
        'order_by' => null,
        'order_by_desc' => null,
        'include' => null,
        'fields' => null,
        'meta' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'in_logical_id' => 'IN_LogicalID',
        'in_logical_id_starts_with' => 'IN_LogicalIDStartsWith',
        'in_logical_id_ends_with' => 'IN_LogicalIDEndsWith',
        'in_logical_id_contains' => 'IN_LogicalIDContains',
        'in_logical_id_like' => 'IN_LogicalIDLike',
        'in_logical_id_between' => 'IN_LogicalIDBetween',
        'in_logical_id_in' => 'IN_LogicalIDIn',
        'in_physical_id' => 'IN_PhysicalID',
        'in_physical_id_starts_with' => 'IN_PhysicalIDStartsWith',
        'in_physical_id_ends_with' => 'IN_PhysicalIDEndsWith',
        'in_physical_id_contains' => 'IN_PhysicalIDContains',
        'in_physical_id_like' => 'IN_PhysicalIDLike',
        'in_physical_id_between' => 'IN_PhysicalIDBetween',
        'in_physical_id_in' => 'IN_PhysicalIDIn',
        'last_saved_date_time' => 'LastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'LastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'LastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'LastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'LastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'LastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'LastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'LastSavedDateTimeIn',
        'description' => 'Description',
        'description_starts_with' => 'DescriptionStartsWith',
        'description_ends_with' => 'DescriptionEndsWith',
        'description_contains' => 'DescriptionContains',
        'description_like' => 'DescriptionLike',
        'description_between' => 'DescriptionBetween',
        'description_in' => 'DescriptionIn',
        'ledger_mask' => 'LedgerMask',
        'ledger_mask_starts_with' => 'LedgerMaskStartsWith',
        'ledger_mask_ends_with' => 'LedgerMaskEndsWith',
        'ledger_mask_contains' => 'LedgerMaskContains',
        'ledger_mask_like' => 'LedgerMaskLike',
        'ledger_mask_between' => 'LedgerMaskBetween',
        'ledger_mask_in' => 'LedgerMaskIn',
        'warehouse_code' => 'WarehouseCode',
        'warehouse_code_starts_with' => 'WarehouseCodeStartsWith',
        'warehouse_code_ends_with' => 'WarehouseCodeEndsWith',
        'warehouse_code_contains' => 'WarehouseCodeContains',
        'warehouse_code_like' => 'WarehouseCodeLike',
        'warehouse_code_between' => 'WarehouseCodeBetween',
        'warehouse_code_in' => 'WarehouseCodeIn',
        'in_transit' => 'InTransit',
        'default_in_transit' => 'DefaultInTransit',
        'in_region_rec_id' => 'IN_Region_RecID',
        'in_region_rec_id_starts_with' => 'IN_Region_RecIDStartsWith',
        'in_region_rec_id_ends_with' => 'IN_Region_RecIDEndsWith',
        'in_region_rec_id_contains' => 'IN_Region_RecIDContains',
        'in_region_rec_id_like' => 'IN_Region_RecIDLike',
        'in_region_rec_id_between' => 'IN_Region_RecIDBetween',
        'in_region_rec_id_in' => 'IN_Region_RecIDIn',
        'item_no' => 'ItemNo',
        'item_no_greater_than_or_equal_to' => 'ItemNoGreaterThanOrEqualTo',
        'item_no_greater_than' => 'ItemNoGreaterThan',
        'item_no_less_than' => 'ItemNoLessThan',
        'item_no_less_than_or_equal_to' => 'ItemNoLessThanOrEqualTo',
        'item_no_not_equal_to' => 'ItemNoNotEqualTo',
        'item_no_between' => 'ItemNoBetween',
        'item_no_in' => 'ItemNoIn',
        'row_hash' => 'RowHash',
        'colour' => 'Colour',
        'colour_greater_than_or_equal_to' => 'ColourGreaterThanOrEqualTo',
        'colour_greater_than' => 'ColourGreaterThan',
        'colour_less_than' => 'ColourLessThan',
        'colour_less_than_or_equal_to' => 'ColourLessThanOrEqualTo',
        'colour_not_equal_to' => 'ColourNotEqualTo',
        'colour_between' => 'ColourBetween',
        'colour_in' => 'ColourIn',
        'skip' => 'Skip',
        'take' => 'Take',
        'order_by' => 'OrderBy',
        'order_by_desc' => 'OrderByDesc',
        'include' => 'Include',
        'fields' => 'Fields',
        'meta' => 'Meta'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'in_logical_id' => 'setInLogicalId',
        'in_logical_id_starts_with' => 'setInLogicalIdStartsWith',
        'in_logical_id_ends_with' => 'setInLogicalIdEndsWith',
        'in_logical_id_contains' => 'setInLogicalIdContains',
        'in_logical_id_like' => 'setInLogicalIdLike',
        'in_logical_id_between' => 'setInLogicalIdBetween',
        'in_logical_id_in' => 'setInLogicalIdIn',
        'in_physical_id' => 'setInPhysicalId',
        'in_physical_id_starts_with' => 'setInPhysicalIdStartsWith',
        'in_physical_id_ends_with' => 'setInPhysicalIdEndsWith',
        'in_physical_id_contains' => 'setInPhysicalIdContains',
        'in_physical_id_like' => 'setInPhysicalIdLike',
        'in_physical_id_between' => 'setInPhysicalIdBetween',
        'in_physical_id_in' => 'setInPhysicalIdIn',
        'last_saved_date_time' => 'setLastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'setLastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'setLastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'setLastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'setLastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'setLastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'setLastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'setLastSavedDateTimeIn',
        'description' => 'setDescription',
        'description_starts_with' => 'setDescriptionStartsWith',
        'description_ends_with' => 'setDescriptionEndsWith',
        'description_contains' => 'setDescriptionContains',
        'description_like' => 'setDescriptionLike',
        'description_between' => 'setDescriptionBetween',
        'description_in' => 'setDescriptionIn',
        'ledger_mask' => 'setLedgerMask',
        'ledger_mask_starts_with' => 'setLedgerMaskStartsWith',
        'ledger_mask_ends_with' => 'setLedgerMaskEndsWith',
        'ledger_mask_contains' => 'setLedgerMaskContains',
        'ledger_mask_like' => 'setLedgerMaskLike',
        'ledger_mask_between' => 'setLedgerMaskBetween',
        'ledger_mask_in' => 'setLedgerMaskIn',
        'warehouse_code' => 'setWarehouseCode',
        'warehouse_code_starts_with' => 'setWarehouseCodeStartsWith',
        'warehouse_code_ends_with' => 'setWarehouseCodeEndsWith',
        'warehouse_code_contains' => 'setWarehouseCodeContains',
        'warehouse_code_like' => 'setWarehouseCodeLike',
        'warehouse_code_between' => 'setWarehouseCodeBetween',
        'warehouse_code_in' => 'setWarehouseCodeIn',
        'in_transit' => 'setInTransit',
        'default_in_transit' => 'setDefaultInTransit',
        'in_region_rec_id' => 'setInRegionRecId',
        'in_region_rec_id_starts_with' => 'setInRegionRecIdStartsWith',
        'in_region_rec_id_ends_with' => 'setInRegionRecIdEndsWith',
        'in_region_rec_id_contains' => 'setInRegionRecIdContains',
        'in_region_rec_id_like' => 'setInRegionRecIdLike',
        'in_region_rec_id_between' => 'setInRegionRecIdBetween',
        'in_region_rec_id_in' => 'setInRegionRecIdIn',
        'item_no' => 'setItemNo',
        'item_no_greater_than_or_equal_to' => 'setItemNoGreaterThanOrEqualTo',
        'item_no_greater_than' => 'setItemNoGreaterThan',
        'item_no_less_than' => 'setItemNoLessThan',
        'item_no_less_than_or_equal_to' => 'setItemNoLessThanOrEqualTo',
        'item_no_not_equal_to' => 'setItemNoNotEqualTo',
        'item_no_between' => 'setItemNoBetween',
        'item_no_in' => 'setItemNoIn',
        'row_hash' => 'setRowHash',
        'colour' => 'setColour',
        'colour_greater_than_or_equal_to' => 'setColourGreaterThanOrEqualTo',
        'colour_greater_than' => 'setColourGreaterThan',
        'colour_less_than' => 'setColourLessThan',
        'colour_less_than_or_equal_to' => 'setColourLessThanOrEqualTo',
        'colour_not_equal_to' => 'setColourNotEqualTo',
        'colour_between' => 'setColourBetween',
        'colour_in' => 'setColourIn',
        'skip' => 'setSkip',
        'take' => 'setTake',
        'order_by' => 'setOrderBy',
        'order_by_desc' => 'setOrderByDesc',
        'include' => 'setInclude',
        'fields' => 'setFields',
        'meta' => 'setMeta'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'in_logical_id' => 'getInLogicalId',
        'in_logical_id_starts_with' => 'getInLogicalIdStartsWith',
        'in_logical_id_ends_with' => 'getInLogicalIdEndsWith',
        'in_logical_id_contains' => 'getInLogicalIdContains',
        'in_logical_id_like' => 'getInLogicalIdLike',
        'in_logical_id_between' => 'getInLogicalIdBetween',
        'in_logical_id_in' => 'getInLogicalIdIn',
        'in_physical_id' => 'getInPhysicalId',
        'in_physical_id_starts_with' => 'getInPhysicalIdStartsWith',
        'in_physical_id_ends_with' => 'getInPhysicalIdEndsWith',
        'in_physical_id_contains' => 'getInPhysicalIdContains',
        'in_physical_id_like' => 'getInPhysicalIdLike',
        'in_physical_id_between' => 'getInPhysicalIdBetween',
        'in_physical_id_in' => 'getInPhysicalIdIn',
        'last_saved_date_time' => 'getLastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'getLastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'getLastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'getLastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'getLastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'getLastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'getLastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'getLastSavedDateTimeIn',
        'description' => 'getDescription',
        'description_starts_with' => 'getDescriptionStartsWith',
        'description_ends_with' => 'getDescriptionEndsWith',
        'description_contains' => 'getDescriptionContains',
        'description_like' => 'getDescriptionLike',
        'description_between' => 'getDescriptionBetween',
        'description_in' => 'getDescriptionIn',
        'ledger_mask' => 'getLedgerMask',
        'ledger_mask_starts_with' => 'getLedgerMaskStartsWith',
        'ledger_mask_ends_with' => 'getLedgerMaskEndsWith',
        'ledger_mask_contains' => 'getLedgerMaskContains',
        'ledger_mask_like' => 'getLedgerMaskLike',
        'ledger_mask_between' => 'getLedgerMaskBetween',
        'ledger_mask_in' => 'getLedgerMaskIn',
        'warehouse_code' => 'getWarehouseCode',
        'warehouse_code_starts_with' => 'getWarehouseCodeStartsWith',
        'warehouse_code_ends_with' => 'getWarehouseCodeEndsWith',
        'warehouse_code_contains' => 'getWarehouseCodeContains',
        'warehouse_code_like' => 'getWarehouseCodeLike',
        'warehouse_code_between' => 'getWarehouseCodeBetween',
        'warehouse_code_in' => 'getWarehouseCodeIn',
        'in_transit' => 'getInTransit',
        'default_in_transit' => 'getDefaultInTransit',
        'in_region_rec_id' => 'getInRegionRecId',
        'in_region_rec_id_starts_with' => 'getInRegionRecIdStartsWith',
        'in_region_rec_id_ends_with' => 'getInRegionRecIdEndsWith',
        'in_region_rec_id_contains' => 'getInRegionRecIdContains',
        'in_region_rec_id_like' => 'getInRegionRecIdLike',
        'in_region_rec_id_between' => 'getInRegionRecIdBetween',
        'in_region_rec_id_in' => 'getInRegionRecIdIn',
        'item_no' => 'getItemNo',
        'item_no_greater_than_or_equal_to' => 'getItemNoGreaterThanOrEqualTo',
        'item_no_greater_than' => 'getItemNoGreaterThan',
        'item_no_less_than' => 'getItemNoLessThan',
        'item_no_less_than_or_equal_to' => 'getItemNoLessThanOrEqualTo',
        'item_no_not_equal_to' => 'getItemNoNotEqualTo',
        'item_no_between' => 'getItemNoBetween',
        'item_no_in' => 'getItemNoIn',
        'row_hash' => 'getRowHash',
        'colour' => 'getColour',
        'colour_greater_than_or_equal_to' => 'getColourGreaterThanOrEqualTo',
        'colour_greater_than' => 'getColourGreaterThan',
        'colour_less_than' => 'getColourLessThan',
        'colour_less_than_or_equal_to' => 'getColourLessThanOrEqualTo',
        'colour_not_equal_to' => 'getColourNotEqualTo',
        'colour_between' => 'getColourBetween',
        'colour_in' => 'getColourIn',
        'skip' => 'getSkip',
        'take' => 'getTake',
        'order_by' => 'getOrderBy',
        'order_by_desc' => 'getOrderByDesc',
        'include' => 'getInclude',
        'fields' => 'getFields',
        'meta' => 'getMeta'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['in_logical_id'] = isset($data['in_logical_id']) ? $data['in_logical_id'] : null;
        $this->container['in_logical_id_starts_with'] = isset($data['in_logical_id_starts_with']) ? $data['in_logical_id_starts_with'] : null;
        $this->container['in_logical_id_ends_with'] = isset($data['in_logical_id_ends_with']) ? $data['in_logical_id_ends_with'] : null;
        $this->container['in_logical_id_contains'] = isset($data['in_logical_id_contains']) ? $data['in_logical_id_contains'] : null;
        $this->container['in_logical_id_like'] = isset($data['in_logical_id_like']) ? $data['in_logical_id_like'] : null;
        $this->container['in_logical_id_between'] = isset($data['in_logical_id_between']) ? $data['in_logical_id_between'] : null;
        $this->container['in_logical_id_in'] = isset($data['in_logical_id_in']) ? $data['in_logical_id_in'] : null;
        $this->container['in_physical_id'] = isset($data['in_physical_id']) ? $data['in_physical_id'] : null;
        $this->container['in_physical_id_starts_with'] = isset($data['in_physical_id_starts_with']) ? $data['in_physical_id_starts_with'] : null;
        $this->container['in_physical_id_ends_with'] = isset($data['in_physical_id_ends_with']) ? $data['in_physical_id_ends_with'] : null;
        $this->container['in_physical_id_contains'] = isset($data['in_physical_id_contains']) ? $data['in_physical_id_contains'] : null;
        $this->container['in_physical_id_like'] = isset($data['in_physical_id_like']) ? $data['in_physical_id_like'] : null;
        $this->container['in_physical_id_between'] = isset($data['in_physical_id_between']) ? $data['in_physical_id_between'] : null;
        $this->container['in_physical_id_in'] = isset($data['in_physical_id_in']) ? $data['in_physical_id_in'] : null;
        $this->container['last_saved_date_time'] = isset($data['last_saved_date_time']) ? $data['last_saved_date_time'] : null;
        $this->container['last_saved_date_time_greater_than_or_equal_to'] = isset($data['last_saved_date_time_greater_than_or_equal_to']) ? $data['last_saved_date_time_greater_than_or_equal_to'] : null;
        $this->container['last_saved_date_time_greater_than'] = isset($data['last_saved_date_time_greater_than']) ? $data['last_saved_date_time_greater_than'] : null;
        $this->container['last_saved_date_time_less_than'] = isset($data['last_saved_date_time_less_than']) ? $data['last_saved_date_time_less_than'] : null;
        $this->container['last_saved_date_time_less_than_or_equal_to'] = isset($data['last_saved_date_time_less_than_or_equal_to']) ? $data['last_saved_date_time_less_than_or_equal_to'] : null;
        $this->container['last_saved_date_time_not_equal_to'] = isset($data['last_saved_date_time_not_equal_to']) ? $data['last_saved_date_time_not_equal_to'] : null;
        $this->container['last_saved_date_time_between'] = isset($data['last_saved_date_time_between']) ? $data['last_saved_date_time_between'] : null;
        $this->container['last_saved_date_time_in'] = isset($data['last_saved_date_time_in']) ? $data['last_saved_date_time_in'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['description_starts_with'] = isset($data['description_starts_with']) ? $data['description_starts_with'] : null;
        $this->container['description_ends_with'] = isset($data['description_ends_with']) ? $data['description_ends_with'] : null;
        $this->container['description_contains'] = isset($data['description_contains']) ? $data['description_contains'] : null;
        $this->container['description_like'] = isset($data['description_like']) ? $data['description_like'] : null;
        $this->container['description_between'] = isset($data['description_between']) ? $data['description_between'] : null;
        $this->container['description_in'] = isset($data['description_in']) ? $data['description_in'] : null;
        $this->container['ledger_mask'] = isset($data['ledger_mask']) ? $data['ledger_mask'] : null;
        $this->container['ledger_mask_starts_with'] = isset($data['ledger_mask_starts_with']) ? $data['ledger_mask_starts_with'] : null;
        $this->container['ledger_mask_ends_with'] = isset($data['ledger_mask_ends_with']) ? $data['ledger_mask_ends_with'] : null;
        $this->container['ledger_mask_contains'] = isset($data['ledger_mask_contains']) ? $data['ledger_mask_contains'] : null;
        $this->container['ledger_mask_like'] = isset($data['ledger_mask_like']) ? $data['ledger_mask_like'] : null;
        $this->container['ledger_mask_between'] = isset($data['ledger_mask_between']) ? $data['ledger_mask_between'] : null;
        $this->container['ledger_mask_in'] = isset($data['ledger_mask_in']) ? $data['ledger_mask_in'] : null;
        $this->container['warehouse_code'] = isset($data['warehouse_code']) ? $data['warehouse_code'] : null;
        $this->container['warehouse_code_starts_with'] = isset($data['warehouse_code_starts_with']) ? $data['warehouse_code_starts_with'] : null;
        $this->container['warehouse_code_ends_with'] = isset($data['warehouse_code_ends_with']) ? $data['warehouse_code_ends_with'] : null;
        $this->container['warehouse_code_contains'] = isset($data['warehouse_code_contains']) ? $data['warehouse_code_contains'] : null;
        $this->container['warehouse_code_like'] = isset($data['warehouse_code_like']) ? $data['warehouse_code_like'] : null;
        $this->container['warehouse_code_between'] = isset($data['warehouse_code_between']) ? $data['warehouse_code_between'] : null;
        $this->container['warehouse_code_in'] = isset($data['warehouse_code_in']) ? $data['warehouse_code_in'] : null;
        $this->container['in_transit'] = isset($data['in_transit']) ? $data['in_transit'] : null;
        $this->container['default_in_transit'] = isset($data['default_in_transit']) ? $data['default_in_transit'] : null;
        $this->container['in_region_rec_id'] = isset($data['in_region_rec_id']) ? $data['in_region_rec_id'] : null;
        $this->container['in_region_rec_id_starts_with'] = isset($data['in_region_rec_id_starts_with']) ? $data['in_region_rec_id_starts_with'] : null;
        $this->container['in_region_rec_id_ends_with'] = isset($data['in_region_rec_id_ends_with']) ? $data['in_region_rec_id_ends_with'] : null;
        $this->container['in_region_rec_id_contains'] = isset($data['in_region_rec_id_contains']) ? $data['in_region_rec_id_contains'] : null;
        $this->container['in_region_rec_id_like'] = isset($data['in_region_rec_id_like']) ? $data['in_region_rec_id_like'] : null;
        $this->container['in_region_rec_id_between'] = isset($data['in_region_rec_id_between']) ? $data['in_region_rec_id_between'] : null;
        $this->container['in_region_rec_id_in'] = isset($data['in_region_rec_id_in']) ? $data['in_region_rec_id_in'] : null;
        $this->container['item_no'] = isset($data['item_no']) ? $data['item_no'] : null;
        $this->container['item_no_greater_than_or_equal_to'] = isset($data['item_no_greater_than_or_equal_to']) ? $data['item_no_greater_than_or_equal_to'] : null;
        $this->container['item_no_greater_than'] = isset($data['item_no_greater_than']) ? $data['item_no_greater_than'] : null;
        $this->container['item_no_less_than'] = isset($data['item_no_less_than']) ? $data['item_no_less_than'] : null;
        $this->container['item_no_less_than_or_equal_to'] = isset($data['item_no_less_than_or_equal_to']) ? $data['item_no_less_than_or_equal_to'] : null;
        $this->container['item_no_not_equal_to'] = isset($data['item_no_not_equal_to']) ? $data['item_no_not_equal_to'] : null;
        $this->container['item_no_between'] = isset($data['item_no_between']) ? $data['item_no_between'] : null;
        $this->container['item_no_in'] = isset($data['item_no_in']) ? $data['item_no_in'] : null;
        $this->container['row_hash'] = isset($data['row_hash']) ? $data['row_hash'] : null;
        $this->container['colour'] = isset($data['colour']) ? $data['colour'] : null;
        $this->container['colour_greater_than_or_equal_to'] = isset($data['colour_greater_than_or_equal_to']) ? $data['colour_greater_than_or_equal_to'] : null;
        $this->container['colour_greater_than'] = isset($data['colour_greater_than']) ? $data['colour_greater_than'] : null;
        $this->container['colour_less_than'] = isset($data['colour_less_than']) ? $data['colour_less_than'] : null;
        $this->container['colour_less_than_or_equal_to'] = isset($data['colour_less_than_or_equal_to']) ? $data['colour_less_than_or_equal_to'] : null;
        $this->container['colour_not_equal_to'] = isset($data['colour_not_equal_to']) ? $data['colour_not_equal_to'] : null;
        $this->container['colour_between'] = isset($data['colour_between']) ? $data['colour_between'] : null;
        $this->container['colour_in'] = isset($data['colour_in']) ? $data['colour_in'] : null;
        $this->container['skip'] = isset($data['skip']) ? $data['skip'] : null;
        $this->container['take'] = isset($data['take']) ? $data['take'] : null;
        $this->container['order_by'] = isset($data['order_by']) ? $data['order_by'] : null;
        $this->container['order_by_desc'] = isset($data['order_by_desc']) ? $data['order_by_desc'] : null;
        $this->container['include'] = isset($data['include']) ? $data['include'] : null;
        $this->container['fields'] = isset($data['fields']) ? $data['fields'] : null;
        $this->container['meta'] = isset($data['meta']) ? $data['meta'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['row_hash']) && !preg_match("/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/", $this->container['row_hash'])) {
            $invalidProperties[] = "invalid value for 'row_hash', must be conform to the pattern /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets in_logical_id
     *
     * @return string
     */
    public function getInLogicalId()
    {
        return $this->container['in_logical_id'];
    }

    /**
     * Sets in_logical_id
     *
     * @param string $in_logical_id in_logical_id
     *
     * @return $this
     */
    public function setInLogicalId($in_logical_id)
    {
        $this->container['in_logical_id'] = $in_logical_id;

        return $this;
    }

    /**
     * Gets in_logical_id_starts_with
     *
     * @return string
     */
    public function getInLogicalIdStartsWith()
    {
        return $this->container['in_logical_id_starts_with'];
    }

    /**
     * Sets in_logical_id_starts_with
     *
     * @param string $in_logical_id_starts_with in_logical_id_starts_with
     *
     * @return $this
     */
    public function setInLogicalIdStartsWith($in_logical_id_starts_with)
    {
        $this->container['in_logical_id_starts_with'] = $in_logical_id_starts_with;

        return $this;
    }

    /**
     * Gets in_logical_id_ends_with
     *
     * @return string
     */
    public function getInLogicalIdEndsWith()
    {
        return $this->container['in_logical_id_ends_with'];
    }

    /**
     * Sets in_logical_id_ends_with
     *
     * @param string $in_logical_id_ends_with in_logical_id_ends_with
     *
     * @return $this
     */
    public function setInLogicalIdEndsWith($in_logical_id_ends_with)
    {
        $this->container['in_logical_id_ends_with'] = $in_logical_id_ends_with;

        return $this;
    }

    /**
     * Gets in_logical_id_contains
     *
     * @return string
     */
    public function getInLogicalIdContains()
    {
        return $this->container['in_logical_id_contains'];
    }

    /**
     * Sets in_logical_id_contains
     *
     * @param string $in_logical_id_contains in_logical_id_contains
     *
     * @return $this
     */
    public function setInLogicalIdContains($in_logical_id_contains)
    {
        $this->container['in_logical_id_contains'] = $in_logical_id_contains;

        return $this;
    }

    /**
     * Gets in_logical_id_like
     *
     * @return string
     */
    public function getInLogicalIdLike()
    {
        return $this->container['in_logical_id_like'];
    }

    /**
     * Sets in_logical_id_like
     *
     * @param string $in_logical_id_like in_logical_id_like
     *
     * @return $this
     */
    public function setInLogicalIdLike($in_logical_id_like)
    {
        $this->container['in_logical_id_like'] = $in_logical_id_like;

        return $this;
    }

    /**
     * Gets in_logical_id_between
     *
     * @return string[]
     */
    public function getInLogicalIdBetween()
    {
        return $this->container['in_logical_id_between'];
    }

    /**
     * Sets in_logical_id_between
     *
     * @param string[] $in_logical_id_between in_logical_id_between
     *
     * @return $this
     */
    public function setInLogicalIdBetween($in_logical_id_between)
    {
        $this->container['in_logical_id_between'] = $in_logical_id_between;

        return $this;
    }

    /**
     * Gets in_logical_id_in
     *
     * @return string[]
     */
    public function getInLogicalIdIn()
    {
        return $this->container['in_logical_id_in'];
    }

    /**
     * Sets in_logical_id_in
     *
     * @param string[] $in_logical_id_in in_logical_id_in
     *
     * @return $this
     */
    public function setInLogicalIdIn($in_logical_id_in)
    {
        $this->container['in_logical_id_in'] = $in_logical_id_in;

        return $this;
    }

    /**
     * Gets in_physical_id
     *
     * @return string
     */
    public function getInPhysicalId()
    {
        return $this->container['in_physical_id'];
    }

    /**
     * Sets in_physical_id
     *
     * @param string $in_physical_id in_physical_id
     *
     * @return $this
     */
    public function setInPhysicalId($in_physical_id)
    {
        $this->container['in_physical_id'] = $in_physical_id;

        return $this;
    }

    /**
     * Gets in_physical_id_starts_with
     *
     * @return string
     */
    public function getInPhysicalIdStartsWith()
    {
        return $this->container['in_physical_id_starts_with'];
    }

    /**
     * Sets in_physical_id_starts_with
     *
     * @param string $in_physical_id_starts_with in_physical_id_starts_with
     *
     * @return $this
     */
    public function setInPhysicalIdStartsWith($in_physical_id_starts_with)
    {
        $this->container['in_physical_id_starts_with'] = $in_physical_id_starts_with;

        return $this;
    }

    /**
     * Gets in_physical_id_ends_with
     *
     * @return string
     */
    public function getInPhysicalIdEndsWith()
    {
        return $this->container['in_physical_id_ends_with'];
    }

    /**
     * Sets in_physical_id_ends_with
     *
     * @param string $in_physical_id_ends_with in_physical_id_ends_with
     *
     * @return $this
     */
    public function setInPhysicalIdEndsWith($in_physical_id_ends_with)
    {
        $this->container['in_physical_id_ends_with'] = $in_physical_id_ends_with;

        return $this;
    }

    /**
     * Gets in_physical_id_contains
     *
     * @return string
     */
    public function getInPhysicalIdContains()
    {
        return $this->container['in_physical_id_contains'];
    }

    /**
     * Sets in_physical_id_contains
     *
     * @param string $in_physical_id_contains in_physical_id_contains
     *
     * @return $this
     */
    public function setInPhysicalIdContains($in_physical_id_contains)
    {
        $this->container['in_physical_id_contains'] = $in_physical_id_contains;

        return $this;
    }

    /**
     * Gets in_physical_id_like
     *
     * @return string
     */
    public function getInPhysicalIdLike()
    {
        return $this->container['in_physical_id_like'];
    }

    /**
     * Sets in_physical_id_like
     *
     * @param string $in_physical_id_like in_physical_id_like
     *
     * @return $this
     */
    public function setInPhysicalIdLike($in_physical_id_like)
    {
        $this->container['in_physical_id_like'] = $in_physical_id_like;

        return $this;
    }

    /**
     * Gets in_physical_id_between
     *
     * @return string[]
     */
    public function getInPhysicalIdBetween()
    {
        return $this->container['in_physical_id_between'];
    }

    /**
     * Sets in_physical_id_between
     *
     * @param string[] $in_physical_id_between in_physical_id_between
     *
     * @return $this
     */
    public function setInPhysicalIdBetween($in_physical_id_between)
    {
        $this->container['in_physical_id_between'] = $in_physical_id_between;

        return $this;
    }

    /**
     * Gets in_physical_id_in
     *
     * @return string[]
     */
    public function getInPhysicalIdIn()
    {
        return $this->container['in_physical_id_in'];
    }

    /**
     * Sets in_physical_id_in
     *
     * @param string[] $in_physical_id_in in_physical_id_in
     *
     * @return $this
     */
    public function setInPhysicalIdIn($in_physical_id_in)
    {
        $this->container['in_physical_id_in'] = $in_physical_id_in;

        return $this;
    }

    /**
     * Gets last_saved_date_time
     *
     * @return \DateTime
     */
    public function getLastSavedDateTime()
    {
        return $this->container['last_saved_date_time'];
    }

    /**
     * Sets last_saved_date_time
     *
     * @param \DateTime $last_saved_date_time last_saved_date_time
     *
     * @return $this
     */
    public function setLastSavedDateTime($last_saved_date_time)
    {
        $this->container['last_saved_date_time'] = $last_saved_date_time;

        return $this;
    }

    /**
     * Gets last_saved_date_time_greater_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeGreaterThanOrEqualTo()
    {
        return $this->container['last_saved_date_time_greater_than_or_equal_to'];
    }

    /**
     * Sets last_saved_date_time_greater_than_or_equal_to
     *
     * @param \DateTime $last_saved_date_time_greater_than_or_equal_to last_saved_date_time_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeGreaterThanOrEqualTo($last_saved_date_time_greater_than_or_equal_to)
    {
        $this->container['last_saved_date_time_greater_than_or_equal_to'] = $last_saved_date_time_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_greater_than
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeGreaterThan()
    {
        return $this->container['last_saved_date_time_greater_than'];
    }

    /**
     * Sets last_saved_date_time_greater_than
     *
     * @param \DateTime $last_saved_date_time_greater_than last_saved_date_time_greater_than
     *
     * @return $this
     */
    public function setLastSavedDateTimeGreaterThan($last_saved_date_time_greater_than)
    {
        $this->container['last_saved_date_time_greater_than'] = $last_saved_date_time_greater_than;

        return $this;
    }

    /**
     * Gets last_saved_date_time_less_than
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeLessThan()
    {
        return $this->container['last_saved_date_time_less_than'];
    }

    /**
     * Sets last_saved_date_time_less_than
     *
     * @param \DateTime $last_saved_date_time_less_than last_saved_date_time_less_than
     *
     * @return $this
     */
    public function setLastSavedDateTimeLessThan($last_saved_date_time_less_than)
    {
        $this->container['last_saved_date_time_less_than'] = $last_saved_date_time_less_than;

        return $this;
    }

    /**
     * Gets last_saved_date_time_less_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeLessThanOrEqualTo()
    {
        return $this->container['last_saved_date_time_less_than_or_equal_to'];
    }

    /**
     * Sets last_saved_date_time_less_than_or_equal_to
     *
     * @param \DateTime $last_saved_date_time_less_than_or_equal_to last_saved_date_time_less_than_or_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeLessThanOrEqualTo($last_saved_date_time_less_than_or_equal_to)
    {
        $this->container['last_saved_date_time_less_than_or_equal_to'] = $last_saved_date_time_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_not_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeNotEqualTo()
    {
        return $this->container['last_saved_date_time_not_equal_to'];
    }

    /**
     * Sets last_saved_date_time_not_equal_to
     *
     * @param \DateTime $last_saved_date_time_not_equal_to last_saved_date_time_not_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeNotEqualTo($last_saved_date_time_not_equal_to)
    {
        $this->container['last_saved_date_time_not_equal_to'] = $last_saved_date_time_not_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_between
     *
     * @return \DateTime[]
     */
    public function getLastSavedDateTimeBetween()
    {
        return $this->container['last_saved_date_time_between'];
    }

    /**
     * Sets last_saved_date_time_between
     *
     * @param \DateTime[] $last_saved_date_time_between last_saved_date_time_between
     *
     * @return $this
     */
    public function setLastSavedDateTimeBetween($last_saved_date_time_between)
    {
        $this->container['last_saved_date_time_between'] = $last_saved_date_time_between;

        return $this;
    }

    /**
     * Gets last_saved_date_time_in
     *
     * @return \DateTime[]
     */
    public function getLastSavedDateTimeIn()
    {
        return $this->container['last_saved_date_time_in'];
    }

    /**
     * Sets last_saved_date_time_in
     *
     * @param \DateTime[] $last_saved_date_time_in last_saved_date_time_in
     *
     * @return $this
     */
    public function setLastSavedDateTimeIn($last_saved_date_time_in)
    {
        $this->container['last_saved_date_time_in'] = $last_saved_date_time_in;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets description_starts_with
     *
     * @return string
     */
    public function getDescriptionStartsWith()
    {
        return $this->container['description_starts_with'];
    }

    /**
     * Sets description_starts_with
     *
     * @param string $description_starts_with description_starts_with
     *
     * @return $this
     */
    public function setDescriptionStartsWith($description_starts_with)
    {
        $this->container['description_starts_with'] = $description_starts_with;

        return $this;
    }

    /**
     * Gets description_ends_with
     *
     * @return string
     */
    public function getDescriptionEndsWith()
    {
        return $this->container['description_ends_with'];
    }

    /**
     * Sets description_ends_with
     *
     * @param string $description_ends_with description_ends_with
     *
     * @return $this
     */
    public function setDescriptionEndsWith($description_ends_with)
    {
        $this->container['description_ends_with'] = $description_ends_with;

        return $this;
    }

    /**
     * Gets description_contains
     *
     * @return string
     */
    public function getDescriptionContains()
    {
        return $this->container['description_contains'];
    }

    /**
     * Sets description_contains
     *
     * @param string $description_contains description_contains
     *
     * @return $this
     */
    public function setDescriptionContains($description_contains)
    {
        $this->container['description_contains'] = $description_contains;

        return $this;
    }

    /**
     * Gets description_like
     *
     * @return string
     */
    public function getDescriptionLike()
    {
        return $this->container['description_like'];
    }

    /**
     * Sets description_like
     *
     * @param string $description_like description_like
     *
     * @return $this
     */
    public function setDescriptionLike($description_like)
    {
        $this->container['description_like'] = $description_like;

        return $this;
    }

    /**
     * Gets description_between
     *
     * @return string[]
     */
    public function getDescriptionBetween()
    {
        return $this->container['description_between'];
    }

    /**
     * Sets description_between
     *
     * @param string[] $description_between description_between
     *
     * @return $this
     */
    public function setDescriptionBetween($description_between)
    {
        $this->container['description_between'] = $description_between;

        return $this;
    }

    /**
     * Gets description_in
     *
     * @return string[]
     */
    public function getDescriptionIn()
    {
        return $this->container['description_in'];
    }

    /**
     * Sets description_in
     *
     * @param string[] $description_in description_in
     *
     * @return $this
     */
    public function setDescriptionIn($description_in)
    {
        $this->container['description_in'] = $description_in;

        return $this;
    }

    /**
     * Gets ledger_mask
     *
     * @return string
     */
    public function getLedgerMask()
    {
        return $this->container['ledger_mask'];
    }

    /**
     * Sets ledger_mask
     *
     * @param string $ledger_mask ledger_mask
     *
     * @return $this
     */
    public function setLedgerMask($ledger_mask)
    {
        $this->container['ledger_mask'] = $ledger_mask;

        return $this;
    }

    /**
     * Gets ledger_mask_starts_with
     *
     * @return string
     */
    public function getLedgerMaskStartsWith()
    {
        return $this->container['ledger_mask_starts_with'];
    }

    /**
     * Sets ledger_mask_starts_with
     *
     * @param string $ledger_mask_starts_with ledger_mask_starts_with
     *
     * @return $this
     */
    public function setLedgerMaskStartsWith($ledger_mask_starts_with)
    {
        $this->container['ledger_mask_starts_with'] = $ledger_mask_starts_with;

        return $this;
    }

    /**
     * Gets ledger_mask_ends_with
     *
     * @return string
     */
    public function getLedgerMaskEndsWith()
    {
        return $this->container['ledger_mask_ends_with'];
    }

    /**
     * Sets ledger_mask_ends_with
     *
     * @param string $ledger_mask_ends_with ledger_mask_ends_with
     *
     * @return $this
     */
    public function setLedgerMaskEndsWith($ledger_mask_ends_with)
    {
        $this->container['ledger_mask_ends_with'] = $ledger_mask_ends_with;

        return $this;
    }

    /**
     * Gets ledger_mask_contains
     *
     * @return string
     */
    public function getLedgerMaskContains()
    {
        return $this->container['ledger_mask_contains'];
    }

    /**
     * Sets ledger_mask_contains
     *
     * @param string $ledger_mask_contains ledger_mask_contains
     *
     * @return $this
     */
    public function setLedgerMaskContains($ledger_mask_contains)
    {
        $this->container['ledger_mask_contains'] = $ledger_mask_contains;

        return $this;
    }

    /**
     * Gets ledger_mask_like
     *
     * @return string
     */
    public function getLedgerMaskLike()
    {
        return $this->container['ledger_mask_like'];
    }

    /**
     * Sets ledger_mask_like
     *
     * @param string $ledger_mask_like ledger_mask_like
     *
     * @return $this
     */
    public function setLedgerMaskLike($ledger_mask_like)
    {
        $this->container['ledger_mask_like'] = $ledger_mask_like;

        return $this;
    }

    /**
     * Gets ledger_mask_between
     *
     * @return string[]
     */
    public function getLedgerMaskBetween()
    {
        return $this->container['ledger_mask_between'];
    }

    /**
     * Sets ledger_mask_between
     *
     * @param string[] $ledger_mask_between ledger_mask_between
     *
     * @return $this
     */
    public function setLedgerMaskBetween($ledger_mask_between)
    {
        $this->container['ledger_mask_between'] = $ledger_mask_between;

        return $this;
    }

    /**
     * Gets ledger_mask_in
     *
     * @return string[]
     */
    public function getLedgerMaskIn()
    {
        return $this->container['ledger_mask_in'];
    }

    /**
     * Sets ledger_mask_in
     *
     * @param string[] $ledger_mask_in ledger_mask_in
     *
     * @return $this
     */
    public function setLedgerMaskIn($ledger_mask_in)
    {
        $this->container['ledger_mask_in'] = $ledger_mask_in;

        return $this;
    }

    /**
     * Gets warehouse_code
     *
     * @return string
     */
    public function getWarehouseCode()
    {
        return $this->container['warehouse_code'];
    }

    /**
     * Sets warehouse_code
     *
     * @param string $warehouse_code warehouse_code
     *
     * @return $this
     */
    public function setWarehouseCode($warehouse_code)
    {
        $this->container['warehouse_code'] = $warehouse_code;

        return $this;
    }

    /**
     * Gets warehouse_code_starts_with
     *
     * @return string
     */
    public function getWarehouseCodeStartsWith()
    {
        return $this->container['warehouse_code_starts_with'];
    }

    /**
     * Sets warehouse_code_starts_with
     *
     * @param string $warehouse_code_starts_with warehouse_code_starts_with
     *
     * @return $this
     */
    public function setWarehouseCodeStartsWith($warehouse_code_starts_with)
    {
        $this->container['warehouse_code_starts_with'] = $warehouse_code_starts_with;

        return $this;
    }

    /**
     * Gets warehouse_code_ends_with
     *
     * @return string
     */
    public function getWarehouseCodeEndsWith()
    {
        return $this->container['warehouse_code_ends_with'];
    }

    /**
     * Sets warehouse_code_ends_with
     *
     * @param string $warehouse_code_ends_with warehouse_code_ends_with
     *
     * @return $this
     */
    public function setWarehouseCodeEndsWith($warehouse_code_ends_with)
    {
        $this->container['warehouse_code_ends_with'] = $warehouse_code_ends_with;

        return $this;
    }

    /**
     * Gets warehouse_code_contains
     *
     * @return string
     */
    public function getWarehouseCodeContains()
    {
        return $this->container['warehouse_code_contains'];
    }

    /**
     * Sets warehouse_code_contains
     *
     * @param string $warehouse_code_contains warehouse_code_contains
     *
     * @return $this
     */
    public function setWarehouseCodeContains($warehouse_code_contains)
    {
        $this->container['warehouse_code_contains'] = $warehouse_code_contains;

        return $this;
    }

    /**
     * Gets warehouse_code_like
     *
     * @return string
     */
    public function getWarehouseCodeLike()
    {
        return $this->container['warehouse_code_like'];
    }

    /**
     * Sets warehouse_code_like
     *
     * @param string $warehouse_code_like warehouse_code_like
     *
     * @return $this
     */
    public function setWarehouseCodeLike($warehouse_code_like)
    {
        $this->container['warehouse_code_like'] = $warehouse_code_like;

        return $this;
    }

    /**
     * Gets warehouse_code_between
     *
     * @return string[]
     */
    public function getWarehouseCodeBetween()
    {
        return $this->container['warehouse_code_between'];
    }

    /**
     * Sets warehouse_code_between
     *
     * @param string[] $warehouse_code_between warehouse_code_between
     *
     * @return $this
     */
    public function setWarehouseCodeBetween($warehouse_code_between)
    {
        $this->container['warehouse_code_between'] = $warehouse_code_between;

        return $this;
    }

    /**
     * Gets warehouse_code_in
     *
     * @return string[]
     */
    public function getWarehouseCodeIn()
    {
        return $this->container['warehouse_code_in'];
    }

    /**
     * Sets warehouse_code_in
     *
     * @param string[] $warehouse_code_in warehouse_code_in
     *
     * @return $this
     */
    public function setWarehouseCodeIn($warehouse_code_in)
    {
        $this->container['warehouse_code_in'] = $warehouse_code_in;

        return $this;
    }

    /**
     * Gets in_transit
     *
     * @return bool
     */
    public function getInTransit()
    {
        return $this->container['in_transit'];
    }

    /**
     * Sets in_transit
     *
     * @param bool $in_transit in_transit
     *
     * @return $this
     */
    public function setInTransit($in_transit)
    {
        $this->container['in_transit'] = $in_transit;

        return $this;
    }

    /**
     * Gets default_in_transit
     *
     * @return bool
     */
    public function getDefaultInTransit()
    {
        return $this->container['default_in_transit'];
    }

    /**
     * Sets default_in_transit
     *
     * @param bool $default_in_transit default_in_transit
     *
     * @return $this
     */
    public function setDefaultInTransit($default_in_transit)
    {
        $this->container['default_in_transit'] = $default_in_transit;

        return $this;
    }

    /**
     * Gets in_region_rec_id
     *
     * @return string
     */
    public function getInRegionRecId()
    {
        return $this->container['in_region_rec_id'];
    }

    /**
     * Sets in_region_rec_id
     *
     * @param string $in_region_rec_id in_region_rec_id
     *
     * @return $this
     */
    public function setInRegionRecId($in_region_rec_id)
    {
        $this->container['in_region_rec_id'] = $in_region_rec_id;

        return $this;
    }

    /**
     * Gets in_region_rec_id_starts_with
     *
     * @return string
     */
    public function getInRegionRecIdStartsWith()
    {
        return $this->container['in_region_rec_id_starts_with'];
    }

    /**
     * Sets in_region_rec_id_starts_with
     *
     * @param string $in_region_rec_id_starts_with in_region_rec_id_starts_with
     *
     * @return $this
     */
    public function setInRegionRecIdStartsWith($in_region_rec_id_starts_with)
    {
        $this->container['in_region_rec_id_starts_with'] = $in_region_rec_id_starts_with;

        return $this;
    }

    /**
     * Gets in_region_rec_id_ends_with
     *
     * @return string
     */
    public function getInRegionRecIdEndsWith()
    {
        return $this->container['in_region_rec_id_ends_with'];
    }

    /**
     * Sets in_region_rec_id_ends_with
     *
     * @param string $in_region_rec_id_ends_with in_region_rec_id_ends_with
     *
     * @return $this
     */
    public function setInRegionRecIdEndsWith($in_region_rec_id_ends_with)
    {
        $this->container['in_region_rec_id_ends_with'] = $in_region_rec_id_ends_with;

        return $this;
    }

    /**
     * Gets in_region_rec_id_contains
     *
     * @return string
     */
    public function getInRegionRecIdContains()
    {
        return $this->container['in_region_rec_id_contains'];
    }

    /**
     * Sets in_region_rec_id_contains
     *
     * @param string $in_region_rec_id_contains in_region_rec_id_contains
     *
     * @return $this
     */
    public function setInRegionRecIdContains($in_region_rec_id_contains)
    {
        $this->container['in_region_rec_id_contains'] = $in_region_rec_id_contains;

        return $this;
    }

    /**
     * Gets in_region_rec_id_like
     *
     * @return string
     */
    public function getInRegionRecIdLike()
    {
        return $this->container['in_region_rec_id_like'];
    }

    /**
     * Sets in_region_rec_id_like
     *
     * @param string $in_region_rec_id_like in_region_rec_id_like
     *
     * @return $this
     */
    public function setInRegionRecIdLike($in_region_rec_id_like)
    {
        $this->container['in_region_rec_id_like'] = $in_region_rec_id_like;

        return $this;
    }

    /**
     * Gets in_region_rec_id_between
     *
     * @return string[]
     */
    public function getInRegionRecIdBetween()
    {
        return $this->container['in_region_rec_id_between'];
    }

    /**
     * Sets in_region_rec_id_between
     *
     * @param string[] $in_region_rec_id_between in_region_rec_id_between
     *
     * @return $this
     */
    public function setInRegionRecIdBetween($in_region_rec_id_between)
    {
        $this->container['in_region_rec_id_between'] = $in_region_rec_id_between;

        return $this;
    }

    /**
     * Gets in_region_rec_id_in
     *
     * @return string[]
     */
    public function getInRegionRecIdIn()
    {
        return $this->container['in_region_rec_id_in'];
    }

    /**
     * Sets in_region_rec_id_in
     *
     * @param string[] $in_region_rec_id_in in_region_rec_id_in
     *
     * @return $this
     */
    public function setInRegionRecIdIn($in_region_rec_id_in)
    {
        $this->container['in_region_rec_id_in'] = $in_region_rec_id_in;

        return $this;
    }

    /**
     * Gets item_no
     *
     * @return int
     */
    public function getItemNo()
    {
        return $this->container['item_no'];
    }

    /**
     * Sets item_no
     *
     * @param int $item_no item_no
     *
     * @return $this
     */
    public function setItemNo($item_no)
    {
        $this->container['item_no'] = $item_no;

        return $this;
    }

    /**
     * Gets item_no_greater_than_or_equal_to
     *
     * @return int
     */
    public function getItemNoGreaterThanOrEqualTo()
    {
        return $this->container['item_no_greater_than_or_equal_to'];
    }

    /**
     * Sets item_no_greater_than_or_equal_to
     *
     * @param int $item_no_greater_than_or_equal_to item_no_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setItemNoGreaterThanOrEqualTo($item_no_greater_than_or_equal_to)
    {
        $this->container['item_no_greater_than_or_equal_to'] = $item_no_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets item_no_greater_than
     *
     * @return int
     */
    public function getItemNoGreaterThan()
    {
        return $this->container['item_no_greater_than'];
    }

    /**
     * Sets item_no_greater_than
     *
     * @param int $item_no_greater_than item_no_greater_than
     *
     * @return $this
     */
    public function setItemNoGreaterThan($item_no_greater_than)
    {
        $this->container['item_no_greater_than'] = $item_no_greater_than;

        return $this;
    }

    /**
     * Gets item_no_less_than
     *
     * @return int
     */
    public function getItemNoLessThan()
    {
        return $this->container['item_no_less_than'];
    }

    /**
     * Sets item_no_less_than
     *
     * @param int $item_no_less_than item_no_less_than
     *
     * @return $this
     */
    public function setItemNoLessThan($item_no_less_than)
    {
        $this->container['item_no_less_than'] = $item_no_less_than;

        return $this;
    }

    /**
     * Gets item_no_less_than_or_equal_to
     *
     * @return int
     */
    public function getItemNoLessThanOrEqualTo()
    {
        return $this->container['item_no_less_than_or_equal_to'];
    }

    /**
     * Sets item_no_less_than_or_equal_to
     *
     * @param int $item_no_less_than_or_equal_to item_no_less_than_or_equal_to
     *
     * @return $this
     */
    public function setItemNoLessThanOrEqualTo($item_no_less_than_or_equal_to)
    {
        $this->container['item_no_less_than_or_equal_to'] = $item_no_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets item_no_not_equal_to
     *
     * @return int
     */
    public function getItemNoNotEqualTo()
    {
        return $this->container['item_no_not_equal_to'];
    }

    /**
     * Sets item_no_not_equal_to
     *
     * @param int $item_no_not_equal_to item_no_not_equal_to
     *
     * @return $this
     */
    public function setItemNoNotEqualTo($item_no_not_equal_to)
    {
        $this->container['item_no_not_equal_to'] = $item_no_not_equal_to;

        return $this;
    }

    /**
     * Gets item_no_between
     *
     * @return int[]
     */
    public function getItemNoBetween()
    {
        return $this->container['item_no_between'];
    }

    /**
     * Sets item_no_between
     *
     * @param int[] $item_no_between item_no_between
     *
     * @return $this
     */
    public function setItemNoBetween($item_no_between)
    {
        $this->container['item_no_between'] = $item_no_between;

        return $this;
    }

    /**
     * Gets item_no_in
     *
     * @return int[]
     */
    public function getItemNoIn()
    {
        return $this->container['item_no_in'];
    }

    /**
     * Sets item_no_in
     *
     * @param int[] $item_no_in item_no_in
     *
     * @return $this
     */
    public function setItemNoIn($item_no_in)
    {
        $this->container['item_no_in'] = $item_no_in;

        return $this;
    }

    /**
     * Gets row_hash
     *
     * @return string
     */
    public function getRowHash()
    {
        return $this->container['row_hash'];
    }

    /**
     * Sets row_hash
     *
     * @param string $row_hash row_hash
     *
     * @return $this
     */
    public function setRowHash($row_hash)
    {

        if (!is_null($row_hash) && (!preg_match("/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/", $row_hash))) {
            throw new \InvalidArgumentException("invalid value for $row_hash when calling INLogicalQuery., must conform to the pattern /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.");
        }

        $this->container['row_hash'] = $row_hash;

        return $this;
    }

    /**
     * Gets colour
     *
     * @return int
     */
    public function getColour()
    {
        return $this->container['colour'];
    }

    /**
     * Sets colour
     *
     * @param int $colour colour
     *
     * @return $this
     */
    public function setColour($colour)
    {
        $this->container['colour'] = $colour;

        return $this;
    }

    /**
     * Gets colour_greater_than_or_equal_to
     *
     * @return int
     */
    public function getColourGreaterThanOrEqualTo()
    {
        return $this->container['colour_greater_than_or_equal_to'];
    }

    /**
     * Sets colour_greater_than_or_equal_to
     *
     * @param int $colour_greater_than_or_equal_to colour_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setColourGreaterThanOrEqualTo($colour_greater_than_or_equal_to)
    {
        $this->container['colour_greater_than_or_equal_to'] = $colour_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets colour_greater_than
     *
     * @return int
     */
    public function getColourGreaterThan()
    {
        return $this->container['colour_greater_than'];
    }

    /**
     * Sets colour_greater_than
     *
     * @param int $colour_greater_than colour_greater_than
     *
     * @return $this
     */
    public function setColourGreaterThan($colour_greater_than)
    {
        $this->container['colour_greater_than'] = $colour_greater_than;

        return $this;
    }

    /**
     * Gets colour_less_than
     *
     * @return int
     */
    public function getColourLessThan()
    {
        return $this->container['colour_less_than'];
    }

    /**
     * Sets colour_less_than
     *
     * @param int $colour_less_than colour_less_than
     *
     * @return $this
     */
    public function setColourLessThan($colour_less_than)
    {
        $this->container['colour_less_than'] = $colour_less_than;

        return $this;
    }

    /**
     * Gets colour_less_than_or_equal_to
     *
     * @return int
     */
    public function getColourLessThanOrEqualTo()
    {
        return $this->container['colour_less_than_or_equal_to'];
    }

    /**
     * Sets colour_less_than_or_equal_to
     *
     * @param int $colour_less_than_or_equal_to colour_less_than_or_equal_to
     *
     * @return $this
     */
    public function setColourLessThanOrEqualTo($colour_less_than_or_equal_to)
    {
        $this->container['colour_less_than_or_equal_to'] = $colour_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets colour_not_equal_to
     *
     * @return int
     */
    public function getColourNotEqualTo()
    {
        return $this->container['colour_not_equal_to'];
    }

    /**
     * Sets colour_not_equal_to
     *
     * @param int $colour_not_equal_to colour_not_equal_to
     *
     * @return $this
     */
    public function setColourNotEqualTo($colour_not_equal_to)
    {
        $this->container['colour_not_equal_to'] = $colour_not_equal_to;

        return $this;
    }

    /**
     * Gets colour_between
     *
     * @return int[]
     */
    public function getColourBetween()
    {
        return $this->container['colour_between'];
    }

    /**
     * Sets colour_between
     *
     * @param int[] $colour_between colour_between
     *
     * @return $this
     */
    public function setColourBetween($colour_between)
    {
        $this->container['colour_between'] = $colour_between;

        return $this;
    }

    /**
     * Gets colour_in
     *
     * @return int[]
     */
    public function getColourIn()
    {
        return $this->container['colour_in'];
    }

    /**
     * Sets colour_in
     *
     * @param int[] $colour_in colour_in
     *
     * @return $this
     */
    public function setColourIn($colour_in)
    {
        $this->container['colour_in'] = $colour_in;

        return $this;
    }

    /**
     * Gets skip
     *
     * @return int
     */
    public function getSkip()
    {
        return $this->container['skip'];
    }

    /**
     * Sets skip
     *
     * @param int $skip skip
     *
     * @return $this
     */
    public function setSkip($skip)
    {
        $this->container['skip'] = $skip;

        return $this;
    }

    /**
     * Gets take
     *
     * @return int
     */
    public function getTake()
    {
        return $this->container['take'];
    }

    /**
     * Sets take
     *
     * @param int $take take
     *
     * @return $this
     */
    public function setTake($take)
    {
        $this->container['take'] = $take;

        return $this;
    }

    /**
     * Gets order_by
     *
     * @return string
     */
    public function getOrderBy()
    {
        return $this->container['order_by'];
    }

    /**
     * Sets order_by
     *
     * @param string $order_by order_by
     *
     * @return $this
     */
    public function setOrderBy($order_by)
    {
        $this->container['order_by'] = $order_by;

        return $this;
    }

    /**
     * Gets order_by_desc
     *
     * @return string
     */
    public function getOrderByDesc()
    {
        return $this->container['order_by_desc'];
    }

    /**
     * Sets order_by_desc
     *
     * @param string $order_by_desc order_by_desc
     *
     * @return $this
     */
    public function setOrderByDesc($order_by_desc)
    {
        $this->container['order_by_desc'] = $order_by_desc;

        return $this;
    }

    /**
     * Gets include
     *
     * @return string
     */
    public function getInclude()
    {
        return $this->container['include'];
    }

    /**
     * Sets include
     *
     * @param string $include include
     *
     * @return $this
     */
    public function setInclude($include)
    {
        $this->container['include'] = $include;

        return $this;
    }

    /**
     * Gets fields
     *
     * @return string
     */
    public function getFields()
    {
        return $this->container['fields'];
    }

    /**
     * Sets fields
     *
     * @param string $fields fields
     *
     * @return $this
     */
    public function setFields($fields)
    {
        $this->container['fields'] = $fields;

        return $this;
    }

    /**
     * Gets meta
     *
     * @return \Jiwa\Model\DictionaryStringString_
     */
    public function getMeta()
    {
        return $this->container['meta'];
    }

    /**
     * Sets meta
     *
     * @param \Jiwa\Model\DictionaryStringString_ $meta meta
     *
     * @return $this
     */
    public function setMeta($meta)
    {
        $this->container['meta'] = $meta;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


