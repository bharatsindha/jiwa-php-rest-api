<?php
/**
 * Line
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\JiwaModel;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * Line Class Doc Comment
 *
 * @category Class
 * @description Line
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Line implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Line';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'rec_id' => 'string',
        'item_no' => 'int',
        'last_saved_date_time' => '\DateTime',
        'row_hash' => 'string',
        'inventory_id' => 'string',
        'part_no' => 'string',
        'description' => 'string',
        'decimal_places' => 'int',
        'quantity' => 'double',
        'remark' => 'string',
        'unit_credit_value' => 'double',
        'total_credit_value' => 'double',
        'tax_amount' => 'double',
        'fx_unit_credit_value' => 'double',
        'fx_total_credit_value' => 'double',
        'fx_rate' => 'double',
        'tax_rate_id' => 'string',
        'tax_rate_description' => 'string',
        'tax_rate' => 'double',
        'return_code' => '\Jiwa\JiwaModel\ReturnCode',
        'custom_field_values' => '\Jiwa\JiwaModel\CustomFieldValue[]',
        'line_details' => '\Jiwa\JiwaModel\InventorySOHLineDetail[]',
        'purchase_order_line_id' => 'string',
        'shipping_line_id' => 'string',
        'is_completed' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'rec_id' => null,
        'item_no' => 'int32',
        'last_saved_date_time' => 'date-time',
        'row_hash' => 'binary',
        'inventory_id' => null,
        'part_no' => null,
        'description' => null,
        'decimal_places' => 'int32',
        'quantity' => 'double',
        'remark' => null,
        'unit_credit_value' => 'double',
        'total_credit_value' => 'double',
        'tax_amount' => 'double',
        'fx_unit_credit_value' => 'double',
        'fx_total_credit_value' => 'double',
        'fx_rate' => 'double',
        'tax_rate_id' => null,
        'tax_rate_description' => null,
        'tax_rate' => 'double',
        'return_code' => null,
        'custom_field_values' => null,
        'line_details' => null,
        'purchase_order_line_id' => null,
        'shipping_line_id' => null,
        'is_completed' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'rec_id' => 'RecID',
        'item_no' => 'ItemNo',
        'last_saved_date_time' => 'LastSavedDateTime',
        'row_hash' => 'RowHash',
        'inventory_id' => 'InventoryID',
        'part_no' => 'PartNo',
        'description' => 'Description',
        'decimal_places' => 'DecimalPlaces',
        'quantity' => 'Quantity',
        'remark' => 'Remark',
        'unit_credit_value' => 'UnitCreditValue',
        'total_credit_value' => 'TotalCreditValue',
        'tax_amount' => 'TaxAmount',
        'fx_unit_credit_value' => 'FXUnitCreditValue',
        'fx_total_credit_value' => 'FXTotalCreditValue',
        'fx_rate' => 'FXRate',
        'tax_rate_id' => 'TaxRateID',
        'tax_rate_description' => 'TaxRateDescription',
        'tax_rate' => 'TaxRate',
        'return_code' => 'ReturnCode',
        'custom_field_values' => 'CustomFieldValues',
        'line_details' => 'LineDetails',
        'purchase_order_line_id' => 'PurchaseOrderLineID',
        'shipping_line_id' => 'ShippingLineID',
        'is_completed' => 'IsCompleted'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'rec_id' => 'setRecId',
        'item_no' => 'setItemNo',
        'last_saved_date_time' => 'setLastSavedDateTime',
        'row_hash' => 'setRowHash',
        'inventory_id' => 'setInventoryId',
        'part_no' => 'setPartNo',
        'description' => 'setDescription',
        'decimal_places' => 'setDecimalPlaces',
        'quantity' => 'setQuantity',
        'remark' => 'setRemark',
        'unit_credit_value' => 'setUnitCreditValue',
        'total_credit_value' => 'setTotalCreditValue',
        'tax_amount' => 'setTaxAmount',
        'fx_unit_credit_value' => 'setFxUnitCreditValue',
        'fx_total_credit_value' => 'setFxTotalCreditValue',
        'fx_rate' => 'setFxRate',
        'tax_rate_id' => 'setTaxRateId',
        'tax_rate_description' => 'setTaxRateDescription',
        'tax_rate' => 'setTaxRate',
        'return_code' => 'setReturnCode',
        'custom_field_values' => 'setCustomFieldValues',
        'line_details' => 'setLineDetails',
        'purchase_order_line_id' => 'setPurchaseOrderLineId',
        'shipping_line_id' => 'setShippingLineId',
        'is_completed' => 'setIsCompleted'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'rec_id' => 'getRecId',
        'item_no' => 'getItemNo',
        'last_saved_date_time' => 'getLastSavedDateTime',
        'row_hash' => 'getRowHash',
        'inventory_id' => 'getInventoryId',
        'part_no' => 'getPartNo',
        'description' => 'getDescription',
        'decimal_places' => 'getDecimalPlaces',
        'quantity' => 'getQuantity',
        'remark' => 'getRemark',
        'unit_credit_value' => 'getUnitCreditValue',
        'total_credit_value' => 'getTotalCreditValue',
        'tax_amount' => 'getTaxAmount',
        'fx_unit_credit_value' => 'getFxUnitCreditValue',
        'fx_total_credit_value' => 'getFxTotalCreditValue',
        'fx_rate' => 'getFxRate',
        'tax_rate_id' => 'getTaxRateId',
        'tax_rate_description' => 'getTaxRateDescription',
        'tax_rate' => 'getTaxRate',
        'return_code' => 'getReturnCode',
        'custom_field_values' => 'getCustomFieldValues',
        'line_details' => 'getLineDetails',
        'purchase_order_line_id' => 'getPurchaseOrderLineId',
        'shipping_line_id' => 'getShippingLineId',
        'is_completed' => 'getIsCompleted'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['rec_id'] = isset($data['rec_id']) ? $data['rec_id'] : null;
        $this->container['item_no'] = isset($data['item_no']) ? $data['item_no'] : null;
        $this->container['last_saved_date_time'] = isset($data['last_saved_date_time']) ? $data['last_saved_date_time'] : null;
        $this->container['row_hash'] = isset($data['row_hash']) ? $data['row_hash'] : null;
        $this->container['inventory_id'] = isset($data['inventory_id']) ? $data['inventory_id'] : null;
        $this->container['part_no'] = isset($data['part_no']) ? $data['part_no'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['decimal_places'] = isset($data['decimal_places']) ? $data['decimal_places'] : null;
        $this->container['quantity'] = isset($data['quantity']) ? $data['quantity'] : null;
        $this->container['remark'] = isset($data['remark']) ? $data['remark'] : null;
        $this->container['unit_credit_value'] = isset($data['unit_credit_value']) ? $data['unit_credit_value'] : null;
        $this->container['total_credit_value'] = isset($data['total_credit_value']) ? $data['total_credit_value'] : null;
        $this->container['tax_amount'] = isset($data['tax_amount']) ? $data['tax_amount'] : null;
        $this->container['fx_unit_credit_value'] = isset($data['fx_unit_credit_value']) ? $data['fx_unit_credit_value'] : null;
        $this->container['fx_total_credit_value'] = isset($data['fx_total_credit_value']) ? $data['fx_total_credit_value'] : null;
        $this->container['fx_rate'] = isset($data['fx_rate']) ? $data['fx_rate'] : null;
        $this->container['tax_rate_id'] = isset($data['tax_rate_id']) ? $data['tax_rate_id'] : null;
        $this->container['tax_rate_description'] = isset($data['tax_rate_description']) ? $data['tax_rate_description'] : null;
        $this->container['tax_rate'] = isset($data['tax_rate']) ? $data['tax_rate'] : null;
        $this->container['return_code'] = isset($data['return_code']) ? $data['return_code'] : null;
        $this->container['custom_field_values'] = isset($data['custom_field_values']) ? $data['custom_field_values'] : null;
        $this->container['line_details'] = isset($data['line_details']) ? $data['line_details'] : null;
        $this->container['purchase_order_line_id'] = isset($data['purchase_order_line_id']) ? $data['purchase_order_line_id'] : null;
        $this->container['shipping_line_id'] = isset($data['shipping_line_id']) ? $data['shipping_line_id'] : null;
        $this->container['is_completed'] = isset($data['is_completed']) ? $data['is_completed'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets rec_id
     *
     * @return string
     */
    public function getRecId()
    {
        return $this->container['rec_id'];
    }

    /**
     * Sets rec_id
     *
     * @param string $rec_id rec_id
     *
     * @return $this
     */
    public function setRecId($rec_id)
    {
        $this->container['rec_id'] = $rec_id;

        return $this;
    }

    /**
     * Gets item_no
     *
     * @return int
     */
    public function getItemNo()
    {
        return $this->container['item_no'];
    }

    /**
     * Sets item_no
     *
     * @param int $item_no item_no
     *
     * @return $this
     */
    public function setItemNo($item_no)
    {
        $this->container['item_no'] = $item_no;

        return $this;
    }

    /**
     * Gets last_saved_date_time
     *
     * @return \DateTime
     */
    public function getLastSavedDateTime()
    {
        return $this->container['last_saved_date_time'];
    }

    /**
     * Sets last_saved_date_time
     *
     * @param \DateTime $last_saved_date_time last_saved_date_time
     *
     * @return $this
     */
    public function setLastSavedDateTime($last_saved_date_time)
    {
        $this->container['last_saved_date_time'] = $last_saved_date_time;

        return $this;
    }

    /**
     * Gets row_hash
     *
     * @return string
     */
    public function getRowHash()
    {
        return $this->container['row_hash'];
    }

    /**
     * Sets row_hash
     *
     * @param string $row_hash row_hash
     *
     * @return $this
     */
    public function setRowHash($row_hash)
    {
        $this->container['row_hash'] = $row_hash;

        return $this;
    }

    /**
     * Gets inventory_id
     *
     * @return string
     */
    public function getInventoryId()
    {
        return $this->container['inventory_id'];
    }

    /**
     * Sets inventory_id
     *
     * @param string $inventory_id inventory_id
     *
     * @return $this
     */
    public function setInventoryId($inventory_id)
    {
        $this->container['inventory_id'] = $inventory_id;

        return $this;
    }

    /**
     * Gets part_no
     *
     * @return string
     */
    public function getPartNo()
    {
        return $this->container['part_no'];
    }

    /**
     * Sets part_no
     *
     * @param string $part_no part_no
     *
     * @return $this
     */
    public function setPartNo($part_no)
    {
        $this->container['part_no'] = $part_no;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets decimal_places
     *
     * @return int
     */
    public function getDecimalPlaces()
    {
        return $this->container['decimal_places'];
    }

    /**
     * Sets decimal_places
     *
     * @param int $decimal_places decimal_places
     *
     * @return $this
     */
    public function setDecimalPlaces($decimal_places)
    {
        $this->container['decimal_places'] = $decimal_places;

        return $this;
    }

    /**
     * Gets quantity
     *
     * @return double
     */
    public function getQuantity()
    {
        return $this->container['quantity'];
    }

    /**
     * Sets quantity
     *
     * @param double $quantity quantity
     *
     * @return $this
     */
    public function setQuantity($quantity)
    {
        $this->container['quantity'] = $quantity;

        return $this;
    }

    /**
     * Gets remark
     *
     * @return string
     */
    public function getRemark()
    {
        return $this->container['remark'];
    }

    /**
     * Sets remark
     *
     * @param string $remark remark
     *
     * @return $this
     */
    public function setRemark($remark)
    {
        $this->container['remark'] = $remark;

        return $this;
    }

    /**
     * Gets unit_credit_value
     *
     * @return double
     */
    public function getUnitCreditValue()
    {
        return $this->container['unit_credit_value'];
    }

    /**
     * Sets unit_credit_value
     *
     * @param double $unit_credit_value unit_credit_value
     *
     * @return $this
     */
    public function setUnitCreditValue($unit_credit_value)
    {
        $this->container['unit_credit_value'] = $unit_credit_value;

        return $this;
    }

    /**
     * Gets total_credit_value
     *
     * @return double
     */
    public function getTotalCreditValue()
    {
        return $this->container['total_credit_value'];
    }

    /**
     * Sets total_credit_value
     *
     * @param double $total_credit_value total_credit_value
     *
     * @return $this
     */
    public function setTotalCreditValue($total_credit_value)
    {
        $this->container['total_credit_value'] = $total_credit_value;

        return $this;
    }

    /**
     * Gets tax_amount
     *
     * @return double
     */
    public function getTaxAmount()
    {
        return $this->container['tax_amount'];
    }

    /**
     * Sets tax_amount
     *
     * @param double $tax_amount tax_amount
     *
     * @return $this
     */
    public function setTaxAmount($tax_amount)
    {
        $this->container['tax_amount'] = $tax_amount;

        return $this;
    }

    /**
     * Gets fx_unit_credit_value
     *
     * @return double
     */
    public function getFxUnitCreditValue()
    {
        return $this->container['fx_unit_credit_value'];
    }

    /**
     * Sets fx_unit_credit_value
     *
     * @param double $fx_unit_credit_value fx_unit_credit_value
     *
     * @return $this
     */
    public function setFxUnitCreditValue($fx_unit_credit_value)
    {
        $this->container['fx_unit_credit_value'] = $fx_unit_credit_value;

        return $this;
    }

    /**
     * Gets fx_total_credit_value
     *
     * @return double
     */
    public function getFxTotalCreditValue()
    {
        return $this->container['fx_total_credit_value'];
    }

    /**
     * Sets fx_total_credit_value
     *
     * @param double $fx_total_credit_value fx_total_credit_value
     *
     * @return $this
     */
    public function setFxTotalCreditValue($fx_total_credit_value)
    {
        $this->container['fx_total_credit_value'] = $fx_total_credit_value;

        return $this;
    }

    /**
     * Gets fx_rate
     *
     * @return double
     */
    public function getFxRate()
    {
        return $this->container['fx_rate'];
    }

    /**
     * Sets fx_rate
     *
     * @param double $fx_rate fx_rate
     *
     * @return $this
     */
    public function setFxRate($fx_rate)
    {
        $this->container['fx_rate'] = $fx_rate;

        return $this;
    }

    /**
     * Gets tax_rate_id
     *
     * @return string
     */
    public function getTaxRateId()
    {
        return $this->container['tax_rate_id'];
    }

    /**
     * Sets tax_rate_id
     *
     * @param string $tax_rate_id tax_rate_id
     *
     * @return $this
     */
    public function setTaxRateId($tax_rate_id)
    {
        $this->container['tax_rate_id'] = $tax_rate_id;

        return $this;
    }

    /**
     * Gets tax_rate_description
     *
     * @return string
     */
    public function getTaxRateDescription()
    {
        return $this->container['tax_rate_description'];
    }

    /**
     * Sets tax_rate_description
     *
     * @param string $tax_rate_description tax_rate_description
     *
     * @return $this
     */
    public function setTaxRateDescription($tax_rate_description)
    {
        $this->container['tax_rate_description'] = $tax_rate_description;

        return $this;
    }

    /**
     * Gets tax_rate
     *
     * @return double
     */
    public function getTaxRate()
    {
        return $this->container['tax_rate'];
    }

    /**
     * Sets tax_rate
     *
     * @param double $tax_rate tax_rate
     *
     * @return $this
     */
    public function setTaxRate($tax_rate)
    {
        $this->container['tax_rate'] = $tax_rate;

        return $this;
    }

    /**
     * Gets return_code
     *
     * @return \Jiwa\JiwaModel\ReturnCode
     */
    public function getReturnCode()
    {
        return $this->container['return_code'];
    }

    /**
     * Sets return_code
     *
     * @param \Jiwa\JiwaModel\ReturnCode $return_code return_code
     *
     * @return $this
     */
    public function setReturnCode($return_code)
    {
        $this->container['return_code'] = $return_code;

        return $this;
    }

    /**
     * Gets custom_field_values
     *
     * @return \Jiwa\JiwaModel\CustomFieldValue[]
     */
    public function getCustomFieldValues()
    {
        return $this->container['custom_field_values'];
    }

    /**
     * Sets custom_field_values
     *
     * @param \Jiwa\JiwaModel\CustomFieldValue[] $custom_field_values custom_field_values
     *
     * @return $this
     */
    public function setCustomFieldValues($custom_field_values)
    {
        $this->container['custom_field_values'] = $custom_field_values;

        return $this;
    }

    /**
     * Gets line_details
     *
     * @return \Jiwa\JiwaModel\InventorySOHLineDetail[]
     */
    public function getLineDetails()
    {
        return $this->container['line_details'];
    }

    /**
     * Sets line_details
     *
     * @param \Jiwa\JiwaModel\InventorySOHLineDetail[] $line_details line_details
     *
     * @return $this
     */
    public function setLineDetails($line_details)
    {
        $this->container['line_details'] = $line_details;

        return $this;
    }

    /**
     * Gets purchase_order_line_id
     *
     * @return string
     */
    public function getPurchaseOrderLineId()
    {
        return $this->container['purchase_order_line_id'];
    }

    /**
     * Sets purchase_order_line_id
     *
     * @param string $purchase_order_line_id purchase_order_line_id
     *
     * @return $this
     */
    public function setPurchaseOrderLineId($purchase_order_line_id)
    {
        $this->container['purchase_order_line_id'] = $purchase_order_line_id;

        return $this;
    }

    /**
     * Gets shipping_line_id
     *
     * @return string
     */
    public function getShippingLineId()
    {
        return $this->container['shipping_line_id'];
    }

    /**
     * Sets shipping_line_id
     *
     * @param string $shipping_line_id shipping_line_id
     *
     * @return $this
     */
    public function setShippingLineId($shipping_line_id)
    {
        $this->container['shipping_line_id'] = $shipping_line_id;

        return $this;
    }

    /**
     * Gets is_completed
     *
     * @return bool
     */
    public function getIsCompleted()
    {
        return $this->container['is_completed'];
    }

    /**
     * Sets is_completed
     *
     * @param bool $is_completed is_completed
     *
     * @return $this
     */
    public function setIsCompleted($is_completed)
    {
        $this->container['is_completed'] = $is_completed;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


