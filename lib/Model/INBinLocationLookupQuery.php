<?php
/**
 * INBinLocationLookupQuery
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\Model;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * INBinLocationLookupQuery Class Doc Comment
 *
 * @category Class
 * @description IN_BinLocationLookupQuery
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class INBinLocationLookupQuery implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'IN_BinLocationLookupQuery';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'in_bin_lookup_id' => 'string',
        'in_bin_lookup_id_starts_with' => 'string',
        'in_bin_lookup_id_ends_with' => 'string',
        'in_bin_lookup_id_contains' => 'string',
        'in_bin_lookup_id_like' => 'string',
        'in_bin_lookup_id_between' => 'string[]',
        'in_bin_lookup_id_in' => 'string[]',
        'last_saved_date_time' => '\DateTime',
        'last_saved_date_time_greater_than_or_equal_to' => '\DateTime',
        'last_saved_date_time_greater_than' => '\DateTime',
        'last_saved_date_time_less_than' => '\DateTime',
        'last_saved_date_time_less_than_or_equal_to' => '\DateTime',
        'last_saved_date_time_not_equal_to' => '\DateTime',
        'last_saved_date_time_between' => '\DateTime[]',
        'last_saved_date_time_in' => '\DateTime[]',
        'in_logical_id' => 'string',
        'in_logical_id_starts_with' => 'string',
        'in_logical_id_ends_with' => 'string',
        'in_logical_id_contains' => 'string',
        'in_logical_id_like' => 'string',
        'in_logical_id_between' => 'string[]',
        'in_logical_id_in' => 'string[]',
        'description' => 'string',
        'description_starts_with' => 'string',
        'description_ends_with' => 'string',
        'description_contains' => 'string',
        'description_like' => 'string',
        'description_between' => 'string[]',
        'description_in' => 'string[]',
        'short_name' => 'string',
        'short_name_starts_with' => 'string',
        'short_name_ends_with' => 'string',
        'short_name_contains' => 'string',
        'short_name_like' => 'string',
        'short_name_between' => 'string[]',
        'short_name_in' => 'string[]',
        'item_no' => 'int',
        'item_no_greater_than_or_equal_to' => 'int',
        'item_no_greater_than' => 'int',
        'item_no_less_than' => 'int',
        'item_no_less_than_or_equal_to' => 'int',
        'item_no_not_equal_to' => 'int',
        'item_no_between' => 'int[]',
        'item_no_in' => 'int[]',
        'is_default' => 'bool',
        'row_hash' => 'string',
        'skip' => 'int',
        'take' => 'int',
        'order_by' => 'string',
        'order_by_desc' => 'string',
        'include' => 'string',
        'fields' => 'string',
        'meta' => '\Jiwa\Model\DictionaryStringString_'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'in_bin_lookup_id' => null,
        'in_bin_lookup_id_starts_with' => null,
        'in_bin_lookup_id_ends_with' => null,
        'in_bin_lookup_id_contains' => null,
        'in_bin_lookup_id_like' => null,
        'in_bin_lookup_id_between' => null,
        'in_bin_lookup_id_in' => null,
        'last_saved_date_time' => 'date-time',
        'last_saved_date_time_greater_than_or_equal_to' => 'date-time',
        'last_saved_date_time_greater_than' => 'date-time',
        'last_saved_date_time_less_than' => 'date-time',
        'last_saved_date_time_less_than_or_equal_to' => 'date-time',
        'last_saved_date_time_not_equal_to' => 'date-time',
        'last_saved_date_time_between' => 'date-time',
        'last_saved_date_time_in' => 'date-time',
        'in_logical_id' => null,
        'in_logical_id_starts_with' => null,
        'in_logical_id_ends_with' => null,
        'in_logical_id_contains' => null,
        'in_logical_id_like' => null,
        'in_logical_id_between' => null,
        'in_logical_id_in' => null,
        'description' => null,
        'description_starts_with' => null,
        'description_ends_with' => null,
        'description_contains' => null,
        'description_like' => null,
        'description_between' => null,
        'description_in' => null,
        'short_name' => null,
        'short_name_starts_with' => null,
        'short_name_ends_with' => null,
        'short_name_contains' => null,
        'short_name_like' => null,
        'short_name_between' => null,
        'short_name_in' => null,
        'item_no' => 'int32',
        'item_no_greater_than_or_equal_to' => 'int32',
        'item_no_greater_than' => 'int32',
        'item_no_less_than' => 'int32',
        'item_no_less_than_or_equal_to' => 'int32',
        'item_no_not_equal_to' => 'int32',
        'item_no_between' => 'int32',
        'item_no_in' => 'int32',
        'is_default' => null,
        'row_hash' => 'byte',
        'skip' => 'int32',
        'take' => 'int32',
        'order_by' => null,
        'order_by_desc' => null,
        'include' => null,
        'fields' => null,
        'meta' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'in_bin_lookup_id' => 'INBinLookupID',
        'in_bin_lookup_id_starts_with' => 'INBinLookupIDStartsWith',
        'in_bin_lookup_id_ends_with' => 'INBinLookupIDEndsWith',
        'in_bin_lookup_id_contains' => 'INBinLookupIDContains',
        'in_bin_lookup_id_like' => 'INBinLookupIDLike',
        'in_bin_lookup_id_between' => 'INBinLookupIDBetween',
        'in_bin_lookup_id_in' => 'INBinLookupIDIn',
        'last_saved_date_time' => 'LastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'LastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'LastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'LastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'LastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'LastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'LastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'LastSavedDateTimeIn',
        'in_logical_id' => 'INLogicalID',
        'in_logical_id_starts_with' => 'INLogicalIDStartsWith',
        'in_logical_id_ends_with' => 'INLogicalIDEndsWith',
        'in_logical_id_contains' => 'INLogicalIDContains',
        'in_logical_id_like' => 'INLogicalIDLike',
        'in_logical_id_between' => 'INLogicalIDBetween',
        'in_logical_id_in' => 'INLogicalIDIn',
        'description' => 'Description',
        'description_starts_with' => 'DescriptionStartsWith',
        'description_ends_with' => 'DescriptionEndsWith',
        'description_contains' => 'DescriptionContains',
        'description_like' => 'DescriptionLike',
        'description_between' => 'DescriptionBetween',
        'description_in' => 'DescriptionIn',
        'short_name' => 'ShortName',
        'short_name_starts_with' => 'ShortNameStartsWith',
        'short_name_ends_with' => 'ShortNameEndsWith',
        'short_name_contains' => 'ShortNameContains',
        'short_name_like' => 'ShortNameLike',
        'short_name_between' => 'ShortNameBetween',
        'short_name_in' => 'ShortNameIn',
        'item_no' => 'ItemNo',
        'item_no_greater_than_or_equal_to' => 'ItemNoGreaterThanOrEqualTo',
        'item_no_greater_than' => 'ItemNoGreaterThan',
        'item_no_less_than' => 'ItemNoLessThan',
        'item_no_less_than_or_equal_to' => 'ItemNoLessThanOrEqualTo',
        'item_no_not_equal_to' => 'ItemNoNotEqualTo',
        'item_no_between' => 'ItemNoBetween',
        'item_no_in' => 'ItemNoIn',
        'is_default' => 'IsDefault',
        'row_hash' => 'RowHash',
        'skip' => 'Skip',
        'take' => 'Take',
        'order_by' => 'OrderBy',
        'order_by_desc' => 'OrderByDesc',
        'include' => 'Include',
        'fields' => 'Fields',
        'meta' => 'Meta'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'in_bin_lookup_id' => 'setInBinLookupId',
        'in_bin_lookup_id_starts_with' => 'setInBinLookupIdStartsWith',
        'in_bin_lookup_id_ends_with' => 'setInBinLookupIdEndsWith',
        'in_bin_lookup_id_contains' => 'setInBinLookupIdContains',
        'in_bin_lookup_id_like' => 'setInBinLookupIdLike',
        'in_bin_lookup_id_between' => 'setInBinLookupIdBetween',
        'in_bin_lookup_id_in' => 'setInBinLookupIdIn',
        'last_saved_date_time' => 'setLastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'setLastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'setLastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'setLastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'setLastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'setLastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'setLastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'setLastSavedDateTimeIn',
        'in_logical_id' => 'setInLogicalId',
        'in_logical_id_starts_with' => 'setInLogicalIdStartsWith',
        'in_logical_id_ends_with' => 'setInLogicalIdEndsWith',
        'in_logical_id_contains' => 'setInLogicalIdContains',
        'in_logical_id_like' => 'setInLogicalIdLike',
        'in_logical_id_between' => 'setInLogicalIdBetween',
        'in_logical_id_in' => 'setInLogicalIdIn',
        'description' => 'setDescription',
        'description_starts_with' => 'setDescriptionStartsWith',
        'description_ends_with' => 'setDescriptionEndsWith',
        'description_contains' => 'setDescriptionContains',
        'description_like' => 'setDescriptionLike',
        'description_between' => 'setDescriptionBetween',
        'description_in' => 'setDescriptionIn',
        'short_name' => 'setShortName',
        'short_name_starts_with' => 'setShortNameStartsWith',
        'short_name_ends_with' => 'setShortNameEndsWith',
        'short_name_contains' => 'setShortNameContains',
        'short_name_like' => 'setShortNameLike',
        'short_name_between' => 'setShortNameBetween',
        'short_name_in' => 'setShortNameIn',
        'item_no' => 'setItemNo',
        'item_no_greater_than_or_equal_to' => 'setItemNoGreaterThanOrEqualTo',
        'item_no_greater_than' => 'setItemNoGreaterThan',
        'item_no_less_than' => 'setItemNoLessThan',
        'item_no_less_than_or_equal_to' => 'setItemNoLessThanOrEqualTo',
        'item_no_not_equal_to' => 'setItemNoNotEqualTo',
        'item_no_between' => 'setItemNoBetween',
        'item_no_in' => 'setItemNoIn',
        'is_default' => 'setIsDefault',
        'row_hash' => 'setRowHash',
        'skip' => 'setSkip',
        'take' => 'setTake',
        'order_by' => 'setOrderBy',
        'order_by_desc' => 'setOrderByDesc',
        'include' => 'setInclude',
        'fields' => 'setFields',
        'meta' => 'setMeta'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'in_bin_lookup_id' => 'getInBinLookupId',
        'in_bin_lookup_id_starts_with' => 'getInBinLookupIdStartsWith',
        'in_bin_lookup_id_ends_with' => 'getInBinLookupIdEndsWith',
        'in_bin_lookup_id_contains' => 'getInBinLookupIdContains',
        'in_bin_lookup_id_like' => 'getInBinLookupIdLike',
        'in_bin_lookup_id_between' => 'getInBinLookupIdBetween',
        'in_bin_lookup_id_in' => 'getInBinLookupIdIn',
        'last_saved_date_time' => 'getLastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'getLastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'getLastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'getLastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'getLastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'getLastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'getLastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'getLastSavedDateTimeIn',
        'in_logical_id' => 'getInLogicalId',
        'in_logical_id_starts_with' => 'getInLogicalIdStartsWith',
        'in_logical_id_ends_with' => 'getInLogicalIdEndsWith',
        'in_logical_id_contains' => 'getInLogicalIdContains',
        'in_logical_id_like' => 'getInLogicalIdLike',
        'in_logical_id_between' => 'getInLogicalIdBetween',
        'in_logical_id_in' => 'getInLogicalIdIn',
        'description' => 'getDescription',
        'description_starts_with' => 'getDescriptionStartsWith',
        'description_ends_with' => 'getDescriptionEndsWith',
        'description_contains' => 'getDescriptionContains',
        'description_like' => 'getDescriptionLike',
        'description_between' => 'getDescriptionBetween',
        'description_in' => 'getDescriptionIn',
        'short_name' => 'getShortName',
        'short_name_starts_with' => 'getShortNameStartsWith',
        'short_name_ends_with' => 'getShortNameEndsWith',
        'short_name_contains' => 'getShortNameContains',
        'short_name_like' => 'getShortNameLike',
        'short_name_between' => 'getShortNameBetween',
        'short_name_in' => 'getShortNameIn',
        'item_no' => 'getItemNo',
        'item_no_greater_than_or_equal_to' => 'getItemNoGreaterThanOrEqualTo',
        'item_no_greater_than' => 'getItemNoGreaterThan',
        'item_no_less_than' => 'getItemNoLessThan',
        'item_no_less_than_or_equal_to' => 'getItemNoLessThanOrEqualTo',
        'item_no_not_equal_to' => 'getItemNoNotEqualTo',
        'item_no_between' => 'getItemNoBetween',
        'item_no_in' => 'getItemNoIn',
        'is_default' => 'getIsDefault',
        'row_hash' => 'getRowHash',
        'skip' => 'getSkip',
        'take' => 'getTake',
        'order_by' => 'getOrderBy',
        'order_by_desc' => 'getOrderByDesc',
        'include' => 'getInclude',
        'fields' => 'getFields',
        'meta' => 'getMeta'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['in_bin_lookup_id'] = isset($data['in_bin_lookup_id']) ? $data['in_bin_lookup_id'] : null;
        $this->container['in_bin_lookup_id_starts_with'] = isset($data['in_bin_lookup_id_starts_with']) ? $data['in_bin_lookup_id_starts_with'] : null;
        $this->container['in_bin_lookup_id_ends_with'] = isset($data['in_bin_lookup_id_ends_with']) ? $data['in_bin_lookup_id_ends_with'] : null;
        $this->container['in_bin_lookup_id_contains'] = isset($data['in_bin_lookup_id_contains']) ? $data['in_bin_lookup_id_contains'] : null;
        $this->container['in_bin_lookup_id_like'] = isset($data['in_bin_lookup_id_like']) ? $data['in_bin_lookup_id_like'] : null;
        $this->container['in_bin_lookup_id_between'] = isset($data['in_bin_lookup_id_between']) ? $data['in_bin_lookup_id_between'] : null;
        $this->container['in_bin_lookup_id_in'] = isset($data['in_bin_lookup_id_in']) ? $data['in_bin_lookup_id_in'] : null;
        $this->container['last_saved_date_time'] = isset($data['last_saved_date_time']) ? $data['last_saved_date_time'] : null;
        $this->container['last_saved_date_time_greater_than_or_equal_to'] = isset($data['last_saved_date_time_greater_than_or_equal_to']) ? $data['last_saved_date_time_greater_than_or_equal_to'] : null;
        $this->container['last_saved_date_time_greater_than'] = isset($data['last_saved_date_time_greater_than']) ? $data['last_saved_date_time_greater_than'] : null;
        $this->container['last_saved_date_time_less_than'] = isset($data['last_saved_date_time_less_than']) ? $data['last_saved_date_time_less_than'] : null;
        $this->container['last_saved_date_time_less_than_or_equal_to'] = isset($data['last_saved_date_time_less_than_or_equal_to']) ? $data['last_saved_date_time_less_than_or_equal_to'] : null;
        $this->container['last_saved_date_time_not_equal_to'] = isset($data['last_saved_date_time_not_equal_to']) ? $data['last_saved_date_time_not_equal_to'] : null;
        $this->container['last_saved_date_time_between'] = isset($data['last_saved_date_time_between']) ? $data['last_saved_date_time_between'] : null;
        $this->container['last_saved_date_time_in'] = isset($data['last_saved_date_time_in']) ? $data['last_saved_date_time_in'] : null;
        $this->container['in_logical_id'] = isset($data['in_logical_id']) ? $data['in_logical_id'] : null;
        $this->container['in_logical_id_starts_with'] = isset($data['in_logical_id_starts_with']) ? $data['in_logical_id_starts_with'] : null;
        $this->container['in_logical_id_ends_with'] = isset($data['in_logical_id_ends_with']) ? $data['in_logical_id_ends_with'] : null;
        $this->container['in_logical_id_contains'] = isset($data['in_logical_id_contains']) ? $data['in_logical_id_contains'] : null;
        $this->container['in_logical_id_like'] = isset($data['in_logical_id_like']) ? $data['in_logical_id_like'] : null;
        $this->container['in_logical_id_between'] = isset($data['in_logical_id_between']) ? $data['in_logical_id_between'] : null;
        $this->container['in_logical_id_in'] = isset($data['in_logical_id_in']) ? $data['in_logical_id_in'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['description_starts_with'] = isset($data['description_starts_with']) ? $data['description_starts_with'] : null;
        $this->container['description_ends_with'] = isset($data['description_ends_with']) ? $data['description_ends_with'] : null;
        $this->container['description_contains'] = isset($data['description_contains']) ? $data['description_contains'] : null;
        $this->container['description_like'] = isset($data['description_like']) ? $data['description_like'] : null;
        $this->container['description_between'] = isset($data['description_between']) ? $data['description_between'] : null;
        $this->container['description_in'] = isset($data['description_in']) ? $data['description_in'] : null;
        $this->container['short_name'] = isset($data['short_name']) ? $data['short_name'] : null;
        $this->container['short_name_starts_with'] = isset($data['short_name_starts_with']) ? $data['short_name_starts_with'] : null;
        $this->container['short_name_ends_with'] = isset($data['short_name_ends_with']) ? $data['short_name_ends_with'] : null;
        $this->container['short_name_contains'] = isset($data['short_name_contains']) ? $data['short_name_contains'] : null;
        $this->container['short_name_like'] = isset($data['short_name_like']) ? $data['short_name_like'] : null;
        $this->container['short_name_between'] = isset($data['short_name_between']) ? $data['short_name_between'] : null;
        $this->container['short_name_in'] = isset($data['short_name_in']) ? $data['short_name_in'] : null;
        $this->container['item_no'] = isset($data['item_no']) ? $data['item_no'] : null;
        $this->container['item_no_greater_than_or_equal_to'] = isset($data['item_no_greater_than_or_equal_to']) ? $data['item_no_greater_than_or_equal_to'] : null;
        $this->container['item_no_greater_than'] = isset($data['item_no_greater_than']) ? $data['item_no_greater_than'] : null;
        $this->container['item_no_less_than'] = isset($data['item_no_less_than']) ? $data['item_no_less_than'] : null;
        $this->container['item_no_less_than_or_equal_to'] = isset($data['item_no_less_than_or_equal_to']) ? $data['item_no_less_than_or_equal_to'] : null;
        $this->container['item_no_not_equal_to'] = isset($data['item_no_not_equal_to']) ? $data['item_no_not_equal_to'] : null;
        $this->container['item_no_between'] = isset($data['item_no_between']) ? $data['item_no_between'] : null;
        $this->container['item_no_in'] = isset($data['item_no_in']) ? $data['item_no_in'] : null;
        $this->container['is_default'] = isset($data['is_default']) ? $data['is_default'] : null;
        $this->container['row_hash'] = isset($data['row_hash']) ? $data['row_hash'] : null;
        $this->container['skip'] = isset($data['skip']) ? $data['skip'] : null;
        $this->container['take'] = isset($data['take']) ? $data['take'] : null;
        $this->container['order_by'] = isset($data['order_by']) ? $data['order_by'] : null;
        $this->container['order_by_desc'] = isset($data['order_by_desc']) ? $data['order_by_desc'] : null;
        $this->container['include'] = isset($data['include']) ? $data['include'] : null;
        $this->container['fields'] = isset($data['fields']) ? $data['fields'] : null;
        $this->container['meta'] = isset($data['meta']) ? $data['meta'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['row_hash']) && !preg_match("/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/", $this->container['row_hash'])) {
            $invalidProperties[] = "invalid value for 'row_hash', must be conform to the pattern /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets in_bin_lookup_id
     *
     * @return string
     */
    public function getInBinLookupId()
    {
        return $this->container['in_bin_lookup_id'];
    }

    /**
     * Sets in_bin_lookup_id
     *
     * @param string $in_bin_lookup_id in_bin_lookup_id
     *
     * @return $this
     */
    public function setInBinLookupId($in_bin_lookup_id)
    {
        $this->container['in_bin_lookup_id'] = $in_bin_lookup_id;

        return $this;
    }

    /**
     * Gets in_bin_lookup_id_starts_with
     *
     * @return string
     */
    public function getInBinLookupIdStartsWith()
    {
        return $this->container['in_bin_lookup_id_starts_with'];
    }

    /**
     * Sets in_bin_lookup_id_starts_with
     *
     * @param string $in_bin_lookup_id_starts_with in_bin_lookup_id_starts_with
     *
     * @return $this
     */
    public function setInBinLookupIdStartsWith($in_bin_lookup_id_starts_with)
    {
        $this->container['in_bin_lookup_id_starts_with'] = $in_bin_lookup_id_starts_with;

        return $this;
    }

    /**
     * Gets in_bin_lookup_id_ends_with
     *
     * @return string
     */
    public function getInBinLookupIdEndsWith()
    {
        return $this->container['in_bin_lookup_id_ends_with'];
    }

    /**
     * Sets in_bin_lookup_id_ends_with
     *
     * @param string $in_bin_lookup_id_ends_with in_bin_lookup_id_ends_with
     *
     * @return $this
     */
    public function setInBinLookupIdEndsWith($in_bin_lookup_id_ends_with)
    {
        $this->container['in_bin_lookup_id_ends_with'] = $in_bin_lookup_id_ends_with;

        return $this;
    }

    /**
     * Gets in_bin_lookup_id_contains
     *
     * @return string
     */
    public function getInBinLookupIdContains()
    {
        return $this->container['in_bin_lookup_id_contains'];
    }

    /**
     * Sets in_bin_lookup_id_contains
     *
     * @param string $in_bin_lookup_id_contains in_bin_lookup_id_contains
     *
     * @return $this
     */
    public function setInBinLookupIdContains($in_bin_lookup_id_contains)
    {
        $this->container['in_bin_lookup_id_contains'] = $in_bin_lookup_id_contains;

        return $this;
    }

    /**
     * Gets in_bin_lookup_id_like
     *
     * @return string
     */
    public function getInBinLookupIdLike()
    {
        return $this->container['in_bin_lookup_id_like'];
    }

    /**
     * Sets in_bin_lookup_id_like
     *
     * @param string $in_bin_lookup_id_like in_bin_lookup_id_like
     *
     * @return $this
     */
    public function setInBinLookupIdLike($in_bin_lookup_id_like)
    {
        $this->container['in_bin_lookup_id_like'] = $in_bin_lookup_id_like;

        return $this;
    }

    /**
     * Gets in_bin_lookup_id_between
     *
     * @return string[]
     */
    public function getInBinLookupIdBetween()
    {
        return $this->container['in_bin_lookup_id_between'];
    }

    /**
     * Sets in_bin_lookup_id_between
     *
     * @param string[] $in_bin_lookup_id_between in_bin_lookup_id_between
     *
     * @return $this
     */
    public function setInBinLookupIdBetween($in_bin_lookup_id_between)
    {
        $this->container['in_bin_lookup_id_between'] = $in_bin_lookup_id_between;

        return $this;
    }

    /**
     * Gets in_bin_lookup_id_in
     *
     * @return string[]
     */
    public function getInBinLookupIdIn()
    {
        return $this->container['in_bin_lookup_id_in'];
    }

    /**
     * Sets in_bin_lookup_id_in
     *
     * @param string[] $in_bin_lookup_id_in in_bin_lookup_id_in
     *
     * @return $this
     */
    public function setInBinLookupIdIn($in_bin_lookup_id_in)
    {
        $this->container['in_bin_lookup_id_in'] = $in_bin_lookup_id_in;

        return $this;
    }

    /**
     * Gets last_saved_date_time
     *
     * @return \DateTime
     */
    public function getLastSavedDateTime()
    {
        return $this->container['last_saved_date_time'];
    }

    /**
     * Sets last_saved_date_time
     *
     * @param \DateTime $last_saved_date_time last_saved_date_time
     *
     * @return $this
     */
    public function setLastSavedDateTime($last_saved_date_time)
    {
        $this->container['last_saved_date_time'] = $last_saved_date_time;

        return $this;
    }

    /**
     * Gets last_saved_date_time_greater_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeGreaterThanOrEqualTo()
    {
        return $this->container['last_saved_date_time_greater_than_or_equal_to'];
    }

    /**
     * Sets last_saved_date_time_greater_than_or_equal_to
     *
     * @param \DateTime $last_saved_date_time_greater_than_or_equal_to last_saved_date_time_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeGreaterThanOrEqualTo($last_saved_date_time_greater_than_or_equal_to)
    {
        $this->container['last_saved_date_time_greater_than_or_equal_to'] = $last_saved_date_time_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_greater_than
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeGreaterThan()
    {
        return $this->container['last_saved_date_time_greater_than'];
    }

    /**
     * Sets last_saved_date_time_greater_than
     *
     * @param \DateTime $last_saved_date_time_greater_than last_saved_date_time_greater_than
     *
     * @return $this
     */
    public function setLastSavedDateTimeGreaterThan($last_saved_date_time_greater_than)
    {
        $this->container['last_saved_date_time_greater_than'] = $last_saved_date_time_greater_than;

        return $this;
    }

    /**
     * Gets last_saved_date_time_less_than
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeLessThan()
    {
        return $this->container['last_saved_date_time_less_than'];
    }

    /**
     * Sets last_saved_date_time_less_than
     *
     * @param \DateTime $last_saved_date_time_less_than last_saved_date_time_less_than
     *
     * @return $this
     */
    public function setLastSavedDateTimeLessThan($last_saved_date_time_less_than)
    {
        $this->container['last_saved_date_time_less_than'] = $last_saved_date_time_less_than;

        return $this;
    }

    /**
     * Gets last_saved_date_time_less_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeLessThanOrEqualTo()
    {
        return $this->container['last_saved_date_time_less_than_or_equal_to'];
    }

    /**
     * Sets last_saved_date_time_less_than_or_equal_to
     *
     * @param \DateTime $last_saved_date_time_less_than_or_equal_to last_saved_date_time_less_than_or_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeLessThanOrEqualTo($last_saved_date_time_less_than_or_equal_to)
    {
        $this->container['last_saved_date_time_less_than_or_equal_to'] = $last_saved_date_time_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_not_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeNotEqualTo()
    {
        return $this->container['last_saved_date_time_not_equal_to'];
    }

    /**
     * Sets last_saved_date_time_not_equal_to
     *
     * @param \DateTime $last_saved_date_time_not_equal_to last_saved_date_time_not_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeNotEqualTo($last_saved_date_time_not_equal_to)
    {
        $this->container['last_saved_date_time_not_equal_to'] = $last_saved_date_time_not_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_between
     *
     * @return \DateTime[]
     */
    public function getLastSavedDateTimeBetween()
    {
        return $this->container['last_saved_date_time_between'];
    }

    /**
     * Sets last_saved_date_time_between
     *
     * @param \DateTime[] $last_saved_date_time_between last_saved_date_time_between
     *
     * @return $this
     */
    public function setLastSavedDateTimeBetween($last_saved_date_time_between)
    {
        $this->container['last_saved_date_time_between'] = $last_saved_date_time_between;

        return $this;
    }

    /**
     * Gets last_saved_date_time_in
     *
     * @return \DateTime[]
     */
    public function getLastSavedDateTimeIn()
    {
        return $this->container['last_saved_date_time_in'];
    }

    /**
     * Sets last_saved_date_time_in
     *
     * @param \DateTime[] $last_saved_date_time_in last_saved_date_time_in
     *
     * @return $this
     */
    public function setLastSavedDateTimeIn($last_saved_date_time_in)
    {
        $this->container['last_saved_date_time_in'] = $last_saved_date_time_in;

        return $this;
    }

    /**
     * Gets in_logical_id
     *
     * @return string
     */
    public function getInLogicalId()
    {
        return $this->container['in_logical_id'];
    }

    /**
     * Sets in_logical_id
     *
     * @param string $in_logical_id in_logical_id
     *
     * @return $this
     */
    public function setInLogicalId($in_logical_id)
    {
        $this->container['in_logical_id'] = $in_logical_id;

        return $this;
    }

    /**
     * Gets in_logical_id_starts_with
     *
     * @return string
     */
    public function getInLogicalIdStartsWith()
    {
        return $this->container['in_logical_id_starts_with'];
    }

    /**
     * Sets in_logical_id_starts_with
     *
     * @param string $in_logical_id_starts_with in_logical_id_starts_with
     *
     * @return $this
     */
    public function setInLogicalIdStartsWith($in_logical_id_starts_with)
    {
        $this->container['in_logical_id_starts_with'] = $in_logical_id_starts_with;

        return $this;
    }

    /**
     * Gets in_logical_id_ends_with
     *
     * @return string
     */
    public function getInLogicalIdEndsWith()
    {
        return $this->container['in_logical_id_ends_with'];
    }

    /**
     * Sets in_logical_id_ends_with
     *
     * @param string $in_logical_id_ends_with in_logical_id_ends_with
     *
     * @return $this
     */
    public function setInLogicalIdEndsWith($in_logical_id_ends_with)
    {
        $this->container['in_logical_id_ends_with'] = $in_logical_id_ends_with;

        return $this;
    }

    /**
     * Gets in_logical_id_contains
     *
     * @return string
     */
    public function getInLogicalIdContains()
    {
        return $this->container['in_logical_id_contains'];
    }

    /**
     * Sets in_logical_id_contains
     *
     * @param string $in_logical_id_contains in_logical_id_contains
     *
     * @return $this
     */
    public function setInLogicalIdContains($in_logical_id_contains)
    {
        $this->container['in_logical_id_contains'] = $in_logical_id_contains;

        return $this;
    }

    /**
     * Gets in_logical_id_like
     *
     * @return string
     */
    public function getInLogicalIdLike()
    {
        return $this->container['in_logical_id_like'];
    }

    /**
     * Sets in_logical_id_like
     *
     * @param string $in_logical_id_like in_logical_id_like
     *
     * @return $this
     */
    public function setInLogicalIdLike($in_logical_id_like)
    {
        $this->container['in_logical_id_like'] = $in_logical_id_like;

        return $this;
    }

    /**
     * Gets in_logical_id_between
     *
     * @return string[]
     */
    public function getInLogicalIdBetween()
    {
        return $this->container['in_logical_id_between'];
    }

    /**
     * Sets in_logical_id_between
     *
     * @param string[] $in_logical_id_between in_logical_id_between
     *
     * @return $this
     */
    public function setInLogicalIdBetween($in_logical_id_between)
    {
        $this->container['in_logical_id_between'] = $in_logical_id_between;

        return $this;
    }

    /**
     * Gets in_logical_id_in
     *
     * @return string[]
     */
    public function getInLogicalIdIn()
    {
        return $this->container['in_logical_id_in'];
    }

    /**
     * Sets in_logical_id_in
     *
     * @param string[] $in_logical_id_in in_logical_id_in
     *
     * @return $this
     */
    public function setInLogicalIdIn($in_logical_id_in)
    {
        $this->container['in_logical_id_in'] = $in_logical_id_in;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets description_starts_with
     *
     * @return string
     */
    public function getDescriptionStartsWith()
    {
        return $this->container['description_starts_with'];
    }

    /**
     * Sets description_starts_with
     *
     * @param string $description_starts_with description_starts_with
     *
     * @return $this
     */
    public function setDescriptionStartsWith($description_starts_with)
    {
        $this->container['description_starts_with'] = $description_starts_with;

        return $this;
    }

    /**
     * Gets description_ends_with
     *
     * @return string
     */
    public function getDescriptionEndsWith()
    {
        return $this->container['description_ends_with'];
    }

    /**
     * Sets description_ends_with
     *
     * @param string $description_ends_with description_ends_with
     *
     * @return $this
     */
    public function setDescriptionEndsWith($description_ends_with)
    {
        $this->container['description_ends_with'] = $description_ends_with;

        return $this;
    }

    /**
     * Gets description_contains
     *
     * @return string
     */
    public function getDescriptionContains()
    {
        return $this->container['description_contains'];
    }

    /**
     * Sets description_contains
     *
     * @param string $description_contains description_contains
     *
     * @return $this
     */
    public function setDescriptionContains($description_contains)
    {
        $this->container['description_contains'] = $description_contains;

        return $this;
    }

    /**
     * Gets description_like
     *
     * @return string
     */
    public function getDescriptionLike()
    {
        return $this->container['description_like'];
    }

    /**
     * Sets description_like
     *
     * @param string $description_like description_like
     *
     * @return $this
     */
    public function setDescriptionLike($description_like)
    {
        $this->container['description_like'] = $description_like;

        return $this;
    }

    /**
     * Gets description_between
     *
     * @return string[]
     */
    public function getDescriptionBetween()
    {
        return $this->container['description_between'];
    }

    /**
     * Sets description_between
     *
     * @param string[] $description_between description_between
     *
     * @return $this
     */
    public function setDescriptionBetween($description_between)
    {
        $this->container['description_between'] = $description_between;

        return $this;
    }

    /**
     * Gets description_in
     *
     * @return string[]
     */
    public function getDescriptionIn()
    {
        return $this->container['description_in'];
    }

    /**
     * Sets description_in
     *
     * @param string[] $description_in description_in
     *
     * @return $this
     */
    public function setDescriptionIn($description_in)
    {
        $this->container['description_in'] = $description_in;

        return $this;
    }

    /**
     * Gets short_name
     *
     * @return string
     */
    public function getShortName()
    {
        return $this->container['short_name'];
    }

    /**
     * Sets short_name
     *
     * @param string $short_name short_name
     *
     * @return $this
     */
    public function setShortName($short_name)
    {
        $this->container['short_name'] = $short_name;

        return $this;
    }

    /**
     * Gets short_name_starts_with
     *
     * @return string
     */
    public function getShortNameStartsWith()
    {
        return $this->container['short_name_starts_with'];
    }

    /**
     * Sets short_name_starts_with
     *
     * @param string $short_name_starts_with short_name_starts_with
     *
     * @return $this
     */
    public function setShortNameStartsWith($short_name_starts_with)
    {
        $this->container['short_name_starts_with'] = $short_name_starts_with;

        return $this;
    }

    /**
     * Gets short_name_ends_with
     *
     * @return string
     */
    public function getShortNameEndsWith()
    {
        return $this->container['short_name_ends_with'];
    }

    /**
     * Sets short_name_ends_with
     *
     * @param string $short_name_ends_with short_name_ends_with
     *
     * @return $this
     */
    public function setShortNameEndsWith($short_name_ends_with)
    {
        $this->container['short_name_ends_with'] = $short_name_ends_with;

        return $this;
    }

    /**
     * Gets short_name_contains
     *
     * @return string
     */
    public function getShortNameContains()
    {
        return $this->container['short_name_contains'];
    }

    /**
     * Sets short_name_contains
     *
     * @param string $short_name_contains short_name_contains
     *
     * @return $this
     */
    public function setShortNameContains($short_name_contains)
    {
        $this->container['short_name_contains'] = $short_name_contains;

        return $this;
    }

    /**
     * Gets short_name_like
     *
     * @return string
     */
    public function getShortNameLike()
    {
        return $this->container['short_name_like'];
    }

    /**
     * Sets short_name_like
     *
     * @param string $short_name_like short_name_like
     *
     * @return $this
     */
    public function setShortNameLike($short_name_like)
    {
        $this->container['short_name_like'] = $short_name_like;

        return $this;
    }

    /**
     * Gets short_name_between
     *
     * @return string[]
     */
    public function getShortNameBetween()
    {
        return $this->container['short_name_between'];
    }

    /**
     * Sets short_name_between
     *
     * @param string[] $short_name_between short_name_between
     *
     * @return $this
     */
    public function setShortNameBetween($short_name_between)
    {
        $this->container['short_name_between'] = $short_name_between;

        return $this;
    }

    /**
     * Gets short_name_in
     *
     * @return string[]
     */
    public function getShortNameIn()
    {
        return $this->container['short_name_in'];
    }

    /**
     * Sets short_name_in
     *
     * @param string[] $short_name_in short_name_in
     *
     * @return $this
     */
    public function setShortNameIn($short_name_in)
    {
        $this->container['short_name_in'] = $short_name_in;

        return $this;
    }

    /**
     * Gets item_no
     *
     * @return int
     */
    public function getItemNo()
    {
        return $this->container['item_no'];
    }

    /**
     * Sets item_no
     *
     * @param int $item_no item_no
     *
     * @return $this
     */
    public function setItemNo($item_no)
    {
        $this->container['item_no'] = $item_no;

        return $this;
    }

    /**
     * Gets item_no_greater_than_or_equal_to
     *
     * @return int
     */
    public function getItemNoGreaterThanOrEqualTo()
    {
        return $this->container['item_no_greater_than_or_equal_to'];
    }

    /**
     * Sets item_no_greater_than_or_equal_to
     *
     * @param int $item_no_greater_than_or_equal_to item_no_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setItemNoGreaterThanOrEqualTo($item_no_greater_than_or_equal_to)
    {
        $this->container['item_no_greater_than_or_equal_to'] = $item_no_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets item_no_greater_than
     *
     * @return int
     */
    public function getItemNoGreaterThan()
    {
        return $this->container['item_no_greater_than'];
    }

    /**
     * Sets item_no_greater_than
     *
     * @param int $item_no_greater_than item_no_greater_than
     *
     * @return $this
     */
    public function setItemNoGreaterThan($item_no_greater_than)
    {
        $this->container['item_no_greater_than'] = $item_no_greater_than;

        return $this;
    }

    /**
     * Gets item_no_less_than
     *
     * @return int
     */
    public function getItemNoLessThan()
    {
        return $this->container['item_no_less_than'];
    }

    /**
     * Sets item_no_less_than
     *
     * @param int $item_no_less_than item_no_less_than
     *
     * @return $this
     */
    public function setItemNoLessThan($item_no_less_than)
    {
        $this->container['item_no_less_than'] = $item_no_less_than;

        return $this;
    }

    /**
     * Gets item_no_less_than_or_equal_to
     *
     * @return int
     */
    public function getItemNoLessThanOrEqualTo()
    {
        return $this->container['item_no_less_than_or_equal_to'];
    }

    /**
     * Sets item_no_less_than_or_equal_to
     *
     * @param int $item_no_less_than_or_equal_to item_no_less_than_or_equal_to
     *
     * @return $this
     */
    public function setItemNoLessThanOrEqualTo($item_no_less_than_or_equal_to)
    {
        $this->container['item_no_less_than_or_equal_to'] = $item_no_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets item_no_not_equal_to
     *
     * @return int
     */
    public function getItemNoNotEqualTo()
    {
        return $this->container['item_no_not_equal_to'];
    }

    /**
     * Sets item_no_not_equal_to
     *
     * @param int $item_no_not_equal_to item_no_not_equal_to
     *
     * @return $this
     */
    public function setItemNoNotEqualTo($item_no_not_equal_to)
    {
        $this->container['item_no_not_equal_to'] = $item_no_not_equal_to;

        return $this;
    }

    /**
     * Gets item_no_between
     *
     * @return int[]
     */
    public function getItemNoBetween()
    {
        return $this->container['item_no_between'];
    }

    /**
     * Sets item_no_between
     *
     * @param int[] $item_no_between item_no_between
     *
     * @return $this
     */
    public function setItemNoBetween($item_no_between)
    {
        $this->container['item_no_between'] = $item_no_between;

        return $this;
    }

    /**
     * Gets item_no_in
     *
     * @return int[]
     */
    public function getItemNoIn()
    {
        return $this->container['item_no_in'];
    }

    /**
     * Sets item_no_in
     *
     * @param int[] $item_no_in item_no_in
     *
     * @return $this
     */
    public function setItemNoIn($item_no_in)
    {
        $this->container['item_no_in'] = $item_no_in;

        return $this;
    }

    /**
     * Gets is_default
     *
     * @return bool
     */
    public function getIsDefault()
    {
        return $this->container['is_default'];
    }

    /**
     * Sets is_default
     *
     * @param bool $is_default is_default
     *
     * @return $this
     */
    public function setIsDefault($is_default)
    {
        $this->container['is_default'] = $is_default;

        return $this;
    }

    /**
     * Gets row_hash
     *
     * @return string
     */
    public function getRowHash()
    {
        return $this->container['row_hash'];
    }

    /**
     * Sets row_hash
     *
     * @param string $row_hash row_hash
     *
     * @return $this
     */
    public function setRowHash($row_hash)
    {

        if (!is_null($row_hash) && (!preg_match("/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/", $row_hash))) {
            throw new \InvalidArgumentException("invalid value for $row_hash when calling INBinLocationLookupQuery., must conform to the pattern /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.");
        }

        $this->container['row_hash'] = $row_hash;

        return $this;
    }

    /**
     * Gets skip
     *
     * @return int
     */
    public function getSkip()
    {
        return $this->container['skip'];
    }

    /**
     * Sets skip
     *
     * @param int $skip skip
     *
     * @return $this
     */
    public function setSkip($skip)
    {
        $this->container['skip'] = $skip;

        return $this;
    }

    /**
     * Gets take
     *
     * @return int
     */
    public function getTake()
    {
        return $this->container['take'];
    }

    /**
     * Sets take
     *
     * @param int $take take
     *
     * @return $this
     */
    public function setTake($take)
    {
        $this->container['take'] = $take;

        return $this;
    }

    /**
     * Gets order_by
     *
     * @return string
     */
    public function getOrderBy()
    {
        return $this->container['order_by'];
    }

    /**
     * Sets order_by
     *
     * @param string $order_by order_by
     *
     * @return $this
     */
    public function setOrderBy($order_by)
    {
        $this->container['order_by'] = $order_by;

        return $this;
    }

    /**
     * Gets order_by_desc
     *
     * @return string
     */
    public function getOrderByDesc()
    {
        return $this->container['order_by_desc'];
    }

    /**
     * Sets order_by_desc
     *
     * @param string $order_by_desc order_by_desc
     *
     * @return $this
     */
    public function setOrderByDesc($order_by_desc)
    {
        $this->container['order_by_desc'] = $order_by_desc;

        return $this;
    }

    /**
     * Gets include
     *
     * @return string
     */
    public function getInclude()
    {
        return $this->container['include'];
    }

    /**
     * Sets include
     *
     * @param string $include include
     *
     * @return $this
     */
    public function setInclude($include)
    {
        $this->container['include'] = $include;

        return $this;
    }

    /**
     * Gets fields
     *
     * @return string
     */
    public function getFields()
    {
        return $this->container['fields'];
    }

    /**
     * Sets fields
     *
     * @param string $fields fields
     *
     * @return $this
     */
    public function setFields($fields)
    {
        $this->container['fields'] = $fields;

        return $this;
    }

    /**
     * Gets meta
     *
     * @return \Jiwa\Model\DictionaryStringString_
     */
    public function getMeta()
    {
        return $this->container['meta'];
    }

    /**
     * Sets meta
     *
     * @param \Jiwa\Model\DictionaryStringString_ $meta meta
     *
     * @return $this
     */
    public function setMeta($meta)
    {
        $this->container['meta'] = $meta;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


