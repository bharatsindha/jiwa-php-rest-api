<?php
/**
 * SYPluginQuery
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\Model;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * SYPluginQuery Class Doc Comment
 *
 * @category Class
 * @description SY_PluginQuery
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SYPluginQuery implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'SY_PluginQuery';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'rec_id' => 'string',
        'rec_id_in' => 'string[]',
        'name' => 'string',
        'name_starts_with' => 'string',
        'name_ends_with' => 'string',
        'name_contains' => 'string',
        'name_like' => 'string',
        'name_between' => 'string[]',
        'name_in' => 'string[]',
        'description' => 'string',
        'description_starts_with' => 'string',
        'description_ends_with' => 'string',
        'description_contains' => 'string',
        'description_like' => 'string',
        'description_between' => 'string[]',
        'description_in' => 'string[]',
        'is_enabled' => 'bool',
        'execution_order' => 'int',
        'execution_order_greater_than_or_equal_to' => 'int',
        'execution_order_greater_than' => 'int',
        'execution_order_less_than' => 'int',
        'execution_order_less_than_or_equal_to' => 'int',
        'execution_order_not_equal_to' => 'int',
        'execution_order_between' => 'int[]',
        'execution_order_in' => 'int[]',
        'author' => 'string',
        'author_starts_with' => 'string',
        'author_ends_with' => 'string',
        'author_contains' => 'string',
        'author_like' => 'string',
        'author_between' => 'string[]',
        'author_in' => 'string[]',
        'version' => 'string',
        'version_starts_with' => 'string',
        'version_ends_with' => 'string',
        'version_contains' => 'string',
        'version_like' => 'string',
        'version_between' => 'string[]',
        'version_in' => 'string[]',
        'licence_key' => 'string',
        'licence_key_starts_with' => 'string',
        'licence_key_ends_with' => 'string',
        'licence_key_contains' => 'string',
        'licence_key_like' => 'string',
        'licence_key_between' => 'string[]',
        'licence_key_in' => 'string[]',
        'view_password' => 'string',
        'view_password_starts_with' => 'string',
        'view_password_ends_with' => 'string',
        'view_password_contains' => 'string',
        'view_password_like' => 'string',
        'view_password_between' => 'string[]',
        'view_password_in' => 'string[]',
        'edit_password' => 'string',
        'edit_password_starts_with' => 'string',
        'edit_password_ends_with' => 'string',
        'edit_password_contains' => 'string',
        'edit_password_like' => 'string',
        'edit_password_between' => 'string[]',
        'edit_password_in' => 'string[]',
        'is_encrypted' => 'bool',
        'row_hash' => 'string',
        'code' => 'string',
        'code_starts_with' => 'string',
        'code_ends_with' => 'string',
        'code_contains' => 'string',
        'code_like' => 'string',
        'code_between' => 'string[]',
        'code_in' => 'string[]',
        'exception_policy' => 'int',
        'exception_policy_greater_than_or_equal_to' => 'int',
        'exception_policy_greater_than' => 'int',
        'exception_policy_less_than' => 'int',
        'exception_policy_less_than_or_equal_to' => 'int',
        'exception_policy_not_equal_to' => 'int',
        'exception_policy_between' => 'int[]',
        'exception_policy_in' => 'int[]',
        'is_isolated_to_own_app_domain' => 'bool',
        'file_hash' => 'string',
        'file_hash_starts_with' => 'string',
        'file_hash_ends_with' => 'string',
        'file_hash_contains' => 'string',
        'file_hash_like' => 'string',
        'file_hash_between' => 'string[]',
        'file_hash_in' => 'string[]',
        'create_date_time' => '\DateTime',
        'create_date_time_greater_than_or_equal_to' => '\DateTime',
        'create_date_time_greater_than' => '\DateTime',
        'create_date_time_less_than' => '\DateTime',
        'create_date_time_less_than_or_equal_to' => '\DateTime',
        'create_date_time_not_equal_to' => '\DateTime',
        'create_date_time_between' => '\DateTime[]',
        'create_date_time_in' => '\DateTime[]',
        'last_write_date_time' => '\DateTime',
        'last_write_date_time_greater_than_or_equal_to' => '\DateTime',
        'last_write_date_time_greater_than' => '\DateTime',
        'last_write_date_time_less_than' => '\DateTime',
        'last_write_date_time_less_than_or_equal_to' => '\DateTime',
        'last_write_date_time_not_equal_to' => '\DateTime',
        'last_write_date_time_between' => '\DateTime[]',
        'last_write_date_time_in' => '\DateTime[]',
        'language' => 'int',
        'language_greater_than_or_equal_to' => 'int',
        'language_greater_than' => 'int',
        'language_less_than' => 'int',
        'language_less_than_or_equal_to' => 'int',
        'language_not_equal_to' => 'int',
        'language_between' => 'string',
        'language_in' => 'string',
        'skip' => 'int',
        'take' => 'int',
        'order_by' => 'string',
        'order_by_desc' => 'string',
        'include' => 'string',
        'fields' => 'string',
        'meta' => '\Jiwa\Model\DictionaryStringString_'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'rec_id' => null,
        'rec_id_in' => null,
        'name' => null,
        'name_starts_with' => null,
        'name_ends_with' => null,
        'name_contains' => null,
        'name_like' => null,
        'name_between' => null,
        'name_in' => null,
        'description' => null,
        'description_starts_with' => null,
        'description_ends_with' => null,
        'description_contains' => null,
        'description_like' => null,
        'description_between' => null,
        'description_in' => null,
        'is_enabled' => null,
        'execution_order' => 'int32',
        'execution_order_greater_than_or_equal_to' => 'int32',
        'execution_order_greater_than' => 'int32',
        'execution_order_less_than' => 'int32',
        'execution_order_less_than_or_equal_to' => 'int32',
        'execution_order_not_equal_to' => 'int32',
        'execution_order_between' => 'int32',
        'execution_order_in' => 'int32',
        'author' => null,
        'author_starts_with' => null,
        'author_ends_with' => null,
        'author_contains' => null,
        'author_like' => null,
        'author_between' => null,
        'author_in' => null,
        'version' => null,
        'version_starts_with' => null,
        'version_ends_with' => null,
        'version_contains' => null,
        'version_like' => null,
        'version_between' => null,
        'version_in' => null,
        'licence_key' => null,
        'licence_key_starts_with' => null,
        'licence_key_ends_with' => null,
        'licence_key_contains' => null,
        'licence_key_like' => null,
        'licence_key_between' => null,
        'licence_key_in' => null,
        'view_password' => null,
        'view_password_starts_with' => null,
        'view_password_ends_with' => null,
        'view_password_contains' => null,
        'view_password_like' => null,
        'view_password_between' => null,
        'view_password_in' => null,
        'edit_password' => null,
        'edit_password_starts_with' => null,
        'edit_password_ends_with' => null,
        'edit_password_contains' => null,
        'edit_password_like' => null,
        'edit_password_between' => null,
        'edit_password_in' => null,
        'is_encrypted' => null,
        'row_hash' => 'byte',
        'code' => null,
        'code_starts_with' => null,
        'code_ends_with' => null,
        'code_contains' => null,
        'code_like' => null,
        'code_between' => null,
        'code_in' => null,
        'exception_policy' => 'int32',
        'exception_policy_greater_than_or_equal_to' => 'int32',
        'exception_policy_greater_than' => 'int32',
        'exception_policy_less_than' => 'int32',
        'exception_policy_less_than_or_equal_to' => 'int32',
        'exception_policy_not_equal_to' => 'int32',
        'exception_policy_between' => 'int32',
        'exception_policy_in' => 'int32',
        'is_isolated_to_own_app_domain' => null,
        'file_hash' => null,
        'file_hash_starts_with' => null,
        'file_hash_ends_with' => null,
        'file_hash_contains' => null,
        'file_hash_like' => null,
        'file_hash_between' => null,
        'file_hash_in' => null,
        'create_date_time' => 'date-time',
        'create_date_time_greater_than_or_equal_to' => 'date-time',
        'create_date_time_greater_than' => 'date-time',
        'create_date_time_less_than' => 'date-time',
        'create_date_time_less_than_or_equal_to' => 'date-time',
        'create_date_time_not_equal_to' => 'date-time',
        'create_date_time_between' => 'date-time',
        'create_date_time_in' => 'date-time',
        'last_write_date_time' => 'date-time',
        'last_write_date_time_greater_than_or_equal_to' => 'date-time',
        'last_write_date_time_greater_than' => 'date-time',
        'last_write_date_time_less_than' => 'date-time',
        'last_write_date_time_less_than_or_equal_to' => 'date-time',
        'last_write_date_time_not_equal_to' => 'date-time',
        'last_write_date_time_between' => 'date-time',
        'last_write_date_time_in' => 'date-time',
        'language' => 'int32',
        'language_greater_than_or_equal_to' => 'int32',
        'language_greater_than' => 'int32',
        'language_less_than' => 'int32',
        'language_less_than_or_equal_to' => 'int32',
        'language_not_equal_to' => 'int32',
        'language_between' => 'byte',
        'language_in' => 'byte',
        'skip' => 'int32',
        'take' => 'int32',
        'order_by' => null,
        'order_by_desc' => null,
        'include' => null,
        'fields' => null,
        'meta' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'rec_id' => 'RecID',
        'rec_id_in' => 'RecIDIn',
        'name' => 'Name',
        'name_starts_with' => 'NameStartsWith',
        'name_ends_with' => 'NameEndsWith',
        'name_contains' => 'NameContains',
        'name_like' => 'NameLike',
        'name_between' => 'NameBetween',
        'name_in' => 'NameIn',
        'description' => 'Description',
        'description_starts_with' => 'DescriptionStartsWith',
        'description_ends_with' => 'DescriptionEndsWith',
        'description_contains' => 'DescriptionContains',
        'description_like' => 'DescriptionLike',
        'description_between' => 'DescriptionBetween',
        'description_in' => 'DescriptionIn',
        'is_enabled' => 'IsEnabled',
        'execution_order' => 'ExecutionOrder',
        'execution_order_greater_than_or_equal_to' => 'ExecutionOrderGreaterThanOrEqualTo',
        'execution_order_greater_than' => 'ExecutionOrderGreaterThan',
        'execution_order_less_than' => 'ExecutionOrderLessThan',
        'execution_order_less_than_or_equal_to' => 'ExecutionOrderLessThanOrEqualTo',
        'execution_order_not_equal_to' => 'ExecutionOrderNotEqualTo',
        'execution_order_between' => 'ExecutionOrderBetween',
        'execution_order_in' => 'ExecutionOrderIn',
        'author' => 'Author',
        'author_starts_with' => 'AuthorStartsWith',
        'author_ends_with' => 'AuthorEndsWith',
        'author_contains' => 'AuthorContains',
        'author_like' => 'AuthorLike',
        'author_between' => 'AuthorBetween',
        'author_in' => 'AuthorIn',
        'version' => 'Version',
        'version_starts_with' => 'VersionStartsWith',
        'version_ends_with' => 'VersionEndsWith',
        'version_contains' => 'VersionContains',
        'version_like' => 'VersionLike',
        'version_between' => 'VersionBetween',
        'version_in' => 'VersionIn',
        'licence_key' => 'LicenceKey',
        'licence_key_starts_with' => 'LicenceKeyStartsWith',
        'licence_key_ends_with' => 'LicenceKeyEndsWith',
        'licence_key_contains' => 'LicenceKeyContains',
        'licence_key_like' => 'LicenceKeyLike',
        'licence_key_between' => 'LicenceKeyBetween',
        'licence_key_in' => 'LicenceKeyIn',
        'view_password' => 'ViewPassword',
        'view_password_starts_with' => 'ViewPasswordStartsWith',
        'view_password_ends_with' => 'ViewPasswordEndsWith',
        'view_password_contains' => 'ViewPasswordContains',
        'view_password_like' => 'ViewPasswordLike',
        'view_password_between' => 'ViewPasswordBetween',
        'view_password_in' => 'ViewPasswordIn',
        'edit_password' => 'EditPassword',
        'edit_password_starts_with' => 'EditPasswordStartsWith',
        'edit_password_ends_with' => 'EditPasswordEndsWith',
        'edit_password_contains' => 'EditPasswordContains',
        'edit_password_like' => 'EditPasswordLike',
        'edit_password_between' => 'EditPasswordBetween',
        'edit_password_in' => 'EditPasswordIn',
        'is_encrypted' => 'IsEncrypted',
        'row_hash' => 'RowHash',
        'code' => 'Code',
        'code_starts_with' => 'CodeStartsWith',
        'code_ends_with' => 'CodeEndsWith',
        'code_contains' => 'CodeContains',
        'code_like' => 'CodeLike',
        'code_between' => 'CodeBetween',
        'code_in' => 'CodeIn',
        'exception_policy' => 'ExceptionPolicy',
        'exception_policy_greater_than_or_equal_to' => 'ExceptionPolicyGreaterThanOrEqualTo',
        'exception_policy_greater_than' => 'ExceptionPolicyGreaterThan',
        'exception_policy_less_than' => 'ExceptionPolicyLessThan',
        'exception_policy_less_than_or_equal_to' => 'ExceptionPolicyLessThanOrEqualTo',
        'exception_policy_not_equal_to' => 'ExceptionPolicyNotEqualTo',
        'exception_policy_between' => 'ExceptionPolicyBetween',
        'exception_policy_in' => 'ExceptionPolicyIn',
        'is_isolated_to_own_app_domain' => 'IsIsolatedToOwnAppDomain',
        'file_hash' => 'FileHash',
        'file_hash_starts_with' => 'FileHashStartsWith',
        'file_hash_ends_with' => 'FileHashEndsWith',
        'file_hash_contains' => 'FileHashContains',
        'file_hash_like' => 'FileHashLike',
        'file_hash_between' => 'FileHashBetween',
        'file_hash_in' => 'FileHashIn',
        'create_date_time' => 'CreateDateTime',
        'create_date_time_greater_than_or_equal_to' => 'CreateDateTimeGreaterThanOrEqualTo',
        'create_date_time_greater_than' => 'CreateDateTimeGreaterThan',
        'create_date_time_less_than' => 'CreateDateTimeLessThan',
        'create_date_time_less_than_or_equal_to' => 'CreateDateTimeLessThanOrEqualTo',
        'create_date_time_not_equal_to' => 'CreateDateTimeNotEqualTo',
        'create_date_time_between' => 'CreateDateTimeBetween',
        'create_date_time_in' => 'CreateDateTimeIn',
        'last_write_date_time' => 'LastWriteDateTime',
        'last_write_date_time_greater_than_or_equal_to' => 'LastWriteDateTimeGreaterThanOrEqualTo',
        'last_write_date_time_greater_than' => 'LastWriteDateTimeGreaterThan',
        'last_write_date_time_less_than' => 'LastWriteDateTimeLessThan',
        'last_write_date_time_less_than_or_equal_to' => 'LastWriteDateTimeLessThanOrEqualTo',
        'last_write_date_time_not_equal_to' => 'LastWriteDateTimeNotEqualTo',
        'last_write_date_time_between' => 'LastWriteDateTimeBetween',
        'last_write_date_time_in' => 'LastWriteDateTimeIn',
        'language' => 'Language',
        'language_greater_than_or_equal_to' => 'LanguageGreaterThanOrEqualTo',
        'language_greater_than' => 'LanguageGreaterThan',
        'language_less_than' => 'LanguageLessThan',
        'language_less_than_or_equal_to' => 'LanguageLessThanOrEqualTo',
        'language_not_equal_to' => 'LanguageNotEqualTo',
        'language_between' => 'LanguageBetween',
        'language_in' => 'LanguageIn',
        'skip' => 'Skip',
        'take' => 'Take',
        'order_by' => 'OrderBy',
        'order_by_desc' => 'OrderByDesc',
        'include' => 'Include',
        'fields' => 'Fields',
        'meta' => 'Meta'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'rec_id' => 'setRecId',
        'rec_id_in' => 'setRecIdIn',
        'name' => 'setName',
        'name_starts_with' => 'setNameStartsWith',
        'name_ends_with' => 'setNameEndsWith',
        'name_contains' => 'setNameContains',
        'name_like' => 'setNameLike',
        'name_between' => 'setNameBetween',
        'name_in' => 'setNameIn',
        'description' => 'setDescription',
        'description_starts_with' => 'setDescriptionStartsWith',
        'description_ends_with' => 'setDescriptionEndsWith',
        'description_contains' => 'setDescriptionContains',
        'description_like' => 'setDescriptionLike',
        'description_between' => 'setDescriptionBetween',
        'description_in' => 'setDescriptionIn',
        'is_enabled' => 'setIsEnabled',
        'execution_order' => 'setExecutionOrder',
        'execution_order_greater_than_or_equal_to' => 'setExecutionOrderGreaterThanOrEqualTo',
        'execution_order_greater_than' => 'setExecutionOrderGreaterThan',
        'execution_order_less_than' => 'setExecutionOrderLessThan',
        'execution_order_less_than_or_equal_to' => 'setExecutionOrderLessThanOrEqualTo',
        'execution_order_not_equal_to' => 'setExecutionOrderNotEqualTo',
        'execution_order_between' => 'setExecutionOrderBetween',
        'execution_order_in' => 'setExecutionOrderIn',
        'author' => 'setAuthor',
        'author_starts_with' => 'setAuthorStartsWith',
        'author_ends_with' => 'setAuthorEndsWith',
        'author_contains' => 'setAuthorContains',
        'author_like' => 'setAuthorLike',
        'author_between' => 'setAuthorBetween',
        'author_in' => 'setAuthorIn',
        'version' => 'setVersion',
        'version_starts_with' => 'setVersionStartsWith',
        'version_ends_with' => 'setVersionEndsWith',
        'version_contains' => 'setVersionContains',
        'version_like' => 'setVersionLike',
        'version_between' => 'setVersionBetween',
        'version_in' => 'setVersionIn',
        'licence_key' => 'setLicenceKey',
        'licence_key_starts_with' => 'setLicenceKeyStartsWith',
        'licence_key_ends_with' => 'setLicenceKeyEndsWith',
        'licence_key_contains' => 'setLicenceKeyContains',
        'licence_key_like' => 'setLicenceKeyLike',
        'licence_key_between' => 'setLicenceKeyBetween',
        'licence_key_in' => 'setLicenceKeyIn',
        'view_password' => 'setViewPassword',
        'view_password_starts_with' => 'setViewPasswordStartsWith',
        'view_password_ends_with' => 'setViewPasswordEndsWith',
        'view_password_contains' => 'setViewPasswordContains',
        'view_password_like' => 'setViewPasswordLike',
        'view_password_between' => 'setViewPasswordBetween',
        'view_password_in' => 'setViewPasswordIn',
        'edit_password' => 'setEditPassword',
        'edit_password_starts_with' => 'setEditPasswordStartsWith',
        'edit_password_ends_with' => 'setEditPasswordEndsWith',
        'edit_password_contains' => 'setEditPasswordContains',
        'edit_password_like' => 'setEditPasswordLike',
        'edit_password_between' => 'setEditPasswordBetween',
        'edit_password_in' => 'setEditPasswordIn',
        'is_encrypted' => 'setIsEncrypted',
        'row_hash' => 'setRowHash',
        'code' => 'setCode',
        'code_starts_with' => 'setCodeStartsWith',
        'code_ends_with' => 'setCodeEndsWith',
        'code_contains' => 'setCodeContains',
        'code_like' => 'setCodeLike',
        'code_between' => 'setCodeBetween',
        'code_in' => 'setCodeIn',
        'exception_policy' => 'setExceptionPolicy',
        'exception_policy_greater_than_or_equal_to' => 'setExceptionPolicyGreaterThanOrEqualTo',
        'exception_policy_greater_than' => 'setExceptionPolicyGreaterThan',
        'exception_policy_less_than' => 'setExceptionPolicyLessThan',
        'exception_policy_less_than_or_equal_to' => 'setExceptionPolicyLessThanOrEqualTo',
        'exception_policy_not_equal_to' => 'setExceptionPolicyNotEqualTo',
        'exception_policy_between' => 'setExceptionPolicyBetween',
        'exception_policy_in' => 'setExceptionPolicyIn',
        'is_isolated_to_own_app_domain' => 'setIsIsolatedToOwnAppDomain',
        'file_hash' => 'setFileHash',
        'file_hash_starts_with' => 'setFileHashStartsWith',
        'file_hash_ends_with' => 'setFileHashEndsWith',
        'file_hash_contains' => 'setFileHashContains',
        'file_hash_like' => 'setFileHashLike',
        'file_hash_between' => 'setFileHashBetween',
        'file_hash_in' => 'setFileHashIn',
        'create_date_time' => 'setCreateDateTime',
        'create_date_time_greater_than_or_equal_to' => 'setCreateDateTimeGreaterThanOrEqualTo',
        'create_date_time_greater_than' => 'setCreateDateTimeGreaterThan',
        'create_date_time_less_than' => 'setCreateDateTimeLessThan',
        'create_date_time_less_than_or_equal_to' => 'setCreateDateTimeLessThanOrEqualTo',
        'create_date_time_not_equal_to' => 'setCreateDateTimeNotEqualTo',
        'create_date_time_between' => 'setCreateDateTimeBetween',
        'create_date_time_in' => 'setCreateDateTimeIn',
        'last_write_date_time' => 'setLastWriteDateTime',
        'last_write_date_time_greater_than_or_equal_to' => 'setLastWriteDateTimeGreaterThanOrEqualTo',
        'last_write_date_time_greater_than' => 'setLastWriteDateTimeGreaterThan',
        'last_write_date_time_less_than' => 'setLastWriteDateTimeLessThan',
        'last_write_date_time_less_than_or_equal_to' => 'setLastWriteDateTimeLessThanOrEqualTo',
        'last_write_date_time_not_equal_to' => 'setLastWriteDateTimeNotEqualTo',
        'last_write_date_time_between' => 'setLastWriteDateTimeBetween',
        'last_write_date_time_in' => 'setLastWriteDateTimeIn',
        'language' => 'setLanguage',
        'language_greater_than_or_equal_to' => 'setLanguageGreaterThanOrEqualTo',
        'language_greater_than' => 'setLanguageGreaterThan',
        'language_less_than' => 'setLanguageLessThan',
        'language_less_than_or_equal_to' => 'setLanguageLessThanOrEqualTo',
        'language_not_equal_to' => 'setLanguageNotEqualTo',
        'language_between' => 'setLanguageBetween',
        'language_in' => 'setLanguageIn',
        'skip' => 'setSkip',
        'take' => 'setTake',
        'order_by' => 'setOrderBy',
        'order_by_desc' => 'setOrderByDesc',
        'include' => 'setInclude',
        'fields' => 'setFields',
        'meta' => 'setMeta'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'rec_id' => 'getRecId',
        'rec_id_in' => 'getRecIdIn',
        'name' => 'getName',
        'name_starts_with' => 'getNameStartsWith',
        'name_ends_with' => 'getNameEndsWith',
        'name_contains' => 'getNameContains',
        'name_like' => 'getNameLike',
        'name_between' => 'getNameBetween',
        'name_in' => 'getNameIn',
        'description' => 'getDescription',
        'description_starts_with' => 'getDescriptionStartsWith',
        'description_ends_with' => 'getDescriptionEndsWith',
        'description_contains' => 'getDescriptionContains',
        'description_like' => 'getDescriptionLike',
        'description_between' => 'getDescriptionBetween',
        'description_in' => 'getDescriptionIn',
        'is_enabled' => 'getIsEnabled',
        'execution_order' => 'getExecutionOrder',
        'execution_order_greater_than_or_equal_to' => 'getExecutionOrderGreaterThanOrEqualTo',
        'execution_order_greater_than' => 'getExecutionOrderGreaterThan',
        'execution_order_less_than' => 'getExecutionOrderLessThan',
        'execution_order_less_than_or_equal_to' => 'getExecutionOrderLessThanOrEqualTo',
        'execution_order_not_equal_to' => 'getExecutionOrderNotEqualTo',
        'execution_order_between' => 'getExecutionOrderBetween',
        'execution_order_in' => 'getExecutionOrderIn',
        'author' => 'getAuthor',
        'author_starts_with' => 'getAuthorStartsWith',
        'author_ends_with' => 'getAuthorEndsWith',
        'author_contains' => 'getAuthorContains',
        'author_like' => 'getAuthorLike',
        'author_between' => 'getAuthorBetween',
        'author_in' => 'getAuthorIn',
        'version' => 'getVersion',
        'version_starts_with' => 'getVersionStartsWith',
        'version_ends_with' => 'getVersionEndsWith',
        'version_contains' => 'getVersionContains',
        'version_like' => 'getVersionLike',
        'version_between' => 'getVersionBetween',
        'version_in' => 'getVersionIn',
        'licence_key' => 'getLicenceKey',
        'licence_key_starts_with' => 'getLicenceKeyStartsWith',
        'licence_key_ends_with' => 'getLicenceKeyEndsWith',
        'licence_key_contains' => 'getLicenceKeyContains',
        'licence_key_like' => 'getLicenceKeyLike',
        'licence_key_between' => 'getLicenceKeyBetween',
        'licence_key_in' => 'getLicenceKeyIn',
        'view_password' => 'getViewPassword',
        'view_password_starts_with' => 'getViewPasswordStartsWith',
        'view_password_ends_with' => 'getViewPasswordEndsWith',
        'view_password_contains' => 'getViewPasswordContains',
        'view_password_like' => 'getViewPasswordLike',
        'view_password_between' => 'getViewPasswordBetween',
        'view_password_in' => 'getViewPasswordIn',
        'edit_password' => 'getEditPassword',
        'edit_password_starts_with' => 'getEditPasswordStartsWith',
        'edit_password_ends_with' => 'getEditPasswordEndsWith',
        'edit_password_contains' => 'getEditPasswordContains',
        'edit_password_like' => 'getEditPasswordLike',
        'edit_password_between' => 'getEditPasswordBetween',
        'edit_password_in' => 'getEditPasswordIn',
        'is_encrypted' => 'getIsEncrypted',
        'row_hash' => 'getRowHash',
        'code' => 'getCode',
        'code_starts_with' => 'getCodeStartsWith',
        'code_ends_with' => 'getCodeEndsWith',
        'code_contains' => 'getCodeContains',
        'code_like' => 'getCodeLike',
        'code_between' => 'getCodeBetween',
        'code_in' => 'getCodeIn',
        'exception_policy' => 'getExceptionPolicy',
        'exception_policy_greater_than_or_equal_to' => 'getExceptionPolicyGreaterThanOrEqualTo',
        'exception_policy_greater_than' => 'getExceptionPolicyGreaterThan',
        'exception_policy_less_than' => 'getExceptionPolicyLessThan',
        'exception_policy_less_than_or_equal_to' => 'getExceptionPolicyLessThanOrEqualTo',
        'exception_policy_not_equal_to' => 'getExceptionPolicyNotEqualTo',
        'exception_policy_between' => 'getExceptionPolicyBetween',
        'exception_policy_in' => 'getExceptionPolicyIn',
        'is_isolated_to_own_app_domain' => 'getIsIsolatedToOwnAppDomain',
        'file_hash' => 'getFileHash',
        'file_hash_starts_with' => 'getFileHashStartsWith',
        'file_hash_ends_with' => 'getFileHashEndsWith',
        'file_hash_contains' => 'getFileHashContains',
        'file_hash_like' => 'getFileHashLike',
        'file_hash_between' => 'getFileHashBetween',
        'file_hash_in' => 'getFileHashIn',
        'create_date_time' => 'getCreateDateTime',
        'create_date_time_greater_than_or_equal_to' => 'getCreateDateTimeGreaterThanOrEqualTo',
        'create_date_time_greater_than' => 'getCreateDateTimeGreaterThan',
        'create_date_time_less_than' => 'getCreateDateTimeLessThan',
        'create_date_time_less_than_or_equal_to' => 'getCreateDateTimeLessThanOrEqualTo',
        'create_date_time_not_equal_to' => 'getCreateDateTimeNotEqualTo',
        'create_date_time_between' => 'getCreateDateTimeBetween',
        'create_date_time_in' => 'getCreateDateTimeIn',
        'last_write_date_time' => 'getLastWriteDateTime',
        'last_write_date_time_greater_than_or_equal_to' => 'getLastWriteDateTimeGreaterThanOrEqualTo',
        'last_write_date_time_greater_than' => 'getLastWriteDateTimeGreaterThan',
        'last_write_date_time_less_than' => 'getLastWriteDateTimeLessThan',
        'last_write_date_time_less_than_or_equal_to' => 'getLastWriteDateTimeLessThanOrEqualTo',
        'last_write_date_time_not_equal_to' => 'getLastWriteDateTimeNotEqualTo',
        'last_write_date_time_between' => 'getLastWriteDateTimeBetween',
        'last_write_date_time_in' => 'getLastWriteDateTimeIn',
        'language' => 'getLanguage',
        'language_greater_than_or_equal_to' => 'getLanguageGreaterThanOrEqualTo',
        'language_greater_than' => 'getLanguageGreaterThan',
        'language_less_than' => 'getLanguageLessThan',
        'language_less_than_or_equal_to' => 'getLanguageLessThanOrEqualTo',
        'language_not_equal_to' => 'getLanguageNotEqualTo',
        'language_between' => 'getLanguageBetween',
        'language_in' => 'getLanguageIn',
        'skip' => 'getSkip',
        'take' => 'getTake',
        'order_by' => 'getOrderBy',
        'order_by_desc' => 'getOrderByDesc',
        'include' => 'getInclude',
        'fields' => 'getFields',
        'meta' => 'getMeta'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['rec_id'] = isset($data['rec_id']) ? $data['rec_id'] : null;
        $this->container['rec_id_in'] = isset($data['rec_id_in']) ? $data['rec_id_in'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['name_starts_with'] = isset($data['name_starts_with']) ? $data['name_starts_with'] : null;
        $this->container['name_ends_with'] = isset($data['name_ends_with']) ? $data['name_ends_with'] : null;
        $this->container['name_contains'] = isset($data['name_contains']) ? $data['name_contains'] : null;
        $this->container['name_like'] = isset($data['name_like']) ? $data['name_like'] : null;
        $this->container['name_between'] = isset($data['name_between']) ? $data['name_between'] : null;
        $this->container['name_in'] = isset($data['name_in']) ? $data['name_in'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['description_starts_with'] = isset($data['description_starts_with']) ? $data['description_starts_with'] : null;
        $this->container['description_ends_with'] = isset($data['description_ends_with']) ? $data['description_ends_with'] : null;
        $this->container['description_contains'] = isset($data['description_contains']) ? $data['description_contains'] : null;
        $this->container['description_like'] = isset($data['description_like']) ? $data['description_like'] : null;
        $this->container['description_between'] = isset($data['description_between']) ? $data['description_between'] : null;
        $this->container['description_in'] = isset($data['description_in']) ? $data['description_in'] : null;
        $this->container['is_enabled'] = isset($data['is_enabled']) ? $data['is_enabled'] : null;
        $this->container['execution_order'] = isset($data['execution_order']) ? $data['execution_order'] : null;
        $this->container['execution_order_greater_than_or_equal_to'] = isset($data['execution_order_greater_than_or_equal_to']) ? $data['execution_order_greater_than_or_equal_to'] : null;
        $this->container['execution_order_greater_than'] = isset($data['execution_order_greater_than']) ? $data['execution_order_greater_than'] : null;
        $this->container['execution_order_less_than'] = isset($data['execution_order_less_than']) ? $data['execution_order_less_than'] : null;
        $this->container['execution_order_less_than_or_equal_to'] = isset($data['execution_order_less_than_or_equal_to']) ? $data['execution_order_less_than_or_equal_to'] : null;
        $this->container['execution_order_not_equal_to'] = isset($data['execution_order_not_equal_to']) ? $data['execution_order_not_equal_to'] : null;
        $this->container['execution_order_between'] = isset($data['execution_order_between']) ? $data['execution_order_between'] : null;
        $this->container['execution_order_in'] = isset($data['execution_order_in']) ? $data['execution_order_in'] : null;
        $this->container['author'] = isset($data['author']) ? $data['author'] : null;
        $this->container['author_starts_with'] = isset($data['author_starts_with']) ? $data['author_starts_with'] : null;
        $this->container['author_ends_with'] = isset($data['author_ends_with']) ? $data['author_ends_with'] : null;
        $this->container['author_contains'] = isset($data['author_contains']) ? $data['author_contains'] : null;
        $this->container['author_like'] = isset($data['author_like']) ? $data['author_like'] : null;
        $this->container['author_between'] = isset($data['author_between']) ? $data['author_between'] : null;
        $this->container['author_in'] = isset($data['author_in']) ? $data['author_in'] : null;
        $this->container['version'] = isset($data['version']) ? $data['version'] : null;
        $this->container['version_starts_with'] = isset($data['version_starts_with']) ? $data['version_starts_with'] : null;
        $this->container['version_ends_with'] = isset($data['version_ends_with']) ? $data['version_ends_with'] : null;
        $this->container['version_contains'] = isset($data['version_contains']) ? $data['version_contains'] : null;
        $this->container['version_like'] = isset($data['version_like']) ? $data['version_like'] : null;
        $this->container['version_between'] = isset($data['version_between']) ? $data['version_between'] : null;
        $this->container['version_in'] = isset($data['version_in']) ? $data['version_in'] : null;
        $this->container['licence_key'] = isset($data['licence_key']) ? $data['licence_key'] : null;
        $this->container['licence_key_starts_with'] = isset($data['licence_key_starts_with']) ? $data['licence_key_starts_with'] : null;
        $this->container['licence_key_ends_with'] = isset($data['licence_key_ends_with']) ? $data['licence_key_ends_with'] : null;
        $this->container['licence_key_contains'] = isset($data['licence_key_contains']) ? $data['licence_key_contains'] : null;
        $this->container['licence_key_like'] = isset($data['licence_key_like']) ? $data['licence_key_like'] : null;
        $this->container['licence_key_between'] = isset($data['licence_key_between']) ? $data['licence_key_between'] : null;
        $this->container['licence_key_in'] = isset($data['licence_key_in']) ? $data['licence_key_in'] : null;
        $this->container['view_password'] = isset($data['view_password']) ? $data['view_password'] : null;
        $this->container['view_password_starts_with'] = isset($data['view_password_starts_with']) ? $data['view_password_starts_with'] : null;
        $this->container['view_password_ends_with'] = isset($data['view_password_ends_with']) ? $data['view_password_ends_with'] : null;
        $this->container['view_password_contains'] = isset($data['view_password_contains']) ? $data['view_password_contains'] : null;
        $this->container['view_password_like'] = isset($data['view_password_like']) ? $data['view_password_like'] : null;
        $this->container['view_password_between'] = isset($data['view_password_between']) ? $data['view_password_between'] : null;
        $this->container['view_password_in'] = isset($data['view_password_in']) ? $data['view_password_in'] : null;
        $this->container['edit_password'] = isset($data['edit_password']) ? $data['edit_password'] : null;
        $this->container['edit_password_starts_with'] = isset($data['edit_password_starts_with']) ? $data['edit_password_starts_with'] : null;
        $this->container['edit_password_ends_with'] = isset($data['edit_password_ends_with']) ? $data['edit_password_ends_with'] : null;
        $this->container['edit_password_contains'] = isset($data['edit_password_contains']) ? $data['edit_password_contains'] : null;
        $this->container['edit_password_like'] = isset($data['edit_password_like']) ? $data['edit_password_like'] : null;
        $this->container['edit_password_between'] = isset($data['edit_password_between']) ? $data['edit_password_between'] : null;
        $this->container['edit_password_in'] = isset($data['edit_password_in']) ? $data['edit_password_in'] : null;
        $this->container['is_encrypted'] = isset($data['is_encrypted']) ? $data['is_encrypted'] : null;
        $this->container['row_hash'] = isset($data['row_hash']) ? $data['row_hash'] : null;
        $this->container['code'] = isset($data['code']) ? $data['code'] : null;
        $this->container['code_starts_with'] = isset($data['code_starts_with']) ? $data['code_starts_with'] : null;
        $this->container['code_ends_with'] = isset($data['code_ends_with']) ? $data['code_ends_with'] : null;
        $this->container['code_contains'] = isset($data['code_contains']) ? $data['code_contains'] : null;
        $this->container['code_like'] = isset($data['code_like']) ? $data['code_like'] : null;
        $this->container['code_between'] = isset($data['code_between']) ? $data['code_between'] : null;
        $this->container['code_in'] = isset($data['code_in']) ? $data['code_in'] : null;
        $this->container['exception_policy'] = isset($data['exception_policy']) ? $data['exception_policy'] : null;
        $this->container['exception_policy_greater_than_or_equal_to'] = isset($data['exception_policy_greater_than_or_equal_to']) ? $data['exception_policy_greater_than_or_equal_to'] : null;
        $this->container['exception_policy_greater_than'] = isset($data['exception_policy_greater_than']) ? $data['exception_policy_greater_than'] : null;
        $this->container['exception_policy_less_than'] = isset($data['exception_policy_less_than']) ? $data['exception_policy_less_than'] : null;
        $this->container['exception_policy_less_than_or_equal_to'] = isset($data['exception_policy_less_than_or_equal_to']) ? $data['exception_policy_less_than_or_equal_to'] : null;
        $this->container['exception_policy_not_equal_to'] = isset($data['exception_policy_not_equal_to']) ? $data['exception_policy_not_equal_to'] : null;
        $this->container['exception_policy_between'] = isset($data['exception_policy_between']) ? $data['exception_policy_between'] : null;
        $this->container['exception_policy_in'] = isset($data['exception_policy_in']) ? $data['exception_policy_in'] : null;
        $this->container['is_isolated_to_own_app_domain'] = isset($data['is_isolated_to_own_app_domain']) ? $data['is_isolated_to_own_app_domain'] : null;
        $this->container['file_hash'] = isset($data['file_hash']) ? $data['file_hash'] : null;
        $this->container['file_hash_starts_with'] = isset($data['file_hash_starts_with']) ? $data['file_hash_starts_with'] : null;
        $this->container['file_hash_ends_with'] = isset($data['file_hash_ends_with']) ? $data['file_hash_ends_with'] : null;
        $this->container['file_hash_contains'] = isset($data['file_hash_contains']) ? $data['file_hash_contains'] : null;
        $this->container['file_hash_like'] = isset($data['file_hash_like']) ? $data['file_hash_like'] : null;
        $this->container['file_hash_between'] = isset($data['file_hash_between']) ? $data['file_hash_between'] : null;
        $this->container['file_hash_in'] = isset($data['file_hash_in']) ? $data['file_hash_in'] : null;
        $this->container['create_date_time'] = isset($data['create_date_time']) ? $data['create_date_time'] : null;
        $this->container['create_date_time_greater_than_or_equal_to'] = isset($data['create_date_time_greater_than_or_equal_to']) ? $data['create_date_time_greater_than_or_equal_to'] : null;
        $this->container['create_date_time_greater_than'] = isset($data['create_date_time_greater_than']) ? $data['create_date_time_greater_than'] : null;
        $this->container['create_date_time_less_than'] = isset($data['create_date_time_less_than']) ? $data['create_date_time_less_than'] : null;
        $this->container['create_date_time_less_than_or_equal_to'] = isset($data['create_date_time_less_than_or_equal_to']) ? $data['create_date_time_less_than_or_equal_to'] : null;
        $this->container['create_date_time_not_equal_to'] = isset($data['create_date_time_not_equal_to']) ? $data['create_date_time_not_equal_to'] : null;
        $this->container['create_date_time_between'] = isset($data['create_date_time_between']) ? $data['create_date_time_between'] : null;
        $this->container['create_date_time_in'] = isset($data['create_date_time_in']) ? $data['create_date_time_in'] : null;
        $this->container['last_write_date_time'] = isset($data['last_write_date_time']) ? $data['last_write_date_time'] : null;
        $this->container['last_write_date_time_greater_than_or_equal_to'] = isset($data['last_write_date_time_greater_than_or_equal_to']) ? $data['last_write_date_time_greater_than_or_equal_to'] : null;
        $this->container['last_write_date_time_greater_than'] = isset($data['last_write_date_time_greater_than']) ? $data['last_write_date_time_greater_than'] : null;
        $this->container['last_write_date_time_less_than'] = isset($data['last_write_date_time_less_than']) ? $data['last_write_date_time_less_than'] : null;
        $this->container['last_write_date_time_less_than_or_equal_to'] = isset($data['last_write_date_time_less_than_or_equal_to']) ? $data['last_write_date_time_less_than_or_equal_to'] : null;
        $this->container['last_write_date_time_not_equal_to'] = isset($data['last_write_date_time_not_equal_to']) ? $data['last_write_date_time_not_equal_to'] : null;
        $this->container['last_write_date_time_between'] = isset($data['last_write_date_time_between']) ? $data['last_write_date_time_between'] : null;
        $this->container['last_write_date_time_in'] = isset($data['last_write_date_time_in']) ? $data['last_write_date_time_in'] : null;
        $this->container['language'] = isset($data['language']) ? $data['language'] : null;
        $this->container['language_greater_than_or_equal_to'] = isset($data['language_greater_than_or_equal_to']) ? $data['language_greater_than_or_equal_to'] : null;
        $this->container['language_greater_than'] = isset($data['language_greater_than']) ? $data['language_greater_than'] : null;
        $this->container['language_less_than'] = isset($data['language_less_than']) ? $data['language_less_than'] : null;
        $this->container['language_less_than_or_equal_to'] = isset($data['language_less_than_or_equal_to']) ? $data['language_less_than_or_equal_to'] : null;
        $this->container['language_not_equal_to'] = isset($data['language_not_equal_to']) ? $data['language_not_equal_to'] : null;
        $this->container['language_between'] = isset($data['language_between']) ? $data['language_between'] : null;
        $this->container['language_in'] = isset($data['language_in']) ? $data['language_in'] : null;
        $this->container['skip'] = isset($data['skip']) ? $data['skip'] : null;
        $this->container['take'] = isset($data['take']) ? $data['take'] : null;
        $this->container['order_by'] = isset($data['order_by']) ? $data['order_by'] : null;
        $this->container['order_by_desc'] = isset($data['order_by_desc']) ? $data['order_by_desc'] : null;
        $this->container['include'] = isset($data['include']) ? $data['include'] : null;
        $this->container['fields'] = isset($data['fields']) ? $data['fields'] : null;
        $this->container['meta'] = isset($data['meta']) ? $data['meta'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['row_hash']) && !preg_match("/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/", $this->container['row_hash'])) {
            $invalidProperties[] = "invalid value for 'row_hash', must be conform to the pattern /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.";
        }

        if (!is_null($this->container['language_between']) && !preg_match("/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/", $this->container['language_between'])) {
            $invalidProperties[] = "invalid value for 'language_between', must be conform to the pattern /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.";
        }

        if (!is_null($this->container['language_in']) && !preg_match("/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/", $this->container['language_in'])) {
            $invalidProperties[] = "invalid value for 'language_in', must be conform to the pattern /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets rec_id
     *
     * @return string
     */
    public function getRecId()
    {
        return $this->container['rec_id'];
    }

    /**
     * Sets rec_id
     *
     * @param string $rec_id rec_id
     *
     * @return $this
     */
    public function setRecId($rec_id)
    {
        $this->container['rec_id'] = $rec_id;

        return $this;
    }

    /**
     * Gets rec_id_in
     *
     * @return string[]
     */
    public function getRecIdIn()
    {
        return $this->container['rec_id_in'];
    }

    /**
     * Sets rec_id_in
     *
     * @param string[] $rec_id_in rec_id_in
     *
     * @return $this
     */
    public function setRecIdIn($rec_id_in)
    {
        $this->container['rec_id_in'] = $rec_id_in;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets name_starts_with
     *
     * @return string
     */
    public function getNameStartsWith()
    {
        return $this->container['name_starts_with'];
    }

    /**
     * Sets name_starts_with
     *
     * @param string $name_starts_with name_starts_with
     *
     * @return $this
     */
    public function setNameStartsWith($name_starts_with)
    {
        $this->container['name_starts_with'] = $name_starts_with;

        return $this;
    }

    /**
     * Gets name_ends_with
     *
     * @return string
     */
    public function getNameEndsWith()
    {
        return $this->container['name_ends_with'];
    }

    /**
     * Sets name_ends_with
     *
     * @param string $name_ends_with name_ends_with
     *
     * @return $this
     */
    public function setNameEndsWith($name_ends_with)
    {
        $this->container['name_ends_with'] = $name_ends_with;

        return $this;
    }

    /**
     * Gets name_contains
     *
     * @return string
     */
    public function getNameContains()
    {
        return $this->container['name_contains'];
    }

    /**
     * Sets name_contains
     *
     * @param string $name_contains name_contains
     *
     * @return $this
     */
    public function setNameContains($name_contains)
    {
        $this->container['name_contains'] = $name_contains;

        return $this;
    }

    /**
     * Gets name_like
     *
     * @return string
     */
    public function getNameLike()
    {
        return $this->container['name_like'];
    }

    /**
     * Sets name_like
     *
     * @param string $name_like name_like
     *
     * @return $this
     */
    public function setNameLike($name_like)
    {
        $this->container['name_like'] = $name_like;

        return $this;
    }

    /**
     * Gets name_between
     *
     * @return string[]
     */
    public function getNameBetween()
    {
        return $this->container['name_between'];
    }

    /**
     * Sets name_between
     *
     * @param string[] $name_between name_between
     *
     * @return $this
     */
    public function setNameBetween($name_between)
    {
        $this->container['name_between'] = $name_between;

        return $this;
    }

    /**
     * Gets name_in
     *
     * @return string[]
     */
    public function getNameIn()
    {
        return $this->container['name_in'];
    }

    /**
     * Sets name_in
     *
     * @param string[] $name_in name_in
     *
     * @return $this
     */
    public function setNameIn($name_in)
    {
        $this->container['name_in'] = $name_in;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets description_starts_with
     *
     * @return string
     */
    public function getDescriptionStartsWith()
    {
        return $this->container['description_starts_with'];
    }

    /**
     * Sets description_starts_with
     *
     * @param string $description_starts_with description_starts_with
     *
     * @return $this
     */
    public function setDescriptionStartsWith($description_starts_with)
    {
        $this->container['description_starts_with'] = $description_starts_with;

        return $this;
    }

    /**
     * Gets description_ends_with
     *
     * @return string
     */
    public function getDescriptionEndsWith()
    {
        return $this->container['description_ends_with'];
    }

    /**
     * Sets description_ends_with
     *
     * @param string $description_ends_with description_ends_with
     *
     * @return $this
     */
    public function setDescriptionEndsWith($description_ends_with)
    {
        $this->container['description_ends_with'] = $description_ends_with;

        return $this;
    }

    /**
     * Gets description_contains
     *
     * @return string
     */
    public function getDescriptionContains()
    {
        return $this->container['description_contains'];
    }

    /**
     * Sets description_contains
     *
     * @param string $description_contains description_contains
     *
     * @return $this
     */
    public function setDescriptionContains($description_contains)
    {
        $this->container['description_contains'] = $description_contains;

        return $this;
    }

    /**
     * Gets description_like
     *
     * @return string
     */
    public function getDescriptionLike()
    {
        return $this->container['description_like'];
    }

    /**
     * Sets description_like
     *
     * @param string $description_like description_like
     *
     * @return $this
     */
    public function setDescriptionLike($description_like)
    {
        $this->container['description_like'] = $description_like;

        return $this;
    }

    /**
     * Gets description_between
     *
     * @return string[]
     */
    public function getDescriptionBetween()
    {
        return $this->container['description_between'];
    }

    /**
     * Sets description_between
     *
     * @param string[] $description_between description_between
     *
     * @return $this
     */
    public function setDescriptionBetween($description_between)
    {
        $this->container['description_between'] = $description_between;

        return $this;
    }

    /**
     * Gets description_in
     *
     * @return string[]
     */
    public function getDescriptionIn()
    {
        return $this->container['description_in'];
    }

    /**
     * Sets description_in
     *
     * @param string[] $description_in description_in
     *
     * @return $this
     */
    public function setDescriptionIn($description_in)
    {
        $this->container['description_in'] = $description_in;

        return $this;
    }

    /**
     * Gets is_enabled
     *
     * @return bool
     */
    public function getIsEnabled()
    {
        return $this->container['is_enabled'];
    }

    /**
     * Sets is_enabled
     *
     * @param bool $is_enabled is_enabled
     *
     * @return $this
     */
    public function setIsEnabled($is_enabled)
    {
        $this->container['is_enabled'] = $is_enabled;

        return $this;
    }

    /**
     * Gets execution_order
     *
     * @return int
     */
    public function getExecutionOrder()
    {
        return $this->container['execution_order'];
    }

    /**
     * Sets execution_order
     *
     * @param int $execution_order execution_order
     *
     * @return $this
     */
    public function setExecutionOrder($execution_order)
    {
        $this->container['execution_order'] = $execution_order;

        return $this;
    }

    /**
     * Gets execution_order_greater_than_or_equal_to
     *
     * @return int
     */
    public function getExecutionOrderGreaterThanOrEqualTo()
    {
        return $this->container['execution_order_greater_than_or_equal_to'];
    }

    /**
     * Sets execution_order_greater_than_or_equal_to
     *
     * @param int $execution_order_greater_than_or_equal_to execution_order_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setExecutionOrderGreaterThanOrEqualTo($execution_order_greater_than_or_equal_to)
    {
        $this->container['execution_order_greater_than_or_equal_to'] = $execution_order_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets execution_order_greater_than
     *
     * @return int
     */
    public function getExecutionOrderGreaterThan()
    {
        return $this->container['execution_order_greater_than'];
    }

    /**
     * Sets execution_order_greater_than
     *
     * @param int $execution_order_greater_than execution_order_greater_than
     *
     * @return $this
     */
    public function setExecutionOrderGreaterThan($execution_order_greater_than)
    {
        $this->container['execution_order_greater_than'] = $execution_order_greater_than;

        return $this;
    }

    /**
     * Gets execution_order_less_than
     *
     * @return int
     */
    public function getExecutionOrderLessThan()
    {
        return $this->container['execution_order_less_than'];
    }

    /**
     * Sets execution_order_less_than
     *
     * @param int $execution_order_less_than execution_order_less_than
     *
     * @return $this
     */
    public function setExecutionOrderLessThan($execution_order_less_than)
    {
        $this->container['execution_order_less_than'] = $execution_order_less_than;

        return $this;
    }

    /**
     * Gets execution_order_less_than_or_equal_to
     *
     * @return int
     */
    public function getExecutionOrderLessThanOrEqualTo()
    {
        return $this->container['execution_order_less_than_or_equal_to'];
    }

    /**
     * Sets execution_order_less_than_or_equal_to
     *
     * @param int $execution_order_less_than_or_equal_to execution_order_less_than_or_equal_to
     *
     * @return $this
     */
    public function setExecutionOrderLessThanOrEqualTo($execution_order_less_than_or_equal_to)
    {
        $this->container['execution_order_less_than_or_equal_to'] = $execution_order_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets execution_order_not_equal_to
     *
     * @return int
     */
    public function getExecutionOrderNotEqualTo()
    {
        return $this->container['execution_order_not_equal_to'];
    }

    /**
     * Sets execution_order_not_equal_to
     *
     * @param int $execution_order_not_equal_to execution_order_not_equal_to
     *
     * @return $this
     */
    public function setExecutionOrderNotEqualTo($execution_order_not_equal_to)
    {
        $this->container['execution_order_not_equal_to'] = $execution_order_not_equal_to;

        return $this;
    }

    /**
     * Gets execution_order_between
     *
     * @return int[]
     */
    public function getExecutionOrderBetween()
    {
        return $this->container['execution_order_between'];
    }

    /**
     * Sets execution_order_between
     *
     * @param int[] $execution_order_between execution_order_between
     *
     * @return $this
     */
    public function setExecutionOrderBetween($execution_order_between)
    {
        $this->container['execution_order_between'] = $execution_order_between;

        return $this;
    }

    /**
     * Gets execution_order_in
     *
     * @return int[]
     */
    public function getExecutionOrderIn()
    {
        return $this->container['execution_order_in'];
    }

    /**
     * Sets execution_order_in
     *
     * @param int[] $execution_order_in execution_order_in
     *
     * @return $this
     */
    public function setExecutionOrderIn($execution_order_in)
    {
        $this->container['execution_order_in'] = $execution_order_in;

        return $this;
    }

    /**
     * Gets author
     *
     * @return string
     */
    public function getAuthor()
    {
        return $this->container['author'];
    }

    /**
     * Sets author
     *
     * @param string $author author
     *
     * @return $this
     */
    public function setAuthor($author)
    {
        $this->container['author'] = $author;

        return $this;
    }

    /**
     * Gets author_starts_with
     *
     * @return string
     */
    public function getAuthorStartsWith()
    {
        return $this->container['author_starts_with'];
    }

    /**
     * Sets author_starts_with
     *
     * @param string $author_starts_with author_starts_with
     *
     * @return $this
     */
    public function setAuthorStartsWith($author_starts_with)
    {
        $this->container['author_starts_with'] = $author_starts_with;

        return $this;
    }

    /**
     * Gets author_ends_with
     *
     * @return string
     */
    public function getAuthorEndsWith()
    {
        return $this->container['author_ends_with'];
    }

    /**
     * Sets author_ends_with
     *
     * @param string $author_ends_with author_ends_with
     *
     * @return $this
     */
    public function setAuthorEndsWith($author_ends_with)
    {
        $this->container['author_ends_with'] = $author_ends_with;

        return $this;
    }

    /**
     * Gets author_contains
     *
     * @return string
     */
    public function getAuthorContains()
    {
        return $this->container['author_contains'];
    }

    /**
     * Sets author_contains
     *
     * @param string $author_contains author_contains
     *
     * @return $this
     */
    public function setAuthorContains($author_contains)
    {
        $this->container['author_contains'] = $author_contains;

        return $this;
    }

    /**
     * Gets author_like
     *
     * @return string
     */
    public function getAuthorLike()
    {
        return $this->container['author_like'];
    }

    /**
     * Sets author_like
     *
     * @param string $author_like author_like
     *
     * @return $this
     */
    public function setAuthorLike($author_like)
    {
        $this->container['author_like'] = $author_like;

        return $this;
    }

    /**
     * Gets author_between
     *
     * @return string[]
     */
    public function getAuthorBetween()
    {
        return $this->container['author_between'];
    }

    /**
     * Sets author_between
     *
     * @param string[] $author_between author_between
     *
     * @return $this
     */
    public function setAuthorBetween($author_between)
    {
        $this->container['author_between'] = $author_between;

        return $this;
    }

    /**
     * Gets author_in
     *
     * @return string[]
     */
    public function getAuthorIn()
    {
        return $this->container['author_in'];
    }

    /**
     * Sets author_in
     *
     * @param string[] $author_in author_in
     *
     * @return $this
     */
    public function setAuthorIn($author_in)
    {
        $this->container['author_in'] = $author_in;

        return $this;
    }

    /**
     * Gets version
     *
     * @return string
     */
    public function getVersion()
    {
        return $this->container['version'];
    }

    /**
     * Sets version
     *
     * @param string $version version
     *
     * @return $this
     */
    public function setVersion($version)
    {
        $this->container['version'] = $version;

        return $this;
    }

    /**
     * Gets version_starts_with
     *
     * @return string
     */
    public function getVersionStartsWith()
    {
        return $this->container['version_starts_with'];
    }

    /**
     * Sets version_starts_with
     *
     * @param string $version_starts_with version_starts_with
     *
     * @return $this
     */
    public function setVersionStartsWith($version_starts_with)
    {
        $this->container['version_starts_with'] = $version_starts_with;

        return $this;
    }

    /**
     * Gets version_ends_with
     *
     * @return string
     */
    public function getVersionEndsWith()
    {
        return $this->container['version_ends_with'];
    }

    /**
     * Sets version_ends_with
     *
     * @param string $version_ends_with version_ends_with
     *
     * @return $this
     */
    public function setVersionEndsWith($version_ends_with)
    {
        $this->container['version_ends_with'] = $version_ends_with;

        return $this;
    }

    /**
     * Gets version_contains
     *
     * @return string
     */
    public function getVersionContains()
    {
        return $this->container['version_contains'];
    }

    /**
     * Sets version_contains
     *
     * @param string $version_contains version_contains
     *
     * @return $this
     */
    public function setVersionContains($version_contains)
    {
        $this->container['version_contains'] = $version_contains;

        return $this;
    }

    /**
     * Gets version_like
     *
     * @return string
     */
    public function getVersionLike()
    {
        return $this->container['version_like'];
    }

    /**
     * Sets version_like
     *
     * @param string $version_like version_like
     *
     * @return $this
     */
    public function setVersionLike($version_like)
    {
        $this->container['version_like'] = $version_like;

        return $this;
    }

    /**
     * Gets version_between
     *
     * @return string[]
     */
    public function getVersionBetween()
    {
        return $this->container['version_between'];
    }

    /**
     * Sets version_between
     *
     * @param string[] $version_between version_between
     *
     * @return $this
     */
    public function setVersionBetween($version_between)
    {
        $this->container['version_between'] = $version_between;

        return $this;
    }

    /**
     * Gets version_in
     *
     * @return string[]
     */
    public function getVersionIn()
    {
        return $this->container['version_in'];
    }

    /**
     * Sets version_in
     *
     * @param string[] $version_in version_in
     *
     * @return $this
     */
    public function setVersionIn($version_in)
    {
        $this->container['version_in'] = $version_in;

        return $this;
    }

    /**
     * Gets licence_key
     *
     * @return string
     */
    public function getLicenceKey()
    {
        return $this->container['licence_key'];
    }

    /**
     * Sets licence_key
     *
     * @param string $licence_key licence_key
     *
     * @return $this
     */
    public function setLicenceKey($licence_key)
    {
        $this->container['licence_key'] = $licence_key;

        return $this;
    }

    /**
     * Gets licence_key_starts_with
     *
     * @return string
     */
    public function getLicenceKeyStartsWith()
    {
        return $this->container['licence_key_starts_with'];
    }

    /**
     * Sets licence_key_starts_with
     *
     * @param string $licence_key_starts_with licence_key_starts_with
     *
     * @return $this
     */
    public function setLicenceKeyStartsWith($licence_key_starts_with)
    {
        $this->container['licence_key_starts_with'] = $licence_key_starts_with;

        return $this;
    }

    /**
     * Gets licence_key_ends_with
     *
     * @return string
     */
    public function getLicenceKeyEndsWith()
    {
        return $this->container['licence_key_ends_with'];
    }

    /**
     * Sets licence_key_ends_with
     *
     * @param string $licence_key_ends_with licence_key_ends_with
     *
     * @return $this
     */
    public function setLicenceKeyEndsWith($licence_key_ends_with)
    {
        $this->container['licence_key_ends_with'] = $licence_key_ends_with;

        return $this;
    }

    /**
     * Gets licence_key_contains
     *
     * @return string
     */
    public function getLicenceKeyContains()
    {
        return $this->container['licence_key_contains'];
    }

    /**
     * Sets licence_key_contains
     *
     * @param string $licence_key_contains licence_key_contains
     *
     * @return $this
     */
    public function setLicenceKeyContains($licence_key_contains)
    {
        $this->container['licence_key_contains'] = $licence_key_contains;

        return $this;
    }

    /**
     * Gets licence_key_like
     *
     * @return string
     */
    public function getLicenceKeyLike()
    {
        return $this->container['licence_key_like'];
    }

    /**
     * Sets licence_key_like
     *
     * @param string $licence_key_like licence_key_like
     *
     * @return $this
     */
    public function setLicenceKeyLike($licence_key_like)
    {
        $this->container['licence_key_like'] = $licence_key_like;

        return $this;
    }

    /**
     * Gets licence_key_between
     *
     * @return string[]
     */
    public function getLicenceKeyBetween()
    {
        return $this->container['licence_key_between'];
    }

    /**
     * Sets licence_key_between
     *
     * @param string[] $licence_key_between licence_key_between
     *
     * @return $this
     */
    public function setLicenceKeyBetween($licence_key_between)
    {
        $this->container['licence_key_between'] = $licence_key_between;

        return $this;
    }

    /**
     * Gets licence_key_in
     *
     * @return string[]
     */
    public function getLicenceKeyIn()
    {
        return $this->container['licence_key_in'];
    }

    /**
     * Sets licence_key_in
     *
     * @param string[] $licence_key_in licence_key_in
     *
     * @return $this
     */
    public function setLicenceKeyIn($licence_key_in)
    {
        $this->container['licence_key_in'] = $licence_key_in;

        return $this;
    }

    /**
     * Gets view_password
     *
     * @return string
     */
    public function getViewPassword()
    {
        return $this->container['view_password'];
    }

    /**
     * Sets view_password
     *
     * @param string $view_password view_password
     *
     * @return $this
     */
    public function setViewPassword($view_password)
    {
        $this->container['view_password'] = $view_password;

        return $this;
    }

    /**
     * Gets view_password_starts_with
     *
     * @return string
     */
    public function getViewPasswordStartsWith()
    {
        return $this->container['view_password_starts_with'];
    }

    /**
     * Sets view_password_starts_with
     *
     * @param string $view_password_starts_with view_password_starts_with
     *
     * @return $this
     */
    public function setViewPasswordStartsWith($view_password_starts_with)
    {
        $this->container['view_password_starts_with'] = $view_password_starts_with;

        return $this;
    }

    /**
     * Gets view_password_ends_with
     *
     * @return string
     */
    public function getViewPasswordEndsWith()
    {
        return $this->container['view_password_ends_with'];
    }

    /**
     * Sets view_password_ends_with
     *
     * @param string $view_password_ends_with view_password_ends_with
     *
     * @return $this
     */
    public function setViewPasswordEndsWith($view_password_ends_with)
    {
        $this->container['view_password_ends_with'] = $view_password_ends_with;

        return $this;
    }

    /**
     * Gets view_password_contains
     *
     * @return string
     */
    public function getViewPasswordContains()
    {
        return $this->container['view_password_contains'];
    }

    /**
     * Sets view_password_contains
     *
     * @param string $view_password_contains view_password_contains
     *
     * @return $this
     */
    public function setViewPasswordContains($view_password_contains)
    {
        $this->container['view_password_contains'] = $view_password_contains;

        return $this;
    }

    /**
     * Gets view_password_like
     *
     * @return string
     */
    public function getViewPasswordLike()
    {
        return $this->container['view_password_like'];
    }

    /**
     * Sets view_password_like
     *
     * @param string $view_password_like view_password_like
     *
     * @return $this
     */
    public function setViewPasswordLike($view_password_like)
    {
        $this->container['view_password_like'] = $view_password_like;

        return $this;
    }

    /**
     * Gets view_password_between
     *
     * @return string[]
     */
    public function getViewPasswordBetween()
    {
        return $this->container['view_password_between'];
    }

    /**
     * Sets view_password_between
     *
     * @param string[] $view_password_between view_password_between
     *
     * @return $this
     */
    public function setViewPasswordBetween($view_password_between)
    {
        $this->container['view_password_between'] = $view_password_between;

        return $this;
    }

    /**
     * Gets view_password_in
     *
     * @return string[]
     */
    public function getViewPasswordIn()
    {
        return $this->container['view_password_in'];
    }

    /**
     * Sets view_password_in
     *
     * @param string[] $view_password_in view_password_in
     *
     * @return $this
     */
    public function setViewPasswordIn($view_password_in)
    {
        $this->container['view_password_in'] = $view_password_in;

        return $this;
    }

    /**
     * Gets edit_password
     *
     * @return string
     */
    public function getEditPassword()
    {
        return $this->container['edit_password'];
    }

    /**
     * Sets edit_password
     *
     * @param string $edit_password edit_password
     *
     * @return $this
     */
    public function setEditPassword($edit_password)
    {
        $this->container['edit_password'] = $edit_password;

        return $this;
    }

    /**
     * Gets edit_password_starts_with
     *
     * @return string
     */
    public function getEditPasswordStartsWith()
    {
        return $this->container['edit_password_starts_with'];
    }

    /**
     * Sets edit_password_starts_with
     *
     * @param string $edit_password_starts_with edit_password_starts_with
     *
     * @return $this
     */
    public function setEditPasswordStartsWith($edit_password_starts_with)
    {
        $this->container['edit_password_starts_with'] = $edit_password_starts_with;

        return $this;
    }

    /**
     * Gets edit_password_ends_with
     *
     * @return string
     */
    public function getEditPasswordEndsWith()
    {
        return $this->container['edit_password_ends_with'];
    }

    /**
     * Sets edit_password_ends_with
     *
     * @param string $edit_password_ends_with edit_password_ends_with
     *
     * @return $this
     */
    public function setEditPasswordEndsWith($edit_password_ends_with)
    {
        $this->container['edit_password_ends_with'] = $edit_password_ends_with;

        return $this;
    }

    /**
     * Gets edit_password_contains
     *
     * @return string
     */
    public function getEditPasswordContains()
    {
        return $this->container['edit_password_contains'];
    }

    /**
     * Sets edit_password_contains
     *
     * @param string $edit_password_contains edit_password_contains
     *
     * @return $this
     */
    public function setEditPasswordContains($edit_password_contains)
    {
        $this->container['edit_password_contains'] = $edit_password_contains;

        return $this;
    }

    /**
     * Gets edit_password_like
     *
     * @return string
     */
    public function getEditPasswordLike()
    {
        return $this->container['edit_password_like'];
    }

    /**
     * Sets edit_password_like
     *
     * @param string $edit_password_like edit_password_like
     *
     * @return $this
     */
    public function setEditPasswordLike($edit_password_like)
    {
        $this->container['edit_password_like'] = $edit_password_like;

        return $this;
    }

    /**
     * Gets edit_password_between
     *
     * @return string[]
     */
    public function getEditPasswordBetween()
    {
        return $this->container['edit_password_between'];
    }

    /**
     * Sets edit_password_between
     *
     * @param string[] $edit_password_between edit_password_between
     *
     * @return $this
     */
    public function setEditPasswordBetween($edit_password_between)
    {
        $this->container['edit_password_between'] = $edit_password_between;

        return $this;
    }

    /**
     * Gets edit_password_in
     *
     * @return string[]
     */
    public function getEditPasswordIn()
    {
        return $this->container['edit_password_in'];
    }

    /**
     * Sets edit_password_in
     *
     * @param string[] $edit_password_in edit_password_in
     *
     * @return $this
     */
    public function setEditPasswordIn($edit_password_in)
    {
        $this->container['edit_password_in'] = $edit_password_in;

        return $this;
    }

    /**
     * Gets is_encrypted
     *
     * @return bool
     */
    public function getIsEncrypted()
    {
        return $this->container['is_encrypted'];
    }

    /**
     * Sets is_encrypted
     *
     * @param bool $is_encrypted is_encrypted
     *
     * @return $this
     */
    public function setIsEncrypted($is_encrypted)
    {
        $this->container['is_encrypted'] = $is_encrypted;

        return $this;
    }

    /**
     * Gets row_hash
     *
     * @return string
     */
    public function getRowHash()
    {
        return $this->container['row_hash'];
    }

    /**
     * Sets row_hash
     *
     * @param string $row_hash row_hash
     *
     * @return $this
     */
    public function setRowHash($row_hash)
    {

        if (!is_null($row_hash) && (!preg_match("/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/", $row_hash))) {
            throw new \InvalidArgumentException("invalid value for $row_hash when calling SYPluginQuery., must conform to the pattern /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.");
        }

        $this->container['row_hash'] = $row_hash;

        return $this;
    }

    /**
     * Gets code
     *
     * @return string
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string $code code
     *
     * @return $this
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets code_starts_with
     *
     * @return string
     */
    public function getCodeStartsWith()
    {
        return $this->container['code_starts_with'];
    }

    /**
     * Sets code_starts_with
     *
     * @param string $code_starts_with code_starts_with
     *
     * @return $this
     */
    public function setCodeStartsWith($code_starts_with)
    {
        $this->container['code_starts_with'] = $code_starts_with;

        return $this;
    }

    /**
     * Gets code_ends_with
     *
     * @return string
     */
    public function getCodeEndsWith()
    {
        return $this->container['code_ends_with'];
    }

    /**
     * Sets code_ends_with
     *
     * @param string $code_ends_with code_ends_with
     *
     * @return $this
     */
    public function setCodeEndsWith($code_ends_with)
    {
        $this->container['code_ends_with'] = $code_ends_with;

        return $this;
    }

    /**
     * Gets code_contains
     *
     * @return string
     */
    public function getCodeContains()
    {
        return $this->container['code_contains'];
    }

    /**
     * Sets code_contains
     *
     * @param string $code_contains code_contains
     *
     * @return $this
     */
    public function setCodeContains($code_contains)
    {
        $this->container['code_contains'] = $code_contains;

        return $this;
    }

    /**
     * Gets code_like
     *
     * @return string
     */
    public function getCodeLike()
    {
        return $this->container['code_like'];
    }

    /**
     * Sets code_like
     *
     * @param string $code_like code_like
     *
     * @return $this
     */
    public function setCodeLike($code_like)
    {
        $this->container['code_like'] = $code_like;

        return $this;
    }

    /**
     * Gets code_between
     *
     * @return string[]
     */
    public function getCodeBetween()
    {
        return $this->container['code_between'];
    }

    /**
     * Sets code_between
     *
     * @param string[] $code_between code_between
     *
     * @return $this
     */
    public function setCodeBetween($code_between)
    {
        $this->container['code_between'] = $code_between;

        return $this;
    }

    /**
     * Gets code_in
     *
     * @return string[]
     */
    public function getCodeIn()
    {
        return $this->container['code_in'];
    }

    /**
     * Sets code_in
     *
     * @param string[] $code_in code_in
     *
     * @return $this
     */
    public function setCodeIn($code_in)
    {
        $this->container['code_in'] = $code_in;

        return $this;
    }

    /**
     * Gets exception_policy
     *
     * @return int
     */
    public function getExceptionPolicy()
    {
        return $this->container['exception_policy'];
    }

    /**
     * Sets exception_policy
     *
     * @param int $exception_policy exception_policy
     *
     * @return $this
     */
    public function setExceptionPolicy($exception_policy)
    {
        $this->container['exception_policy'] = $exception_policy;

        return $this;
    }

    /**
     * Gets exception_policy_greater_than_or_equal_to
     *
     * @return int
     */
    public function getExceptionPolicyGreaterThanOrEqualTo()
    {
        return $this->container['exception_policy_greater_than_or_equal_to'];
    }

    /**
     * Sets exception_policy_greater_than_or_equal_to
     *
     * @param int $exception_policy_greater_than_or_equal_to exception_policy_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setExceptionPolicyGreaterThanOrEqualTo($exception_policy_greater_than_or_equal_to)
    {
        $this->container['exception_policy_greater_than_or_equal_to'] = $exception_policy_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets exception_policy_greater_than
     *
     * @return int
     */
    public function getExceptionPolicyGreaterThan()
    {
        return $this->container['exception_policy_greater_than'];
    }

    /**
     * Sets exception_policy_greater_than
     *
     * @param int $exception_policy_greater_than exception_policy_greater_than
     *
     * @return $this
     */
    public function setExceptionPolicyGreaterThan($exception_policy_greater_than)
    {
        $this->container['exception_policy_greater_than'] = $exception_policy_greater_than;

        return $this;
    }

    /**
     * Gets exception_policy_less_than
     *
     * @return int
     */
    public function getExceptionPolicyLessThan()
    {
        return $this->container['exception_policy_less_than'];
    }

    /**
     * Sets exception_policy_less_than
     *
     * @param int $exception_policy_less_than exception_policy_less_than
     *
     * @return $this
     */
    public function setExceptionPolicyLessThan($exception_policy_less_than)
    {
        $this->container['exception_policy_less_than'] = $exception_policy_less_than;

        return $this;
    }

    /**
     * Gets exception_policy_less_than_or_equal_to
     *
     * @return int
     */
    public function getExceptionPolicyLessThanOrEqualTo()
    {
        return $this->container['exception_policy_less_than_or_equal_to'];
    }

    /**
     * Sets exception_policy_less_than_or_equal_to
     *
     * @param int $exception_policy_less_than_or_equal_to exception_policy_less_than_or_equal_to
     *
     * @return $this
     */
    public function setExceptionPolicyLessThanOrEqualTo($exception_policy_less_than_or_equal_to)
    {
        $this->container['exception_policy_less_than_or_equal_to'] = $exception_policy_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets exception_policy_not_equal_to
     *
     * @return int
     */
    public function getExceptionPolicyNotEqualTo()
    {
        return $this->container['exception_policy_not_equal_to'];
    }

    /**
     * Sets exception_policy_not_equal_to
     *
     * @param int $exception_policy_not_equal_to exception_policy_not_equal_to
     *
     * @return $this
     */
    public function setExceptionPolicyNotEqualTo($exception_policy_not_equal_to)
    {
        $this->container['exception_policy_not_equal_to'] = $exception_policy_not_equal_to;

        return $this;
    }

    /**
     * Gets exception_policy_between
     *
     * @return int[]
     */
    public function getExceptionPolicyBetween()
    {
        return $this->container['exception_policy_between'];
    }

    /**
     * Sets exception_policy_between
     *
     * @param int[] $exception_policy_between exception_policy_between
     *
     * @return $this
     */
    public function setExceptionPolicyBetween($exception_policy_between)
    {
        $this->container['exception_policy_between'] = $exception_policy_between;

        return $this;
    }

    /**
     * Gets exception_policy_in
     *
     * @return int[]
     */
    public function getExceptionPolicyIn()
    {
        return $this->container['exception_policy_in'];
    }

    /**
     * Sets exception_policy_in
     *
     * @param int[] $exception_policy_in exception_policy_in
     *
     * @return $this
     */
    public function setExceptionPolicyIn($exception_policy_in)
    {
        $this->container['exception_policy_in'] = $exception_policy_in;

        return $this;
    }

    /**
     * Gets is_isolated_to_own_app_domain
     *
     * @return bool
     */
    public function getIsIsolatedToOwnAppDomain()
    {
        return $this->container['is_isolated_to_own_app_domain'];
    }

    /**
     * Sets is_isolated_to_own_app_domain
     *
     * @param bool $is_isolated_to_own_app_domain is_isolated_to_own_app_domain
     *
     * @return $this
     */
    public function setIsIsolatedToOwnAppDomain($is_isolated_to_own_app_domain)
    {
        $this->container['is_isolated_to_own_app_domain'] = $is_isolated_to_own_app_domain;

        return $this;
    }

    /**
     * Gets file_hash
     *
     * @return string
     */
    public function getFileHash()
    {
        return $this->container['file_hash'];
    }

    /**
     * Sets file_hash
     *
     * @param string $file_hash file_hash
     *
     * @return $this
     */
    public function setFileHash($file_hash)
    {
        $this->container['file_hash'] = $file_hash;

        return $this;
    }

    /**
     * Gets file_hash_starts_with
     *
     * @return string
     */
    public function getFileHashStartsWith()
    {
        return $this->container['file_hash_starts_with'];
    }

    /**
     * Sets file_hash_starts_with
     *
     * @param string $file_hash_starts_with file_hash_starts_with
     *
     * @return $this
     */
    public function setFileHashStartsWith($file_hash_starts_with)
    {
        $this->container['file_hash_starts_with'] = $file_hash_starts_with;

        return $this;
    }

    /**
     * Gets file_hash_ends_with
     *
     * @return string
     */
    public function getFileHashEndsWith()
    {
        return $this->container['file_hash_ends_with'];
    }

    /**
     * Sets file_hash_ends_with
     *
     * @param string $file_hash_ends_with file_hash_ends_with
     *
     * @return $this
     */
    public function setFileHashEndsWith($file_hash_ends_with)
    {
        $this->container['file_hash_ends_with'] = $file_hash_ends_with;

        return $this;
    }

    /**
     * Gets file_hash_contains
     *
     * @return string
     */
    public function getFileHashContains()
    {
        return $this->container['file_hash_contains'];
    }

    /**
     * Sets file_hash_contains
     *
     * @param string $file_hash_contains file_hash_contains
     *
     * @return $this
     */
    public function setFileHashContains($file_hash_contains)
    {
        $this->container['file_hash_contains'] = $file_hash_contains;

        return $this;
    }

    /**
     * Gets file_hash_like
     *
     * @return string
     */
    public function getFileHashLike()
    {
        return $this->container['file_hash_like'];
    }

    /**
     * Sets file_hash_like
     *
     * @param string $file_hash_like file_hash_like
     *
     * @return $this
     */
    public function setFileHashLike($file_hash_like)
    {
        $this->container['file_hash_like'] = $file_hash_like;

        return $this;
    }

    /**
     * Gets file_hash_between
     *
     * @return string[]
     */
    public function getFileHashBetween()
    {
        return $this->container['file_hash_between'];
    }

    /**
     * Sets file_hash_between
     *
     * @param string[] $file_hash_between file_hash_between
     *
     * @return $this
     */
    public function setFileHashBetween($file_hash_between)
    {
        $this->container['file_hash_between'] = $file_hash_between;

        return $this;
    }

    /**
     * Gets file_hash_in
     *
     * @return string[]
     */
    public function getFileHashIn()
    {
        return $this->container['file_hash_in'];
    }

    /**
     * Sets file_hash_in
     *
     * @param string[] $file_hash_in file_hash_in
     *
     * @return $this
     */
    public function setFileHashIn($file_hash_in)
    {
        $this->container['file_hash_in'] = $file_hash_in;

        return $this;
    }

    /**
     * Gets create_date_time
     *
     * @return \DateTime
     */
    public function getCreateDateTime()
    {
        return $this->container['create_date_time'];
    }

    /**
     * Sets create_date_time
     *
     * @param \DateTime $create_date_time create_date_time
     *
     * @return $this
     */
    public function setCreateDateTime($create_date_time)
    {
        $this->container['create_date_time'] = $create_date_time;

        return $this;
    }

    /**
     * Gets create_date_time_greater_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getCreateDateTimeGreaterThanOrEqualTo()
    {
        return $this->container['create_date_time_greater_than_or_equal_to'];
    }

    /**
     * Sets create_date_time_greater_than_or_equal_to
     *
     * @param \DateTime $create_date_time_greater_than_or_equal_to create_date_time_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setCreateDateTimeGreaterThanOrEqualTo($create_date_time_greater_than_or_equal_to)
    {
        $this->container['create_date_time_greater_than_or_equal_to'] = $create_date_time_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets create_date_time_greater_than
     *
     * @return \DateTime
     */
    public function getCreateDateTimeGreaterThan()
    {
        return $this->container['create_date_time_greater_than'];
    }

    /**
     * Sets create_date_time_greater_than
     *
     * @param \DateTime $create_date_time_greater_than create_date_time_greater_than
     *
     * @return $this
     */
    public function setCreateDateTimeGreaterThan($create_date_time_greater_than)
    {
        $this->container['create_date_time_greater_than'] = $create_date_time_greater_than;

        return $this;
    }

    /**
     * Gets create_date_time_less_than
     *
     * @return \DateTime
     */
    public function getCreateDateTimeLessThan()
    {
        return $this->container['create_date_time_less_than'];
    }

    /**
     * Sets create_date_time_less_than
     *
     * @param \DateTime $create_date_time_less_than create_date_time_less_than
     *
     * @return $this
     */
    public function setCreateDateTimeLessThan($create_date_time_less_than)
    {
        $this->container['create_date_time_less_than'] = $create_date_time_less_than;

        return $this;
    }

    /**
     * Gets create_date_time_less_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getCreateDateTimeLessThanOrEqualTo()
    {
        return $this->container['create_date_time_less_than_or_equal_to'];
    }

    /**
     * Sets create_date_time_less_than_or_equal_to
     *
     * @param \DateTime $create_date_time_less_than_or_equal_to create_date_time_less_than_or_equal_to
     *
     * @return $this
     */
    public function setCreateDateTimeLessThanOrEqualTo($create_date_time_less_than_or_equal_to)
    {
        $this->container['create_date_time_less_than_or_equal_to'] = $create_date_time_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets create_date_time_not_equal_to
     *
     * @return \DateTime
     */
    public function getCreateDateTimeNotEqualTo()
    {
        return $this->container['create_date_time_not_equal_to'];
    }

    /**
     * Sets create_date_time_not_equal_to
     *
     * @param \DateTime $create_date_time_not_equal_to create_date_time_not_equal_to
     *
     * @return $this
     */
    public function setCreateDateTimeNotEqualTo($create_date_time_not_equal_to)
    {
        $this->container['create_date_time_not_equal_to'] = $create_date_time_not_equal_to;

        return $this;
    }

    /**
     * Gets create_date_time_between
     *
     * @return \DateTime[]
     */
    public function getCreateDateTimeBetween()
    {
        return $this->container['create_date_time_between'];
    }

    /**
     * Sets create_date_time_between
     *
     * @param \DateTime[] $create_date_time_between create_date_time_between
     *
     * @return $this
     */
    public function setCreateDateTimeBetween($create_date_time_between)
    {
        $this->container['create_date_time_between'] = $create_date_time_between;

        return $this;
    }

    /**
     * Gets create_date_time_in
     *
     * @return \DateTime[]
     */
    public function getCreateDateTimeIn()
    {
        return $this->container['create_date_time_in'];
    }

    /**
     * Sets create_date_time_in
     *
     * @param \DateTime[] $create_date_time_in create_date_time_in
     *
     * @return $this
     */
    public function setCreateDateTimeIn($create_date_time_in)
    {
        $this->container['create_date_time_in'] = $create_date_time_in;

        return $this;
    }

    /**
     * Gets last_write_date_time
     *
     * @return \DateTime
     */
    public function getLastWriteDateTime()
    {
        return $this->container['last_write_date_time'];
    }

    /**
     * Sets last_write_date_time
     *
     * @param \DateTime $last_write_date_time last_write_date_time
     *
     * @return $this
     */
    public function setLastWriteDateTime($last_write_date_time)
    {
        $this->container['last_write_date_time'] = $last_write_date_time;

        return $this;
    }

    /**
     * Gets last_write_date_time_greater_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getLastWriteDateTimeGreaterThanOrEqualTo()
    {
        return $this->container['last_write_date_time_greater_than_or_equal_to'];
    }

    /**
     * Sets last_write_date_time_greater_than_or_equal_to
     *
     * @param \DateTime $last_write_date_time_greater_than_or_equal_to last_write_date_time_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setLastWriteDateTimeGreaterThanOrEqualTo($last_write_date_time_greater_than_or_equal_to)
    {
        $this->container['last_write_date_time_greater_than_or_equal_to'] = $last_write_date_time_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets last_write_date_time_greater_than
     *
     * @return \DateTime
     */
    public function getLastWriteDateTimeGreaterThan()
    {
        return $this->container['last_write_date_time_greater_than'];
    }

    /**
     * Sets last_write_date_time_greater_than
     *
     * @param \DateTime $last_write_date_time_greater_than last_write_date_time_greater_than
     *
     * @return $this
     */
    public function setLastWriteDateTimeGreaterThan($last_write_date_time_greater_than)
    {
        $this->container['last_write_date_time_greater_than'] = $last_write_date_time_greater_than;

        return $this;
    }

    /**
     * Gets last_write_date_time_less_than
     *
     * @return \DateTime
     */
    public function getLastWriteDateTimeLessThan()
    {
        return $this->container['last_write_date_time_less_than'];
    }

    /**
     * Sets last_write_date_time_less_than
     *
     * @param \DateTime $last_write_date_time_less_than last_write_date_time_less_than
     *
     * @return $this
     */
    public function setLastWriteDateTimeLessThan($last_write_date_time_less_than)
    {
        $this->container['last_write_date_time_less_than'] = $last_write_date_time_less_than;

        return $this;
    }

    /**
     * Gets last_write_date_time_less_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getLastWriteDateTimeLessThanOrEqualTo()
    {
        return $this->container['last_write_date_time_less_than_or_equal_to'];
    }

    /**
     * Sets last_write_date_time_less_than_or_equal_to
     *
     * @param \DateTime $last_write_date_time_less_than_or_equal_to last_write_date_time_less_than_or_equal_to
     *
     * @return $this
     */
    public function setLastWriteDateTimeLessThanOrEqualTo($last_write_date_time_less_than_or_equal_to)
    {
        $this->container['last_write_date_time_less_than_or_equal_to'] = $last_write_date_time_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets last_write_date_time_not_equal_to
     *
     * @return \DateTime
     */
    public function getLastWriteDateTimeNotEqualTo()
    {
        return $this->container['last_write_date_time_not_equal_to'];
    }

    /**
     * Sets last_write_date_time_not_equal_to
     *
     * @param \DateTime $last_write_date_time_not_equal_to last_write_date_time_not_equal_to
     *
     * @return $this
     */
    public function setLastWriteDateTimeNotEqualTo($last_write_date_time_not_equal_to)
    {
        $this->container['last_write_date_time_not_equal_to'] = $last_write_date_time_not_equal_to;

        return $this;
    }

    /**
     * Gets last_write_date_time_between
     *
     * @return \DateTime[]
     */
    public function getLastWriteDateTimeBetween()
    {
        return $this->container['last_write_date_time_between'];
    }

    /**
     * Sets last_write_date_time_between
     *
     * @param \DateTime[] $last_write_date_time_between last_write_date_time_between
     *
     * @return $this
     */
    public function setLastWriteDateTimeBetween($last_write_date_time_between)
    {
        $this->container['last_write_date_time_between'] = $last_write_date_time_between;

        return $this;
    }

    /**
     * Gets last_write_date_time_in
     *
     * @return \DateTime[]
     */
    public function getLastWriteDateTimeIn()
    {
        return $this->container['last_write_date_time_in'];
    }

    /**
     * Sets last_write_date_time_in
     *
     * @param \DateTime[] $last_write_date_time_in last_write_date_time_in
     *
     * @return $this
     */
    public function setLastWriteDateTimeIn($last_write_date_time_in)
    {
        $this->container['last_write_date_time_in'] = $last_write_date_time_in;

        return $this;
    }

    /**
     * Gets language
     *
     * @return int
     */
    public function getLanguage()
    {
        return $this->container['language'];
    }

    /**
     * Sets language
     *
     * @param int $language language
     *
     * @return $this
     */
    public function setLanguage($language)
    {
        $this->container['language'] = $language;

        return $this;
    }

    /**
     * Gets language_greater_than_or_equal_to
     *
     * @return int
     */
    public function getLanguageGreaterThanOrEqualTo()
    {
        return $this->container['language_greater_than_or_equal_to'];
    }

    /**
     * Sets language_greater_than_or_equal_to
     *
     * @param int $language_greater_than_or_equal_to language_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setLanguageGreaterThanOrEqualTo($language_greater_than_or_equal_to)
    {
        $this->container['language_greater_than_or_equal_to'] = $language_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets language_greater_than
     *
     * @return int
     */
    public function getLanguageGreaterThan()
    {
        return $this->container['language_greater_than'];
    }

    /**
     * Sets language_greater_than
     *
     * @param int $language_greater_than language_greater_than
     *
     * @return $this
     */
    public function setLanguageGreaterThan($language_greater_than)
    {
        $this->container['language_greater_than'] = $language_greater_than;

        return $this;
    }

    /**
     * Gets language_less_than
     *
     * @return int
     */
    public function getLanguageLessThan()
    {
        return $this->container['language_less_than'];
    }

    /**
     * Sets language_less_than
     *
     * @param int $language_less_than language_less_than
     *
     * @return $this
     */
    public function setLanguageLessThan($language_less_than)
    {
        $this->container['language_less_than'] = $language_less_than;

        return $this;
    }

    /**
     * Gets language_less_than_or_equal_to
     *
     * @return int
     */
    public function getLanguageLessThanOrEqualTo()
    {
        return $this->container['language_less_than_or_equal_to'];
    }

    /**
     * Sets language_less_than_or_equal_to
     *
     * @param int $language_less_than_or_equal_to language_less_than_or_equal_to
     *
     * @return $this
     */
    public function setLanguageLessThanOrEqualTo($language_less_than_or_equal_to)
    {
        $this->container['language_less_than_or_equal_to'] = $language_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets language_not_equal_to
     *
     * @return int
     */
    public function getLanguageNotEqualTo()
    {
        return $this->container['language_not_equal_to'];
    }

    /**
     * Sets language_not_equal_to
     *
     * @param int $language_not_equal_to language_not_equal_to
     *
     * @return $this
     */
    public function setLanguageNotEqualTo($language_not_equal_to)
    {
        $this->container['language_not_equal_to'] = $language_not_equal_to;

        return $this;
    }

    /**
     * Gets language_between
     *
     * @return string
     */
    public function getLanguageBetween()
    {
        return $this->container['language_between'];
    }

    /**
     * Sets language_between
     *
     * @param string $language_between language_between
     *
     * @return $this
     */
    public function setLanguageBetween($language_between)
    {

        if (!is_null($language_between) && (!preg_match("/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/", $language_between))) {
            throw new \InvalidArgumentException("invalid value for $language_between when calling SYPluginQuery., must conform to the pattern /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.");
        }

        $this->container['language_between'] = $language_between;

        return $this;
    }

    /**
     * Gets language_in
     *
     * @return string
     */
    public function getLanguageIn()
    {
        return $this->container['language_in'];
    }

    /**
     * Sets language_in
     *
     * @param string $language_in language_in
     *
     * @return $this
     */
    public function setLanguageIn($language_in)
    {

        if (!is_null($language_in) && (!preg_match("/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/", $language_in))) {
            throw new \InvalidArgumentException("invalid value for $language_in when calling SYPluginQuery., must conform to the pattern /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.");
        }

        $this->container['language_in'] = $language_in;

        return $this;
    }

    /**
     * Gets skip
     *
     * @return int
     */
    public function getSkip()
    {
        return $this->container['skip'];
    }

    /**
     * Sets skip
     *
     * @param int $skip skip
     *
     * @return $this
     */
    public function setSkip($skip)
    {
        $this->container['skip'] = $skip;

        return $this;
    }

    /**
     * Gets take
     *
     * @return int
     */
    public function getTake()
    {
        return $this->container['take'];
    }

    /**
     * Sets take
     *
     * @param int $take take
     *
     * @return $this
     */
    public function setTake($take)
    {
        $this->container['take'] = $take;

        return $this;
    }

    /**
     * Gets order_by
     *
     * @return string
     */
    public function getOrderBy()
    {
        return $this->container['order_by'];
    }

    /**
     * Sets order_by
     *
     * @param string $order_by order_by
     *
     * @return $this
     */
    public function setOrderBy($order_by)
    {
        $this->container['order_by'] = $order_by;

        return $this;
    }

    /**
     * Gets order_by_desc
     *
     * @return string
     */
    public function getOrderByDesc()
    {
        return $this->container['order_by_desc'];
    }

    /**
     * Sets order_by_desc
     *
     * @param string $order_by_desc order_by_desc
     *
     * @return $this
     */
    public function setOrderByDesc($order_by_desc)
    {
        $this->container['order_by_desc'] = $order_by_desc;

        return $this;
    }

    /**
     * Gets include
     *
     * @return string
     */
    public function getInclude()
    {
        return $this->container['include'];
    }

    /**
     * Sets include
     *
     * @param string $include include
     *
     * @return $this
     */
    public function setInclude($include)
    {
        $this->container['include'] = $include;

        return $this;
    }

    /**
     * Gets fields
     *
     * @return string
     */
    public function getFields()
    {
        return $this->container['fields'];
    }

    /**
     * Sets fields
     *
     * @param string $fields fields
     *
     * @return $this
     */
    public function setFields($fields)
    {
        $this->container['fields'] = $fields;

        return $this;
    }

    /**
     * Gets meta
     *
     * @return \Jiwa\Model\DictionaryStringString_
     */
    public function getMeta()
    {
        return $this->container['meta'];
    }

    /**
     * Sets meta
     *
     * @param \Jiwa\Model\DictionaryStringString_ $meta meta
     *
     * @return $this
     */
    public function setMeta($meta)
    {
        $this->container['meta'] = $meta;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


