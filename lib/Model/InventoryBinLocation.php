<?php
/**
 * InventoryBinLocation
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\Model;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * InventoryBinLocation Class Doc Comment
 *
 * @category Class
 * @description InventoryBinLocation
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InventoryBinLocation implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'InventoryBinLocation';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'bin_location_id' => 'string',
        'logical_warehouse_id' => 'string',
        'logical_warehouse_description' => 'string',
        'physical_warehouse_id' => 'string',
        'physical_warehouse_description' => 'string',
        'description' => 'string',
        'short_name' => 'string',
        'item_no' => 'int',
        'is_default' => 'bool',
        'custom_field_values' => '\Jiwa\Model\CustomFieldValue[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'bin_location_id' => null,
        'logical_warehouse_id' => null,
        'logical_warehouse_description' => null,
        'physical_warehouse_id' => null,
        'physical_warehouse_description' => null,
        'description' => null,
        'short_name' => null,
        'item_no' => 'int32',
        'is_default' => null,
        'custom_field_values' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'bin_location_id' => 'BinLocationID',
        'logical_warehouse_id' => 'LogicalWarehouseID',
        'logical_warehouse_description' => 'LogicalWarehouseDescription',
        'physical_warehouse_id' => 'PhysicalWarehouseID',
        'physical_warehouse_description' => 'PhysicalWarehouseDescription',
        'description' => 'Description',
        'short_name' => 'ShortName',
        'item_no' => 'ItemNo',
        'is_default' => 'IsDefault',
        'custom_field_values' => 'CustomFieldValues'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'bin_location_id' => 'setBinLocationId',
        'logical_warehouse_id' => 'setLogicalWarehouseId',
        'logical_warehouse_description' => 'setLogicalWarehouseDescription',
        'physical_warehouse_id' => 'setPhysicalWarehouseId',
        'physical_warehouse_description' => 'setPhysicalWarehouseDescription',
        'description' => 'setDescription',
        'short_name' => 'setShortName',
        'item_no' => 'setItemNo',
        'is_default' => 'setIsDefault',
        'custom_field_values' => 'setCustomFieldValues'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'bin_location_id' => 'getBinLocationId',
        'logical_warehouse_id' => 'getLogicalWarehouseId',
        'logical_warehouse_description' => 'getLogicalWarehouseDescription',
        'physical_warehouse_id' => 'getPhysicalWarehouseId',
        'physical_warehouse_description' => 'getPhysicalWarehouseDescription',
        'description' => 'getDescription',
        'short_name' => 'getShortName',
        'item_no' => 'getItemNo',
        'is_default' => 'getIsDefault',
        'custom_field_values' => 'getCustomFieldValues'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['bin_location_id'] = isset($data['bin_location_id']) ? $data['bin_location_id'] : null;
        $this->container['logical_warehouse_id'] = isset($data['logical_warehouse_id']) ? $data['logical_warehouse_id'] : null;
        $this->container['logical_warehouse_description'] = isset($data['logical_warehouse_description']) ? $data['logical_warehouse_description'] : null;
        $this->container['physical_warehouse_id'] = isset($data['physical_warehouse_id']) ? $data['physical_warehouse_id'] : null;
        $this->container['physical_warehouse_description'] = isset($data['physical_warehouse_description']) ? $data['physical_warehouse_description'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['short_name'] = isset($data['short_name']) ? $data['short_name'] : null;
        $this->container['item_no'] = isset($data['item_no']) ? $data['item_no'] : null;
        $this->container['is_default'] = isset($data['is_default']) ? $data['is_default'] : null;
        $this->container['custom_field_values'] = isset($data['custom_field_values']) ? $data['custom_field_values'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets bin_location_id
     *
     * @return string
     */
    public function getBinLocationId()
    {
        return $this->container['bin_location_id'];
    }

    /**
     * Sets bin_location_id
     *
     * @param string $bin_location_id bin_location_id
     *
     * @return $this
     */
    public function setBinLocationId($bin_location_id)
    {
        $this->container['bin_location_id'] = $bin_location_id;

        return $this;
    }

    /**
     * Gets logical_warehouse_id
     *
     * @return string
     */
    public function getLogicalWarehouseId()
    {
        return $this->container['logical_warehouse_id'];
    }

    /**
     * Sets logical_warehouse_id
     *
     * @param string $logical_warehouse_id logical_warehouse_id
     *
     * @return $this
     */
    public function setLogicalWarehouseId($logical_warehouse_id)
    {
        $this->container['logical_warehouse_id'] = $logical_warehouse_id;

        return $this;
    }

    /**
     * Gets logical_warehouse_description
     *
     * @return string
     */
    public function getLogicalWarehouseDescription()
    {
        return $this->container['logical_warehouse_description'];
    }

    /**
     * Sets logical_warehouse_description
     *
     * @param string $logical_warehouse_description logical_warehouse_description
     *
     * @return $this
     */
    public function setLogicalWarehouseDescription($logical_warehouse_description)
    {
        $this->container['logical_warehouse_description'] = $logical_warehouse_description;

        return $this;
    }

    /**
     * Gets physical_warehouse_id
     *
     * @return string
     */
    public function getPhysicalWarehouseId()
    {
        return $this->container['physical_warehouse_id'];
    }

    /**
     * Sets physical_warehouse_id
     *
     * @param string $physical_warehouse_id physical_warehouse_id
     *
     * @return $this
     */
    public function setPhysicalWarehouseId($physical_warehouse_id)
    {
        $this->container['physical_warehouse_id'] = $physical_warehouse_id;

        return $this;
    }

    /**
     * Gets physical_warehouse_description
     *
     * @return string
     */
    public function getPhysicalWarehouseDescription()
    {
        return $this->container['physical_warehouse_description'];
    }

    /**
     * Sets physical_warehouse_description
     *
     * @param string $physical_warehouse_description physical_warehouse_description
     *
     * @return $this
     */
    public function setPhysicalWarehouseDescription($physical_warehouse_description)
    {
        $this->container['physical_warehouse_description'] = $physical_warehouse_description;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets short_name
     *
     * @return string
     */
    public function getShortName()
    {
        return $this->container['short_name'];
    }

    /**
     * Sets short_name
     *
     * @param string $short_name short_name
     *
     * @return $this
     */
    public function setShortName($short_name)
    {
        $this->container['short_name'] = $short_name;

        return $this;
    }

    /**
     * Gets item_no
     *
     * @return int
     */
    public function getItemNo()
    {
        return $this->container['item_no'];
    }

    /**
     * Sets item_no
     *
     * @param int $item_no item_no
     *
     * @return $this
     */
    public function setItemNo($item_no)
    {
        $this->container['item_no'] = $item_no;

        return $this;
    }

    /**
     * Gets is_default
     *
     * @return bool
     */
    public function getIsDefault()
    {
        return $this->container['is_default'];
    }

    /**
     * Sets is_default
     *
     * @param bool $is_default is_default
     *
     * @return $this
     */
    public function setIsDefault($is_default)
    {
        $this->container['is_default'] = $is_default;

        return $this;
    }

    /**
     * Gets custom_field_values
     *
     * @return \Jiwa\Model\CustomFieldValue[]
     */
    public function getCustomFieldValues()
    {
        return $this->container['custom_field_values'];
    }

    /**
     * Sets custom_field_values
     *
     * @param \Jiwa\Model\CustomFieldValue[] $custom_field_values custom_field_values
     *
     * @return $this
     */
    public function setCustomFieldValues($custom_field_values)
    {
        $this->container['custom_field_values'] = $custom_field_values;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


