<?php
/**
 * GLCategoryQuery
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\Model;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * GLCategoryQuery Class Doc Comment
 *
 * @category Class
 * @description GL_CategoryQuery
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class GLCategoryQuery implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'GL_CategoryQuery';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'gl_category_id' => 'string',
        'gl_category_id_starts_with' => 'string',
        'gl_category_id_ends_with' => 'string',
        'gl_category_id_contains' => 'string',
        'gl_category_id_like' => 'string',
        'gl_category_id_between' => 'string[]',
        'gl_category_id_in' => 'string[]',
        'last_saved_date_time' => '\DateTime',
        'last_saved_date_time_greater_than_or_equal_to' => '\DateTime',
        'last_saved_date_time_greater_than' => '\DateTime',
        'last_saved_date_time_less_than' => '\DateTime',
        'last_saved_date_time_less_than_or_equal_to' => '\DateTime',
        'last_saved_date_time_not_equal_to' => '\DateTime',
        'last_saved_date_time_between' => '\DateTime[]',
        'last_saved_date_time_in' => '\DateTime[]',
        'description' => 'string',
        'description_starts_with' => 'string',
        'description_ends_with' => 'string',
        'description_contains' => 'string',
        'description_like' => 'string',
        'description_between' => 'string[]',
        'description_in' => 'string[]',
        'exp_sign' => 'int',
        'exp_sign_greater_than_or_equal_to' => 'int',
        'exp_sign_greater_than' => 'int',
        'exp_sign_less_than' => 'int',
        'exp_sign_less_than_or_equal_to' => 'int',
        'exp_sign_not_equal_to' => 'int',
        'exp_sign_between' => 'int[]',
        'exp_sign_in' => 'int[]',
        'acc_type' => 'int',
        'acc_type_greater_than_or_equal_to' => 'int',
        'acc_type_greater_than' => 'int',
        'acc_type_less_than' => 'int',
        'acc_type_less_than_or_equal_to' => 'int',
        'acc_type_not_equal_to' => 'int',
        'acc_type_between' => 'int[]',
        'acc_type_in' => 'int[]',
        'group1' => 'string',
        'group1_starts_with' => 'string',
        'group1_ends_with' => 'string',
        'group1_contains' => 'string',
        'group1_like' => 'string',
        'group1_between' => 'string[]',
        'group1_in' => 'string[]',
        'group2' => 'string',
        'group2_starts_with' => 'string',
        'group2_ends_with' => 'string',
        'group2_contains' => 'string',
        'group2_like' => 'string',
        'group2_between' => 'string[]',
        'group2_in' => 'string[]',
        'group2_display_order' => 'int',
        'group2_display_order_greater_than_or_equal_to' => 'int',
        'group2_display_order_greater_than' => 'int',
        'group2_display_order_less_than' => 'int',
        'group2_display_order_less_than_or_equal_to' => 'int',
        'group2_display_order_not_equal_to' => 'int',
        'group2_display_order_between' => 'int[]',
        'group2_display_order_in' => 'int[]',
        'group1_display_order' => 'int',
        'group1_display_order_greater_than_or_equal_to' => 'int',
        'group1_display_order_greater_than' => 'int',
        'group1_display_order_less_than' => 'int',
        'group1_display_order_less_than_or_equal_to' => 'int',
        'group1_display_order_not_equal_to' => 'int',
        'group1_display_order_between' => 'int[]',
        'group1_display_order_in' => 'int[]',
        'skip' => 'int',
        'take' => 'int',
        'order_by' => 'string',
        'order_by_desc' => 'string',
        'include' => 'string',
        'fields' => 'string',
        'meta' => '\Jiwa\Model\DictionaryStringString_'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'gl_category_id' => null,
        'gl_category_id_starts_with' => null,
        'gl_category_id_ends_with' => null,
        'gl_category_id_contains' => null,
        'gl_category_id_like' => null,
        'gl_category_id_between' => null,
        'gl_category_id_in' => null,
        'last_saved_date_time' => 'date-time',
        'last_saved_date_time_greater_than_or_equal_to' => 'date-time',
        'last_saved_date_time_greater_than' => 'date-time',
        'last_saved_date_time_less_than' => 'date-time',
        'last_saved_date_time_less_than_or_equal_to' => 'date-time',
        'last_saved_date_time_not_equal_to' => 'date-time',
        'last_saved_date_time_between' => 'date-time',
        'last_saved_date_time_in' => 'date-time',
        'description' => null,
        'description_starts_with' => null,
        'description_ends_with' => null,
        'description_contains' => null,
        'description_like' => null,
        'description_between' => null,
        'description_in' => null,
        'exp_sign' => 'int32',
        'exp_sign_greater_than_or_equal_to' => 'int32',
        'exp_sign_greater_than' => 'int32',
        'exp_sign_less_than' => 'int32',
        'exp_sign_less_than_or_equal_to' => 'int32',
        'exp_sign_not_equal_to' => 'int32',
        'exp_sign_between' => 'int32',
        'exp_sign_in' => 'int32',
        'acc_type' => 'int32',
        'acc_type_greater_than_or_equal_to' => 'int32',
        'acc_type_greater_than' => 'int32',
        'acc_type_less_than' => 'int32',
        'acc_type_less_than_or_equal_to' => 'int32',
        'acc_type_not_equal_to' => 'int32',
        'acc_type_between' => 'int32',
        'acc_type_in' => 'int32',
        'group1' => null,
        'group1_starts_with' => null,
        'group1_ends_with' => null,
        'group1_contains' => null,
        'group1_like' => null,
        'group1_between' => null,
        'group1_in' => null,
        'group2' => null,
        'group2_starts_with' => null,
        'group2_ends_with' => null,
        'group2_contains' => null,
        'group2_like' => null,
        'group2_between' => null,
        'group2_in' => null,
        'group2_display_order' => 'int32',
        'group2_display_order_greater_than_or_equal_to' => 'int32',
        'group2_display_order_greater_than' => 'int32',
        'group2_display_order_less_than' => 'int32',
        'group2_display_order_less_than_or_equal_to' => 'int32',
        'group2_display_order_not_equal_to' => 'int32',
        'group2_display_order_between' => 'int32',
        'group2_display_order_in' => 'int32',
        'group1_display_order' => 'int32',
        'group1_display_order_greater_than_or_equal_to' => 'int32',
        'group1_display_order_greater_than' => 'int32',
        'group1_display_order_less_than' => 'int32',
        'group1_display_order_less_than_or_equal_to' => 'int32',
        'group1_display_order_not_equal_to' => 'int32',
        'group1_display_order_between' => 'int32',
        'group1_display_order_in' => 'int32',
        'skip' => 'int32',
        'take' => 'int32',
        'order_by' => null,
        'order_by_desc' => null,
        'include' => null,
        'fields' => null,
        'meta' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'gl_category_id' => 'GLCategoryID',
        'gl_category_id_starts_with' => 'GLCategoryIDStartsWith',
        'gl_category_id_ends_with' => 'GLCategoryIDEndsWith',
        'gl_category_id_contains' => 'GLCategoryIDContains',
        'gl_category_id_like' => 'GLCategoryIDLike',
        'gl_category_id_between' => 'GLCategoryIDBetween',
        'gl_category_id_in' => 'GLCategoryIDIn',
        'last_saved_date_time' => 'LastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'LastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'LastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'LastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'LastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'LastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'LastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'LastSavedDateTimeIn',
        'description' => 'Description',
        'description_starts_with' => 'DescriptionStartsWith',
        'description_ends_with' => 'DescriptionEndsWith',
        'description_contains' => 'DescriptionContains',
        'description_like' => 'DescriptionLike',
        'description_between' => 'DescriptionBetween',
        'description_in' => 'DescriptionIn',
        'exp_sign' => 'ExpSign',
        'exp_sign_greater_than_or_equal_to' => 'ExpSignGreaterThanOrEqualTo',
        'exp_sign_greater_than' => 'ExpSignGreaterThan',
        'exp_sign_less_than' => 'ExpSignLessThan',
        'exp_sign_less_than_or_equal_to' => 'ExpSignLessThanOrEqualTo',
        'exp_sign_not_equal_to' => 'ExpSignNotEqualTo',
        'exp_sign_between' => 'ExpSignBetween',
        'exp_sign_in' => 'ExpSignIn',
        'acc_type' => 'AccType',
        'acc_type_greater_than_or_equal_to' => 'AccTypeGreaterThanOrEqualTo',
        'acc_type_greater_than' => 'AccTypeGreaterThan',
        'acc_type_less_than' => 'AccTypeLessThan',
        'acc_type_less_than_or_equal_to' => 'AccTypeLessThanOrEqualTo',
        'acc_type_not_equal_to' => 'AccTypeNotEqualTo',
        'acc_type_between' => 'AccTypeBetween',
        'acc_type_in' => 'AccTypeIn',
        'group1' => 'Group1',
        'group1_starts_with' => 'Group1StartsWith',
        'group1_ends_with' => 'Group1EndsWith',
        'group1_contains' => 'Group1Contains',
        'group1_like' => 'Group1Like',
        'group1_between' => 'Group1Between',
        'group1_in' => 'Group1In',
        'group2' => 'Group2',
        'group2_starts_with' => 'Group2StartsWith',
        'group2_ends_with' => 'Group2EndsWith',
        'group2_contains' => 'Group2Contains',
        'group2_like' => 'Group2Like',
        'group2_between' => 'Group2Between',
        'group2_in' => 'Group2In',
        'group2_display_order' => 'Group2DisplayOrder',
        'group2_display_order_greater_than_or_equal_to' => 'Group2DisplayOrderGreaterThanOrEqualTo',
        'group2_display_order_greater_than' => 'Group2DisplayOrderGreaterThan',
        'group2_display_order_less_than' => 'Group2DisplayOrderLessThan',
        'group2_display_order_less_than_or_equal_to' => 'Group2DisplayOrderLessThanOrEqualTo',
        'group2_display_order_not_equal_to' => 'Group2DisplayOrderNotEqualTo',
        'group2_display_order_between' => 'Group2DisplayOrderBetween',
        'group2_display_order_in' => 'Group2DisplayOrderIn',
        'group1_display_order' => 'Group1DisplayOrder',
        'group1_display_order_greater_than_or_equal_to' => 'Group1DisplayOrderGreaterThanOrEqualTo',
        'group1_display_order_greater_than' => 'Group1DisplayOrderGreaterThan',
        'group1_display_order_less_than' => 'Group1DisplayOrderLessThan',
        'group1_display_order_less_than_or_equal_to' => 'Group1DisplayOrderLessThanOrEqualTo',
        'group1_display_order_not_equal_to' => 'Group1DisplayOrderNotEqualTo',
        'group1_display_order_between' => 'Group1DisplayOrderBetween',
        'group1_display_order_in' => 'Group1DisplayOrderIn',
        'skip' => 'Skip',
        'take' => 'Take',
        'order_by' => 'OrderBy',
        'order_by_desc' => 'OrderByDesc',
        'include' => 'Include',
        'fields' => 'Fields',
        'meta' => 'Meta'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'gl_category_id' => 'setGlCategoryId',
        'gl_category_id_starts_with' => 'setGlCategoryIdStartsWith',
        'gl_category_id_ends_with' => 'setGlCategoryIdEndsWith',
        'gl_category_id_contains' => 'setGlCategoryIdContains',
        'gl_category_id_like' => 'setGlCategoryIdLike',
        'gl_category_id_between' => 'setGlCategoryIdBetween',
        'gl_category_id_in' => 'setGlCategoryIdIn',
        'last_saved_date_time' => 'setLastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'setLastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'setLastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'setLastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'setLastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'setLastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'setLastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'setLastSavedDateTimeIn',
        'description' => 'setDescription',
        'description_starts_with' => 'setDescriptionStartsWith',
        'description_ends_with' => 'setDescriptionEndsWith',
        'description_contains' => 'setDescriptionContains',
        'description_like' => 'setDescriptionLike',
        'description_between' => 'setDescriptionBetween',
        'description_in' => 'setDescriptionIn',
        'exp_sign' => 'setExpSign',
        'exp_sign_greater_than_or_equal_to' => 'setExpSignGreaterThanOrEqualTo',
        'exp_sign_greater_than' => 'setExpSignGreaterThan',
        'exp_sign_less_than' => 'setExpSignLessThan',
        'exp_sign_less_than_or_equal_to' => 'setExpSignLessThanOrEqualTo',
        'exp_sign_not_equal_to' => 'setExpSignNotEqualTo',
        'exp_sign_between' => 'setExpSignBetween',
        'exp_sign_in' => 'setExpSignIn',
        'acc_type' => 'setAccType',
        'acc_type_greater_than_or_equal_to' => 'setAccTypeGreaterThanOrEqualTo',
        'acc_type_greater_than' => 'setAccTypeGreaterThan',
        'acc_type_less_than' => 'setAccTypeLessThan',
        'acc_type_less_than_or_equal_to' => 'setAccTypeLessThanOrEqualTo',
        'acc_type_not_equal_to' => 'setAccTypeNotEqualTo',
        'acc_type_between' => 'setAccTypeBetween',
        'acc_type_in' => 'setAccTypeIn',
        'group1' => 'setGroup1',
        'group1_starts_with' => 'setGroup1StartsWith',
        'group1_ends_with' => 'setGroup1EndsWith',
        'group1_contains' => 'setGroup1Contains',
        'group1_like' => 'setGroup1Like',
        'group1_between' => 'setGroup1Between',
        'group1_in' => 'setGroup1In',
        'group2' => 'setGroup2',
        'group2_starts_with' => 'setGroup2StartsWith',
        'group2_ends_with' => 'setGroup2EndsWith',
        'group2_contains' => 'setGroup2Contains',
        'group2_like' => 'setGroup2Like',
        'group2_between' => 'setGroup2Between',
        'group2_in' => 'setGroup2In',
        'group2_display_order' => 'setGroup2DisplayOrder',
        'group2_display_order_greater_than_or_equal_to' => 'setGroup2DisplayOrderGreaterThanOrEqualTo',
        'group2_display_order_greater_than' => 'setGroup2DisplayOrderGreaterThan',
        'group2_display_order_less_than' => 'setGroup2DisplayOrderLessThan',
        'group2_display_order_less_than_or_equal_to' => 'setGroup2DisplayOrderLessThanOrEqualTo',
        'group2_display_order_not_equal_to' => 'setGroup2DisplayOrderNotEqualTo',
        'group2_display_order_between' => 'setGroup2DisplayOrderBetween',
        'group2_display_order_in' => 'setGroup2DisplayOrderIn',
        'group1_display_order' => 'setGroup1DisplayOrder',
        'group1_display_order_greater_than_or_equal_to' => 'setGroup1DisplayOrderGreaterThanOrEqualTo',
        'group1_display_order_greater_than' => 'setGroup1DisplayOrderGreaterThan',
        'group1_display_order_less_than' => 'setGroup1DisplayOrderLessThan',
        'group1_display_order_less_than_or_equal_to' => 'setGroup1DisplayOrderLessThanOrEqualTo',
        'group1_display_order_not_equal_to' => 'setGroup1DisplayOrderNotEqualTo',
        'group1_display_order_between' => 'setGroup1DisplayOrderBetween',
        'group1_display_order_in' => 'setGroup1DisplayOrderIn',
        'skip' => 'setSkip',
        'take' => 'setTake',
        'order_by' => 'setOrderBy',
        'order_by_desc' => 'setOrderByDesc',
        'include' => 'setInclude',
        'fields' => 'setFields',
        'meta' => 'setMeta'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'gl_category_id' => 'getGlCategoryId',
        'gl_category_id_starts_with' => 'getGlCategoryIdStartsWith',
        'gl_category_id_ends_with' => 'getGlCategoryIdEndsWith',
        'gl_category_id_contains' => 'getGlCategoryIdContains',
        'gl_category_id_like' => 'getGlCategoryIdLike',
        'gl_category_id_between' => 'getGlCategoryIdBetween',
        'gl_category_id_in' => 'getGlCategoryIdIn',
        'last_saved_date_time' => 'getLastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'getLastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'getLastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'getLastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'getLastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'getLastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'getLastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'getLastSavedDateTimeIn',
        'description' => 'getDescription',
        'description_starts_with' => 'getDescriptionStartsWith',
        'description_ends_with' => 'getDescriptionEndsWith',
        'description_contains' => 'getDescriptionContains',
        'description_like' => 'getDescriptionLike',
        'description_between' => 'getDescriptionBetween',
        'description_in' => 'getDescriptionIn',
        'exp_sign' => 'getExpSign',
        'exp_sign_greater_than_or_equal_to' => 'getExpSignGreaterThanOrEqualTo',
        'exp_sign_greater_than' => 'getExpSignGreaterThan',
        'exp_sign_less_than' => 'getExpSignLessThan',
        'exp_sign_less_than_or_equal_to' => 'getExpSignLessThanOrEqualTo',
        'exp_sign_not_equal_to' => 'getExpSignNotEqualTo',
        'exp_sign_between' => 'getExpSignBetween',
        'exp_sign_in' => 'getExpSignIn',
        'acc_type' => 'getAccType',
        'acc_type_greater_than_or_equal_to' => 'getAccTypeGreaterThanOrEqualTo',
        'acc_type_greater_than' => 'getAccTypeGreaterThan',
        'acc_type_less_than' => 'getAccTypeLessThan',
        'acc_type_less_than_or_equal_to' => 'getAccTypeLessThanOrEqualTo',
        'acc_type_not_equal_to' => 'getAccTypeNotEqualTo',
        'acc_type_between' => 'getAccTypeBetween',
        'acc_type_in' => 'getAccTypeIn',
        'group1' => 'getGroup1',
        'group1_starts_with' => 'getGroup1StartsWith',
        'group1_ends_with' => 'getGroup1EndsWith',
        'group1_contains' => 'getGroup1Contains',
        'group1_like' => 'getGroup1Like',
        'group1_between' => 'getGroup1Between',
        'group1_in' => 'getGroup1In',
        'group2' => 'getGroup2',
        'group2_starts_with' => 'getGroup2StartsWith',
        'group2_ends_with' => 'getGroup2EndsWith',
        'group2_contains' => 'getGroup2Contains',
        'group2_like' => 'getGroup2Like',
        'group2_between' => 'getGroup2Between',
        'group2_in' => 'getGroup2In',
        'group2_display_order' => 'getGroup2DisplayOrder',
        'group2_display_order_greater_than_or_equal_to' => 'getGroup2DisplayOrderGreaterThanOrEqualTo',
        'group2_display_order_greater_than' => 'getGroup2DisplayOrderGreaterThan',
        'group2_display_order_less_than' => 'getGroup2DisplayOrderLessThan',
        'group2_display_order_less_than_or_equal_to' => 'getGroup2DisplayOrderLessThanOrEqualTo',
        'group2_display_order_not_equal_to' => 'getGroup2DisplayOrderNotEqualTo',
        'group2_display_order_between' => 'getGroup2DisplayOrderBetween',
        'group2_display_order_in' => 'getGroup2DisplayOrderIn',
        'group1_display_order' => 'getGroup1DisplayOrder',
        'group1_display_order_greater_than_or_equal_to' => 'getGroup1DisplayOrderGreaterThanOrEqualTo',
        'group1_display_order_greater_than' => 'getGroup1DisplayOrderGreaterThan',
        'group1_display_order_less_than' => 'getGroup1DisplayOrderLessThan',
        'group1_display_order_less_than_or_equal_to' => 'getGroup1DisplayOrderLessThanOrEqualTo',
        'group1_display_order_not_equal_to' => 'getGroup1DisplayOrderNotEqualTo',
        'group1_display_order_between' => 'getGroup1DisplayOrderBetween',
        'group1_display_order_in' => 'getGroup1DisplayOrderIn',
        'skip' => 'getSkip',
        'take' => 'getTake',
        'order_by' => 'getOrderBy',
        'order_by_desc' => 'getOrderByDesc',
        'include' => 'getInclude',
        'fields' => 'getFields',
        'meta' => 'getMeta'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['gl_category_id'] = isset($data['gl_category_id']) ? $data['gl_category_id'] : null;
        $this->container['gl_category_id_starts_with'] = isset($data['gl_category_id_starts_with']) ? $data['gl_category_id_starts_with'] : null;
        $this->container['gl_category_id_ends_with'] = isset($data['gl_category_id_ends_with']) ? $data['gl_category_id_ends_with'] : null;
        $this->container['gl_category_id_contains'] = isset($data['gl_category_id_contains']) ? $data['gl_category_id_contains'] : null;
        $this->container['gl_category_id_like'] = isset($data['gl_category_id_like']) ? $data['gl_category_id_like'] : null;
        $this->container['gl_category_id_between'] = isset($data['gl_category_id_between']) ? $data['gl_category_id_between'] : null;
        $this->container['gl_category_id_in'] = isset($data['gl_category_id_in']) ? $data['gl_category_id_in'] : null;
        $this->container['last_saved_date_time'] = isset($data['last_saved_date_time']) ? $data['last_saved_date_time'] : null;
        $this->container['last_saved_date_time_greater_than_or_equal_to'] = isset($data['last_saved_date_time_greater_than_or_equal_to']) ? $data['last_saved_date_time_greater_than_or_equal_to'] : null;
        $this->container['last_saved_date_time_greater_than'] = isset($data['last_saved_date_time_greater_than']) ? $data['last_saved_date_time_greater_than'] : null;
        $this->container['last_saved_date_time_less_than'] = isset($data['last_saved_date_time_less_than']) ? $data['last_saved_date_time_less_than'] : null;
        $this->container['last_saved_date_time_less_than_or_equal_to'] = isset($data['last_saved_date_time_less_than_or_equal_to']) ? $data['last_saved_date_time_less_than_or_equal_to'] : null;
        $this->container['last_saved_date_time_not_equal_to'] = isset($data['last_saved_date_time_not_equal_to']) ? $data['last_saved_date_time_not_equal_to'] : null;
        $this->container['last_saved_date_time_between'] = isset($data['last_saved_date_time_between']) ? $data['last_saved_date_time_between'] : null;
        $this->container['last_saved_date_time_in'] = isset($data['last_saved_date_time_in']) ? $data['last_saved_date_time_in'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['description_starts_with'] = isset($data['description_starts_with']) ? $data['description_starts_with'] : null;
        $this->container['description_ends_with'] = isset($data['description_ends_with']) ? $data['description_ends_with'] : null;
        $this->container['description_contains'] = isset($data['description_contains']) ? $data['description_contains'] : null;
        $this->container['description_like'] = isset($data['description_like']) ? $data['description_like'] : null;
        $this->container['description_between'] = isset($data['description_between']) ? $data['description_between'] : null;
        $this->container['description_in'] = isset($data['description_in']) ? $data['description_in'] : null;
        $this->container['exp_sign'] = isset($data['exp_sign']) ? $data['exp_sign'] : null;
        $this->container['exp_sign_greater_than_or_equal_to'] = isset($data['exp_sign_greater_than_or_equal_to']) ? $data['exp_sign_greater_than_or_equal_to'] : null;
        $this->container['exp_sign_greater_than'] = isset($data['exp_sign_greater_than']) ? $data['exp_sign_greater_than'] : null;
        $this->container['exp_sign_less_than'] = isset($data['exp_sign_less_than']) ? $data['exp_sign_less_than'] : null;
        $this->container['exp_sign_less_than_or_equal_to'] = isset($data['exp_sign_less_than_or_equal_to']) ? $data['exp_sign_less_than_or_equal_to'] : null;
        $this->container['exp_sign_not_equal_to'] = isset($data['exp_sign_not_equal_to']) ? $data['exp_sign_not_equal_to'] : null;
        $this->container['exp_sign_between'] = isset($data['exp_sign_between']) ? $data['exp_sign_between'] : null;
        $this->container['exp_sign_in'] = isset($data['exp_sign_in']) ? $data['exp_sign_in'] : null;
        $this->container['acc_type'] = isset($data['acc_type']) ? $data['acc_type'] : null;
        $this->container['acc_type_greater_than_or_equal_to'] = isset($data['acc_type_greater_than_or_equal_to']) ? $data['acc_type_greater_than_or_equal_to'] : null;
        $this->container['acc_type_greater_than'] = isset($data['acc_type_greater_than']) ? $data['acc_type_greater_than'] : null;
        $this->container['acc_type_less_than'] = isset($data['acc_type_less_than']) ? $data['acc_type_less_than'] : null;
        $this->container['acc_type_less_than_or_equal_to'] = isset($data['acc_type_less_than_or_equal_to']) ? $data['acc_type_less_than_or_equal_to'] : null;
        $this->container['acc_type_not_equal_to'] = isset($data['acc_type_not_equal_to']) ? $data['acc_type_not_equal_to'] : null;
        $this->container['acc_type_between'] = isset($data['acc_type_between']) ? $data['acc_type_between'] : null;
        $this->container['acc_type_in'] = isset($data['acc_type_in']) ? $data['acc_type_in'] : null;
        $this->container['group1'] = isset($data['group1']) ? $data['group1'] : null;
        $this->container['group1_starts_with'] = isset($data['group1_starts_with']) ? $data['group1_starts_with'] : null;
        $this->container['group1_ends_with'] = isset($data['group1_ends_with']) ? $data['group1_ends_with'] : null;
        $this->container['group1_contains'] = isset($data['group1_contains']) ? $data['group1_contains'] : null;
        $this->container['group1_like'] = isset($data['group1_like']) ? $data['group1_like'] : null;
        $this->container['group1_between'] = isset($data['group1_between']) ? $data['group1_between'] : null;
        $this->container['group1_in'] = isset($data['group1_in']) ? $data['group1_in'] : null;
        $this->container['group2'] = isset($data['group2']) ? $data['group2'] : null;
        $this->container['group2_starts_with'] = isset($data['group2_starts_with']) ? $data['group2_starts_with'] : null;
        $this->container['group2_ends_with'] = isset($data['group2_ends_with']) ? $data['group2_ends_with'] : null;
        $this->container['group2_contains'] = isset($data['group2_contains']) ? $data['group2_contains'] : null;
        $this->container['group2_like'] = isset($data['group2_like']) ? $data['group2_like'] : null;
        $this->container['group2_between'] = isset($data['group2_between']) ? $data['group2_between'] : null;
        $this->container['group2_in'] = isset($data['group2_in']) ? $data['group2_in'] : null;
        $this->container['group2_display_order'] = isset($data['group2_display_order']) ? $data['group2_display_order'] : null;
        $this->container['group2_display_order_greater_than_or_equal_to'] = isset($data['group2_display_order_greater_than_or_equal_to']) ? $data['group2_display_order_greater_than_or_equal_to'] : null;
        $this->container['group2_display_order_greater_than'] = isset($data['group2_display_order_greater_than']) ? $data['group2_display_order_greater_than'] : null;
        $this->container['group2_display_order_less_than'] = isset($data['group2_display_order_less_than']) ? $data['group2_display_order_less_than'] : null;
        $this->container['group2_display_order_less_than_or_equal_to'] = isset($data['group2_display_order_less_than_or_equal_to']) ? $data['group2_display_order_less_than_or_equal_to'] : null;
        $this->container['group2_display_order_not_equal_to'] = isset($data['group2_display_order_not_equal_to']) ? $data['group2_display_order_not_equal_to'] : null;
        $this->container['group2_display_order_between'] = isset($data['group2_display_order_between']) ? $data['group2_display_order_between'] : null;
        $this->container['group2_display_order_in'] = isset($data['group2_display_order_in']) ? $data['group2_display_order_in'] : null;
        $this->container['group1_display_order'] = isset($data['group1_display_order']) ? $data['group1_display_order'] : null;
        $this->container['group1_display_order_greater_than_or_equal_to'] = isset($data['group1_display_order_greater_than_or_equal_to']) ? $data['group1_display_order_greater_than_or_equal_to'] : null;
        $this->container['group1_display_order_greater_than'] = isset($data['group1_display_order_greater_than']) ? $data['group1_display_order_greater_than'] : null;
        $this->container['group1_display_order_less_than'] = isset($data['group1_display_order_less_than']) ? $data['group1_display_order_less_than'] : null;
        $this->container['group1_display_order_less_than_or_equal_to'] = isset($data['group1_display_order_less_than_or_equal_to']) ? $data['group1_display_order_less_than_or_equal_to'] : null;
        $this->container['group1_display_order_not_equal_to'] = isset($data['group1_display_order_not_equal_to']) ? $data['group1_display_order_not_equal_to'] : null;
        $this->container['group1_display_order_between'] = isset($data['group1_display_order_between']) ? $data['group1_display_order_between'] : null;
        $this->container['group1_display_order_in'] = isset($data['group1_display_order_in']) ? $data['group1_display_order_in'] : null;
        $this->container['skip'] = isset($data['skip']) ? $data['skip'] : null;
        $this->container['take'] = isset($data['take']) ? $data['take'] : null;
        $this->container['order_by'] = isset($data['order_by']) ? $data['order_by'] : null;
        $this->container['order_by_desc'] = isset($data['order_by_desc']) ? $data['order_by_desc'] : null;
        $this->container['include'] = isset($data['include']) ? $data['include'] : null;
        $this->container['fields'] = isset($data['fields']) ? $data['fields'] : null;
        $this->container['meta'] = isset($data['meta']) ? $data['meta'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets gl_category_id
     *
     * @return string
     */
    public function getGlCategoryId()
    {
        return $this->container['gl_category_id'];
    }

    /**
     * Sets gl_category_id
     *
     * @param string $gl_category_id gl_category_id
     *
     * @return $this
     */
    public function setGlCategoryId($gl_category_id)
    {
        $this->container['gl_category_id'] = $gl_category_id;

        return $this;
    }

    /**
     * Gets gl_category_id_starts_with
     *
     * @return string
     */
    public function getGlCategoryIdStartsWith()
    {
        return $this->container['gl_category_id_starts_with'];
    }

    /**
     * Sets gl_category_id_starts_with
     *
     * @param string $gl_category_id_starts_with gl_category_id_starts_with
     *
     * @return $this
     */
    public function setGlCategoryIdStartsWith($gl_category_id_starts_with)
    {
        $this->container['gl_category_id_starts_with'] = $gl_category_id_starts_with;

        return $this;
    }

    /**
     * Gets gl_category_id_ends_with
     *
     * @return string
     */
    public function getGlCategoryIdEndsWith()
    {
        return $this->container['gl_category_id_ends_with'];
    }

    /**
     * Sets gl_category_id_ends_with
     *
     * @param string $gl_category_id_ends_with gl_category_id_ends_with
     *
     * @return $this
     */
    public function setGlCategoryIdEndsWith($gl_category_id_ends_with)
    {
        $this->container['gl_category_id_ends_with'] = $gl_category_id_ends_with;

        return $this;
    }

    /**
     * Gets gl_category_id_contains
     *
     * @return string
     */
    public function getGlCategoryIdContains()
    {
        return $this->container['gl_category_id_contains'];
    }

    /**
     * Sets gl_category_id_contains
     *
     * @param string $gl_category_id_contains gl_category_id_contains
     *
     * @return $this
     */
    public function setGlCategoryIdContains($gl_category_id_contains)
    {
        $this->container['gl_category_id_contains'] = $gl_category_id_contains;

        return $this;
    }

    /**
     * Gets gl_category_id_like
     *
     * @return string
     */
    public function getGlCategoryIdLike()
    {
        return $this->container['gl_category_id_like'];
    }

    /**
     * Sets gl_category_id_like
     *
     * @param string $gl_category_id_like gl_category_id_like
     *
     * @return $this
     */
    public function setGlCategoryIdLike($gl_category_id_like)
    {
        $this->container['gl_category_id_like'] = $gl_category_id_like;

        return $this;
    }

    /**
     * Gets gl_category_id_between
     *
     * @return string[]
     */
    public function getGlCategoryIdBetween()
    {
        return $this->container['gl_category_id_between'];
    }

    /**
     * Sets gl_category_id_between
     *
     * @param string[] $gl_category_id_between gl_category_id_between
     *
     * @return $this
     */
    public function setGlCategoryIdBetween($gl_category_id_between)
    {
        $this->container['gl_category_id_between'] = $gl_category_id_between;

        return $this;
    }

    /**
     * Gets gl_category_id_in
     *
     * @return string[]
     */
    public function getGlCategoryIdIn()
    {
        return $this->container['gl_category_id_in'];
    }

    /**
     * Sets gl_category_id_in
     *
     * @param string[] $gl_category_id_in gl_category_id_in
     *
     * @return $this
     */
    public function setGlCategoryIdIn($gl_category_id_in)
    {
        $this->container['gl_category_id_in'] = $gl_category_id_in;

        return $this;
    }

    /**
     * Gets last_saved_date_time
     *
     * @return \DateTime
     */
    public function getLastSavedDateTime()
    {
        return $this->container['last_saved_date_time'];
    }

    /**
     * Sets last_saved_date_time
     *
     * @param \DateTime $last_saved_date_time last_saved_date_time
     *
     * @return $this
     */
    public function setLastSavedDateTime($last_saved_date_time)
    {
        $this->container['last_saved_date_time'] = $last_saved_date_time;

        return $this;
    }

    /**
     * Gets last_saved_date_time_greater_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeGreaterThanOrEqualTo()
    {
        return $this->container['last_saved_date_time_greater_than_or_equal_to'];
    }

    /**
     * Sets last_saved_date_time_greater_than_or_equal_to
     *
     * @param \DateTime $last_saved_date_time_greater_than_or_equal_to last_saved_date_time_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeGreaterThanOrEqualTo($last_saved_date_time_greater_than_or_equal_to)
    {
        $this->container['last_saved_date_time_greater_than_or_equal_to'] = $last_saved_date_time_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_greater_than
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeGreaterThan()
    {
        return $this->container['last_saved_date_time_greater_than'];
    }

    /**
     * Sets last_saved_date_time_greater_than
     *
     * @param \DateTime $last_saved_date_time_greater_than last_saved_date_time_greater_than
     *
     * @return $this
     */
    public function setLastSavedDateTimeGreaterThan($last_saved_date_time_greater_than)
    {
        $this->container['last_saved_date_time_greater_than'] = $last_saved_date_time_greater_than;

        return $this;
    }

    /**
     * Gets last_saved_date_time_less_than
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeLessThan()
    {
        return $this->container['last_saved_date_time_less_than'];
    }

    /**
     * Sets last_saved_date_time_less_than
     *
     * @param \DateTime $last_saved_date_time_less_than last_saved_date_time_less_than
     *
     * @return $this
     */
    public function setLastSavedDateTimeLessThan($last_saved_date_time_less_than)
    {
        $this->container['last_saved_date_time_less_than'] = $last_saved_date_time_less_than;

        return $this;
    }

    /**
     * Gets last_saved_date_time_less_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeLessThanOrEqualTo()
    {
        return $this->container['last_saved_date_time_less_than_or_equal_to'];
    }

    /**
     * Sets last_saved_date_time_less_than_or_equal_to
     *
     * @param \DateTime $last_saved_date_time_less_than_or_equal_to last_saved_date_time_less_than_or_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeLessThanOrEqualTo($last_saved_date_time_less_than_or_equal_to)
    {
        $this->container['last_saved_date_time_less_than_or_equal_to'] = $last_saved_date_time_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_not_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeNotEqualTo()
    {
        return $this->container['last_saved_date_time_not_equal_to'];
    }

    /**
     * Sets last_saved_date_time_not_equal_to
     *
     * @param \DateTime $last_saved_date_time_not_equal_to last_saved_date_time_not_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeNotEqualTo($last_saved_date_time_not_equal_to)
    {
        $this->container['last_saved_date_time_not_equal_to'] = $last_saved_date_time_not_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_between
     *
     * @return \DateTime[]
     */
    public function getLastSavedDateTimeBetween()
    {
        return $this->container['last_saved_date_time_between'];
    }

    /**
     * Sets last_saved_date_time_between
     *
     * @param \DateTime[] $last_saved_date_time_between last_saved_date_time_between
     *
     * @return $this
     */
    public function setLastSavedDateTimeBetween($last_saved_date_time_between)
    {
        $this->container['last_saved_date_time_between'] = $last_saved_date_time_between;

        return $this;
    }

    /**
     * Gets last_saved_date_time_in
     *
     * @return \DateTime[]
     */
    public function getLastSavedDateTimeIn()
    {
        return $this->container['last_saved_date_time_in'];
    }

    /**
     * Sets last_saved_date_time_in
     *
     * @param \DateTime[] $last_saved_date_time_in last_saved_date_time_in
     *
     * @return $this
     */
    public function setLastSavedDateTimeIn($last_saved_date_time_in)
    {
        $this->container['last_saved_date_time_in'] = $last_saved_date_time_in;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets description_starts_with
     *
     * @return string
     */
    public function getDescriptionStartsWith()
    {
        return $this->container['description_starts_with'];
    }

    /**
     * Sets description_starts_with
     *
     * @param string $description_starts_with description_starts_with
     *
     * @return $this
     */
    public function setDescriptionStartsWith($description_starts_with)
    {
        $this->container['description_starts_with'] = $description_starts_with;

        return $this;
    }

    /**
     * Gets description_ends_with
     *
     * @return string
     */
    public function getDescriptionEndsWith()
    {
        return $this->container['description_ends_with'];
    }

    /**
     * Sets description_ends_with
     *
     * @param string $description_ends_with description_ends_with
     *
     * @return $this
     */
    public function setDescriptionEndsWith($description_ends_with)
    {
        $this->container['description_ends_with'] = $description_ends_with;

        return $this;
    }

    /**
     * Gets description_contains
     *
     * @return string
     */
    public function getDescriptionContains()
    {
        return $this->container['description_contains'];
    }

    /**
     * Sets description_contains
     *
     * @param string $description_contains description_contains
     *
     * @return $this
     */
    public function setDescriptionContains($description_contains)
    {
        $this->container['description_contains'] = $description_contains;

        return $this;
    }

    /**
     * Gets description_like
     *
     * @return string
     */
    public function getDescriptionLike()
    {
        return $this->container['description_like'];
    }

    /**
     * Sets description_like
     *
     * @param string $description_like description_like
     *
     * @return $this
     */
    public function setDescriptionLike($description_like)
    {
        $this->container['description_like'] = $description_like;

        return $this;
    }

    /**
     * Gets description_between
     *
     * @return string[]
     */
    public function getDescriptionBetween()
    {
        return $this->container['description_between'];
    }

    /**
     * Sets description_between
     *
     * @param string[] $description_between description_between
     *
     * @return $this
     */
    public function setDescriptionBetween($description_between)
    {
        $this->container['description_between'] = $description_between;

        return $this;
    }

    /**
     * Gets description_in
     *
     * @return string[]
     */
    public function getDescriptionIn()
    {
        return $this->container['description_in'];
    }

    /**
     * Sets description_in
     *
     * @param string[] $description_in description_in
     *
     * @return $this
     */
    public function setDescriptionIn($description_in)
    {
        $this->container['description_in'] = $description_in;

        return $this;
    }

    /**
     * Gets exp_sign
     *
     * @return int
     */
    public function getExpSign()
    {
        return $this->container['exp_sign'];
    }

    /**
     * Sets exp_sign
     *
     * @param int $exp_sign exp_sign
     *
     * @return $this
     */
    public function setExpSign($exp_sign)
    {
        $this->container['exp_sign'] = $exp_sign;

        return $this;
    }

    /**
     * Gets exp_sign_greater_than_or_equal_to
     *
     * @return int
     */
    public function getExpSignGreaterThanOrEqualTo()
    {
        return $this->container['exp_sign_greater_than_or_equal_to'];
    }

    /**
     * Sets exp_sign_greater_than_or_equal_to
     *
     * @param int $exp_sign_greater_than_or_equal_to exp_sign_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setExpSignGreaterThanOrEqualTo($exp_sign_greater_than_or_equal_to)
    {
        $this->container['exp_sign_greater_than_or_equal_to'] = $exp_sign_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets exp_sign_greater_than
     *
     * @return int
     */
    public function getExpSignGreaterThan()
    {
        return $this->container['exp_sign_greater_than'];
    }

    /**
     * Sets exp_sign_greater_than
     *
     * @param int $exp_sign_greater_than exp_sign_greater_than
     *
     * @return $this
     */
    public function setExpSignGreaterThan($exp_sign_greater_than)
    {
        $this->container['exp_sign_greater_than'] = $exp_sign_greater_than;

        return $this;
    }

    /**
     * Gets exp_sign_less_than
     *
     * @return int
     */
    public function getExpSignLessThan()
    {
        return $this->container['exp_sign_less_than'];
    }

    /**
     * Sets exp_sign_less_than
     *
     * @param int $exp_sign_less_than exp_sign_less_than
     *
     * @return $this
     */
    public function setExpSignLessThan($exp_sign_less_than)
    {
        $this->container['exp_sign_less_than'] = $exp_sign_less_than;

        return $this;
    }

    /**
     * Gets exp_sign_less_than_or_equal_to
     *
     * @return int
     */
    public function getExpSignLessThanOrEqualTo()
    {
        return $this->container['exp_sign_less_than_or_equal_to'];
    }

    /**
     * Sets exp_sign_less_than_or_equal_to
     *
     * @param int $exp_sign_less_than_or_equal_to exp_sign_less_than_or_equal_to
     *
     * @return $this
     */
    public function setExpSignLessThanOrEqualTo($exp_sign_less_than_or_equal_to)
    {
        $this->container['exp_sign_less_than_or_equal_to'] = $exp_sign_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets exp_sign_not_equal_to
     *
     * @return int
     */
    public function getExpSignNotEqualTo()
    {
        return $this->container['exp_sign_not_equal_to'];
    }

    /**
     * Sets exp_sign_not_equal_to
     *
     * @param int $exp_sign_not_equal_to exp_sign_not_equal_to
     *
     * @return $this
     */
    public function setExpSignNotEqualTo($exp_sign_not_equal_to)
    {
        $this->container['exp_sign_not_equal_to'] = $exp_sign_not_equal_to;

        return $this;
    }

    /**
     * Gets exp_sign_between
     *
     * @return int[]
     */
    public function getExpSignBetween()
    {
        return $this->container['exp_sign_between'];
    }

    /**
     * Sets exp_sign_between
     *
     * @param int[] $exp_sign_between exp_sign_between
     *
     * @return $this
     */
    public function setExpSignBetween($exp_sign_between)
    {
        $this->container['exp_sign_between'] = $exp_sign_between;

        return $this;
    }

    /**
     * Gets exp_sign_in
     *
     * @return int[]
     */
    public function getExpSignIn()
    {
        return $this->container['exp_sign_in'];
    }

    /**
     * Sets exp_sign_in
     *
     * @param int[] $exp_sign_in exp_sign_in
     *
     * @return $this
     */
    public function setExpSignIn($exp_sign_in)
    {
        $this->container['exp_sign_in'] = $exp_sign_in;

        return $this;
    }

    /**
     * Gets acc_type
     *
     * @return int
     */
    public function getAccType()
    {
        return $this->container['acc_type'];
    }

    /**
     * Sets acc_type
     *
     * @param int $acc_type acc_type
     *
     * @return $this
     */
    public function setAccType($acc_type)
    {
        $this->container['acc_type'] = $acc_type;

        return $this;
    }

    /**
     * Gets acc_type_greater_than_or_equal_to
     *
     * @return int
     */
    public function getAccTypeGreaterThanOrEqualTo()
    {
        return $this->container['acc_type_greater_than_or_equal_to'];
    }

    /**
     * Sets acc_type_greater_than_or_equal_to
     *
     * @param int $acc_type_greater_than_or_equal_to acc_type_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setAccTypeGreaterThanOrEqualTo($acc_type_greater_than_or_equal_to)
    {
        $this->container['acc_type_greater_than_or_equal_to'] = $acc_type_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets acc_type_greater_than
     *
     * @return int
     */
    public function getAccTypeGreaterThan()
    {
        return $this->container['acc_type_greater_than'];
    }

    /**
     * Sets acc_type_greater_than
     *
     * @param int $acc_type_greater_than acc_type_greater_than
     *
     * @return $this
     */
    public function setAccTypeGreaterThan($acc_type_greater_than)
    {
        $this->container['acc_type_greater_than'] = $acc_type_greater_than;

        return $this;
    }

    /**
     * Gets acc_type_less_than
     *
     * @return int
     */
    public function getAccTypeLessThan()
    {
        return $this->container['acc_type_less_than'];
    }

    /**
     * Sets acc_type_less_than
     *
     * @param int $acc_type_less_than acc_type_less_than
     *
     * @return $this
     */
    public function setAccTypeLessThan($acc_type_less_than)
    {
        $this->container['acc_type_less_than'] = $acc_type_less_than;

        return $this;
    }

    /**
     * Gets acc_type_less_than_or_equal_to
     *
     * @return int
     */
    public function getAccTypeLessThanOrEqualTo()
    {
        return $this->container['acc_type_less_than_or_equal_to'];
    }

    /**
     * Sets acc_type_less_than_or_equal_to
     *
     * @param int $acc_type_less_than_or_equal_to acc_type_less_than_or_equal_to
     *
     * @return $this
     */
    public function setAccTypeLessThanOrEqualTo($acc_type_less_than_or_equal_to)
    {
        $this->container['acc_type_less_than_or_equal_to'] = $acc_type_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets acc_type_not_equal_to
     *
     * @return int
     */
    public function getAccTypeNotEqualTo()
    {
        return $this->container['acc_type_not_equal_to'];
    }

    /**
     * Sets acc_type_not_equal_to
     *
     * @param int $acc_type_not_equal_to acc_type_not_equal_to
     *
     * @return $this
     */
    public function setAccTypeNotEqualTo($acc_type_not_equal_to)
    {
        $this->container['acc_type_not_equal_to'] = $acc_type_not_equal_to;

        return $this;
    }

    /**
     * Gets acc_type_between
     *
     * @return int[]
     */
    public function getAccTypeBetween()
    {
        return $this->container['acc_type_between'];
    }

    /**
     * Sets acc_type_between
     *
     * @param int[] $acc_type_between acc_type_between
     *
     * @return $this
     */
    public function setAccTypeBetween($acc_type_between)
    {
        $this->container['acc_type_between'] = $acc_type_between;

        return $this;
    }

    /**
     * Gets acc_type_in
     *
     * @return int[]
     */
    public function getAccTypeIn()
    {
        return $this->container['acc_type_in'];
    }

    /**
     * Sets acc_type_in
     *
     * @param int[] $acc_type_in acc_type_in
     *
     * @return $this
     */
    public function setAccTypeIn($acc_type_in)
    {
        $this->container['acc_type_in'] = $acc_type_in;

        return $this;
    }

    /**
     * Gets group1
     *
     * @return string
     */
    public function getGroup1()
    {
        return $this->container['group1'];
    }

    /**
     * Sets group1
     *
     * @param string $group1 group1
     *
     * @return $this
     */
    public function setGroup1($group1)
    {
        $this->container['group1'] = $group1;

        return $this;
    }

    /**
     * Gets group1_starts_with
     *
     * @return string
     */
    public function getGroup1StartsWith()
    {
        return $this->container['group1_starts_with'];
    }

    /**
     * Sets group1_starts_with
     *
     * @param string $group1_starts_with group1_starts_with
     *
     * @return $this
     */
    public function setGroup1StartsWith($group1_starts_with)
    {
        $this->container['group1_starts_with'] = $group1_starts_with;

        return $this;
    }

    /**
     * Gets group1_ends_with
     *
     * @return string
     */
    public function getGroup1EndsWith()
    {
        return $this->container['group1_ends_with'];
    }

    /**
     * Sets group1_ends_with
     *
     * @param string $group1_ends_with group1_ends_with
     *
     * @return $this
     */
    public function setGroup1EndsWith($group1_ends_with)
    {
        $this->container['group1_ends_with'] = $group1_ends_with;

        return $this;
    }

    /**
     * Gets group1_contains
     *
     * @return string
     */
    public function getGroup1Contains()
    {
        return $this->container['group1_contains'];
    }

    /**
     * Sets group1_contains
     *
     * @param string $group1_contains group1_contains
     *
     * @return $this
     */
    public function setGroup1Contains($group1_contains)
    {
        $this->container['group1_contains'] = $group1_contains;

        return $this;
    }

    /**
     * Gets group1_like
     *
     * @return string
     */
    public function getGroup1Like()
    {
        return $this->container['group1_like'];
    }

    /**
     * Sets group1_like
     *
     * @param string $group1_like group1_like
     *
     * @return $this
     */
    public function setGroup1Like($group1_like)
    {
        $this->container['group1_like'] = $group1_like;

        return $this;
    }

    /**
     * Gets group1_between
     *
     * @return string[]
     */
    public function getGroup1Between()
    {
        return $this->container['group1_between'];
    }

    /**
     * Sets group1_between
     *
     * @param string[] $group1_between group1_between
     *
     * @return $this
     */
    public function setGroup1Between($group1_between)
    {
        $this->container['group1_between'] = $group1_between;

        return $this;
    }

    /**
     * Gets group1_in
     *
     * @return string[]
     */
    public function getGroup1In()
    {
        return $this->container['group1_in'];
    }

    /**
     * Sets group1_in
     *
     * @param string[] $group1_in group1_in
     *
     * @return $this
     */
    public function setGroup1In($group1_in)
    {
        $this->container['group1_in'] = $group1_in;

        return $this;
    }

    /**
     * Gets group2
     *
     * @return string
     */
    public function getGroup2()
    {
        return $this->container['group2'];
    }

    /**
     * Sets group2
     *
     * @param string $group2 group2
     *
     * @return $this
     */
    public function setGroup2($group2)
    {
        $this->container['group2'] = $group2;

        return $this;
    }

    /**
     * Gets group2_starts_with
     *
     * @return string
     */
    public function getGroup2StartsWith()
    {
        return $this->container['group2_starts_with'];
    }

    /**
     * Sets group2_starts_with
     *
     * @param string $group2_starts_with group2_starts_with
     *
     * @return $this
     */
    public function setGroup2StartsWith($group2_starts_with)
    {
        $this->container['group2_starts_with'] = $group2_starts_with;

        return $this;
    }

    /**
     * Gets group2_ends_with
     *
     * @return string
     */
    public function getGroup2EndsWith()
    {
        return $this->container['group2_ends_with'];
    }

    /**
     * Sets group2_ends_with
     *
     * @param string $group2_ends_with group2_ends_with
     *
     * @return $this
     */
    public function setGroup2EndsWith($group2_ends_with)
    {
        $this->container['group2_ends_with'] = $group2_ends_with;

        return $this;
    }

    /**
     * Gets group2_contains
     *
     * @return string
     */
    public function getGroup2Contains()
    {
        return $this->container['group2_contains'];
    }

    /**
     * Sets group2_contains
     *
     * @param string $group2_contains group2_contains
     *
     * @return $this
     */
    public function setGroup2Contains($group2_contains)
    {
        $this->container['group2_contains'] = $group2_contains;

        return $this;
    }

    /**
     * Gets group2_like
     *
     * @return string
     */
    public function getGroup2Like()
    {
        return $this->container['group2_like'];
    }

    /**
     * Sets group2_like
     *
     * @param string $group2_like group2_like
     *
     * @return $this
     */
    public function setGroup2Like($group2_like)
    {
        $this->container['group2_like'] = $group2_like;

        return $this;
    }

    /**
     * Gets group2_between
     *
     * @return string[]
     */
    public function getGroup2Between()
    {
        return $this->container['group2_between'];
    }

    /**
     * Sets group2_between
     *
     * @param string[] $group2_between group2_between
     *
     * @return $this
     */
    public function setGroup2Between($group2_between)
    {
        $this->container['group2_between'] = $group2_between;

        return $this;
    }

    /**
     * Gets group2_in
     *
     * @return string[]
     */
    public function getGroup2In()
    {
        return $this->container['group2_in'];
    }

    /**
     * Sets group2_in
     *
     * @param string[] $group2_in group2_in
     *
     * @return $this
     */
    public function setGroup2In($group2_in)
    {
        $this->container['group2_in'] = $group2_in;

        return $this;
    }

    /**
     * Gets group2_display_order
     *
     * @return int
     */
    public function getGroup2DisplayOrder()
    {
        return $this->container['group2_display_order'];
    }

    /**
     * Sets group2_display_order
     *
     * @param int $group2_display_order group2_display_order
     *
     * @return $this
     */
    public function setGroup2DisplayOrder($group2_display_order)
    {
        $this->container['group2_display_order'] = $group2_display_order;

        return $this;
    }

    /**
     * Gets group2_display_order_greater_than_or_equal_to
     *
     * @return int
     */
    public function getGroup2DisplayOrderGreaterThanOrEqualTo()
    {
        return $this->container['group2_display_order_greater_than_or_equal_to'];
    }

    /**
     * Sets group2_display_order_greater_than_or_equal_to
     *
     * @param int $group2_display_order_greater_than_or_equal_to group2_display_order_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setGroup2DisplayOrderGreaterThanOrEqualTo($group2_display_order_greater_than_or_equal_to)
    {
        $this->container['group2_display_order_greater_than_or_equal_to'] = $group2_display_order_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets group2_display_order_greater_than
     *
     * @return int
     */
    public function getGroup2DisplayOrderGreaterThan()
    {
        return $this->container['group2_display_order_greater_than'];
    }

    /**
     * Sets group2_display_order_greater_than
     *
     * @param int $group2_display_order_greater_than group2_display_order_greater_than
     *
     * @return $this
     */
    public function setGroup2DisplayOrderGreaterThan($group2_display_order_greater_than)
    {
        $this->container['group2_display_order_greater_than'] = $group2_display_order_greater_than;

        return $this;
    }

    /**
     * Gets group2_display_order_less_than
     *
     * @return int
     */
    public function getGroup2DisplayOrderLessThan()
    {
        return $this->container['group2_display_order_less_than'];
    }

    /**
     * Sets group2_display_order_less_than
     *
     * @param int $group2_display_order_less_than group2_display_order_less_than
     *
     * @return $this
     */
    public function setGroup2DisplayOrderLessThan($group2_display_order_less_than)
    {
        $this->container['group2_display_order_less_than'] = $group2_display_order_less_than;

        return $this;
    }

    /**
     * Gets group2_display_order_less_than_or_equal_to
     *
     * @return int
     */
    public function getGroup2DisplayOrderLessThanOrEqualTo()
    {
        return $this->container['group2_display_order_less_than_or_equal_to'];
    }

    /**
     * Sets group2_display_order_less_than_or_equal_to
     *
     * @param int $group2_display_order_less_than_or_equal_to group2_display_order_less_than_or_equal_to
     *
     * @return $this
     */
    public function setGroup2DisplayOrderLessThanOrEqualTo($group2_display_order_less_than_or_equal_to)
    {
        $this->container['group2_display_order_less_than_or_equal_to'] = $group2_display_order_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets group2_display_order_not_equal_to
     *
     * @return int
     */
    public function getGroup2DisplayOrderNotEqualTo()
    {
        return $this->container['group2_display_order_not_equal_to'];
    }

    /**
     * Sets group2_display_order_not_equal_to
     *
     * @param int $group2_display_order_not_equal_to group2_display_order_not_equal_to
     *
     * @return $this
     */
    public function setGroup2DisplayOrderNotEqualTo($group2_display_order_not_equal_to)
    {
        $this->container['group2_display_order_not_equal_to'] = $group2_display_order_not_equal_to;

        return $this;
    }

    /**
     * Gets group2_display_order_between
     *
     * @return int[]
     */
    public function getGroup2DisplayOrderBetween()
    {
        return $this->container['group2_display_order_between'];
    }

    /**
     * Sets group2_display_order_between
     *
     * @param int[] $group2_display_order_between group2_display_order_between
     *
     * @return $this
     */
    public function setGroup2DisplayOrderBetween($group2_display_order_between)
    {
        $this->container['group2_display_order_between'] = $group2_display_order_between;

        return $this;
    }

    /**
     * Gets group2_display_order_in
     *
     * @return int[]
     */
    public function getGroup2DisplayOrderIn()
    {
        return $this->container['group2_display_order_in'];
    }

    /**
     * Sets group2_display_order_in
     *
     * @param int[] $group2_display_order_in group2_display_order_in
     *
     * @return $this
     */
    public function setGroup2DisplayOrderIn($group2_display_order_in)
    {
        $this->container['group2_display_order_in'] = $group2_display_order_in;

        return $this;
    }

    /**
     * Gets group1_display_order
     *
     * @return int
     */
    public function getGroup1DisplayOrder()
    {
        return $this->container['group1_display_order'];
    }

    /**
     * Sets group1_display_order
     *
     * @param int $group1_display_order group1_display_order
     *
     * @return $this
     */
    public function setGroup1DisplayOrder($group1_display_order)
    {
        $this->container['group1_display_order'] = $group1_display_order;

        return $this;
    }

    /**
     * Gets group1_display_order_greater_than_or_equal_to
     *
     * @return int
     */
    public function getGroup1DisplayOrderGreaterThanOrEqualTo()
    {
        return $this->container['group1_display_order_greater_than_or_equal_to'];
    }

    /**
     * Sets group1_display_order_greater_than_or_equal_to
     *
     * @param int $group1_display_order_greater_than_or_equal_to group1_display_order_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setGroup1DisplayOrderGreaterThanOrEqualTo($group1_display_order_greater_than_or_equal_to)
    {
        $this->container['group1_display_order_greater_than_or_equal_to'] = $group1_display_order_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets group1_display_order_greater_than
     *
     * @return int
     */
    public function getGroup1DisplayOrderGreaterThan()
    {
        return $this->container['group1_display_order_greater_than'];
    }

    /**
     * Sets group1_display_order_greater_than
     *
     * @param int $group1_display_order_greater_than group1_display_order_greater_than
     *
     * @return $this
     */
    public function setGroup1DisplayOrderGreaterThan($group1_display_order_greater_than)
    {
        $this->container['group1_display_order_greater_than'] = $group1_display_order_greater_than;

        return $this;
    }

    /**
     * Gets group1_display_order_less_than
     *
     * @return int
     */
    public function getGroup1DisplayOrderLessThan()
    {
        return $this->container['group1_display_order_less_than'];
    }

    /**
     * Sets group1_display_order_less_than
     *
     * @param int $group1_display_order_less_than group1_display_order_less_than
     *
     * @return $this
     */
    public function setGroup1DisplayOrderLessThan($group1_display_order_less_than)
    {
        $this->container['group1_display_order_less_than'] = $group1_display_order_less_than;

        return $this;
    }

    /**
     * Gets group1_display_order_less_than_or_equal_to
     *
     * @return int
     */
    public function getGroup1DisplayOrderLessThanOrEqualTo()
    {
        return $this->container['group1_display_order_less_than_or_equal_to'];
    }

    /**
     * Sets group1_display_order_less_than_or_equal_to
     *
     * @param int $group1_display_order_less_than_or_equal_to group1_display_order_less_than_or_equal_to
     *
     * @return $this
     */
    public function setGroup1DisplayOrderLessThanOrEqualTo($group1_display_order_less_than_or_equal_to)
    {
        $this->container['group1_display_order_less_than_or_equal_to'] = $group1_display_order_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets group1_display_order_not_equal_to
     *
     * @return int
     */
    public function getGroup1DisplayOrderNotEqualTo()
    {
        return $this->container['group1_display_order_not_equal_to'];
    }

    /**
     * Sets group1_display_order_not_equal_to
     *
     * @param int $group1_display_order_not_equal_to group1_display_order_not_equal_to
     *
     * @return $this
     */
    public function setGroup1DisplayOrderNotEqualTo($group1_display_order_not_equal_to)
    {
        $this->container['group1_display_order_not_equal_to'] = $group1_display_order_not_equal_to;

        return $this;
    }

    /**
     * Gets group1_display_order_between
     *
     * @return int[]
     */
    public function getGroup1DisplayOrderBetween()
    {
        return $this->container['group1_display_order_between'];
    }

    /**
     * Sets group1_display_order_between
     *
     * @param int[] $group1_display_order_between group1_display_order_between
     *
     * @return $this
     */
    public function setGroup1DisplayOrderBetween($group1_display_order_between)
    {
        $this->container['group1_display_order_between'] = $group1_display_order_between;

        return $this;
    }

    /**
     * Gets group1_display_order_in
     *
     * @return int[]
     */
    public function getGroup1DisplayOrderIn()
    {
        return $this->container['group1_display_order_in'];
    }

    /**
     * Sets group1_display_order_in
     *
     * @param int[] $group1_display_order_in group1_display_order_in
     *
     * @return $this
     */
    public function setGroup1DisplayOrderIn($group1_display_order_in)
    {
        $this->container['group1_display_order_in'] = $group1_display_order_in;

        return $this;
    }

    /**
     * Gets skip
     *
     * @return int
     */
    public function getSkip()
    {
        return $this->container['skip'];
    }

    /**
     * Sets skip
     *
     * @param int $skip skip
     *
     * @return $this
     */
    public function setSkip($skip)
    {
        $this->container['skip'] = $skip;

        return $this;
    }

    /**
     * Gets take
     *
     * @return int
     */
    public function getTake()
    {
        return $this->container['take'];
    }

    /**
     * Sets take
     *
     * @param int $take take
     *
     * @return $this
     */
    public function setTake($take)
    {
        $this->container['take'] = $take;

        return $this;
    }

    /**
     * Gets order_by
     *
     * @return string
     */
    public function getOrderBy()
    {
        return $this->container['order_by'];
    }

    /**
     * Sets order_by
     *
     * @param string $order_by order_by
     *
     * @return $this
     */
    public function setOrderBy($order_by)
    {
        $this->container['order_by'] = $order_by;

        return $this;
    }

    /**
     * Gets order_by_desc
     *
     * @return string
     */
    public function getOrderByDesc()
    {
        return $this->container['order_by_desc'];
    }

    /**
     * Sets order_by_desc
     *
     * @param string $order_by_desc order_by_desc
     *
     * @return $this
     */
    public function setOrderByDesc($order_by_desc)
    {
        $this->container['order_by_desc'] = $order_by_desc;

        return $this;
    }

    /**
     * Gets include
     *
     * @return string
     */
    public function getInclude()
    {
        return $this->container['include'];
    }

    /**
     * Sets include
     *
     * @param string $include include
     *
     * @return $this
     */
    public function setInclude($include)
    {
        $this->container['include'] = $include;

        return $this;
    }

    /**
     * Gets fields
     *
     * @return string
     */
    public function getFields()
    {
        return $this->container['fields'];
    }

    /**
     * Sets fields
     *
     * @param string $fields fields
     *
     * @return $this
     */
    public function setFields($fields)
    {
        $this->container['fields'] = $fields;

        return $this;
    }

    /**
     * Gets meta
     *
     * @return \Jiwa\Model\DictionaryStringString_
     */
    public function getMeta()
    {
        return $this->container['meta'];
    }

    /**
     * Sets meta
     *
     * @param \Jiwa\Model\DictionaryStringString_ $meta meta
     *
     * @return $this
     */
    public function setMeta($meta)
    {
        $this->container['meta'] = $meta;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


