<?php
/**
 * SalesQuoteHistory
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\JiwaModel;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * SalesQuoteHistory Class Doc Comment
 *
 * @category Class
 * @description SalesQuoteHistory
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SalesQuoteHistory implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'SalesQuoteHistory';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'quote_history_id' => 'string',
        'history_no' => 'int',
        'sales_stage' => '\Jiwa\JiwaModel\SalesStage',
        'cartage_charge1' => '\Jiwa\JiwaModel\CartageCharge',
        'cartage_charge2' => '\Jiwa\JiwaModel\CartageCharge',
        'cartage_charge3' => '\Jiwa\JiwaModel\CartageCharge',
        'opportunity_status_reason' => '\Jiwa\JiwaModel\OpportunityStatusReason',
        'ref' => 'string',
        'last_modified_by' => 'string',
        'history_total' => 'double',
        'record_date' => '\DateTime',
        'expiry_date' => '\DateTime',
        'expiry_days' => 'int',
        'docket_printed' => 'bool',
        'del_address1' => 'string',
        'del_address2' => 'string',
        'del_address3' => 'string',
        'del_address4' => 'string',
        'post_code' => 'string',
        'delivery_address_country' => 'string',
        'notes' => 'string',
        'courier_details' => 'string',
        'freight_forward_address1' => 'string',
        'freight_forward_address2' => 'string',
        'freight_forward_address3' => 'string',
        'freight_forward_address4' => 'string',
        'freight_forward_address_country' => 'string',
        'freight_forward_notes' => 'string',
        'invoice_printed' => 'bool',
        'del_contact_name' => 'string',
        'expected_close_date' => '\DateTime',
        'opportunity_status' => 'string',
        'opportunity_note' => 'string',
        'invoice_emailed' => 'bool',
        'drop_shipment' => 'bool',
        'delivery_addressee' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'quote_history_id' => null,
        'history_no' => 'int32',
        'sales_stage' => null,
        'cartage_charge1' => null,
        'cartage_charge2' => null,
        'cartage_charge3' => null,
        'opportunity_status_reason' => null,
        'ref' => null,
        'last_modified_by' => null,
        'history_total' => 'double',
        'record_date' => 'date-time',
        'expiry_date' => 'date-time',
        'expiry_days' => 'int32',
        'docket_printed' => null,
        'del_address1' => null,
        'del_address2' => null,
        'del_address3' => null,
        'del_address4' => null,
        'post_code' => null,
        'delivery_address_country' => null,
        'notes' => null,
        'courier_details' => null,
        'freight_forward_address1' => null,
        'freight_forward_address2' => null,
        'freight_forward_address3' => null,
        'freight_forward_address4' => null,
        'freight_forward_address_country' => null,
        'freight_forward_notes' => null,
        'invoice_printed' => null,
        'del_contact_name' => null,
        'expected_close_date' => 'date-time',
        'opportunity_status' => null,
        'opportunity_note' => null,
        'invoice_emailed' => null,
        'drop_shipment' => null,
        'delivery_addressee' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'quote_history_id' => 'QuoteHistoryID',
        'history_no' => 'HistoryNo',
        'sales_stage' => 'SalesStage',
        'cartage_charge1' => 'CartageCharge1',
        'cartage_charge2' => 'CartageCharge2',
        'cartage_charge3' => 'CartageCharge3',
        'opportunity_status_reason' => 'OpportunityStatusReason',
        'ref' => 'Ref',
        'last_modified_by' => 'LastModifiedBy',
        'history_total' => 'HistoryTotal',
        'record_date' => 'RecordDate',
        'expiry_date' => 'ExpiryDate',
        'expiry_days' => 'ExpiryDays',
        'docket_printed' => 'DocketPrinted',
        'del_address1' => 'DelAddress1',
        'del_address2' => 'DelAddress2',
        'del_address3' => 'DelAddress3',
        'del_address4' => 'DelAddress4',
        'post_code' => 'PostCode',
        'delivery_address_country' => 'DeliveryAddressCountry',
        'notes' => 'Notes',
        'courier_details' => 'CourierDetails',
        'freight_forward_address1' => 'FreightForwardAddress1',
        'freight_forward_address2' => 'FreightForwardAddress2',
        'freight_forward_address3' => 'FreightForwardAddress3',
        'freight_forward_address4' => 'FreightForwardAddress4',
        'freight_forward_address_country' => 'FreightForwardAddressCountry',
        'freight_forward_notes' => 'FreightForwardNotes',
        'invoice_printed' => 'InvoicePrinted',
        'del_contact_name' => 'DelContactName',
        'expected_close_date' => 'ExpectedCloseDate',
        'opportunity_status' => 'OpportunityStatus',
        'opportunity_note' => 'OpportunityNote',
        'invoice_emailed' => 'InvoiceEmailed',
        'drop_shipment' => 'DropShipment',
        'delivery_addressee' => 'DeliveryAddressee'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'quote_history_id' => 'setQuoteHistoryId',
        'history_no' => 'setHistoryNo',
        'sales_stage' => 'setSalesStage',
        'cartage_charge1' => 'setCartageCharge1',
        'cartage_charge2' => 'setCartageCharge2',
        'cartage_charge3' => 'setCartageCharge3',
        'opportunity_status_reason' => 'setOpportunityStatusReason',
        'ref' => 'setRef',
        'last_modified_by' => 'setLastModifiedBy',
        'history_total' => 'setHistoryTotal',
        'record_date' => 'setRecordDate',
        'expiry_date' => 'setExpiryDate',
        'expiry_days' => 'setExpiryDays',
        'docket_printed' => 'setDocketPrinted',
        'del_address1' => 'setDelAddress1',
        'del_address2' => 'setDelAddress2',
        'del_address3' => 'setDelAddress3',
        'del_address4' => 'setDelAddress4',
        'post_code' => 'setPostCode',
        'delivery_address_country' => 'setDeliveryAddressCountry',
        'notes' => 'setNotes',
        'courier_details' => 'setCourierDetails',
        'freight_forward_address1' => 'setFreightForwardAddress1',
        'freight_forward_address2' => 'setFreightForwardAddress2',
        'freight_forward_address3' => 'setFreightForwardAddress3',
        'freight_forward_address4' => 'setFreightForwardAddress4',
        'freight_forward_address_country' => 'setFreightForwardAddressCountry',
        'freight_forward_notes' => 'setFreightForwardNotes',
        'invoice_printed' => 'setInvoicePrinted',
        'del_contact_name' => 'setDelContactName',
        'expected_close_date' => 'setExpectedCloseDate',
        'opportunity_status' => 'setOpportunityStatus',
        'opportunity_note' => 'setOpportunityNote',
        'invoice_emailed' => 'setInvoiceEmailed',
        'drop_shipment' => 'setDropShipment',
        'delivery_addressee' => 'setDeliveryAddressee'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'quote_history_id' => 'getQuoteHistoryId',
        'history_no' => 'getHistoryNo',
        'sales_stage' => 'getSalesStage',
        'cartage_charge1' => 'getCartageCharge1',
        'cartage_charge2' => 'getCartageCharge2',
        'cartage_charge3' => 'getCartageCharge3',
        'opportunity_status_reason' => 'getOpportunityStatusReason',
        'ref' => 'getRef',
        'last_modified_by' => 'getLastModifiedBy',
        'history_total' => 'getHistoryTotal',
        'record_date' => 'getRecordDate',
        'expiry_date' => 'getExpiryDate',
        'expiry_days' => 'getExpiryDays',
        'docket_printed' => 'getDocketPrinted',
        'del_address1' => 'getDelAddress1',
        'del_address2' => 'getDelAddress2',
        'del_address3' => 'getDelAddress3',
        'del_address4' => 'getDelAddress4',
        'post_code' => 'getPostCode',
        'delivery_address_country' => 'getDeliveryAddressCountry',
        'notes' => 'getNotes',
        'courier_details' => 'getCourierDetails',
        'freight_forward_address1' => 'getFreightForwardAddress1',
        'freight_forward_address2' => 'getFreightForwardAddress2',
        'freight_forward_address3' => 'getFreightForwardAddress3',
        'freight_forward_address4' => 'getFreightForwardAddress4',
        'freight_forward_address_country' => 'getFreightForwardAddressCountry',
        'freight_forward_notes' => 'getFreightForwardNotes',
        'invoice_printed' => 'getInvoicePrinted',
        'del_contact_name' => 'getDelContactName',
        'expected_close_date' => 'getExpectedCloseDate',
        'opportunity_status' => 'getOpportunityStatus',
        'opportunity_note' => 'getOpportunityNote',
        'invoice_emailed' => 'getInvoiceEmailed',
        'drop_shipment' => 'getDropShipment',
        'delivery_addressee' => 'getDeliveryAddressee'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['quote_history_id'] = isset($data['quote_history_id']) ? $data['quote_history_id'] : null;
        $this->container['history_no'] = isset($data['history_no']) ? $data['history_no'] : null;
        $this->container['sales_stage'] = isset($data['sales_stage']) ? $data['sales_stage'] : null;
        $this->container['cartage_charge1'] = isset($data['cartage_charge1']) ? $data['cartage_charge1'] : null;
        $this->container['cartage_charge2'] = isset($data['cartage_charge2']) ? $data['cartage_charge2'] : null;
        $this->container['cartage_charge3'] = isset($data['cartage_charge3']) ? $data['cartage_charge3'] : null;
        $this->container['opportunity_status_reason'] = isset($data['opportunity_status_reason']) ? $data['opportunity_status_reason'] : null;
        $this->container['ref'] = isset($data['ref']) ? $data['ref'] : null;
        $this->container['last_modified_by'] = isset($data['last_modified_by']) ? $data['last_modified_by'] : null;
        $this->container['history_total'] = isset($data['history_total']) ? $data['history_total'] : null;
        $this->container['record_date'] = isset($data['record_date']) ? $data['record_date'] : null;
        $this->container['expiry_date'] = isset($data['expiry_date']) ? $data['expiry_date'] : null;
        $this->container['expiry_days'] = isset($data['expiry_days']) ? $data['expiry_days'] : null;
        $this->container['docket_printed'] = isset($data['docket_printed']) ? $data['docket_printed'] : null;
        $this->container['del_address1'] = isset($data['del_address1']) ? $data['del_address1'] : null;
        $this->container['del_address2'] = isset($data['del_address2']) ? $data['del_address2'] : null;
        $this->container['del_address3'] = isset($data['del_address3']) ? $data['del_address3'] : null;
        $this->container['del_address4'] = isset($data['del_address4']) ? $data['del_address4'] : null;
        $this->container['post_code'] = isset($data['post_code']) ? $data['post_code'] : null;
        $this->container['delivery_address_country'] = isset($data['delivery_address_country']) ? $data['delivery_address_country'] : null;
        $this->container['notes'] = isset($data['notes']) ? $data['notes'] : null;
        $this->container['courier_details'] = isset($data['courier_details']) ? $data['courier_details'] : null;
        $this->container['freight_forward_address1'] = isset($data['freight_forward_address1']) ? $data['freight_forward_address1'] : null;
        $this->container['freight_forward_address2'] = isset($data['freight_forward_address2']) ? $data['freight_forward_address2'] : null;
        $this->container['freight_forward_address3'] = isset($data['freight_forward_address3']) ? $data['freight_forward_address3'] : null;
        $this->container['freight_forward_address4'] = isset($data['freight_forward_address4']) ? $data['freight_forward_address4'] : null;
        $this->container['freight_forward_address_country'] = isset($data['freight_forward_address_country']) ? $data['freight_forward_address_country'] : null;
        $this->container['freight_forward_notes'] = isset($data['freight_forward_notes']) ? $data['freight_forward_notes'] : null;
        $this->container['invoice_printed'] = isset($data['invoice_printed']) ? $data['invoice_printed'] : null;
        $this->container['del_contact_name'] = isset($data['del_contact_name']) ? $data['del_contact_name'] : null;
        $this->container['expected_close_date'] = isset($data['expected_close_date']) ? $data['expected_close_date'] : null;
        $this->container['opportunity_status'] = isset($data['opportunity_status']) ? $data['opportunity_status'] : null;
        $this->container['opportunity_note'] = isset($data['opportunity_note']) ? $data['opportunity_note'] : null;
        $this->container['invoice_emailed'] = isset($data['invoice_emailed']) ? $data['invoice_emailed'] : null;
        $this->container['drop_shipment'] = isset($data['drop_shipment']) ? $data['drop_shipment'] : null;
        $this->container['delivery_addressee'] = isset($data['delivery_addressee']) ? $data['delivery_addressee'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets quote_history_id
     *
     * @return string
     */
    public function getQuoteHistoryId()
    {
        return $this->container['quote_history_id'];
    }

    /**
     * Sets quote_history_id
     *
     * @param string $quote_history_id quote_history_id
     *
     * @return $this
     */
    public function setQuoteHistoryId($quote_history_id)
    {
        $this->container['quote_history_id'] = $quote_history_id;

        return $this;
    }

    /**
     * Gets history_no
     *
     * @return int
     */
    public function getHistoryNo()
    {
        return $this->container['history_no'];
    }

    /**
     * Sets history_no
     *
     * @param int $history_no history_no
     *
     * @return $this
     */
    public function setHistoryNo($history_no)
    {
        $this->container['history_no'] = $history_no;

        return $this;
    }

    /**
     * Gets sales_stage
     *
     * @return \Jiwa\JiwaModel\SalesStage
     */
    public function getSalesStage()
    {
        return $this->container['sales_stage'];
    }

    /**
     * Sets sales_stage
     *
     * @param \Jiwa\JiwaModel\SalesStage $sales_stage sales_stage
     *
     * @return $this
     */
    public function setSalesStage($sales_stage)
    {
        $this->container['sales_stage'] = $sales_stage;

        return $this;
    }

    /**
     * Gets cartage_charge1
     *
     * @return \Jiwa\JiwaModel\CartageCharge
     */
    public function getCartageCharge1()
    {
        return $this->container['cartage_charge1'];
    }

    /**
     * Sets cartage_charge1
     *
     * @param \Jiwa\JiwaModel\CartageCharge $cartage_charge1 cartage_charge1
     *
     * @return $this
     */
    public function setCartageCharge1($cartage_charge1)
    {
        $this->container['cartage_charge1'] = $cartage_charge1;

        return $this;
    }

    /**
     * Gets cartage_charge2
     *
     * @return \Jiwa\JiwaModel\CartageCharge
     */
    public function getCartageCharge2()
    {
        return $this->container['cartage_charge2'];
    }

    /**
     * Sets cartage_charge2
     *
     * @param \Jiwa\JiwaModel\CartageCharge $cartage_charge2 cartage_charge2
     *
     * @return $this
     */
    public function setCartageCharge2($cartage_charge2)
    {
        $this->container['cartage_charge2'] = $cartage_charge2;

        return $this;
    }

    /**
     * Gets cartage_charge3
     *
     * @return \Jiwa\JiwaModel\CartageCharge
     */
    public function getCartageCharge3()
    {
        return $this->container['cartage_charge3'];
    }

    /**
     * Sets cartage_charge3
     *
     * @param \Jiwa\JiwaModel\CartageCharge $cartage_charge3 cartage_charge3
     *
     * @return $this
     */
    public function setCartageCharge3($cartage_charge3)
    {
        $this->container['cartage_charge3'] = $cartage_charge3;

        return $this;
    }

    /**
     * Gets opportunity_status_reason
     *
     * @return \Jiwa\JiwaModel\OpportunityStatusReason
     */
    public function getOpportunityStatusReason()
    {
        return $this->container['opportunity_status_reason'];
    }

    /**
     * Sets opportunity_status_reason
     *
     * @param \Jiwa\JiwaModel\OpportunityStatusReason $opportunity_status_reason opportunity_status_reason
     *
     * @return $this
     */
    public function setOpportunityStatusReason($opportunity_status_reason)
    {
        $this->container['opportunity_status_reason'] = $opportunity_status_reason;

        return $this;
    }

    /**
     * Gets ref
     *
     * @return string
     */
    public function getRef()
    {
        return $this->container['ref'];
    }

    /**
     * Sets ref
     *
     * @param string $ref ref
     *
     * @return $this
     */
    public function setRef($ref)
    {
        $this->container['ref'] = $ref;

        return $this;
    }

    /**
     * Gets last_modified_by
     *
     * @return string
     */
    public function getLastModifiedBy()
    {
        return $this->container['last_modified_by'];
    }

    /**
     * Sets last_modified_by
     *
     * @param string $last_modified_by last_modified_by
     *
     * @return $this
     */
    public function setLastModifiedBy($last_modified_by)
    {
        $this->container['last_modified_by'] = $last_modified_by;

        return $this;
    }

    /**
     * Gets history_total
     *
     * @return double
     */
    public function getHistoryTotal()
    {
        return $this->container['history_total'];
    }

    /**
     * Sets history_total
     *
     * @param double $history_total history_total
     *
     * @return $this
     */
    public function setHistoryTotal($history_total)
    {
        $this->container['history_total'] = $history_total;

        return $this;
    }

    /**
     * Gets record_date
     *
     * @return \DateTime
     */
    public function getRecordDate()
    {
        return $this->container['record_date'];
    }

    /**
     * Sets record_date
     *
     * @param \DateTime $record_date record_date
     *
     * @return $this
     */
    public function setRecordDate($record_date)
    {
        $this->container['record_date'] = $record_date;

        return $this;
    }

    /**
     * Gets expiry_date
     *
     * @return \DateTime
     */
    public function getExpiryDate()
    {
        return $this->container['expiry_date'];
    }

    /**
     * Sets expiry_date
     *
     * @param \DateTime $expiry_date expiry_date
     *
     * @return $this
     */
    public function setExpiryDate($expiry_date)
    {
        $this->container['expiry_date'] = $expiry_date;

        return $this;
    }

    /**
     * Gets expiry_days
     *
     * @return int
     */
    public function getExpiryDays()
    {
        return $this->container['expiry_days'];
    }

    /**
     * Sets expiry_days
     *
     * @param int $expiry_days expiry_days
     *
     * @return $this
     */
    public function setExpiryDays($expiry_days)
    {
        $this->container['expiry_days'] = $expiry_days;

        return $this;
    }

    /**
     * Gets docket_printed
     *
     * @return bool
     */
    public function getDocketPrinted()
    {
        return $this->container['docket_printed'];
    }

    /**
     * Sets docket_printed
     *
     * @param bool $docket_printed docket_printed
     *
     * @return $this
     */
    public function setDocketPrinted($docket_printed)
    {
        $this->container['docket_printed'] = $docket_printed;

        return $this;
    }

    /**
     * Gets del_address1
     *
     * @return string
     */
    public function getDelAddress1()
    {
        return $this->container['del_address1'];
    }

    /**
     * Sets del_address1
     *
     * @param string $del_address1 del_address1
     *
     * @return $this
     */
    public function setDelAddress1($del_address1)
    {
        $this->container['del_address1'] = $del_address1;

        return $this;
    }

    /**
     * Gets del_address2
     *
     * @return string
     */
    public function getDelAddress2()
    {
        return $this->container['del_address2'];
    }

    /**
     * Sets del_address2
     *
     * @param string $del_address2 del_address2
     *
     * @return $this
     */
    public function setDelAddress2($del_address2)
    {
        $this->container['del_address2'] = $del_address2;

        return $this;
    }

    /**
     * Gets del_address3
     *
     * @return string
     */
    public function getDelAddress3()
    {
        return $this->container['del_address3'];
    }

    /**
     * Sets del_address3
     *
     * @param string $del_address3 del_address3
     *
     * @return $this
     */
    public function setDelAddress3($del_address3)
    {
        $this->container['del_address3'] = $del_address3;

        return $this;
    }

    /**
     * Gets del_address4
     *
     * @return string
     */
    public function getDelAddress4()
    {
        return $this->container['del_address4'];
    }

    /**
     * Sets del_address4
     *
     * @param string $del_address4 del_address4
     *
     * @return $this
     */
    public function setDelAddress4($del_address4)
    {
        $this->container['del_address4'] = $del_address4;

        return $this;
    }

    /**
     * Gets post_code
     *
     * @return string
     */
    public function getPostCode()
    {
        return $this->container['post_code'];
    }

    /**
     * Sets post_code
     *
     * @param string $post_code post_code
     *
     * @return $this
     */
    public function setPostCode($post_code)
    {
        $this->container['post_code'] = $post_code;

        return $this;
    }

    /**
     * Gets delivery_address_country
     *
     * @return string
     */
    public function getDeliveryAddressCountry()
    {
        return $this->container['delivery_address_country'];
    }

    /**
     * Sets delivery_address_country
     *
     * @param string $delivery_address_country delivery_address_country
     *
     * @return $this
     */
    public function setDeliveryAddressCountry($delivery_address_country)
    {
        $this->container['delivery_address_country'] = $delivery_address_country;

        return $this;
    }

    /**
     * Gets notes
     *
     * @return string
     */
    public function getNotes()
    {
        return $this->container['notes'];
    }

    /**
     * Sets notes
     *
     * @param string $notes notes
     *
     * @return $this
     */
    public function setNotes($notes)
    {
        $this->container['notes'] = $notes;

        return $this;
    }

    /**
     * Gets courier_details
     *
     * @return string
     */
    public function getCourierDetails()
    {
        return $this->container['courier_details'];
    }

    /**
     * Sets courier_details
     *
     * @param string $courier_details courier_details
     *
     * @return $this
     */
    public function setCourierDetails($courier_details)
    {
        $this->container['courier_details'] = $courier_details;

        return $this;
    }

    /**
     * Gets freight_forward_address1
     *
     * @return string
     */
    public function getFreightForwardAddress1()
    {
        return $this->container['freight_forward_address1'];
    }

    /**
     * Sets freight_forward_address1
     *
     * @param string $freight_forward_address1 freight_forward_address1
     *
     * @return $this
     */
    public function setFreightForwardAddress1($freight_forward_address1)
    {
        $this->container['freight_forward_address1'] = $freight_forward_address1;

        return $this;
    }

    /**
     * Gets freight_forward_address2
     *
     * @return string
     */
    public function getFreightForwardAddress2()
    {
        return $this->container['freight_forward_address2'];
    }

    /**
     * Sets freight_forward_address2
     *
     * @param string $freight_forward_address2 freight_forward_address2
     *
     * @return $this
     */
    public function setFreightForwardAddress2($freight_forward_address2)
    {
        $this->container['freight_forward_address2'] = $freight_forward_address2;

        return $this;
    }

    /**
     * Gets freight_forward_address3
     *
     * @return string
     */
    public function getFreightForwardAddress3()
    {
        return $this->container['freight_forward_address3'];
    }

    /**
     * Sets freight_forward_address3
     *
     * @param string $freight_forward_address3 freight_forward_address3
     *
     * @return $this
     */
    public function setFreightForwardAddress3($freight_forward_address3)
    {
        $this->container['freight_forward_address3'] = $freight_forward_address3;

        return $this;
    }

    /**
     * Gets freight_forward_address4
     *
     * @return string
     */
    public function getFreightForwardAddress4()
    {
        return $this->container['freight_forward_address4'];
    }

    /**
     * Sets freight_forward_address4
     *
     * @param string $freight_forward_address4 freight_forward_address4
     *
     * @return $this
     */
    public function setFreightForwardAddress4($freight_forward_address4)
    {
        $this->container['freight_forward_address4'] = $freight_forward_address4;

        return $this;
    }

    /**
     * Gets freight_forward_address_country
     *
     * @return string
     */
    public function getFreightForwardAddressCountry()
    {
        return $this->container['freight_forward_address_country'];
    }

    /**
     * Sets freight_forward_address_country
     *
     * @param string $freight_forward_address_country freight_forward_address_country
     *
     * @return $this
     */
    public function setFreightForwardAddressCountry($freight_forward_address_country)
    {
        $this->container['freight_forward_address_country'] = $freight_forward_address_country;

        return $this;
    }

    /**
     * Gets freight_forward_notes
     *
     * @return string
     */
    public function getFreightForwardNotes()
    {
        return $this->container['freight_forward_notes'];
    }

    /**
     * Sets freight_forward_notes
     *
     * @param string $freight_forward_notes freight_forward_notes
     *
     * @return $this
     */
    public function setFreightForwardNotes($freight_forward_notes)
    {
        $this->container['freight_forward_notes'] = $freight_forward_notes;

        return $this;
    }

    /**
     * Gets invoice_printed
     *
     * @return bool
     */
    public function getInvoicePrinted()
    {
        return $this->container['invoice_printed'];
    }

    /**
     * Sets invoice_printed
     *
     * @param bool $invoice_printed invoice_printed
     *
     * @return $this
     */
    public function setInvoicePrinted($invoice_printed)
    {
        $this->container['invoice_printed'] = $invoice_printed;

        return $this;
    }

    /**
     * Gets del_contact_name
     *
     * @return string
     */
    public function getDelContactName()
    {
        return $this->container['del_contact_name'];
    }

    /**
     * Sets del_contact_name
     *
     * @param string $del_contact_name del_contact_name
     *
     * @return $this
     */
    public function setDelContactName($del_contact_name)
    {
        $this->container['del_contact_name'] = $del_contact_name;

        return $this;
    }

    /**
     * Gets expected_close_date
     *
     * @return \DateTime
     */
    public function getExpectedCloseDate()
    {
        return $this->container['expected_close_date'];
    }

    /**
     * Sets expected_close_date
     *
     * @param \DateTime $expected_close_date expected_close_date
     *
     * @return $this
     */
    public function setExpectedCloseDate($expected_close_date)
    {
        $this->container['expected_close_date'] = $expected_close_date;

        return $this;
    }

    /**
     * Gets opportunity_status
     *
     * @return string
     */
    public function getOpportunityStatus()
    {
        return $this->container['opportunity_status'];
    }

    /**
     * Sets opportunity_status
     *
     * @param string $opportunity_status opportunity_status
     *
     * @return $this
     */
    public function setOpportunityStatus($opportunity_status)
    {
        $this->container['opportunity_status'] = $opportunity_status;

        return $this;
    }

    /**
     * Gets opportunity_note
     *
     * @return string
     */
    public function getOpportunityNote()
    {
        return $this->container['opportunity_note'];
    }

    /**
     * Sets opportunity_note
     *
     * @param string $opportunity_note opportunity_note
     *
     * @return $this
     */
    public function setOpportunityNote($opportunity_note)
    {
        $this->container['opportunity_note'] = $opportunity_note;

        return $this;
    }

    /**
     * Gets invoice_emailed
     *
     * @return bool
     */
    public function getInvoiceEmailed()
    {
        return $this->container['invoice_emailed'];
    }

    /**
     * Sets invoice_emailed
     *
     * @param bool $invoice_emailed invoice_emailed
     *
     * @return $this
     */
    public function setInvoiceEmailed($invoice_emailed)
    {
        $this->container['invoice_emailed'] = $invoice_emailed;

        return $this;
    }

    /**
     * Gets drop_shipment
     *
     * @return bool
     */
    public function getDropShipment()
    {
        return $this->container['drop_shipment'];
    }

    /**
     * Sets drop_shipment
     *
     * @param bool $drop_shipment drop_shipment
     *
     * @return $this
     */
    public function setDropShipment($drop_shipment)
    {
        $this->container['drop_shipment'] = $drop_shipment;

        return $this;
    }

    /**
     * Gets delivery_addressee
     *
     * @return string
     */
    public function getDeliveryAddressee()
    {
        return $this->container['delivery_addressee'];
    }

    /**
     * Sets delivery_addressee
     *
     * @param string $delivery_addressee delivery_addressee
     *
     * @return $this
     */
    public function setDeliveryAddressee($delivery_addressee)
    {
        $this->container['delivery_addressee'] = $delivery_addressee;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


