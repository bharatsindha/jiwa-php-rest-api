<?php
/**
 * JournalSetLine
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\JiwaModel;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * JournalSetLine Class Doc Comment
 *
 * @category Class
 * @description JournalSetLine
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class JournalSetLine implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'JournalSetLine';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'journal_set_line_id' => 'string',
        'item_no' => 'int',
        'reference' => 'string',
        'remark' => 'string',
        'trans_code1_id' => 'string',
        'trans_code1_description' => 'string',
        'trans_code2_id' => 'string',
        'trans_code2_description' => 'string',
        'bas_code' => 'string',
        'trans_post_date_time' => '\DateTime',
        'debit_amount' => 'double',
        'credit_amount' => 'double',
        'allow_group' => 'bool',
        'staff' => '\Jiwa\JiwaModel\StaffMember',
        'job_costing_stage_id' => 'string',
        'job_costing_full_job_no' => 'string',
        'general_ledger_account_rec_id' => 'string',
        'general_ledger_account_account_no' => 'string',
        'general_ledger_account_description' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'journal_set_line_id' => null,
        'item_no' => 'int32',
        'reference' => null,
        'remark' => null,
        'trans_code1_id' => null,
        'trans_code1_description' => null,
        'trans_code2_id' => null,
        'trans_code2_description' => null,
        'bas_code' => null,
        'trans_post_date_time' => 'date-time',
        'debit_amount' => 'double',
        'credit_amount' => 'double',
        'allow_group' => null,
        'staff' => null,
        'job_costing_stage_id' => null,
        'job_costing_full_job_no' => null,
        'general_ledger_account_rec_id' => null,
        'general_ledger_account_account_no' => null,
        'general_ledger_account_description' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'journal_set_line_id' => 'JournalSetLineID',
        'item_no' => 'ItemNo',
        'reference' => 'Reference',
        'remark' => 'Remark',
        'trans_code1_id' => 'TransCode1ID',
        'trans_code1_description' => 'TransCode1Description',
        'trans_code2_id' => 'TransCode2ID',
        'trans_code2_description' => 'TransCode2Description',
        'bas_code' => 'BASCode',
        'trans_post_date_time' => 'TransPostDateTime',
        'debit_amount' => 'DebitAmount',
        'credit_amount' => 'CreditAmount',
        'allow_group' => 'AllowGroup',
        'staff' => 'Staff',
        'job_costing_stage_id' => 'JobCostingStageID',
        'job_costing_full_job_no' => 'JobCostingFullJobNo',
        'general_ledger_account_rec_id' => 'GeneralLedgerAccountRecID',
        'general_ledger_account_account_no' => 'GeneralLedgerAccountAccountNo',
        'general_ledger_account_description' => 'GeneralLedgerAccountDescription'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'journal_set_line_id' => 'setJournalSetLineId',
        'item_no' => 'setItemNo',
        'reference' => 'setReference',
        'remark' => 'setRemark',
        'trans_code1_id' => 'setTransCode1Id',
        'trans_code1_description' => 'setTransCode1Description',
        'trans_code2_id' => 'setTransCode2Id',
        'trans_code2_description' => 'setTransCode2Description',
        'bas_code' => 'setBasCode',
        'trans_post_date_time' => 'setTransPostDateTime',
        'debit_amount' => 'setDebitAmount',
        'credit_amount' => 'setCreditAmount',
        'allow_group' => 'setAllowGroup',
        'staff' => 'setStaff',
        'job_costing_stage_id' => 'setJobCostingStageId',
        'job_costing_full_job_no' => 'setJobCostingFullJobNo',
        'general_ledger_account_rec_id' => 'setGeneralLedgerAccountRecId',
        'general_ledger_account_account_no' => 'setGeneralLedgerAccountAccountNo',
        'general_ledger_account_description' => 'setGeneralLedgerAccountDescription'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'journal_set_line_id' => 'getJournalSetLineId',
        'item_no' => 'getItemNo',
        'reference' => 'getReference',
        'remark' => 'getRemark',
        'trans_code1_id' => 'getTransCode1Id',
        'trans_code1_description' => 'getTransCode1Description',
        'trans_code2_id' => 'getTransCode2Id',
        'trans_code2_description' => 'getTransCode2Description',
        'bas_code' => 'getBasCode',
        'trans_post_date_time' => 'getTransPostDateTime',
        'debit_amount' => 'getDebitAmount',
        'credit_amount' => 'getCreditAmount',
        'allow_group' => 'getAllowGroup',
        'staff' => 'getStaff',
        'job_costing_stage_id' => 'getJobCostingStageId',
        'job_costing_full_job_no' => 'getJobCostingFullJobNo',
        'general_ledger_account_rec_id' => 'getGeneralLedgerAccountRecId',
        'general_ledger_account_account_no' => 'getGeneralLedgerAccountAccountNo',
        'general_ledger_account_description' => 'getGeneralLedgerAccountDescription'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['journal_set_line_id'] = isset($data['journal_set_line_id']) ? $data['journal_set_line_id'] : null;
        $this->container['item_no'] = isset($data['item_no']) ? $data['item_no'] : null;
        $this->container['reference'] = isset($data['reference']) ? $data['reference'] : null;
        $this->container['remark'] = isset($data['remark']) ? $data['remark'] : null;
        $this->container['trans_code1_id'] = isset($data['trans_code1_id']) ? $data['trans_code1_id'] : null;
        $this->container['trans_code1_description'] = isset($data['trans_code1_description']) ? $data['trans_code1_description'] : null;
        $this->container['trans_code2_id'] = isset($data['trans_code2_id']) ? $data['trans_code2_id'] : null;
        $this->container['trans_code2_description'] = isset($data['trans_code2_description']) ? $data['trans_code2_description'] : null;
        $this->container['bas_code'] = isset($data['bas_code']) ? $data['bas_code'] : null;
        $this->container['trans_post_date_time'] = isset($data['trans_post_date_time']) ? $data['trans_post_date_time'] : null;
        $this->container['debit_amount'] = isset($data['debit_amount']) ? $data['debit_amount'] : null;
        $this->container['credit_amount'] = isset($data['credit_amount']) ? $data['credit_amount'] : null;
        $this->container['allow_group'] = isset($data['allow_group']) ? $data['allow_group'] : null;
        $this->container['staff'] = isset($data['staff']) ? $data['staff'] : null;
        $this->container['job_costing_stage_id'] = isset($data['job_costing_stage_id']) ? $data['job_costing_stage_id'] : null;
        $this->container['job_costing_full_job_no'] = isset($data['job_costing_full_job_no']) ? $data['job_costing_full_job_no'] : null;
        $this->container['general_ledger_account_rec_id'] = isset($data['general_ledger_account_rec_id']) ? $data['general_ledger_account_rec_id'] : null;
        $this->container['general_ledger_account_account_no'] = isset($data['general_ledger_account_account_no']) ? $data['general_ledger_account_account_no'] : null;
        $this->container['general_ledger_account_description'] = isset($data['general_ledger_account_description']) ? $data['general_ledger_account_description'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets journal_set_line_id
     *
     * @return string
     */
    public function getJournalSetLineId()
    {
        return $this->container['journal_set_line_id'];
    }

    /**
     * Sets journal_set_line_id
     *
     * @param string $journal_set_line_id journal_set_line_id
     *
     * @return $this
     */
    public function setJournalSetLineId($journal_set_line_id)
    {
        $this->container['journal_set_line_id'] = $journal_set_line_id;

        return $this;
    }

    /**
     * Gets item_no
     *
     * @return int
     */
    public function getItemNo()
    {
        return $this->container['item_no'];
    }

    /**
     * Sets item_no
     *
     * @param int $item_no item_no
     *
     * @return $this
     */
    public function setItemNo($item_no)
    {
        $this->container['item_no'] = $item_no;

        return $this;
    }

    /**
     * Gets reference
     *
     * @return string
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string $reference reference
     *
     * @return $this
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets remark
     *
     * @return string
     */
    public function getRemark()
    {
        return $this->container['remark'];
    }

    /**
     * Sets remark
     *
     * @param string $remark remark
     *
     * @return $this
     */
    public function setRemark($remark)
    {
        $this->container['remark'] = $remark;

        return $this;
    }

    /**
     * Gets trans_code1_id
     *
     * @return string
     */
    public function getTransCode1Id()
    {
        return $this->container['trans_code1_id'];
    }

    /**
     * Sets trans_code1_id
     *
     * @param string $trans_code1_id trans_code1_id
     *
     * @return $this
     */
    public function setTransCode1Id($trans_code1_id)
    {
        $this->container['trans_code1_id'] = $trans_code1_id;

        return $this;
    }

    /**
     * Gets trans_code1_description
     *
     * @return string
     */
    public function getTransCode1Description()
    {
        return $this->container['trans_code1_description'];
    }

    /**
     * Sets trans_code1_description
     *
     * @param string $trans_code1_description trans_code1_description
     *
     * @return $this
     */
    public function setTransCode1Description($trans_code1_description)
    {
        $this->container['trans_code1_description'] = $trans_code1_description;

        return $this;
    }

    /**
     * Gets trans_code2_id
     *
     * @return string
     */
    public function getTransCode2Id()
    {
        return $this->container['trans_code2_id'];
    }

    /**
     * Sets trans_code2_id
     *
     * @param string $trans_code2_id trans_code2_id
     *
     * @return $this
     */
    public function setTransCode2Id($trans_code2_id)
    {
        $this->container['trans_code2_id'] = $trans_code2_id;

        return $this;
    }

    /**
     * Gets trans_code2_description
     *
     * @return string
     */
    public function getTransCode2Description()
    {
        return $this->container['trans_code2_description'];
    }

    /**
     * Sets trans_code2_description
     *
     * @param string $trans_code2_description trans_code2_description
     *
     * @return $this
     */
    public function setTransCode2Description($trans_code2_description)
    {
        $this->container['trans_code2_description'] = $trans_code2_description;

        return $this;
    }

    /**
     * Gets bas_code
     *
     * @return string
     */
    public function getBasCode()
    {
        return $this->container['bas_code'];
    }

    /**
     * Sets bas_code
     *
     * @param string $bas_code bas_code
     *
     * @return $this
     */
    public function setBasCode($bas_code)
    {
        $this->container['bas_code'] = $bas_code;

        return $this;
    }

    /**
     * Gets trans_post_date_time
     *
     * @return \DateTime
     */
    public function getTransPostDateTime()
    {
        return $this->container['trans_post_date_time'];
    }

    /**
     * Sets trans_post_date_time
     *
     * @param \DateTime $trans_post_date_time trans_post_date_time
     *
     * @return $this
     */
    public function setTransPostDateTime($trans_post_date_time)
    {
        $this->container['trans_post_date_time'] = $trans_post_date_time;

        return $this;
    }

    /**
     * Gets debit_amount
     *
     * @return double
     */
    public function getDebitAmount()
    {
        return $this->container['debit_amount'];
    }

    /**
     * Sets debit_amount
     *
     * @param double $debit_amount debit_amount
     *
     * @return $this
     */
    public function setDebitAmount($debit_amount)
    {
        $this->container['debit_amount'] = $debit_amount;

        return $this;
    }

    /**
     * Gets credit_amount
     *
     * @return double
     */
    public function getCreditAmount()
    {
        return $this->container['credit_amount'];
    }

    /**
     * Sets credit_amount
     *
     * @param double $credit_amount credit_amount
     *
     * @return $this
     */
    public function setCreditAmount($credit_amount)
    {
        $this->container['credit_amount'] = $credit_amount;

        return $this;
    }

    /**
     * Gets allow_group
     *
     * @return bool
     */
    public function getAllowGroup()
    {
        return $this->container['allow_group'];
    }

    /**
     * Sets allow_group
     *
     * @param bool $allow_group allow_group
     *
     * @return $this
     */
    public function setAllowGroup($allow_group)
    {
        $this->container['allow_group'] = $allow_group;

        return $this;
    }

    /**
     * Gets staff
     *
     * @return \Jiwa\JiwaModel\StaffMember
     */
    public function getStaff()
    {
        return $this->container['staff'];
    }

    /**
     * Sets staff
     *
     * @param \Jiwa\JiwaModel\StaffMember $staff staff
     *
     * @return $this
     */
    public function setStaff($staff)
    {
        $this->container['staff'] = $staff;

        return $this;
    }

    /**
     * Gets job_costing_stage_id
     *
     * @return string
     */
    public function getJobCostingStageId()
    {
        return $this->container['job_costing_stage_id'];
    }

    /**
     * Sets job_costing_stage_id
     *
     * @param string $job_costing_stage_id job_costing_stage_id
     *
     * @return $this
     */
    public function setJobCostingStageId($job_costing_stage_id)
    {
        $this->container['job_costing_stage_id'] = $job_costing_stage_id;

        return $this;
    }

    /**
     * Gets job_costing_full_job_no
     *
     * @return string
     */
    public function getJobCostingFullJobNo()
    {
        return $this->container['job_costing_full_job_no'];
    }

    /**
     * Sets job_costing_full_job_no
     *
     * @param string $job_costing_full_job_no job_costing_full_job_no
     *
     * @return $this
     */
    public function setJobCostingFullJobNo($job_costing_full_job_no)
    {
        $this->container['job_costing_full_job_no'] = $job_costing_full_job_no;

        return $this;
    }

    /**
     * Gets general_ledger_account_rec_id
     *
     * @return string
     */
    public function getGeneralLedgerAccountRecId()
    {
        return $this->container['general_ledger_account_rec_id'];
    }

    /**
     * Sets general_ledger_account_rec_id
     *
     * @param string $general_ledger_account_rec_id general_ledger_account_rec_id
     *
     * @return $this
     */
    public function setGeneralLedgerAccountRecId($general_ledger_account_rec_id)
    {
        $this->container['general_ledger_account_rec_id'] = $general_ledger_account_rec_id;

        return $this;
    }

    /**
     * Gets general_ledger_account_account_no
     *
     * @return string
     */
    public function getGeneralLedgerAccountAccountNo()
    {
        return $this->container['general_ledger_account_account_no'];
    }

    /**
     * Sets general_ledger_account_account_no
     *
     * @param string $general_ledger_account_account_no general_ledger_account_account_no
     *
     * @return $this
     */
    public function setGeneralLedgerAccountAccountNo($general_ledger_account_account_no)
    {
        $this->container['general_ledger_account_account_no'] = $general_ledger_account_account_no;

        return $this;
    }

    /**
     * Gets general_ledger_account_description
     *
     * @return string
     */
    public function getGeneralLedgerAccountDescription()
    {
        return $this->container['general_ledger_account_description'];
    }

    /**
     * Sets general_ledger_account_description
     *
     * @param string $general_ledger_account_description general_ledger_account_description
     *
     * @return $this
     */
    public function setGeneralLedgerAccountDescription($general_ledger_account_description)
    {
        $this->container['general_ledger_account_description'] = $general_ledger_account_description;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


