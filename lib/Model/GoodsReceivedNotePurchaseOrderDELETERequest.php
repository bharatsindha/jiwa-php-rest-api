<?php
/**
 * GoodsReceivedNotePurchaseOrderDELETERequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\JiwaModel;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * GoodsReceivedNotePurchaseOrderDELETERequest Class Doc Comment
 *
 * @category Class
 * @description GoodsReceivedNotePurchaseOrderDELETERequest
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class GoodsReceivedNotePurchaseOrderDELETERequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'GoodsReceivedNotePurchaseOrderDELETERequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'grnid' => 'string',
        'order_id' => 'string',
        'purchase_order_received_id' => 'string',
        'order_no' => 'string',
        'order_type' => 'string',
        'ordered_date' => '\DateTime',
        'freight_tax_id' => 'string',
        'freight' => 'double',
        'freight_tax_amount' => 'double',
        'duty_tax_id' => 'string',
        'duty' => 'double',
        'duty_tax_amount' => 'double',
        'insurance_tax_id' => 'string',
        'insurance' => 'double',
        'insurance_tax_amount' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'grnid' => null,
        'order_id' => null,
        'purchase_order_received_id' => null,
        'order_no' => null,
        'order_type' => null,
        'ordered_date' => 'date-time',
        'freight_tax_id' => null,
        'freight' => 'double',
        'freight_tax_amount' => 'double',
        'duty_tax_id' => null,
        'duty' => 'double',
        'duty_tax_amount' => 'double',
        'insurance_tax_id' => null,
        'insurance' => 'double',
        'insurance_tax_amount' => 'double'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'grnid' => 'GRNID',
        'order_id' => 'OrderID',
        'purchase_order_received_id' => 'PurchaseOrderReceivedID',
        'order_no' => 'OrderNo',
        'order_type' => 'OrderType',
        'ordered_date' => 'OrderedDate',
        'freight_tax_id' => 'FreightTaxID',
        'freight' => 'Freight',
        'freight_tax_amount' => 'FreightTaxAmount',
        'duty_tax_id' => 'DutyTaxID',
        'duty' => 'Duty',
        'duty_tax_amount' => 'DutyTaxAmount',
        'insurance_tax_id' => 'InsuranceTaxID',
        'insurance' => 'Insurance',
        'insurance_tax_amount' => 'InsuranceTaxAmount'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'grnid' => 'setGrnid',
        'order_id' => 'setOrderId',
        'purchase_order_received_id' => 'setPurchaseOrderReceivedId',
        'order_no' => 'setOrderNo',
        'order_type' => 'setOrderType',
        'ordered_date' => 'setOrderedDate',
        'freight_tax_id' => 'setFreightTaxId',
        'freight' => 'setFreight',
        'freight_tax_amount' => 'setFreightTaxAmount',
        'duty_tax_id' => 'setDutyTaxId',
        'duty' => 'setDuty',
        'duty_tax_amount' => 'setDutyTaxAmount',
        'insurance_tax_id' => 'setInsuranceTaxId',
        'insurance' => 'setInsurance',
        'insurance_tax_amount' => 'setInsuranceTaxAmount'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'grnid' => 'getGrnid',
        'order_id' => 'getOrderId',
        'purchase_order_received_id' => 'getPurchaseOrderReceivedId',
        'order_no' => 'getOrderNo',
        'order_type' => 'getOrderType',
        'ordered_date' => 'getOrderedDate',
        'freight_tax_id' => 'getFreightTaxId',
        'freight' => 'getFreight',
        'freight_tax_amount' => 'getFreightTaxAmount',
        'duty_tax_id' => 'getDutyTaxId',
        'duty' => 'getDuty',
        'duty_tax_amount' => 'getDutyTaxAmount',
        'insurance_tax_id' => 'getInsuranceTaxId',
        'insurance' => 'getInsurance',
        'insurance_tax_amount' => 'getInsuranceTaxAmount'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['grnid'] = isset($data['grnid']) ? $data['grnid'] : null;
        $this->container['order_id'] = isset($data['order_id']) ? $data['order_id'] : null;
        $this->container['purchase_order_received_id'] = isset($data['purchase_order_received_id']) ? $data['purchase_order_received_id'] : null;
        $this->container['order_no'] = isset($data['order_no']) ? $data['order_no'] : null;
        $this->container['order_type'] = isset($data['order_type']) ? $data['order_type'] : null;
        $this->container['ordered_date'] = isset($data['ordered_date']) ? $data['ordered_date'] : null;
        $this->container['freight_tax_id'] = isset($data['freight_tax_id']) ? $data['freight_tax_id'] : null;
        $this->container['freight'] = isset($data['freight']) ? $data['freight'] : null;
        $this->container['freight_tax_amount'] = isset($data['freight_tax_amount']) ? $data['freight_tax_amount'] : null;
        $this->container['duty_tax_id'] = isset($data['duty_tax_id']) ? $data['duty_tax_id'] : null;
        $this->container['duty'] = isset($data['duty']) ? $data['duty'] : null;
        $this->container['duty_tax_amount'] = isset($data['duty_tax_amount']) ? $data['duty_tax_amount'] : null;
        $this->container['insurance_tax_id'] = isset($data['insurance_tax_id']) ? $data['insurance_tax_id'] : null;
        $this->container['insurance'] = isset($data['insurance']) ? $data['insurance'] : null;
        $this->container['insurance_tax_amount'] = isset($data['insurance_tax_amount']) ? $data['insurance_tax_amount'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets grnid
     *
     * @return string
     */
    public function getGrnid()
    {
        return $this->container['grnid'];
    }

    /**
     * Sets grnid
     *
     * @param string $grnid grnid
     *
     * @return $this
     */
    public function setGrnid($grnid)
    {
        $this->container['grnid'] = $grnid;

        return $this;
    }

    /**
     * Gets order_id
     *
     * @return string
     */
    public function getOrderId()
    {
        return $this->container['order_id'];
    }

    /**
     * Sets order_id
     *
     * @param string $order_id order_id
     *
     * @return $this
     */
    public function setOrderId($order_id)
    {
        $this->container['order_id'] = $order_id;

        return $this;
    }

    /**
     * Gets purchase_order_received_id
     *
     * @return string
     */
    public function getPurchaseOrderReceivedId()
    {
        return $this->container['purchase_order_received_id'];
    }

    /**
     * Sets purchase_order_received_id
     *
     * @param string $purchase_order_received_id purchase_order_received_id
     *
     * @return $this
     */
    public function setPurchaseOrderReceivedId($purchase_order_received_id)
    {
        $this->container['purchase_order_received_id'] = $purchase_order_received_id;

        return $this;
    }

    /**
     * Gets order_no
     *
     * @return string
     */
    public function getOrderNo()
    {
        return $this->container['order_no'];
    }

    /**
     * Sets order_no
     *
     * @param string $order_no order_no
     *
     * @return $this
     */
    public function setOrderNo($order_no)
    {
        $this->container['order_no'] = $order_no;

        return $this;
    }

    /**
     * Gets order_type
     *
     * @return string
     */
    public function getOrderType()
    {
        return $this->container['order_type'];
    }

    /**
     * Sets order_type
     *
     * @param string $order_type order_type
     *
     * @return $this
     */
    public function setOrderType($order_type)
    {
        $this->container['order_type'] = $order_type;

        return $this;
    }

    /**
     * Gets ordered_date
     *
     * @return \DateTime
     */
    public function getOrderedDate()
    {
        return $this->container['ordered_date'];
    }

    /**
     * Sets ordered_date
     *
     * @param \DateTime $ordered_date ordered_date
     *
     * @return $this
     */
    public function setOrderedDate($ordered_date)
    {
        $this->container['ordered_date'] = $ordered_date;

        return $this;
    }

    /**
     * Gets freight_tax_id
     *
     * @return string
     */
    public function getFreightTaxId()
    {
        return $this->container['freight_tax_id'];
    }

    /**
     * Sets freight_tax_id
     *
     * @param string $freight_tax_id freight_tax_id
     *
     * @return $this
     */
    public function setFreightTaxId($freight_tax_id)
    {
        $this->container['freight_tax_id'] = $freight_tax_id;

        return $this;
    }

    /**
     * Gets freight
     *
     * @return double
     */
    public function getFreight()
    {
        return $this->container['freight'];
    }

    /**
     * Sets freight
     *
     * @param double $freight freight
     *
     * @return $this
     */
    public function setFreight($freight)
    {
        $this->container['freight'] = $freight;

        return $this;
    }

    /**
     * Gets freight_tax_amount
     *
     * @return double
     */
    public function getFreightTaxAmount()
    {
        return $this->container['freight_tax_amount'];
    }

    /**
     * Sets freight_tax_amount
     *
     * @param double $freight_tax_amount freight_tax_amount
     *
     * @return $this
     */
    public function setFreightTaxAmount($freight_tax_amount)
    {
        $this->container['freight_tax_amount'] = $freight_tax_amount;

        return $this;
    }

    /**
     * Gets duty_tax_id
     *
     * @return string
     */
    public function getDutyTaxId()
    {
        return $this->container['duty_tax_id'];
    }

    /**
     * Sets duty_tax_id
     *
     * @param string $duty_tax_id duty_tax_id
     *
     * @return $this
     */
    public function setDutyTaxId($duty_tax_id)
    {
        $this->container['duty_tax_id'] = $duty_tax_id;

        return $this;
    }

    /**
     * Gets duty
     *
     * @return double
     */
    public function getDuty()
    {
        return $this->container['duty'];
    }

    /**
     * Sets duty
     *
     * @param double $duty duty
     *
     * @return $this
     */
    public function setDuty($duty)
    {
        $this->container['duty'] = $duty;

        return $this;
    }

    /**
     * Gets duty_tax_amount
     *
     * @return double
     */
    public function getDutyTaxAmount()
    {
        return $this->container['duty_tax_amount'];
    }

    /**
     * Sets duty_tax_amount
     *
     * @param double $duty_tax_amount duty_tax_amount
     *
     * @return $this
     */
    public function setDutyTaxAmount($duty_tax_amount)
    {
        $this->container['duty_tax_amount'] = $duty_tax_amount;

        return $this;
    }

    /**
     * Gets insurance_tax_id
     *
     * @return string
     */
    public function getInsuranceTaxId()
    {
        return $this->container['insurance_tax_id'];
    }

    /**
     * Sets insurance_tax_id
     *
     * @param string $insurance_tax_id insurance_tax_id
     *
     * @return $this
     */
    public function setInsuranceTaxId($insurance_tax_id)
    {
        $this->container['insurance_tax_id'] = $insurance_tax_id;

        return $this;
    }

    /**
     * Gets insurance
     *
     * @return double
     */
    public function getInsurance()
    {
        return $this->container['insurance'];
    }

    /**
     * Sets insurance
     *
     * @param double $insurance insurance
     *
     * @return $this
     */
    public function setInsurance($insurance)
    {
        $this->container['insurance'] = $insurance;

        return $this;
    }

    /**
     * Gets insurance_tax_amount
     *
     * @return double
     */
    public function getInsuranceTaxAmount()
    {
        return $this->container['insurance_tax_amount'];
    }

    /**
     * Sets insurance_tax_amount
     *
     * @param double $insurance_tax_amount insurance_tax_amount
     *
     * @return $this
     */
    public function setInsuranceTaxAmount($insurance_tax_amount)
    {
        $this->container['insurance_tax_amount'] = $insurance_tax_amount;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


