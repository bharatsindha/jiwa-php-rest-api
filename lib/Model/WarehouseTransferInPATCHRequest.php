<?php
/**
 * WarehouseTransferInPATCHRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\Model;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * WarehouseTransferInPATCHRequest Class Doc Comment
 *
 * @category Class
 * @description WarehouseTransferInPATCHRequest
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class WarehouseTransferInPATCHRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'WarehouseTransferInPATCHRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'warehouse_transfer_in_id' => 'string',
        'warehouse_transfer_out_id' => 'string',
        'last_saved_date_time' => '\DateTime',
        'transfer_date' => '\DateTime',
        'activated_date' => '\DateTime',
        'status' => 'string',
        'created_by_staff_id' => 'string',
        'created_by_staff_user_name' => 'string',
        'created_by_staff_title' => 'string',
        'created_by_staff_first_name' => 'string',
        'created_by_staff_surname' => 'string',
        'source' => 'string',
        'source_type' => 'string',
        'source_id' => 'string',
        'source_no' => 'string',
        'notes' => 'string',
        'source_warehouse_id' => 'string',
        'source_warehouse_logical_description' => 'string',
        'source_warehouse_physical_description' => 'string',
        'source_warehouse_mask' => 'string',
        'destination_warehouse_id' => 'string',
        'destination_warehouse_logical_description' => 'string',
        'destination_warehouse_physical_description' => 'string',
        'destination_warehouse_mask' => 'string',
        'transfer_no' => 'string',
        'use_in_transit' => 'bool',
        'transit_notes' => 'string',
        'in_transit_warehouse_id' => 'string',
        'in_transit_warehouse_logical_description' => 'string',
        'in_transit_warehouse_physical_description' => 'string',
        'in_transit_warehouse_mask' => 'string',
        'added_cost1' => 'double',
        'added_cost2' => 'double',
        'added_cost3' => 'double',
        'picked_by_staff_id' => 'string',
        'picked_by_staff_user_name' => 'string',
        'picked_by_staff_title' => 'string',
        'picked_by_staff_first_name' => 'string',
        'picked_by_staff_surname' => 'string',
        'added_cost_method_name' => 'string',
        'transferred_cost' => 'double',
        'total_cost' => 'double',
        'receive_ins' => '\Jiwa\Model\WarehouseTransferInReceiveIn[]',
        'lines' => '\Jiwa\Model\WarehouseTransferInLine[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'warehouse_transfer_in_id' => null,
        'warehouse_transfer_out_id' => null,
        'last_saved_date_time' => 'date-time',
        'transfer_date' => 'date-time',
        'activated_date' => 'date-time',
        'status' => null,
        'created_by_staff_id' => null,
        'created_by_staff_user_name' => null,
        'created_by_staff_title' => null,
        'created_by_staff_first_name' => null,
        'created_by_staff_surname' => null,
        'source' => null,
        'source_type' => null,
        'source_id' => null,
        'source_no' => null,
        'notes' => null,
        'source_warehouse_id' => null,
        'source_warehouse_logical_description' => null,
        'source_warehouse_physical_description' => null,
        'source_warehouse_mask' => null,
        'destination_warehouse_id' => null,
        'destination_warehouse_logical_description' => null,
        'destination_warehouse_physical_description' => null,
        'destination_warehouse_mask' => null,
        'transfer_no' => null,
        'use_in_transit' => null,
        'transit_notes' => null,
        'in_transit_warehouse_id' => null,
        'in_transit_warehouse_logical_description' => null,
        'in_transit_warehouse_physical_description' => null,
        'in_transit_warehouse_mask' => null,
        'added_cost1' => 'double',
        'added_cost2' => 'double',
        'added_cost3' => 'double',
        'picked_by_staff_id' => null,
        'picked_by_staff_user_name' => null,
        'picked_by_staff_title' => null,
        'picked_by_staff_first_name' => null,
        'picked_by_staff_surname' => null,
        'added_cost_method_name' => null,
        'transferred_cost' => 'double',
        'total_cost' => 'double',
        'receive_ins' => null,
        'lines' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'warehouse_transfer_in_id' => 'WarehouseTransferInID',
        'warehouse_transfer_out_id' => 'WarehouseTransferOutID',
        'last_saved_date_time' => 'LastSavedDateTime',
        'transfer_date' => 'TransferDate',
        'activated_date' => 'ActivatedDate',
        'status' => 'Status',
        'created_by_staff_id' => 'CreatedByStaffID',
        'created_by_staff_user_name' => 'CreatedByStaffUserName',
        'created_by_staff_title' => 'CreatedByStaffTitle',
        'created_by_staff_first_name' => 'CreatedByStaffFirstName',
        'created_by_staff_surname' => 'CreatedByStaffSurname',
        'source' => 'Source',
        'source_type' => 'SourceType',
        'source_id' => 'SourceID',
        'source_no' => 'SourceNo',
        'notes' => 'Notes',
        'source_warehouse_id' => 'SourceWarehouseID',
        'source_warehouse_logical_description' => 'SourceWarehouseLogicalDescription',
        'source_warehouse_physical_description' => 'SourceWarehousePhysicalDescription',
        'source_warehouse_mask' => 'SourceWarehouseMask',
        'destination_warehouse_id' => 'DestinationWarehouseID',
        'destination_warehouse_logical_description' => 'DestinationWarehouseLogicalDescription',
        'destination_warehouse_physical_description' => 'DestinationWarehousePhysicalDescription',
        'destination_warehouse_mask' => 'DestinationWarehouseMask',
        'transfer_no' => 'TransferNo',
        'use_in_transit' => 'UseInTransit',
        'transit_notes' => 'TransitNotes',
        'in_transit_warehouse_id' => 'InTransitWarehouseID',
        'in_transit_warehouse_logical_description' => 'InTransitWarehouseLogicalDescription',
        'in_transit_warehouse_physical_description' => 'InTransitWarehousePhysicalDescription',
        'in_transit_warehouse_mask' => 'InTransitWarehouseMask',
        'added_cost1' => 'AddedCost1',
        'added_cost2' => 'AddedCost2',
        'added_cost3' => 'AddedCost3',
        'picked_by_staff_id' => 'PickedByStaffID',
        'picked_by_staff_user_name' => 'PickedByStaffUserName',
        'picked_by_staff_title' => 'PickedByStaffTitle',
        'picked_by_staff_first_name' => 'PickedByStaffFirstName',
        'picked_by_staff_surname' => 'PickedByStaffSurname',
        'added_cost_method_name' => 'AddedCostMethodName',
        'transferred_cost' => 'TransferredCost',
        'total_cost' => 'TotalCost',
        'receive_ins' => 'ReceiveIns',
        'lines' => 'Lines'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'warehouse_transfer_in_id' => 'setWarehouseTransferInId',
        'warehouse_transfer_out_id' => 'setWarehouseTransferOutId',
        'last_saved_date_time' => 'setLastSavedDateTime',
        'transfer_date' => 'setTransferDate',
        'activated_date' => 'setActivatedDate',
        'status' => 'setStatus',
        'created_by_staff_id' => 'setCreatedByStaffId',
        'created_by_staff_user_name' => 'setCreatedByStaffUserName',
        'created_by_staff_title' => 'setCreatedByStaffTitle',
        'created_by_staff_first_name' => 'setCreatedByStaffFirstName',
        'created_by_staff_surname' => 'setCreatedByStaffSurname',
        'source' => 'setSource',
        'source_type' => 'setSourceType',
        'source_id' => 'setSourceId',
        'source_no' => 'setSourceNo',
        'notes' => 'setNotes',
        'source_warehouse_id' => 'setSourceWarehouseId',
        'source_warehouse_logical_description' => 'setSourceWarehouseLogicalDescription',
        'source_warehouse_physical_description' => 'setSourceWarehousePhysicalDescription',
        'source_warehouse_mask' => 'setSourceWarehouseMask',
        'destination_warehouse_id' => 'setDestinationWarehouseId',
        'destination_warehouse_logical_description' => 'setDestinationWarehouseLogicalDescription',
        'destination_warehouse_physical_description' => 'setDestinationWarehousePhysicalDescription',
        'destination_warehouse_mask' => 'setDestinationWarehouseMask',
        'transfer_no' => 'setTransferNo',
        'use_in_transit' => 'setUseInTransit',
        'transit_notes' => 'setTransitNotes',
        'in_transit_warehouse_id' => 'setInTransitWarehouseId',
        'in_transit_warehouse_logical_description' => 'setInTransitWarehouseLogicalDescription',
        'in_transit_warehouse_physical_description' => 'setInTransitWarehousePhysicalDescription',
        'in_transit_warehouse_mask' => 'setInTransitWarehouseMask',
        'added_cost1' => 'setAddedCost1',
        'added_cost2' => 'setAddedCost2',
        'added_cost3' => 'setAddedCost3',
        'picked_by_staff_id' => 'setPickedByStaffId',
        'picked_by_staff_user_name' => 'setPickedByStaffUserName',
        'picked_by_staff_title' => 'setPickedByStaffTitle',
        'picked_by_staff_first_name' => 'setPickedByStaffFirstName',
        'picked_by_staff_surname' => 'setPickedByStaffSurname',
        'added_cost_method_name' => 'setAddedCostMethodName',
        'transferred_cost' => 'setTransferredCost',
        'total_cost' => 'setTotalCost',
        'receive_ins' => 'setReceiveIns',
        'lines' => 'setLines'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'warehouse_transfer_in_id' => 'getWarehouseTransferInId',
        'warehouse_transfer_out_id' => 'getWarehouseTransferOutId',
        'last_saved_date_time' => 'getLastSavedDateTime',
        'transfer_date' => 'getTransferDate',
        'activated_date' => 'getActivatedDate',
        'status' => 'getStatus',
        'created_by_staff_id' => 'getCreatedByStaffId',
        'created_by_staff_user_name' => 'getCreatedByStaffUserName',
        'created_by_staff_title' => 'getCreatedByStaffTitle',
        'created_by_staff_first_name' => 'getCreatedByStaffFirstName',
        'created_by_staff_surname' => 'getCreatedByStaffSurname',
        'source' => 'getSource',
        'source_type' => 'getSourceType',
        'source_id' => 'getSourceId',
        'source_no' => 'getSourceNo',
        'notes' => 'getNotes',
        'source_warehouse_id' => 'getSourceWarehouseId',
        'source_warehouse_logical_description' => 'getSourceWarehouseLogicalDescription',
        'source_warehouse_physical_description' => 'getSourceWarehousePhysicalDescription',
        'source_warehouse_mask' => 'getSourceWarehouseMask',
        'destination_warehouse_id' => 'getDestinationWarehouseId',
        'destination_warehouse_logical_description' => 'getDestinationWarehouseLogicalDescription',
        'destination_warehouse_physical_description' => 'getDestinationWarehousePhysicalDescription',
        'destination_warehouse_mask' => 'getDestinationWarehouseMask',
        'transfer_no' => 'getTransferNo',
        'use_in_transit' => 'getUseInTransit',
        'transit_notes' => 'getTransitNotes',
        'in_transit_warehouse_id' => 'getInTransitWarehouseId',
        'in_transit_warehouse_logical_description' => 'getInTransitWarehouseLogicalDescription',
        'in_transit_warehouse_physical_description' => 'getInTransitWarehousePhysicalDescription',
        'in_transit_warehouse_mask' => 'getInTransitWarehouseMask',
        'added_cost1' => 'getAddedCost1',
        'added_cost2' => 'getAddedCost2',
        'added_cost3' => 'getAddedCost3',
        'picked_by_staff_id' => 'getPickedByStaffId',
        'picked_by_staff_user_name' => 'getPickedByStaffUserName',
        'picked_by_staff_title' => 'getPickedByStaffTitle',
        'picked_by_staff_first_name' => 'getPickedByStaffFirstName',
        'picked_by_staff_surname' => 'getPickedByStaffSurname',
        'added_cost_method_name' => 'getAddedCostMethodName',
        'transferred_cost' => 'getTransferredCost',
        'total_cost' => 'getTotalCost',
        'receive_ins' => 'getReceiveIns',
        'lines' => 'getLines'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['warehouse_transfer_in_id'] = isset($data['warehouse_transfer_in_id']) ? $data['warehouse_transfer_in_id'] : null;
        $this->container['warehouse_transfer_out_id'] = isset($data['warehouse_transfer_out_id']) ? $data['warehouse_transfer_out_id'] : null;
        $this->container['last_saved_date_time'] = isset($data['last_saved_date_time']) ? $data['last_saved_date_time'] : null;
        $this->container['transfer_date'] = isset($data['transfer_date']) ? $data['transfer_date'] : null;
        $this->container['activated_date'] = isset($data['activated_date']) ? $data['activated_date'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['created_by_staff_id'] = isset($data['created_by_staff_id']) ? $data['created_by_staff_id'] : null;
        $this->container['created_by_staff_user_name'] = isset($data['created_by_staff_user_name']) ? $data['created_by_staff_user_name'] : null;
        $this->container['created_by_staff_title'] = isset($data['created_by_staff_title']) ? $data['created_by_staff_title'] : null;
        $this->container['created_by_staff_first_name'] = isset($data['created_by_staff_first_name']) ? $data['created_by_staff_first_name'] : null;
        $this->container['created_by_staff_surname'] = isset($data['created_by_staff_surname']) ? $data['created_by_staff_surname'] : null;
        $this->container['source'] = isset($data['source']) ? $data['source'] : null;
        $this->container['source_type'] = isset($data['source_type']) ? $data['source_type'] : null;
        $this->container['source_id'] = isset($data['source_id']) ? $data['source_id'] : null;
        $this->container['source_no'] = isset($data['source_no']) ? $data['source_no'] : null;
        $this->container['notes'] = isset($data['notes']) ? $data['notes'] : null;
        $this->container['source_warehouse_id'] = isset($data['source_warehouse_id']) ? $data['source_warehouse_id'] : null;
        $this->container['source_warehouse_logical_description'] = isset($data['source_warehouse_logical_description']) ? $data['source_warehouse_logical_description'] : null;
        $this->container['source_warehouse_physical_description'] = isset($data['source_warehouse_physical_description']) ? $data['source_warehouse_physical_description'] : null;
        $this->container['source_warehouse_mask'] = isset($data['source_warehouse_mask']) ? $data['source_warehouse_mask'] : null;
        $this->container['destination_warehouse_id'] = isset($data['destination_warehouse_id']) ? $data['destination_warehouse_id'] : null;
        $this->container['destination_warehouse_logical_description'] = isset($data['destination_warehouse_logical_description']) ? $data['destination_warehouse_logical_description'] : null;
        $this->container['destination_warehouse_physical_description'] = isset($data['destination_warehouse_physical_description']) ? $data['destination_warehouse_physical_description'] : null;
        $this->container['destination_warehouse_mask'] = isset($data['destination_warehouse_mask']) ? $data['destination_warehouse_mask'] : null;
        $this->container['transfer_no'] = isset($data['transfer_no']) ? $data['transfer_no'] : null;
        $this->container['use_in_transit'] = isset($data['use_in_transit']) ? $data['use_in_transit'] : null;
        $this->container['transit_notes'] = isset($data['transit_notes']) ? $data['transit_notes'] : null;
        $this->container['in_transit_warehouse_id'] = isset($data['in_transit_warehouse_id']) ? $data['in_transit_warehouse_id'] : null;
        $this->container['in_transit_warehouse_logical_description'] = isset($data['in_transit_warehouse_logical_description']) ? $data['in_transit_warehouse_logical_description'] : null;
        $this->container['in_transit_warehouse_physical_description'] = isset($data['in_transit_warehouse_physical_description']) ? $data['in_transit_warehouse_physical_description'] : null;
        $this->container['in_transit_warehouse_mask'] = isset($data['in_transit_warehouse_mask']) ? $data['in_transit_warehouse_mask'] : null;
        $this->container['added_cost1'] = isset($data['added_cost1']) ? $data['added_cost1'] : null;
        $this->container['added_cost2'] = isset($data['added_cost2']) ? $data['added_cost2'] : null;
        $this->container['added_cost3'] = isset($data['added_cost3']) ? $data['added_cost3'] : null;
        $this->container['picked_by_staff_id'] = isset($data['picked_by_staff_id']) ? $data['picked_by_staff_id'] : null;
        $this->container['picked_by_staff_user_name'] = isset($data['picked_by_staff_user_name']) ? $data['picked_by_staff_user_name'] : null;
        $this->container['picked_by_staff_title'] = isset($data['picked_by_staff_title']) ? $data['picked_by_staff_title'] : null;
        $this->container['picked_by_staff_first_name'] = isset($data['picked_by_staff_first_name']) ? $data['picked_by_staff_first_name'] : null;
        $this->container['picked_by_staff_surname'] = isset($data['picked_by_staff_surname']) ? $data['picked_by_staff_surname'] : null;
        $this->container['added_cost_method_name'] = isset($data['added_cost_method_name']) ? $data['added_cost_method_name'] : null;
        $this->container['transferred_cost'] = isset($data['transferred_cost']) ? $data['transferred_cost'] : null;
        $this->container['total_cost'] = isset($data['total_cost']) ? $data['total_cost'] : null;
        $this->container['receive_ins'] = isset($data['receive_ins']) ? $data['receive_ins'] : null;
        $this->container['lines'] = isset($data['lines']) ? $data['lines'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets warehouse_transfer_in_id
     *
     * @return string
     */
    public function getWarehouseTransferInId()
    {
        return $this->container['warehouse_transfer_in_id'];
    }

    /**
     * Sets warehouse_transfer_in_id
     *
     * @param string $warehouse_transfer_in_id warehouse_transfer_in_id
     *
     * @return $this
     */
    public function setWarehouseTransferInId($warehouse_transfer_in_id)
    {
        $this->container['warehouse_transfer_in_id'] = $warehouse_transfer_in_id;

        return $this;
    }

    /**
     * Gets warehouse_transfer_out_id
     *
     * @return string
     */
    public function getWarehouseTransferOutId()
    {
        return $this->container['warehouse_transfer_out_id'];
    }

    /**
     * Sets warehouse_transfer_out_id
     *
     * @param string $warehouse_transfer_out_id warehouse_transfer_out_id
     *
     * @return $this
     */
    public function setWarehouseTransferOutId($warehouse_transfer_out_id)
    {
        $this->container['warehouse_transfer_out_id'] = $warehouse_transfer_out_id;

        return $this;
    }

    /**
     * Gets last_saved_date_time
     *
     * @return \DateTime
     */
    public function getLastSavedDateTime()
    {
        return $this->container['last_saved_date_time'];
    }

    /**
     * Sets last_saved_date_time
     *
     * @param \DateTime $last_saved_date_time last_saved_date_time
     *
     * @return $this
     */
    public function setLastSavedDateTime($last_saved_date_time)
    {
        $this->container['last_saved_date_time'] = $last_saved_date_time;

        return $this;
    }

    /**
     * Gets transfer_date
     *
     * @return \DateTime
     */
    public function getTransferDate()
    {
        return $this->container['transfer_date'];
    }

    /**
     * Sets transfer_date
     *
     * @param \DateTime $transfer_date transfer_date
     *
     * @return $this
     */
    public function setTransferDate($transfer_date)
    {
        $this->container['transfer_date'] = $transfer_date;

        return $this;
    }

    /**
     * Gets activated_date
     *
     * @return \DateTime
     */
    public function getActivatedDate()
    {
        return $this->container['activated_date'];
    }

    /**
     * Sets activated_date
     *
     * @param \DateTime $activated_date activated_date
     *
     * @return $this
     */
    public function setActivatedDate($activated_date)
    {
        $this->container['activated_date'] = $activated_date;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets created_by_staff_id
     *
     * @return string
     */
    public function getCreatedByStaffId()
    {
        return $this->container['created_by_staff_id'];
    }

    /**
     * Sets created_by_staff_id
     *
     * @param string $created_by_staff_id created_by_staff_id
     *
     * @return $this
     */
    public function setCreatedByStaffId($created_by_staff_id)
    {
        $this->container['created_by_staff_id'] = $created_by_staff_id;

        return $this;
    }

    /**
     * Gets created_by_staff_user_name
     *
     * @return string
     */
    public function getCreatedByStaffUserName()
    {
        return $this->container['created_by_staff_user_name'];
    }

    /**
     * Sets created_by_staff_user_name
     *
     * @param string $created_by_staff_user_name created_by_staff_user_name
     *
     * @return $this
     */
    public function setCreatedByStaffUserName($created_by_staff_user_name)
    {
        $this->container['created_by_staff_user_name'] = $created_by_staff_user_name;

        return $this;
    }

    /**
     * Gets created_by_staff_title
     *
     * @return string
     */
    public function getCreatedByStaffTitle()
    {
        return $this->container['created_by_staff_title'];
    }

    /**
     * Sets created_by_staff_title
     *
     * @param string $created_by_staff_title created_by_staff_title
     *
     * @return $this
     */
    public function setCreatedByStaffTitle($created_by_staff_title)
    {
        $this->container['created_by_staff_title'] = $created_by_staff_title;

        return $this;
    }

    /**
     * Gets created_by_staff_first_name
     *
     * @return string
     */
    public function getCreatedByStaffFirstName()
    {
        return $this->container['created_by_staff_first_name'];
    }

    /**
     * Sets created_by_staff_first_name
     *
     * @param string $created_by_staff_first_name created_by_staff_first_name
     *
     * @return $this
     */
    public function setCreatedByStaffFirstName($created_by_staff_first_name)
    {
        $this->container['created_by_staff_first_name'] = $created_by_staff_first_name;

        return $this;
    }

    /**
     * Gets created_by_staff_surname
     *
     * @return string
     */
    public function getCreatedByStaffSurname()
    {
        return $this->container['created_by_staff_surname'];
    }

    /**
     * Sets created_by_staff_surname
     *
     * @param string $created_by_staff_surname created_by_staff_surname
     *
     * @return $this
     */
    public function setCreatedByStaffSurname($created_by_staff_surname)
    {
        $this->container['created_by_staff_surname'] = $created_by_staff_surname;

        return $this;
    }

    /**
     * Gets source
     *
     * @return string
     */
    public function getSource()
    {
        return $this->container['source'];
    }

    /**
     * Sets source
     *
     * @param string $source source
     *
     * @return $this
     */
    public function setSource($source)
    {
        $this->container['source'] = $source;

        return $this;
    }

    /**
     * Gets source_type
     *
     * @return string
     */
    public function getSourceType()
    {
        return $this->container['source_type'];
    }

    /**
     * Sets source_type
     *
     * @param string $source_type source_type
     *
     * @return $this
     */
    public function setSourceType($source_type)
    {
        $this->container['source_type'] = $source_type;

        return $this;
    }

    /**
     * Gets source_id
     *
     * @return string
     */
    public function getSourceId()
    {
        return $this->container['source_id'];
    }

    /**
     * Sets source_id
     *
     * @param string $source_id source_id
     *
     * @return $this
     */
    public function setSourceId($source_id)
    {
        $this->container['source_id'] = $source_id;

        return $this;
    }

    /**
     * Gets source_no
     *
     * @return string
     */
    public function getSourceNo()
    {
        return $this->container['source_no'];
    }

    /**
     * Sets source_no
     *
     * @param string $source_no source_no
     *
     * @return $this
     */
    public function setSourceNo($source_no)
    {
        $this->container['source_no'] = $source_no;

        return $this;
    }

    /**
     * Gets notes
     *
     * @return string
     */
    public function getNotes()
    {
        return $this->container['notes'];
    }

    /**
     * Sets notes
     *
     * @param string $notes notes
     *
     * @return $this
     */
    public function setNotes($notes)
    {
        $this->container['notes'] = $notes;

        return $this;
    }

    /**
     * Gets source_warehouse_id
     *
     * @return string
     */
    public function getSourceWarehouseId()
    {
        return $this->container['source_warehouse_id'];
    }

    /**
     * Sets source_warehouse_id
     *
     * @param string $source_warehouse_id source_warehouse_id
     *
     * @return $this
     */
    public function setSourceWarehouseId($source_warehouse_id)
    {
        $this->container['source_warehouse_id'] = $source_warehouse_id;

        return $this;
    }

    /**
     * Gets source_warehouse_logical_description
     *
     * @return string
     */
    public function getSourceWarehouseLogicalDescription()
    {
        return $this->container['source_warehouse_logical_description'];
    }

    /**
     * Sets source_warehouse_logical_description
     *
     * @param string $source_warehouse_logical_description source_warehouse_logical_description
     *
     * @return $this
     */
    public function setSourceWarehouseLogicalDescription($source_warehouse_logical_description)
    {
        $this->container['source_warehouse_logical_description'] = $source_warehouse_logical_description;

        return $this;
    }

    /**
     * Gets source_warehouse_physical_description
     *
     * @return string
     */
    public function getSourceWarehousePhysicalDescription()
    {
        return $this->container['source_warehouse_physical_description'];
    }

    /**
     * Sets source_warehouse_physical_description
     *
     * @param string $source_warehouse_physical_description source_warehouse_physical_description
     *
     * @return $this
     */
    public function setSourceWarehousePhysicalDescription($source_warehouse_physical_description)
    {
        $this->container['source_warehouse_physical_description'] = $source_warehouse_physical_description;

        return $this;
    }

    /**
     * Gets source_warehouse_mask
     *
     * @return string
     */
    public function getSourceWarehouseMask()
    {
        return $this->container['source_warehouse_mask'];
    }

    /**
     * Sets source_warehouse_mask
     *
     * @param string $source_warehouse_mask source_warehouse_mask
     *
     * @return $this
     */
    public function setSourceWarehouseMask($source_warehouse_mask)
    {
        $this->container['source_warehouse_mask'] = $source_warehouse_mask;

        return $this;
    }

    /**
     * Gets destination_warehouse_id
     *
     * @return string
     */
    public function getDestinationWarehouseId()
    {
        return $this->container['destination_warehouse_id'];
    }

    /**
     * Sets destination_warehouse_id
     *
     * @param string $destination_warehouse_id destination_warehouse_id
     *
     * @return $this
     */
    public function setDestinationWarehouseId($destination_warehouse_id)
    {
        $this->container['destination_warehouse_id'] = $destination_warehouse_id;

        return $this;
    }

    /**
     * Gets destination_warehouse_logical_description
     *
     * @return string
     */
    public function getDestinationWarehouseLogicalDescription()
    {
        return $this->container['destination_warehouse_logical_description'];
    }

    /**
     * Sets destination_warehouse_logical_description
     *
     * @param string $destination_warehouse_logical_description destination_warehouse_logical_description
     *
     * @return $this
     */
    public function setDestinationWarehouseLogicalDescription($destination_warehouse_logical_description)
    {
        $this->container['destination_warehouse_logical_description'] = $destination_warehouse_logical_description;

        return $this;
    }

    /**
     * Gets destination_warehouse_physical_description
     *
     * @return string
     */
    public function getDestinationWarehousePhysicalDescription()
    {
        return $this->container['destination_warehouse_physical_description'];
    }

    /**
     * Sets destination_warehouse_physical_description
     *
     * @param string $destination_warehouse_physical_description destination_warehouse_physical_description
     *
     * @return $this
     */
    public function setDestinationWarehousePhysicalDescription($destination_warehouse_physical_description)
    {
        $this->container['destination_warehouse_physical_description'] = $destination_warehouse_physical_description;

        return $this;
    }

    /**
     * Gets destination_warehouse_mask
     *
     * @return string
     */
    public function getDestinationWarehouseMask()
    {
        return $this->container['destination_warehouse_mask'];
    }

    /**
     * Sets destination_warehouse_mask
     *
     * @param string $destination_warehouse_mask destination_warehouse_mask
     *
     * @return $this
     */
    public function setDestinationWarehouseMask($destination_warehouse_mask)
    {
        $this->container['destination_warehouse_mask'] = $destination_warehouse_mask;

        return $this;
    }

    /**
     * Gets transfer_no
     *
     * @return string
     */
    public function getTransferNo()
    {
        return $this->container['transfer_no'];
    }

    /**
     * Sets transfer_no
     *
     * @param string $transfer_no transfer_no
     *
     * @return $this
     */
    public function setTransferNo($transfer_no)
    {
        $this->container['transfer_no'] = $transfer_no;

        return $this;
    }

    /**
     * Gets use_in_transit
     *
     * @return bool
     */
    public function getUseInTransit()
    {
        return $this->container['use_in_transit'];
    }

    /**
     * Sets use_in_transit
     *
     * @param bool $use_in_transit use_in_transit
     *
     * @return $this
     */
    public function setUseInTransit($use_in_transit)
    {
        $this->container['use_in_transit'] = $use_in_transit;

        return $this;
    }

    /**
     * Gets transit_notes
     *
     * @return string
     */
    public function getTransitNotes()
    {
        return $this->container['transit_notes'];
    }

    /**
     * Sets transit_notes
     *
     * @param string $transit_notes transit_notes
     *
     * @return $this
     */
    public function setTransitNotes($transit_notes)
    {
        $this->container['transit_notes'] = $transit_notes;

        return $this;
    }

    /**
     * Gets in_transit_warehouse_id
     *
     * @return string
     */
    public function getInTransitWarehouseId()
    {
        return $this->container['in_transit_warehouse_id'];
    }

    /**
     * Sets in_transit_warehouse_id
     *
     * @param string $in_transit_warehouse_id in_transit_warehouse_id
     *
     * @return $this
     */
    public function setInTransitWarehouseId($in_transit_warehouse_id)
    {
        $this->container['in_transit_warehouse_id'] = $in_transit_warehouse_id;

        return $this;
    }

    /**
     * Gets in_transit_warehouse_logical_description
     *
     * @return string
     */
    public function getInTransitWarehouseLogicalDescription()
    {
        return $this->container['in_transit_warehouse_logical_description'];
    }

    /**
     * Sets in_transit_warehouse_logical_description
     *
     * @param string $in_transit_warehouse_logical_description in_transit_warehouse_logical_description
     *
     * @return $this
     */
    public function setInTransitWarehouseLogicalDescription($in_transit_warehouse_logical_description)
    {
        $this->container['in_transit_warehouse_logical_description'] = $in_transit_warehouse_logical_description;

        return $this;
    }

    /**
     * Gets in_transit_warehouse_physical_description
     *
     * @return string
     */
    public function getInTransitWarehousePhysicalDescription()
    {
        return $this->container['in_transit_warehouse_physical_description'];
    }

    /**
     * Sets in_transit_warehouse_physical_description
     *
     * @param string $in_transit_warehouse_physical_description in_transit_warehouse_physical_description
     *
     * @return $this
     */
    public function setInTransitWarehousePhysicalDescription($in_transit_warehouse_physical_description)
    {
        $this->container['in_transit_warehouse_physical_description'] = $in_transit_warehouse_physical_description;

        return $this;
    }

    /**
     * Gets in_transit_warehouse_mask
     *
     * @return string
     */
    public function getInTransitWarehouseMask()
    {
        return $this->container['in_transit_warehouse_mask'];
    }

    /**
     * Sets in_transit_warehouse_mask
     *
     * @param string $in_transit_warehouse_mask in_transit_warehouse_mask
     *
     * @return $this
     */
    public function setInTransitWarehouseMask($in_transit_warehouse_mask)
    {
        $this->container['in_transit_warehouse_mask'] = $in_transit_warehouse_mask;

        return $this;
    }

    /**
     * Gets added_cost1
     *
     * @return double
     */
    public function getAddedCost1()
    {
        return $this->container['added_cost1'];
    }

    /**
     * Sets added_cost1
     *
     * @param double $added_cost1 added_cost1
     *
     * @return $this
     */
    public function setAddedCost1($added_cost1)
    {
        $this->container['added_cost1'] = $added_cost1;

        return $this;
    }

    /**
     * Gets added_cost2
     *
     * @return double
     */
    public function getAddedCost2()
    {
        return $this->container['added_cost2'];
    }

    /**
     * Sets added_cost2
     *
     * @param double $added_cost2 added_cost2
     *
     * @return $this
     */
    public function setAddedCost2($added_cost2)
    {
        $this->container['added_cost2'] = $added_cost2;

        return $this;
    }

    /**
     * Gets added_cost3
     *
     * @return double
     */
    public function getAddedCost3()
    {
        return $this->container['added_cost3'];
    }

    /**
     * Sets added_cost3
     *
     * @param double $added_cost3 added_cost3
     *
     * @return $this
     */
    public function setAddedCost3($added_cost3)
    {
        $this->container['added_cost3'] = $added_cost3;

        return $this;
    }

    /**
     * Gets picked_by_staff_id
     *
     * @return string
     */
    public function getPickedByStaffId()
    {
        return $this->container['picked_by_staff_id'];
    }

    /**
     * Sets picked_by_staff_id
     *
     * @param string $picked_by_staff_id picked_by_staff_id
     *
     * @return $this
     */
    public function setPickedByStaffId($picked_by_staff_id)
    {
        $this->container['picked_by_staff_id'] = $picked_by_staff_id;

        return $this;
    }

    /**
     * Gets picked_by_staff_user_name
     *
     * @return string
     */
    public function getPickedByStaffUserName()
    {
        return $this->container['picked_by_staff_user_name'];
    }

    /**
     * Sets picked_by_staff_user_name
     *
     * @param string $picked_by_staff_user_name picked_by_staff_user_name
     *
     * @return $this
     */
    public function setPickedByStaffUserName($picked_by_staff_user_name)
    {
        $this->container['picked_by_staff_user_name'] = $picked_by_staff_user_name;

        return $this;
    }

    /**
     * Gets picked_by_staff_title
     *
     * @return string
     */
    public function getPickedByStaffTitle()
    {
        return $this->container['picked_by_staff_title'];
    }

    /**
     * Sets picked_by_staff_title
     *
     * @param string $picked_by_staff_title picked_by_staff_title
     *
     * @return $this
     */
    public function setPickedByStaffTitle($picked_by_staff_title)
    {
        $this->container['picked_by_staff_title'] = $picked_by_staff_title;

        return $this;
    }

    /**
     * Gets picked_by_staff_first_name
     *
     * @return string
     */
    public function getPickedByStaffFirstName()
    {
        return $this->container['picked_by_staff_first_name'];
    }

    /**
     * Sets picked_by_staff_first_name
     *
     * @param string $picked_by_staff_first_name picked_by_staff_first_name
     *
     * @return $this
     */
    public function setPickedByStaffFirstName($picked_by_staff_first_name)
    {
        $this->container['picked_by_staff_first_name'] = $picked_by_staff_first_name;

        return $this;
    }

    /**
     * Gets picked_by_staff_surname
     *
     * @return string
     */
    public function getPickedByStaffSurname()
    {
        return $this->container['picked_by_staff_surname'];
    }

    /**
     * Sets picked_by_staff_surname
     *
     * @param string $picked_by_staff_surname picked_by_staff_surname
     *
     * @return $this
     */
    public function setPickedByStaffSurname($picked_by_staff_surname)
    {
        $this->container['picked_by_staff_surname'] = $picked_by_staff_surname;

        return $this;
    }

    /**
     * Gets added_cost_method_name
     *
     * @return string
     */
    public function getAddedCostMethodName()
    {
        return $this->container['added_cost_method_name'];
    }

    /**
     * Sets added_cost_method_name
     *
     * @param string $added_cost_method_name added_cost_method_name
     *
     * @return $this
     */
    public function setAddedCostMethodName($added_cost_method_name)
    {
        $this->container['added_cost_method_name'] = $added_cost_method_name;

        return $this;
    }

    /**
     * Gets transferred_cost
     *
     * @return double
     */
    public function getTransferredCost()
    {
        return $this->container['transferred_cost'];
    }

    /**
     * Sets transferred_cost
     *
     * @param double $transferred_cost transferred_cost
     *
     * @return $this
     */
    public function setTransferredCost($transferred_cost)
    {
        $this->container['transferred_cost'] = $transferred_cost;

        return $this;
    }

    /**
     * Gets total_cost
     *
     * @return double
     */
    public function getTotalCost()
    {
        return $this->container['total_cost'];
    }

    /**
     * Sets total_cost
     *
     * @param double $total_cost total_cost
     *
     * @return $this
     */
    public function setTotalCost($total_cost)
    {
        $this->container['total_cost'] = $total_cost;

        return $this;
    }

    /**
     * Gets receive_ins
     *
     * @return \Jiwa\Model\WarehouseTransferInReceiveIn[]
     */
    public function getReceiveIns()
    {
        return $this->container['receive_ins'];
    }

    /**
     * Sets receive_ins
     *
     * @param \Jiwa\Model\WarehouseTransferInReceiveIn[] $receive_ins receive_ins
     *
     * @return $this
     */
    public function setReceiveIns($receive_ins)
    {
        $this->container['receive_ins'] = $receive_ins;

        return $this;
    }

    /**
     * Gets lines
     *
     * @return \Jiwa\Model\WarehouseTransferInLine[]
     */
    public function getLines()
    {
        return $this->container['lines'];
    }

    /**
     * Sets lines
     *
     * @param \Jiwa\Model\WarehouseTransferInLine[] $lines lines
     *
     * @return $this
     */
    public function setLines($lines)
    {
        $this->container['lines'] = $lines;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


