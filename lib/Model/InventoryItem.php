<?php
/**
 * InventoryItem
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\Model;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * InventoryItem Class Doc Comment
 *
 * @category Class
 * @description InventoryItem
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InventoryItem implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'InventoryItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'physical_item' => 'bool',
        'ship_with_physical_item' => 'bool',
        'discountable' => 'bool',
        'last_saved_date_time' => '\DateTime',
        'direct_tax' => 'double',
        'status' => 'string',
        'default_price' => 'double',
        'rrp_price' => 'double',
        'l_cost' => 'double',
        's_cost' => 'double',
        'decimal_places' => 'int',
        'minimum_gp' => 'double',
        'weight' => 'double',
        'cubic' => 'double',
        'use_serial_no' => 'bool',
        'back_orderable' => 'bool',
        'sales_man_cost' => 'double',
        'secondary_cost' => 'double',
        'bom_object' => 'string',
        'use_expiry_date' => 'bool',
        'use_standard_cost' => 'bool',
        'standard_cost' => 'double',
        'web_enabled' => 'bool',
        'sell_price_inc_tax' => 'bool',
        'style' => '\Jiwa\Model\InventoryStyle',
        'colour' => '\Jiwa\Model\InventoryColour',
        'size' => '\Jiwa\Model\InventorySize',
        'part_encode_order' => 'int',
        'inventory_id' => 'string',
        'part_no' => 'string',
        'picture' => 'string',
        'description' => 'string',
        'unit_measure' => 'string',
        'classification' => '\Jiwa\Model\InventoryClassification',
        'category1' => '\Jiwa\Model\InventoryCategory',
        'category2' => '\Jiwa\Model\InventoryCategory',
        'category3' => '\Jiwa\Model\InventoryCategory',
        'category4' => '\Jiwa\Model\InventoryCategory',
        'category5' => '\Jiwa\Model\InventoryCategory',
        'aux1' => 'string',
        'aux2' => 'string',
        'aux3' => 'string',
        'aux4' => 'string',
        'aux5' => 'string',
        'gst_inwards_id' => 'string',
        'gst_inwards_description' => 'string',
        'gst_inwards_rate' => 'double',
        'gst_outwards_id' => 'string',
        'gst_outwards_description' => 'string',
        'gst_outwards_rate' => 'double',
        'gst_adjustments_inid' => 'string',
        'gst_adjustments_in_description' => 'string',
        'gst_adjustments_in_rate' => 'double',
        'gst_adjustments_outid' => 'string',
        'gst_adjustments_out_description' => 'string',
        'gst_adjustments_out_rate' => 'double',
        'matrix_description' => 'string',
        'pricing_group_id' => 'string',
        'pricing_group_description' => 'string',
        'inventory_ledgers' => '\Jiwa\Model\InventoryLedger[]',
        'notes' => '\Jiwa\Model\Note[]',
        'documents' => '\Jiwa\Model\Document[]',
        'custom_field_values' => '\Jiwa\Model\CustomFieldValue[]',
        'regions' => '\Jiwa\Model\InventoryRegion[]',
        'debtor_prices' => '\Jiwa\Model\InventoryDebtorPrice[]',
        'debtor_class_prices' => '\Jiwa\Model\InventoryDebtorClassificationPrice[]',
        'debtor_price_group_inventory_specific_prices' => '\Jiwa\Model\InventoryDebtorPriceGroupInventorySpecific[]',
        'alternate_children' => '\Jiwa\Model\InventoryAlternateChild[]',
        'alternate_parents' => '\Jiwa\Model\InventoryAlternateParent[]',
        'components' => '\Jiwa\Model\InventoryComponent[]',
        'warehouse_so_hs' => '\Jiwa\Model\InventoryWarehouseSOH[]',
        'debtor_part_numbers' => '\Jiwa\Model\InventoryDebtorPartNumber[]',
        'group_memberships' => '\Jiwa\Model\InventoryGroupMembership[]',
        'other_descriptions' => '\Jiwa\Model\InventoryOtherDescription[]',
        'order_levels' => '\Jiwa\Model\InventoryOrderLevel[]',
        'budgets' => '\Jiwa\Model\InventoryBudget[]',
        'logical_orders' => '\Jiwa\Model\InventoryLogicalOrder[]',
        'default_bin_locations' => '\Jiwa\Model\InventoryDefaultBinLocation[]',
        'product_availabilities' => '\Jiwa\Model\InventoryProductAvailability[]',
        'selling_prices' => '\Jiwa\Model\InventorySellingPrices',
        'up_sells' => '\Jiwa\Model\InventoryUpSell[]',
        'attribute_groups' => '\Jiwa\Model\InventoryAttributeGroup[]',
        'unit_of_measures' => '\Jiwa\Model\InventoryUnitOfMeasure[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'physical_item' => null,
        'ship_with_physical_item' => null,
        'discountable' => null,
        'last_saved_date_time' => 'date-time',
        'direct_tax' => 'double',
        'status' => null,
        'default_price' => 'double',
        'rrp_price' => 'double',
        'l_cost' => 'double',
        's_cost' => 'double',
        'decimal_places' => 'int32',
        'minimum_gp' => 'double',
        'weight' => 'double',
        'cubic' => 'double',
        'use_serial_no' => null,
        'back_orderable' => null,
        'sales_man_cost' => 'double',
        'secondary_cost' => 'double',
        'bom_object' => null,
        'use_expiry_date' => null,
        'use_standard_cost' => null,
        'standard_cost' => 'double',
        'web_enabled' => null,
        'sell_price_inc_tax' => null,
        'style' => null,
        'colour' => null,
        'size' => null,
        'part_encode_order' => 'int32',
        'inventory_id' => null,
        'part_no' => null,
        'picture' => 'binary',
        'description' => null,
        'unit_measure' => null,
        'classification' => null,
        'category1' => null,
        'category2' => null,
        'category3' => null,
        'category4' => null,
        'category5' => null,
        'aux1' => null,
        'aux2' => null,
        'aux3' => null,
        'aux4' => null,
        'aux5' => null,
        'gst_inwards_id' => null,
        'gst_inwards_description' => null,
        'gst_inwards_rate' => 'double',
        'gst_outwards_id' => null,
        'gst_outwards_description' => null,
        'gst_outwards_rate' => 'double',
        'gst_adjustments_inid' => null,
        'gst_adjustments_in_description' => null,
        'gst_adjustments_in_rate' => 'double',
        'gst_adjustments_outid' => null,
        'gst_adjustments_out_description' => null,
        'gst_adjustments_out_rate' => 'double',
        'matrix_description' => null,
        'pricing_group_id' => null,
        'pricing_group_description' => null,
        'inventory_ledgers' => null,
        'notes' => null,
        'documents' => null,
        'custom_field_values' => null,
        'regions' => null,
        'debtor_prices' => null,
        'debtor_class_prices' => null,
        'debtor_price_group_inventory_specific_prices' => null,
        'alternate_children' => null,
        'alternate_parents' => null,
        'components' => null,
        'warehouse_so_hs' => null,
        'debtor_part_numbers' => null,
        'group_memberships' => null,
        'other_descriptions' => null,
        'order_levels' => null,
        'budgets' => null,
        'logical_orders' => null,
        'default_bin_locations' => null,
        'product_availabilities' => null,
        'selling_prices' => null,
        'up_sells' => null,
        'attribute_groups' => null,
        'unit_of_measures' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'physical_item' => 'PhysicalItem',
        'ship_with_physical_item' => 'ShipWithPhysicalItem',
        'discountable' => 'Discountable',
        'last_saved_date_time' => 'LastSavedDateTime',
        'direct_tax' => 'DirectTax',
        'status' => 'Status',
        'default_price' => 'DefaultPrice',
        'rrp_price' => 'RRPPrice',
        'l_cost' => 'LCost',
        's_cost' => 'SCost',
        'decimal_places' => 'DecimalPlaces',
        'minimum_gp' => 'MinimumGP',
        'weight' => 'Weight',
        'cubic' => 'Cubic',
        'use_serial_no' => 'UseSerialNo',
        'back_orderable' => 'BackOrderable',
        'sales_man_cost' => 'SalesManCost',
        'secondary_cost' => 'SecondaryCost',
        'bom_object' => 'BOMObject',
        'use_expiry_date' => 'UseExpiryDate',
        'use_standard_cost' => 'UseStandardCost',
        'standard_cost' => 'StandardCost',
        'web_enabled' => 'WebEnabled',
        'sell_price_inc_tax' => 'SellPriceIncTax',
        'style' => 'Style',
        'colour' => 'Colour',
        'size' => 'Size',
        'part_encode_order' => 'PartEncodeOrder',
        'inventory_id' => 'InventoryID',
        'part_no' => 'PartNo',
        'picture' => 'Picture',
        'description' => 'Description',
        'unit_measure' => 'UnitMeasure',
        'classification' => 'Classification',
        'category1' => 'Category1',
        'category2' => 'Category2',
        'category3' => 'Category3',
        'category4' => 'Category4',
        'category5' => 'Category5',
        'aux1' => 'Aux1',
        'aux2' => 'Aux2',
        'aux3' => 'Aux3',
        'aux4' => 'Aux4',
        'aux5' => 'Aux5',
        'gst_inwards_id' => 'GSTInwardsID',
        'gst_inwards_description' => 'GSTInwardsDescription',
        'gst_inwards_rate' => 'GSTInwardsRate',
        'gst_outwards_id' => 'GSTOutwardsID',
        'gst_outwards_description' => 'GSTOutwardsDescription',
        'gst_outwards_rate' => 'GSTOutwardsRate',
        'gst_adjustments_inid' => 'GSTAdjustmentsINID',
        'gst_adjustments_in_description' => 'GSTAdjustmentsINDescription',
        'gst_adjustments_in_rate' => 'GSTAdjustmentsINRate',
        'gst_adjustments_outid' => 'GSTAdjustmentsOUTID',
        'gst_adjustments_out_description' => 'GSTAdjustmentsOUTDescription',
        'gst_adjustments_out_rate' => 'GSTAdjustmentsOUTRate',
        'matrix_description' => 'MatrixDescription',
        'pricing_group_id' => 'PricingGroupID',
        'pricing_group_description' => 'PricingGroupDescription',
        'inventory_ledgers' => 'InventoryLedgers',
        'notes' => 'Notes',
        'documents' => 'Documents',
        'custom_field_values' => 'CustomFieldValues',
        'regions' => 'Regions',
        'debtor_prices' => 'DebtorPrices',
        'debtor_class_prices' => 'DebtorClassPrices',
        'debtor_price_group_inventory_specific_prices' => 'DebtorPriceGroupInventorySpecificPrices',
        'alternate_children' => 'AlternateChildren',
        'alternate_parents' => 'AlternateParents',
        'components' => 'Components',
        'warehouse_so_hs' => 'WarehouseSOHs',
        'debtor_part_numbers' => 'DebtorPartNumbers',
        'group_memberships' => 'GroupMemberships',
        'other_descriptions' => 'OtherDescriptions',
        'order_levels' => 'OrderLevels',
        'budgets' => 'Budgets',
        'logical_orders' => 'LogicalOrders',
        'default_bin_locations' => 'DefaultBinLocations',
        'product_availabilities' => 'ProductAvailabilities',
        'selling_prices' => 'SellingPrices',
        'up_sells' => 'UpSells',
        'attribute_groups' => 'AttributeGroups',
        'unit_of_measures' => 'UnitOfMeasures'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'physical_item' => 'setPhysicalItem',
        'ship_with_physical_item' => 'setShipWithPhysicalItem',
        'discountable' => 'setDiscountable',
        'last_saved_date_time' => 'setLastSavedDateTime',
        'direct_tax' => 'setDirectTax',
        'status' => 'setStatus',
        'default_price' => 'setDefaultPrice',
        'rrp_price' => 'setRrpPrice',
        'l_cost' => 'setLCost',
        's_cost' => 'setSCost',
        'decimal_places' => 'setDecimalPlaces',
        'minimum_gp' => 'setMinimumGp',
        'weight' => 'setWeight',
        'cubic' => 'setCubic',
        'use_serial_no' => 'setUseSerialNo',
        'back_orderable' => 'setBackOrderable',
        'sales_man_cost' => 'setSalesManCost',
        'secondary_cost' => 'setSecondaryCost',
        'bom_object' => 'setBomObject',
        'use_expiry_date' => 'setUseExpiryDate',
        'use_standard_cost' => 'setUseStandardCost',
        'standard_cost' => 'setStandardCost',
        'web_enabled' => 'setWebEnabled',
        'sell_price_inc_tax' => 'setSellPriceIncTax',
        'style' => 'setStyle',
        'colour' => 'setColour',
        'size' => 'setSize',
        'part_encode_order' => 'setPartEncodeOrder',
        'inventory_id' => 'setInventoryId',
        'part_no' => 'setPartNo',
        'picture' => 'setPicture',
        'description' => 'setDescription',
        'unit_measure' => 'setUnitMeasure',
        'classification' => 'setClassification',
        'category1' => 'setCategory1',
        'category2' => 'setCategory2',
        'category3' => 'setCategory3',
        'category4' => 'setCategory4',
        'category5' => 'setCategory5',
        'aux1' => 'setAux1',
        'aux2' => 'setAux2',
        'aux3' => 'setAux3',
        'aux4' => 'setAux4',
        'aux5' => 'setAux5',
        'gst_inwards_id' => 'setGstInwardsId',
        'gst_inwards_description' => 'setGstInwardsDescription',
        'gst_inwards_rate' => 'setGstInwardsRate',
        'gst_outwards_id' => 'setGstOutwardsId',
        'gst_outwards_description' => 'setGstOutwardsDescription',
        'gst_outwards_rate' => 'setGstOutwardsRate',
        'gst_adjustments_inid' => 'setGstAdjustmentsInid',
        'gst_adjustments_in_description' => 'setGstAdjustmentsInDescription',
        'gst_adjustments_in_rate' => 'setGstAdjustmentsInRate',
        'gst_adjustments_outid' => 'setGstAdjustmentsOutid',
        'gst_adjustments_out_description' => 'setGstAdjustmentsOutDescription',
        'gst_adjustments_out_rate' => 'setGstAdjustmentsOutRate',
        'matrix_description' => 'setMatrixDescription',
        'pricing_group_id' => 'setPricingGroupId',
        'pricing_group_description' => 'setPricingGroupDescription',
        'inventory_ledgers' => 'setInventoryLedgers',
        'notes' => 'setNotes',
        'documents' => 'setDocuments',
        'custom_field_values' => 'setCustomFieldValues',
        'regions' => 'setRegions',
        'debtor_prices' => 'setDebtorPrices',
        'debtor_class_prices' => 'setDebtorClassPrices',
        'debtor_price_group_inventory_specific_prices' => 'setDebtorPriceGroupInventorySpecificPrices',
        'alternate_children' => 'setAlternateChildren',
        'alternate_parents' => 'setAlternateParents',
        'components' => 'setComponents',
        'warehouse_so_hs' => 'setWarehouseSoHs',
        'debtor_part_numbers' => 'setDebtorPartNumbers',
        'group_memberships' => 'setGroupMemberships',
        'other_descriptions' => 'setOtherDescriptions',
        'order_levels' => 'setOrderLevels',
        'budgets' => 'setBudgets',
        'logical_orders' => 'setLogicalOrders',
        'default_bin_locations' => 'setDefaultBinLocations',
        'product_availabilities' => 'setProductAvailabilities',
        'selling_prices' => 'setSellingPrices',
        'up_sells' => 'setUpSells',
        'attribute_groups' => 'setAttributeGroups',
        'unit_of_measures' => 'setUnitOfMeasures'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'physical_item' => 'getPhysicalItem',
        'ship_with_physical_item' => 'getShipWithPhysicalItem',
        'discountable' => 'getDiscountable',
        'last_saved_date_time' => 'getLastSavedDateTime',
        'direct_tax' => 'getDirectTax',
        'status' => 'getStatus',
        'default_price' => 'getDefaultPrice',
        'rrp_price' => 'getRrpPrice',
        'l_cost' => 'getLCost',
        's_cost' => 'getSCost',
        'decimal_places' => 'getDecimalPlaces',
        'minimum_gp' => 'getMinimumGp',
        'weight' => 'getWeight',
        'cubic' => 'getCubic',
        'use_serial_no' => 'getUseSerialNo',
        'back_orderable' => 'getBackOrderable',
        'sales_man_cost' => 'getSalesManCost',
        'secondary_cost' => 'getSecondaryCost',
        'bom_object' => 'getBomObject',
        'use_expiry_date' => 'getUseExpiryDate',
        'use_standard_cost' => 'getUseStandardCost',
        'standard_cost' => 'getStandardCost',
        'web_enabled' => 'getWebEnabled',
        'sell_price_inc_tax' => 'getSellPriceIncTax',
        'style' => 'getStyle',
        'colour' => 'getColour',
        'size' => 'getSize',
        'part_encode_order' => 'getPartEncodeOrder',
        'inventory_id' => 'getInventoryId',
        'part_no' => 'getPartNo',
        'picture' => 'getPicture',
        'description' => 'getDescription',
        'unit_measure' => 'getUnitMeasure',
        'classification' => 'getClassification',
        'category1' => 'getCategory1',
        'category2' => 'getCategory2',
        'category3' => 'getCategory3',
        'category4' => 'getCategory4',
        'category5' => 'getCategory5',
        'aux1' => 'getAux1',
        'aux2' => 'getAux2',
        'aux3' => 'getAux3',
        'aux4' => 'getAux4',
        'aux5' => 'getAux5',
        'gst_inwards_id' => 'getGstInwardsId',
        'gst_inwards_description' => 'getGstInwardsDescription',
        'gst_inwards_rate' => 'getGstInwardsRate',
        'gst_outwards_id' => 'getGstOutwardsId',
        'gst_outwards_description' => 'getGstOutwardsDescription',
        'gst_outwards_rate' => 'getGstOutwardsRate',
        'gst_adjustments_inid' => 'getGstAdjustmentsInid',
        'gst_adjustments_in_description' => 'getGstAdjustmentsInDescription',
        'gst_adjustments_in_rate' => 'getGstAdjustmentsInRate',
        'gst_adjustments_outid' => 'getGstAdjustmentsOutid',
        'gst_adjustments_out_description' => 'getGstAdjustmentsOutDescription',
        'gst_adjustments_out_rate' => 'getGstAdjustmentsOutRate',
        'matrix_description' => 'getMatrixDescription',
        'pricing_group_id' => 'getPricingGroupId',
        'pricing_group_description' => 'getPricingGroupDescription',
        'inventory_ledgers' => 'getInventoryLedgers',
        'notes' => 'getNotes',
        'documents' => 'getDocuments',
        'custom_field_values' => 'getCustomFieldValues',
        'regions' => 'getRegions',
        'debtor_prices' => 'getDebtorPrices',
        'debtor_class_prices' => 'getDebtorClassPrices',
        'debtor_price_group_inventory_specific_prices' => 'getDebtorPriceGroupInventorySpecificPrices',
        'alternate_children' => 'getAlternateChildren',
        'alternate_parents' => 'getAlternateParents',
        'components' => 'getComponents',
        'warehouse_so_hs' => 'getWarehouseSoHs',
        'debtor_part_numbers' => 'getDebtorPartNumbers',
        'group_memberships' => 'getGroupMemberships',
        'other_descriptions' => 'getOtherDescriptions',
        'order_levels' => 'getOrderLevels',
        'budgets' => 'getBudgets',
        'logical_orders' => 'getLogicalOrders',
        'default_bin_locations' => 'getDefaultBinLocations',
        'product_availabilities' => 'getProductAvailabilities',
        'selling_prices' => 'getSellingPrices',
        'up_sells' => 'getUpSells',
        'attribute_groups' => 'getAttributeGroups',
        'unit_of_measures' => 'getUnitOfMeasures'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['physical_item'] = isset($data['physical_item']) ? $data['physical_item'] : null;
        $this->container['ship_with_physical_item'] = isset($data['ship_with_physical_item']) ? $data['ship_with_physical_item'] : null;
        $this->container['discountable'] = isset($data['discountable']) ? $data['discountable'] : null;
        $this->container['last_saved_date_time'] = isset($data['last_saved_date_time']) ? $data['last_saved_date_time'] : null;
        $this->container['direct_tax'] = isset($data['direct_tax']) ? $data['direct_tax'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['default_price'] = isset($data['default_price']) ? $data['default_price'] : null;
        $this->container['rrp_price'] = isset($data['rrp_price']) ? $data['rrp_price'] : null;
        $this->container['l_cost'] = isset($data['l_cost']) ? $data['l_cost'] : null;
        $this->container['s_cost'] = isset($data['s_cost']) ? $data['s_cost'] : null;
        $this->container['decimal_places'] = isset($data['decimal_places']) ? $data['decimal_places'] : null;
        $this->container['minimum_gp'] = isset($data['minimum_gp']) ? $data['minimum_gp'] : null;
        $this->container['weight'] = isset($data['weight']) ? $data['weight'] : null;
        $this->container['cubic'] = isset($data['cubic']) ? $data['cubic'] : null;
        $this->container['use_serial_no'] = isset($data['use_serial_no']) ? $data['use_serial_no'] : null;
        $this->container['back_orderable'] = isset($data['back_orderable']) ? $data['back_orderable'] : null;
        $this->container['sales_man_cost'] = isset($data['sales_man_cost']) ? $data['sales_man_cost'] : null;
        $this->container['secondary_cost'] = isset($data['secondary_cost']) ? $data['secondary_cost'] : null;
        $this->container['bom_object'] = isset($data['bom_object']) ? $data['bom_object'] : null;
        $this->container['use_expiry_date'] = isset($data['use_expiry_date']) ? $data['use_expiry_date'] : null;
        $this->container['use_standard_cost'] = isset($data['use_standard_cost']) ? $data['use_standard_cost'] : null;
        $this->container['standard_cost'] = isset($data['standard_cost']) ? $data['standard_cost'] : null;
        $this->container['web_enabled'] = isset($data['web_enabled']) ? $data['web_enabled'] : null;
        $this->container['sell_price_inc_tax'] = isset($data['sell_price_inc_tax']) ? $data['sell_price_inc_tax'] : null;
        $this->container['style'] = isset($data['style']) ? $data['style'] : null;
        $this->container['colour'] = isset($data['colour']) ? $data['colour'] : null;
        $this->container['size'] = isset($data['size']) ? $data['size'] : null;
        $this->container['part_encode_order'] = isset($data['part_encode_order']) ? $data['part_encode_order'] : null;
        $this->container['inventory_id'] = isset($data['inventory_id']) ? $data['inventory_id'] : null;
        $this->container['part_no'] = isset($data['part_no']) ? $data['part_no'] : null;
        $this->container['picture'] = isset($data['picture']) ? $data['picture'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['unit_measure'] = isset($data['unit_measure']) ? $data['unit_measure'] : null;
        $this->container['classification'] = isset($data['classification']) ? $data['classification'] : null;
        $this->container['category1'] = isset($data['category1']) ? $data['category1'] : null;
        $this->container['category2'] = isset($data['category2']) ? $data['category2'] : null;
        $this->container['category3'] = isset($data['category3']) ? $data['category3'] : null;
        $this->container['category4'] = isset($data['category4']) ? $data['category4'] : null;
        $this->container['category5'] = isset($data['category5']) ? $data['category5'] : null;
        $this->container['aux1'] = isset($data['aux1']) ? $data['aux1'] : null;
        $this->container['aux2'] = isset($data['aux2']) ? $data['aux2'] : null;
        $this->container['aux3'] = isset($data['aux3']) ? $data['aux3'] : null;
        $this->container['aux4'] = isset($data['aux4']) ? $data['aux4'] : null;
        $this->container['aux5'] = isset($data['aux5']) ? $data['aux5'] : null;
        $this->container['gst_inwards_id'] = isset($data['gst_inwards_id']) ? $data['gst_inwards_id'] : null;
        $this->container['gst_inwards_description'] = isset($data['gst_inwards_description']) ? $data['gst_inwards_description'] : null;
        $this->container['gst_inwards_rate'] = isset($data['gst_inwards_rate']) ? $data['gst_inwards_rate'] : null;
        $this->container['gst_outwards_id'] = isset($data['gst_outwards_id']) ? $data['gst_outwards_id'] : null;
        $this->container['gst_outwards_description'] = isset($data['gst_outwards_description']) ? $data['gst_outwards_description'] : null;
        $this->container['gst_outwards_rate'] = isset($data['gst_outwards_rate']) ? $data['gst_outwards_rate'] : null;
        $this->container['gst_adjustments_inid'] = isset($data['gst_adjustments_inid']) ? $data['gst_adjustments_inid'] : null;
        $this->container['gst_adjustments_in_description'] = isset($data['gst_adjustments_in_description']) ? $data['gst_adjustments_in_description'] : null;
        $this->container['gst_adjustments_in_rate'] = isset($data['gst_adjustments_in_rate']) ? $data['gst_adjustments_in_rate'] : null;
        $this->container['gst_adjustments_outid'] = isset($data['gst_adjustments_outid']) ? $data['gst_adjustments_outid'] : null;
        $this->container['gst_adjustments_out_description'] = isset($data['gst_adjustments_out_description']) ? $data['gst_adjustments_out_description'] : null;
        $this->container['gst_adjustments_out_rate'] = isset($data['gst_adjustments_out_rate']) ? $data['gst_adjustments_out_rate'] : null;
        $this->container['matrix_description'] = isset($data['matrix_description']) ? $data['matrix_description'] : null;
        $this->container['pricing_group_id'] = isset($data['pricing_group_id']) ? $data['pricing_group_id'] : null;
        $this->container['pricing_group_description'] = isset($data['pricing_group_description']) ? $data['pricing_group_description'] : null;
        $this->container['inventory_ledgers'] = isset($data['inventory_ledgers']) ? $data['inventory_ledgers'] : null;
        $this->container['notes'] = isset($data['notes']) ? $data['notes'] : null;
        $this->container['documents'] = isset($data['documents']) ? $data['documents'] : null;
        $this->container['custom_field_values'] = isset($data['custom_field_values']) ? $data['custom_field_values'] : null;
        $this->container['regions'] = isset($data['regions']) ? $data['regions'] : null;
        $this->container['debtor_prices'] = isset($data['debtor_prices']) ? $data['debtor_prices'] : null;
        $this->container['debtor_class_prices'] = isset($data['debtor_class_prices']) ? $data['debtor_class_prices'] : null;
        $this->container['debtor_price_group_inventory_specific_prices'] = isset($data['debtor_price_group_inventory_specific_prices']) ? $data['debtor_price_group_inventory_specific_prices'] : null;
        $this->container['alternate_children'] = isset($data['alternate_children']) ? $data['alternate_children'] : null;
        $this->container['alternate_parents'] = isset($data['alternate_parents']) ? $data['alternate_parents'] : null;
        $this->container['components'] = isset($data['components']) ? $data['components'] : null;
        $this->container['warehouse_so_hs'] = isset($data['warehouse_so_hs']) ? $data['warehouse_so_hs'] : null;
        $this->container['debtor_part_numbers'] = isset($data['debtor_part_numbers']) ? $data['debtor_part_numbers'] : null;
        $this->container['group_memberships'] = isset($data['group_memberships']) ? $data['group_memberships'] : null;
        $this->container['other_descriptions'] = isset($data['other_descriptions']) ? $data['other_descriptions'] : null;
        $this->container['order_levels'] = isset($data['order_levels']) ? $data['order_levels'] : null;
        $this->container['budgets'] = isset($data['budgets']) ? $data['budgets'] : null;
        $this->container['logical_orders'] = isset($data['logical_orders']) ? $data['logical_orders'] : null;
        $this->container['default_bin_locations'] = isset($data['default_bin_locations']) ? $data['default_bin_locations'] : null;
        $this->container['product_availabilities'] = isset($data['product_availabilities']) ? $data['product_availabilities'] : null;
        $this->container['selling_prices'] = isset($data['selling_prices']) ? $data['selling_prices'] : null;
        $this->container['up_sells'] = isset($data['up_sells']) ? $data['up_sells'] : null;
        $this->container['attribute_groups'] = isset($data['attribute_groups']) ? $data['attribute_groups'] : null;
        $this->container['unit_of_measures'] = isset($data['unit_of_measures']) ? $data['unit_of_measures'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets physical_item
     *
     * @return bool
     */
    public function getPhysicalItem()
    {
        return $this->container['physical_item'];
    }

    /**
     * Sets physical_item
     *
     * @param bool $physical_item physical_item
     *
     * @return $this
     */
    public function setPhysicalItem($physical_item)
    {
        $this->container['physical_item'] = $physical_item;

        return $this;
    }

    /**
     * Gets ship_with_physical_item
     *
     * @return bool
     */
    public function getShipWithPhysicalItem()
    {
        return $this->container['ship_with_physical_item'];
    }

    /**
     * Sets ship_with_physical_item
     *
     * @param bool $ship_with_physical_item ship_with_physical_item
     *
     * @return $this
     */
    public function setShipWithPhysicalItem($ship_with_physical_item)
    {
        $this->container['ship_with_physical_item'] = $ship_with_physical_item;

        return $this;
    }

    /**
     * Gets discountable
     *
     * @return bool
     */
    public function getDiscountable()
    {
        return $this->container['discountable'];
    }

    /**
     * Sets discountable
     *
     * @param bool $discountable discountable
     *
     * @return $this
     */
    public function setDiscountable($discountable)
    {
        $this->container['discountable'] = $discountable;

        return $this;
    }

    /**
     * Gets last_saved_date_time
     *
     * @return \DateTime
     */
    public function getLastSavedDateTime()
    {
        return $this->container['last_saved_date_time'];
    }

    /**
     * Sets last_saved_date_time
     *
     * @param \DateTime $last_saved_date_time last_saved_date_time
     *
     * @return $this
     */
    public function setLastSavedDateTime($last_saved_date_time)
    {
        $this->container['last_saved_date_time'] = $last_saved_date_time;

        return $this;
    }

    /**
     * Gets direct_tax
     *
     * @return double
     */
    public function getDirectTax()
    {
        return $this->container['direct_tax'];
    }

    /**
     * Sets direct_tax
     *
     * @param double $direct_tax direct_tax
     *
     * @return $this
     */
    public function setDirectTax($direct_tax)
    {
        $this->container['direct_tax'] = $direct_tax;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets default_price
     *
     * @return double
     */
    public function getDefaultPrice()
    {
        return $this->container['default_price'];
    }

    /**
     * Sets default_price
     *
     * @param double $default_price default_price
     *
     * @return $this
     */
    public function setDefaultPrice($default_price)
    {
        $this->container['default_price'] = $default_price;

        return $this;
    }

    /**
     * Gets rrp_price
     *
     * @return double
     */
    public function getRrpPrice()
    {
        return $this->container['rrp_price'];
    }

    /**
     * Sets rrp_price
     *
     * @param double $rrp_price rrp_price
     *
     * @return $this
     */
    public function setRrpPrice($rrp_price)
    {
        $this->container['rrp_price'] = $rrp_price;

        return $this;
    }

    /**
     * Gets l_cost
     *
     * @return double
     */
    public function getLCost()
    {
        return $this->container['l_cost'];
    }

    /**
     * Sets l_cost
     *
     * @param double $l_cost l_cost
     *
     * @return $this
     */
    public function setLCost($l_cost)
    {
        $this->container['l_cost'] = $l_cost;

        return $this;
    }

    /**
     * Gets s_cost
     *
     * @return double
     */
    public function getSCost()
    {
        return $this->container['s_cost'];
    }

    /**
     * Sets s_cost
     *
     * @param double $s_cost s_cost
     *
     * @return $this
     */
    public function setSCost($s_cost)
    {
        $this->container['s_cost'] = $s_cost;

        return $this;
    }

    /**
     * Gets decimal_places
     *
     * @return int
     */
    public function getDecimalPlaces()
    {
        return $this->container['decimal_places'];
    }

    /**
     * Sets decimal_places
     *
     * @param int $decimal_places decimal_places
     *
     * @return $this
     */
    public function setDecimalPlaces($decimal_places)
    {
        $this->container['decimal_places'] = $decimal_places;

        return $this;
    }

    /**
     * Gets minimum_gp
     *
     * @return double
     */
    public function getMinimumGp()
    {
        return $this->container['minimum_gp'];
    }

    /**
     * Sets minimum_gp
     *
     * @param double $minimum_gp minimum_gp
     *
     * @return $this
     */
    public function setMinimumGp($minimum_gp)
    {
        $this->container['minimum_gp'] = $minimum_gp;

        return $this;
    }

    /**
     * Gets weight
     *
     * @return double
     */
    public function getWeight()
    {
        return $this->container['weight'];
    }

    /**
     * Sets weight
     *
     * @param double $weight weight
     *
     * @return $this
     */
    public function setWeight($weight)
    {
        $this->container['weight'] = $weight;

        return $this;
    }

    /**
     * Gets cubic
     *
     * @return double
     */
    public function getCubic()
    {
        return $this->container['cubic'];
    }

    /**
     * Sets cubic
     *
     * @param double $cubic cubic
     *
     * @return $this
     */
    public function setCubic($cubic)
    {
        $this->container['cubic'] = $cubic;

        return $this;
    }

    /**
     * Gets use_serial_no
     *
     * @return bool
     */
    public function getUseSerialNo()
    {
        return $this->container['use_serial_no'];
    }

    /**
     * Sets use_serial_no
     *
     * @param bool $use_serial_no use_serial_no
     *
     * @return $this
     */
    public function setUseSerialNo($use_serial_no)
    {
        $this->container['use_serial_no'] = $use_serial_no;

        return $this;
    }

    /**
     * Gets back_orderable
     *
     * @return bool
     */
    public function getBackOrderable()
    {
        return $this->container['back_orderable'];
    }

    /**
     * Sets back_orderable
     *
     * @param bool $back_orderable back_orderable
     *
     * @return $this
     */
    public function setBackOrderable($back_orderable)
    {
        $this->container['back_orderable'] = $back_orderable;

        return $this;
    }

    /**
     * Gets sales_man_cost
     *
     * @return double
     */
    public function getSalesManCost()
    {
        return $this->container['sales_man_cost'];
    }

    /**
     * Sets sales_man_cost
     *
     * @param double $sales_man_cost sales_man_cost
     *
     * @return $this
     */
    public function setSalesManCost($sales_man_cost)
    {
        $this->container['sales_man_cost'] = $sales_man_cost;

        return $this;
    }

    /**
     * Gets secondary_cost
     *
     * @return double
     */
    public function getSecondaryCost()
    {
        return $this->container['secondary_cost'];
    }

    /**
     * Sets secondary_cost
     *
     * @param double $secondary_cost secondary_cost
     *
     * @return $this
     */
    public function setSecondaryCost($secondary_cost)
    {
        $this->container['secondary_cost'] = $secondary_cost;

        return $this;
    }

    /**
     * Gets bom_object
     *
     * @return string
     */
    public function getBomObject()
    {
        return $this->container['bom_object'];
    }

    /**
     * Sets bom_object
     *
     * @param string $bom_object bom_object
     *
     * @return $this
     */
    public function setBomObject($bom_object)
    {
        $this->container['bom_object'] = $bom_object;

        return $this;
    }

    /**
     * Gets use_expiry_date
     *
     * @return bool
     */
    public function getUseExpiryDate()
    {
        return $this->container['use_expiry_date'];
    }

    /**
     * Sets use_expiry_date
     *
     * @param bool $use_expiry_date use_expiry_date
     *
     * @return $this
     */
    public function setUseExpiryDate($use_expiry_date)
    {
        $this->container['use_expiry_date'] = $use_expiry_date;

        return $this;
    }

    /**
     * Gets use_standard_cost
     *
     * @return bool
     */
    public function getUseStandardCost()
    {
        return $this->container['use_standard_cost'];
    }

    /**
     * Sets use_standard_cost
     *
     * @param bool $use_standard_cost use_standard_cost
     *
     * @return $this
     */
    public function setUseStandardCost($use_standard_cost)
    {
        $this->container['use_standard_cost'] = $use_standard_cost;

        return $this;
    }

    /**
     * Gets standard_cost
     *
     * @return double
     */
    public function getStandardCost()
    {
        return $this->container['standard_cost'];
    }

    /**
     * Sets standard_cost
     *
     * @param double $standard_cost standard_cost
     *
     * @return $this
     */
    public function setStandardCost($standard_cost)
    {
        $this->container['standard_cost'] = $standard_cost;

        return $this;
    }

    /**
     * Gets web_enabled
     *
     * @return bool
     */
    public function getWebEnabled()
    {
        return $this->container['web_enabled'];
    }

    /**
     * Sets web_enabled
     *
     * @param bool $web_enabled web_enabled
     *
     * @return $this
     */
    public function setWebEnabled($web_enabled)
    {
        $this->container['web_enabled'] = $web_enabled;

        return $this;
    }

    /**
     * Gets sell_price_inc_tax
     *
     * @return bool
     */
    public function getSellPriceIncTax()
    {
        return $this->container['sell_price_inc_tax'];
    }

    /**
     * Sets sell_price_inc_tax
     *
     * @param bool $sell_price_inc_tax sell_price_inc_tax
     *
     * @return $this
     */
    public function setSellPriceIncTax($sell_price_inc_tax)
    {
        $this->container['sell_price_inc_tax'] = $sell_price_inc_tax;

        return $this;
    }

    /**
     * Gets style
     *
     * @return \Jiwa\Model\InventoryStyle
     */
    public function getStyle()
    {
        return $this->container['style'];
    }

    /**
     * Sets style
     *
     * @param \Jiwa\Model\InventoryStyle $style style
     *
     * @return $this
     */
    public function setStyle($style)
    {
        $this->container['style'] = $style;

        return $this;
    }

    /**
     * Gets colour
     *
     * @return \Jiwa\Model\InventoryColour
     */
    public function getColour()
    {
        return $this->container['colour'];
    }

    /**
     * Sets colour
     *
     * @param \Jiwa\Model\InventoryColour $colour colour
     *
     * @return $this
     */
    public function setColour($colour)
    {
        $this->container['colour'] = $colour;

        return $this;
    }

    /**
     * Gets size
     *
     * @return \Jiwa\Model\InventorySize
     */
    public function getSize()
    {
        return $this->container['size'];
    }

    /**
     * Sets size
     *
     * @param \Jiwa\Model\InventorySize $size size
     *
     * @return $this
     */
    public function setSize($size)
    {
        $this->container['size'] = $size;

        return $this;
    }

    /**
     * Gets part_encode_order
     *
     * @return int
     */
    public function getPartEncodeOrder()
    {
        return $this->container['part_encode_order'];
    }

    /**
     * Sets part_encode_order
     *
     * @param int $part_encode_order part_encode_order
     *
     * @return $this
     */
    public function setPartEncodeOrder($part_encode_order)
    {
        $this->container['part_encode_order'] = $part_encode_order;

        return $this;
    }

    /**
     * Gets inventory_id
     *
     * @return string
     */
    public function getInventoryId()
    {
        return $this->container['inventory_id'];
    }

    /**
     * Sets inventory_id
     *
     * @param string $inventory_id inventory_id
     *
     * @return $this
     */
    public function setInventoryId($inventory_id)
    {
        $this->container['inventory_id'] = $inventory_id;

        return $this;
    }

    /**
     * Gets part_no
     *
     * @return string
     */
    public function getPartNo()
    {
        return $this->container['part_no'];
    }

    /**
     * Sets part_no
     *
     * @param string $part_no part_no
     *
     * @return $this
     */
    public function setPartNo($part_no)
    {
        $this->container['part_no'] = $part_no;

        return $this;
    }

    /**
     * Gets picture
     *
     * @return string
     */
    public function getPicture()
    {
        return $this->container['picture'];
    }

    /**
     * Sets picture
     *
     * @param string $picture picture
     *
     * @return $this
     */
    public function setPicture($picture)
    {
        $this->container['picture'] = $picture;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets unit_measure
     *
     * @return string
     */
    public function getUnitMeasure()
    {
        return $this->container['unit_measure'];
    }

    /**
     * Sets unit_measure
     *
     * @param string $unit_measure unit_measure
     *
     * @return $this
     */
    public function setUnitMeasure($unit_measure)
    {
        $this->container['unit_measure'] = $unit_measure;

        return $this;
    }

    /**
     * Gets classification
     *
     * @return \Jiwa\Model\InventoryClassification
     */
    public function getClassification()
    {
        return $this->container['classification'];
    }

    /**
     * Sets classification
     *
     * @param \Jiwa\Model\InventoryClassification $classification classification
     *
     * @return $this
     */
    public function setClassification($classification)
    {
        $this->container['classification'] = $classification;

        return $this;
    }

    /**
     * Gets category1
     *
     * @return \Jiwa\Model\InventoryCategory
     */
    public function getCategory1()
    {
        return $this->container['category1'];
    }

    /**
     * Sets category1
     *
     * @param \Jiwa\Model\InventoryCategory $category1 category1
     *
     * @return $this
     */
    public function setCategory1($category1)
    {
        $this->container['category1'] = $category1;

        return $this;
    }

    /**
     * Gets category2
     *
     * @return \Jiwa\Model\InventoryCategory
     */
    public function getCategory2()
    {
        return $this->container['category2'];
    }

    /**
     * Sets category2
     *
     * @param \Jiwa\Model\InventoryCategory $category2 category2
     *
     * @return $this
     */
    public function setCategory2($category2)
    {
        $this->container['category2'] = $category2;

        return $this;
    }

    /**
     * Gets category3
     *
     * @return \Jiwa\Model\InventoryCategory
     */
    public function getCategory3()
    {
        return $this->container['category3'];
    }

    /**
     * Sets category3
     *
     * @param \Jiwa\Model\InventoryCategory $category3 category3
     *
     * @return $this
     */
    public function setCategory3($category3)
    {
        $this->container['category3'] = $category3;

        return $this;
    }

    /**
     * Gets category4
     *
     * @return \Jiwa\Model\InventoryCategory
     */
    public function getCategory4()
    {
        return $this->container['category4'];
    }

    /**
     * Sets category4
     *
     * @param \Jiwa\Model\InventoryCategory $category4 category4
     *
     * @return $this
     */
    public function setCategory4($category4)
    {
        $this->container['category4'] = $category4;

        return $this;
    }

    /**
     * Gets category5
     *
     * @return \Jiwa\Model\InventoryCategory
     */
    public function getCategory5()
    {
        return $this->container['category5'];
    }

    /**
     * Sets category5
     *
     * @param \Jiwa\Model\InventoryCategory $category5 category5
     *
     * @return $this
     */
    public function setCategory5($category5)
    {
        $this->container['category5'] = $category5;

        return $this;
    }

    /**
     * Gets aux1
     *
     * @return string
     */
    public function getAux1()
    {
        return $this->container['aux1'];
    }

    /**
     * Sets aux1
     *
     * @param string $aux1 aux1
     *
     * @return $this
     */
    public function setAux1($aux1)
    {
        $this->container['aux1'] = $aux1;

        return $this;
    }

    /**
     * Gets aux2
     *
     * @return string
     */
    public function getAux2()
    {
        return $this->container['aux2'];
    }

    /**
     * Sets aux2
     *
     * @param string $aux2 aux2
     *
     * @return $this
     */
    public function setAux2($aux2)
    {
        $this->container['aux2'] = $aux2;

        return $this;
    }

    /**
     * Gets aux3
     *
     * @return string
     */
    public function getAux3()
    {
        return $this->container['aux3'];
    }

    /**
     * Sets aux3
     *
     * @param string $aux3 aux3
     *
     * @return $this
     */
    public function setAux3($aux3)
    {
        $this->container['aux3'] = $aux3;

        return $this;
    }

    /**
     * Gets aux4
     *
     * @return string
     */
    public function getAux4()
    {
        return $this->container['aux4'];
    }

    /**
     * Sets aux4
     *
     * @param string $aux4 aux4
     *
     * @return $this
     */
    public function setAux4($aux4)
    {
        $this->container['aux4'] = $aux4;

        return $this;
    }

    /**
     * Gets aux5
     *
     * @return string
     */
    public function getAux5()
    {
        return $this->container['aux5'];
    }

    /**
     * Sets aux5
     *
     * @param string $aux5 aux5
     *
     * @return $this
     */
    public function setAux5($aux5)
    {
        $this->container['aux5'] = $aux5;

        return $this;
    }

    /**
     * Gets gst_inwards_id
     *
     * @return string
     */
    public function getGstInwardsId()
    {
        return $this->container['gst_inwards_id'];
    }

    /**
     * Sets gst_inwards_id
     *
     * @param string $gst_inwards_id gst_inwards_id
     *
     * @return $this
     */
    public function setGstInwardsId($gst_inwards_id)
    {
        $this->container['gst_inwards_id'] = $gst_inwards_id;

        return $this;
    }

    /**
     * Gets gst_inwards_description
     *
     * @return string
     */
    public function getGstInwardsDescription()
    {
        return $this->container['gst_inwards_description'];
    }

    /**
     * Sets gst_inwards_description
     *
     * @param string $gst_inwards_description gst_inwards_description
     *
     * @return $this
     */
    public function setGstInwardsDescription($gst_inwards_description)
    {
        $this->container['gst_inwards_description'] = $gst_inwards_description;

        return $this;
    }

    /**
     * Gets gst_inwards_rate
     *
     * @return double
     */
    public function getGstInwardsRate()
    {
        return $this->container['gst_inwards_rate'];
    }

    /**
     * Sets gst_inwards_rate
     *
     * @param double $gst_inwards_rate gst_inwards_rate
     *
     * @return $this
     */
    public function setGstInwardsRate($gst_inwards_rate)
    {
        $this->container['gst_inwards_rate'] = $gst_inwards_rate;

        return $this;
    }

    /**
     * Gets gst_outwards_id
     *
     * @return string
     */
    public function getGstOutwardsId()
    {
        return $this->container['gst_outwards_id'];
    }

    /**
     * Sets gst_outwards_id
     *
     * @param string $gst_outwards_id gst_outwards_id
     *
     * @return $this
     */
    public function setGstOutwardsId($gst_outwards_id)
    {
        $this->container['gst_outwards_id'] = $gst_outwards_id;

        return $this;
    }

    /**
     * Gets gst_outwards_description
     *
     * @return string
     */
    public function getGstOutwardsDescription()
    {
        return $this->container['gst_outwards_description'];
    }

    /**
     * Sets gst_outwards_description
     *
     * @param string $gst_outwards_description gst_outwards_description
     *
     * @return $this
     */
    public function setGstOutwardsDescription($gst_outwards_description)
    {
        $this->container['gst_outwards_description'] = $gst_outwards_description;

        return $this;
    }

    /**
     * Gets gst_outwards_rate
     *
     * @return double
     */
    public function getGstOutwardsRate()
    {
        return $this->container['gst_outwards_rate'];
    }

    /**
     * Sets gst_outwards_rate
     *
     * @param double $gst_outwards_rate gst_outwards_rate
     *
     * @return $this
     */
    public function setGstOutwardsRate($gst_outwards_rate)
    {
        $this->container['gst_outwards_rate'] = $gst_outwards_rate;

        return $this;
    }

    /**
     * Gets gst_adjustments_inid
     *
     * @return string
     */
    public function getGstAdjustmentsInid()
    {
        return $this->container['gst_adjustments_inid'];
    }

    /**
     * Sets gst_adjustments_inid
     *
     * @param string $gst_adjustments_inid gst_adjustments_inid
     *
     * @return $this
     */
    public function setGstAdjustmentsInid($gst_adjustments_inid)
    {
        $this->container['gst_adjustments_inid'] = $gst_adjustments_inid;

        return $this;
    }

    /**
     * Gets gst_adjustments_in_description
     *
     * @return string
     */
    public function getGstAdjustmentsInDescription()
    {
        return $this->container['gst_adjustments_in_description'];
    }

    /**
     * Sets gst_adjustments_in_description
     *
     * @param string $gst_adjustments_in_description gst_adjustments_in_description
     *
     * @return $this
     */
    public function setGstAdjustmentsInDescription($gst_adjustments_in_description)
    {
        $this->container['gst_adjustments_in_description'] = $gst_adjustments_in_description;

        return $this;
    }

    /**
     * Gets gst_adjustments_in_rate
     *
     * @return double
     */
    public function getGstAdjustmentsInRate()
    {
        return $this->container['gst_adjustments_in_rate'];
    }

    /**
     * Sets gst_adjustments_in_rate
     *
     * @param double $gst_adjustments_in_rate gst_adjustments_in_rate
     *
     * @return $this
     */
    public function setGstAdjustmentsInRate($gst_adjustments_in_rate)
    {
        $this->container['gst_adjustments_in_rate'] = $gst_adjustments_in_rate;

        return $this;
    }

    /**
     * Gets gst_adjustments_outid
     *
     * @return string
     */
    public function getGstAdjustmentsOutid()
    {
        return $this->container['gst_adjustments_outid'];
    }

    /**
     * Sets gst_adjustments_outid
     *
     * @param string $gst_adjustments_outid gst_adjustments_outid
     *
     * @return $this
     */
    public function setGstAdjustmentsOutid($gst_adjustments_outid)
    {
        $this->container['gst_adjustments_outid'] = $gst_adjustments_outid;

        return $this;
    }

    /**
     * Gets gst_adjustments_out_description
     *
     * @return string
     */
    public function getGstAdjustmentsOutDescription()
    {
        return $this->container['gst_adjustments_out_description'];
    }

    /**
     * Sets gst_adjustments_out_description
     *
     * @param string $gst_adjustments_out_description gst_adjustments_out_description
     *
     * @return $this
     */
    public function setGstAdjustmentsOutDescription($gst_adjustments_out_description)
    {
        $this->container['gst_adjustments_out_description'] = $gst_adjustments_out_description;

        return $this;
    }

    /**
     * Gets gst_adjustments_out_rate
     *
     * @return double
     */
    public function getGstAdjustmentsOutRate()
    {
        return $this->container['gst_adjustments_out_rate'];
    }

    /**
     * Sets gst_adjustments_out_rate
     *
     * @param double $gst_adjustments_out_rate gst_adjustments_out_rate
     *
     * @return $this
     */
    public function setGstAdjustmentsOutRate($gst_adjustments_out_rate)
    {
        $this->container['gst_adjustments_out_rate'] = $gst_adjustments_out_rate;

        return $this;
    }

    /**
     * Gets matrix_description
     *
     * @return string
     */
    public function getMatrixDescription()
    {
        return $this->container['matrix_description'];
    }

    /**
     * Sets matrix_description
     *
     * @param string $matrix_description matrix_description
     *
     * @return $this
     */
    public function setMatrixDescription($matrix_description)
    {
        $this->container['matrix_description'] = $matrix_description;

        return $this;
    }

    /**
     * Gets pricing_group_id
     *
     * @return string
     */
    public function getPricingGroupId()
    {
        return $this->container['pricing_group_id'];
    }

    /**
     * Sets pricing_group_id
     *
     * @param string $pricing_group_id pricing_group_id
     *
     * @return $this
     */
    public function setPricingGroupId($pricing_group_id)
    {
        $this->container['pricing_group_id'] = $pricing_group_id;

        return $this;
    }

    /**
     * Gets pricing_group_description
     *
     * @return string
     */
    public function getPricingGroupDescription()
    {
        return $this->container['pricing_group_description'];
    }

    /**
     * Sets pricing_group_description
     *
     * @param string $pricing_group_description pricing_group_description
     *
     * @return $this
     */
    public function setPricingGroupDescription($pricing_group_description)
    {
        $this->container['pricing_group_description'] = $pricing_group_description;

        return $this;
    }

    /**
     * Gets inventory_ledgers
     *
     * @return \Jiwa\Model\InventoryLedger[]
     */
    public function getInventoryLedgers()
    {
        return $this->container['inventory_ledgers'];
    }

    /**
     * Sets inventory_ledgers
     *
     * @param \Jiwa\Model\InventoryLedger[] $inventory_ledgers inventory_ledgers
     *
     * @return $this
     */
    public function setInventoryLedgers($inventory_ledgers)
    {
        $this->container['inventory_ledgers'] = $inventory_ledgers;

        return $this;
    }

    /**
     * Gets notes
     *
     * @return \Jiwa\Model\Note[]
     */
    public function getNotes()
    {
        return $this->container['notes'];
    }

    /**
     * Sets notes
     *
     * @param \Jiwa\Model\Note[] $notes notes
     *
     * @return $this
     */
    public function setNotes($notes)
    {
        $this->container['notes'] = $notes;

        return $this;
    }

    /**
     * Gets documents
     *
     * @return \Jiwa\Model\Document[]
     */
    public function getDocuments()
    {
        return $this->container['documents'];
    }

    /**
     * Sets documents
     *
     * @param \Jiwa\Model\Document[] $documents documents
     *
     * @return $this
     */
    public function setDocuments($documents)
    {
        $this->container['documents'] = $documents;

        return $this;
    }

    /**
     * Gets custom_field_values
     *
     * @return \Jiwa\Model\CustomFieldValue[]
     */
    public function getCustomFieldValues()
    {
        return $this->container['custom_field_values'];
    }

    /**
     * Sets custom_field_values
     *
     * @param \Jiwa\Model\CustomFieldValue[] $custom_field_values custom_field_values
     *
     * @return $this
     */
    public function setCustomFieldValues($custom_field_values)
    {
        $this->container['custom_field_values'] = $custom_field_values;

        return $this;
    }

    /**
     * Gets regions
     *
     * @return \Jiwa\Model\InventoryRegion[]
     */
    public function getRegions()
    {
        return $this->container['regions'];
    }

    /**
     * Sets regions
     *
     * @param \Jiwa\Model\InventoryRegion[] $regions regions
     *
     * @return $this
     */
    public function setRegions($regions)
    {
        $this->container['regions'] = $regions;

        return $this;
    }

    /**
     * Gets debtor_prices
     *
     * @return \Jiwa\Model\InventoryDebtorPrice[]
     */
    public function getDebtorPrices()
    {
        return $this->container['debtor_prices'];
    }

    /**
     * Sets debtor_prices
     *
     * @param \Jiwa\Model\InventoryDebtorPrice[] $debtor_prices debtor_prices
     *
     * @return $this
     */
    public function setDebtorPrices($debtor_prices)
    {
        $this->container['debtor_prices'] = $debtor_prices;

        return $this;
    }

    /**
     * Gets debtor_class_prices
     *
     * @return \Jiwa\Model\InventoryDebtorClassificationPrice[]
     */
    public function getDebtorClassPrices()
    {
        return $this->container['debtor_class_prices'];
    }

    /**
     * Sets debtor_class_prices
     *
     * @param \Jiwa\Model\InventoryDebtorClassificationPrice[] $debtor_class_prices debtor_class_prices
     *
     * @return $this
     */
    public function setDebtorClassPrices($debtor_class_prices)
    {
        $this->container['debtor_class_prices'] = $debtor_class_prices;

        return $this;
    }

    /**
     * Gets debtor_price_group_inventory_specific_prices
     *
     * @return \Jiwa\Model\InventoryDebtorPriceGroupInventorySpecific[]
     */
    public function getDebtorPriceGroupInventorySpecificPrices()
    {
        return $this->container['debtor_price_group_inventory_specific_prices'];
    }

    /**
     * Sets debtor_price_group_inventory_specific_prices
     *
     * @param \Jiwa\Model\InventoryDebtorPriceGroupInventorySpecific[] $debtor_price_group_inventory_specific_prices debtor_price_group_inventory_specific_prices
     *
     * @return $this
     */
    public function setDebtorPriceGroupInventorySpecificPrices($debtor_price_group_inventory_specific_prices)
    {
        $this->container['debtor_price_group_inventory_specific_prices'] = $debtor_price_group_inventory_specific_prices;

        return $this;
    }

    /**
     * Gets alternate_children
     *
     * @return \Jiwa\Model\InventoryAlternateChild[]
     */
    public function getAlternateChildren()
    {
        return $this->container['alternate_children'];
    }

    /**
     * Sets alternate_children
     *
     * @param \Jiwa\Model\InventoryAlternateChild[] $alternate_children alternate_children
     *
     * @return $this
     */
    public function setAlternateChildren($alternate_children)
    {
        $this->container['alternate_children'] = $alternate_children;

        return $this;
    }

    /**
     * Gets alternate_parents
     *
     * @return \Jiwa\Model\InventoryAlternateParent[]
     */
    public function getAlternateParents()
    {
        return $this->container['alternate_parents'];
    }

    /**
     * Sets alternate_parents
     *
     * @param \Jiwa\Model\InventoryAlternateParent[] $alternate_parents alternate_parents
     *
     * @return $this
     */
    public function setAlternateParents($alternate_parents)
    {
        $this->container['alternate_parents'] = $alternate_parents;

        return $this;
    }

    /**
     * Gets components
     *
     * @return \Jiwa\Model\InventoryComponent[]
     */
    public function getComponents()
    {
        return $this->container['components'];
    }

    /**
     * Sets components
     *
     * @param \Jiwa\Model\InventoryComponent[] $components components
     *
     * @return $this
     */
    public function setComponents($components)
    {
        $this->container['components'] = $components;

        return $this;
    }

    /**
     * Gets warehouse_so_hs
     *
     * @return \Jiwa\Model\InventoryWarehouseSOH[]
     */
    public function getWarehouseSoHs()
    {
        return $this->container['warehouse_so_hs'];
    }

    /**
     * Sets warehouse_so_hs
     *
     * @param \Jiwa\Model\InventoryWarehouseSOH[] $warehouse_so_hs warehouse_so_hs
     *
     * @return $this
     */
    public function setWarehouseSoHs($warehouse_so_hs)
    {
        $this->container['warehouse_so_hs'] = $warehouse_so_hs;

        return $this;
    }

    /**
     * Gets debtor_part_numbers
     *
     * @return \Jiwa\Model\InventoryDebtorPartNumber[]
     */
    public function getDebtorPartNumbers()
    {
        return $this->container['debtor_part_numbers'];
    }

    /**
     * Sets debtor_part_numbers
     *
     * @param \Jiwa\Model\InventoryDebtorPartNumber[] $debtor_part_numbers debtor_part_numbers
     *
     * @return $this
     */
    public function setDebtorPartNumbers($debtor_part_numbers)
    {
        $this->container['debtor_part_numbers'] = $debtor_part_numbers;

        return $this;
    }

    /**
     * Gets group_memberships
     *
     * @return \Jiwa\Model\InventoryGroupMembership[]
     */
    public function getGroupMemberships()
    {
        return $this->container['group_memberships'];
    }

    /**
     * Sets group_memberships
     *
     * @param \Jiwa\Model\InventoryGroupMembership[] $group_memberships group_memberships
     *
     * @return $this
     */
    public function setGroupMemberships($group_memberships)
    {
        $this->container['group_memberships'] = $group_memberships;

        return $this;
    }

    /**
     * Gets other_descriptions
     *
     * @return \Jiwa\Model\InventoryOtherDescription[]
     */
    public function getOtherDescriptions()
    {
        return $this->container['other_descriptions'];
    }

    /**
     * Sets other_descriptions
     *
     * @param \Jiwa\Model\InventoryOtherDescription[] $other_descriptions other_descriptions
     *
     * @return $this
     */
    public function setOtherDescriptions($other_descriptions)
    {
        $this->container['other_descriptions'] = $other_descriptions;

        return $this;
    }

    /**
     * Gets order_levels
     *
     * @return \Jiwa\Model\InventoryOrderLevel[]
     */
    public function getOrderLevels()
    {
        return $this->container['order_levels'];
    }

    /**
     * Sets order_levels
     *
     * @param \Jiwa\Model\InventoryOrderLevel[] $order_levels order_levels
     *
     * @return $this
     */
    public function setOrderLevels($order_levels)
    {
        $this->container['order_levels'] = $order_levels;

        return $this;
    }

    /**
     * Gets budgets
     *
     * @return \Jiwa\Model\InventoryBudget[]
     */
    public function getBudgets()
    {
        return $this->container['budgets'];
    }

    /**
     * Sets budgets
     *
     * @param \Jiwa\Model\InventoryBudget[] $budgets budgets
     *
     * @return $this
     */
    public function setBudgets($budgets)
    {
        $this->container['budgets'] = $budgets;

        return $this;
    }

    /**
     * Gets logical_orders
     *
     * @return \Jiwa\Model\InventoryLogicalOrder[]
     */
    public function getLogicalOrders()
    {
        return $this->container['logical_orders'];
    }

    /**
     * Sets logical_orders
     *
     * @param \Jiwa\Model\InventoryLogicalOrder[] $logical_orders logical_orders
     *
     * @return $this
     */
    public function setLogicalOrders($logical_orders)
    {
        $this->container['logical_orders'] = $logical_orders;

        return $this;
    }

    /**
     * Gets default_bin_locations
     *
     * @return \Jiwa\Model\InventoryDefaultBinLocation[]
     */
    public function getDefaultBinLocations()
    {
        return $this->container['default_bin_locations'];
    }

    /**
     * Sets default_bin_locations
     *
     * @param \Jiwa\Model\InventoryDefaultBinLocation[] $default_bin_locations default_bin_locations
     *
     * @return $this
     */
    public function setDefaultBinLocations($default_bin_locations)
    {
        $this->container['default_bin_locations'] = $default_bin_locations;

        return $this;
    }

    /**
     * Gets product_availabilities
     *
     * @return \Jiwa\Model\InventoryProductAvailability[]
     */
    public function getProductAvailabilities()
    {
        return $this->container['product_availabilities'];
    }

    /**
     * Sets product_availabilities
     *
     * @param \Jiwa\Model\InventoryProductAvailability[] $product_availabilities product_availabilities
     *
     * @return $this
     */
    public function setProductAvailabilities($product_availabilities)
    {
        $this->container['product_availabilities'] = $product_availabilities;

        return $this;
    }

    /**
     * Gets selling_prices
     *
     * @return \Jiwa\Model\InventorySellingPrices
     */
    public function getSellingPrices()
    {
        return $this->container['selling_prices'];
    }

    /**
     * Sets selling_prices
     *
     * @param \Jiwa\Model\InventorySellingPrices $selling_prices selling_prices
     *
     * @return $this
     */
    public function setSellingPrices($selling_prices)
    {
        $this->container['selling_prices'] = $selling_prices;

        return $this;
    }

    /**
     * Gets up_sells
     *
     * @return \Jiwa\Model\InventoryUpSell[]
     */
    public function getUpSells()
    {
        return $this->container['up_sells'];
    }

    /**
     * Sets up_sells
     *
     * @param \Jiwa\Model\InventoryUpSell[] $up_sells up_sells
     *
     * @return $this
     */
    public function setUpSells($up_sells)
    {
        $this->container['up_sells'] = $up_sells;

        return $this;
    }

    /**
     * Gets attribute_groups
     *
     * @return \Jiwa\Model\InventoryAttributeGroup[]
     */
    public function getAttributeGroups()
    {
        return $this->container['attribute_groups'];
    }

    /**
     * Sets attribute_groups
     *
     * @param \Jiwa\Model\InventoryAttributeGroup[] $attribute_groups attribute_groups
     *
     * @return $this
     */
    public function setAttributeGroups($attribute_groups)
    {
        $this->container['attribute_groups'] = $attribute_groups;

        return $this;
    }

    /**
     * Gets unit_of_measures
     *
     * @return \Jiwa\Model\InventoryUnitOfMeasure[]
     */
    public function getUnitOfMeasures()
    {
        return $this->container['unit_of_measures'];
    }

    /**
     * Sets unit_of_measures
     *
     * @param \Jiwa\Model\InventoryUnitOfMeasure[] $unit_of_measures unit_of_measures
     *
     * @return $this
     */
    public function setUnitOfMeasures($unit_of_measures)
    {
        $this->container['unit_of_measures'] = $unit_of_measures;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


