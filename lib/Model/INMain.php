<?php
/**
 * INMain
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\JiwaModel;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * INMain Class Doc Comment
 *
 * @category Class
 * @description IN_Main
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class INMain implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'IN_Main';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'inventory_id' => 'string',
        'last_saved_date_time' => '\DateTime',
        'part_no' => 'string',
        'description' => 'string',
        'units' => 'string',
        'physical_item' => 'bool',
        'discountable' => 'bool',
        'direct_tax' => 'double',
        'catagory1_id' => 'string',
        'catagory2_id' => 'string',
        'catagory3_id' => 'string',
        'catagory4_id' => 'string',
        'catagory5_id' => 'string',
        'classification_id' => 'string',
        'status' => 'int',
        'default_price' => 'double',
        'rrp_price' => 'double',
        'l_cost' => 'double',
        's_cost' => 'double',
        'decimal_places' => 'int',
        'minimum_gp' => 'double',
        'weight' => 'double',
        'cubic' => 'double',
        'use_serial_no' => 'bool',
        'aux1' => 'string',
        'aux2' => 'string',
        'aux3' => 'string',
        'aux4' => 'string',
        'aux5' => 'string',
        'back_orderable' => 'bool',
        'ledger_inv_value' => 'string',
        'ledger_movement_cog' => 'string',
        'ledger_exp_asset' => 'string',
        'ledger_exp_liab' => 'string',
        'ledger_del_asset' => 'string',
        'ledger_del_liab' => 'string',
        'sales_man_cost' => 'double',
        'ledger_assigned_value' => 'string',
        'ledger_cog_variance' => 'string',
        'ledger_inv_sales' => 'string',
        'ledger_accumulator' => 'string',
        'ledger_purchases' => 'string',
        'ledger_ship_complete' => 'string',
        'ledger_write_on' => 'string',
        'ledger_write_off' => 'string',
        'ledger_cost_price_adj' => 'string',
        'bom_object' => 'int',
        'use_expiry_date' => 'bool',
        'use_standard_cost' => 'bool',
        'standard_cost' => 'double',
        'web_enabled' => 'bool',
        'gst_inwards_id' => 'string',
        'gst_outwards_id' => 'string',
        'gst_adjustments_inid' => 'string',
        'gst_adjustments_outid' => 'string',
        'sell_price_inc_tax' => 'bool',
        'style_id' => 'string',
        'colour_id' => 'string',
        'size_id' => 'string',
        'part_encode_order' => 'int',
        'type_style' => 'bool',
        'matrix_description' => 'string',
        'secondary_cost' => 'double',
        'pricing_group_id' => 'string',
        'ship_with_physical_item' => 'bool',
        'row_hash' => 'string',
        'picture' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'inventory_id' => null,
        'last_saved_date_time' => 'date-time',
        'part_no' => null,
        'description' => null,
        'units' => null,
        'physical_item' => null,
        'discountable' => null,
        'direct_tax' => 'double',
        'catagory1_id' => null,
        'catagory2_id' => null,
        'catagory3_id' => null,
        'catagory4_id' => null,
        'catagory5_id' => null,
        'classification_id' => null,
        'status' => 'int32',
        'default_price' => 'double',
        'rrp_price' => 'double',
        'l_cost' => 'double',
        's_cost' => 'double',
        'decimal_places' => 'int32',
        'minimum_gp' => 'double',
        'weight' => 'double',
        'cubic' => 'double',
        'use_serial_no' => null,
        'aux1' => null,
        'aux2' => null,
        'aux3' => null,
        'aux4' => null,
        'aux5' => null,
        'back_orderable' => null,
        'ledger_inv_value' => null,
        'ledger_movement_cog' => null,
        'ledger_exp_asset' => null,
        'ledger_exp_liab' => null,
        'ledger_del_asset' => null,
        'ledger_del_liab' => null,
        'sales_man_cost' => 'double',
        'ledger_assigned_value' => null,
        'ledger_cog_variance' => null,
        'ledger_inv_sales' => null,
        'ledger_accumulator' => null,
        'ledger_purchases' => null,
        'ledger_ship_complete' => null,
        'ledger_write_on' => null,
        'ledger_write_off' => null,
        'ledger_cost_price_adj' => null,
        'bom_object' => 'int32',
        'use_expiry_date' => null,
        'use_standard_cost' => null,
        'standard_cost' => 'double',
        'web_enabled' => null,
        'gst_inwards_id' => null,
        'gst_outwards_id' => null,
        'gst_adjustments_inid' => null,
        'gst_adjustments_outid' => null,
        'sell_price_inc_tax' => null,
        'style_id' => null,
        'colour_id' => null,
        'size_id' => null,
        'part_encode_order' => 'int32',
        'type_style' => null,
        'matrix_description' => null,
        'secondary_cost' => 'double',
        'pricing_group_id' => null,
        'ship_with_physical_item' => null,
        'row_hash' => 'binary',
        'picture' => 'binary'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'inventory_id' => 'InventoryID',
        'last_saved_date_time' => 'LastSavedDateTime',
        'part_no' => 'PartNo',
        'description' => 'Description',
        'units' => 'Units',
        'physical_item' => 'PhysicalItem',
        'discountable' => 'Discountable',
        'direct_tax' => 'DirectTax',
        'catagory1_id' => 'Catagory1ID',
        'catagory2_id' => 'Catagory2ID',
        'catagory3_id' => 'Catagory3ID',
        'catagory4_id' => 'Catagory4ID',
        'catagory5_id' => 'Catagory5ID',
        'classification_id' => 'ClassificationID',
        'status' => 'Status',
        'default_price' => 'DefaultPrice',
        'rrp_price' => 'RRPPrice',
        'l_cost' => 'LCost',
        's_cost' => 'SCost',
        'decimal_places' => 'DecimalPlaces',
        'minimum_gp' => 'MinimumGP',
        'weight' => 'Weight',
        'cubic' => 'Cubic',
        'use_serial_no' => 'UseSerialNo',
        'aux1' => 'Aux1',
        'aux2' => 'Aux2',
        'aux3' => 'Aux3',
        'aux4' => 'Aux4',
        'aux5' => 'Aux5',
        'back_orderable' => 'BackOrderable',
        'ledger_inv_value' => 'LedgerInvValue',
        'ledger_movement_cog' => 'LedgerMovement_COG',
        'ledger_exp_asset' => 'LedgerExpAsset',
        'ledger_exp_liab' => 'LedgerExpLiab',
        'ledger_del_asset' => 'LedgerDelAsset',
        'ledger_del_liab' => 'LedgerDelLiab',
        'sales_man_cost' => 'SalesManCost',
        'ledger_assigned_value' => 'LedgerAssignedValue',
        'ledger_cog_variance' => 'LedgerCogVariance',
        'ledger_inv_sales' => 'LedgerInvSales',
        'ledger_accumulator' => 'LedgerAccumulator',
        'ledger_purchases' => 'LedgerPurchases',
        'ledger_ship_complete' => 'LedgerShipComplete',
        'ledger_write_on' => 'LedgerWriteOn',
        'ledger_write_off' => 'LedgerWriteOff',
        'ledger_cost_price_adj' => 'LedgerCostPriceAdj',
        'bom_object' => 'BOMObject',
        'use_expiry_date' => 'UseExpiryDate',
        'use_standard_cost' => 'UseStandardCost',
        'standard_cost' => 'StandardCost',
        'web_enabled' => 'WebEnabled',
        'gst_inwards_id' => 'GSTInwardsID',
        'gst_outwards_id' => 'GSTOutwardsID',
        'gst_adjustments_inid' => 'GSTAdjustmentsINID',
        'gst_adjustments_outid' => 'GSTAdjustmentsOUTID',
        'sell_price_inc_tax' => 'SellPriceIncTax',
        'style_id' => 'StyleID',
        'colour_id' => 'ColourID',
        'size_id' => 'SizeID',
        'part_encode_order' => 'PartEncodeOrder',
        'type_style' => 'TypeStyle',
        'matrix_description' => 'MatrixDescription',
        'secondary_cost' => 'SecondaryCost',
        'pricing_group_id' => 'PricingGroupID',
        'ship_with_physical_item' => 'ShipWithPhysicalItem',
        'row_hash' => 'RowHash',
        'picture' => 'Picture'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'inventory_id' => 'setInventoryId',
        'last_saved_date_time' => 'setLastSavedDateTime',
        'part_no' => 'setPartNo',
        'description' => 'setDescription',
        'units' => 'setUnits',
        'physical_item' => 'setPhysicalItem',
        'discountable' => 'setDiscountable',
        'direct_tax' => 'setDirectTax',
        'catagory1_id' => 'setCatagory1Id',
        'catagory2_id' => 'setCatagory2Id',
        'catagory3_id' => 'setCatagory3Id',
        'catagory4_id' => 'setCatagory4Id',
        'catagory5_id' => 'setCatagory5Id',
        'classification_id' => 'setClassificationId',
        'status' => 'setStatus',
        'default_price' => 'setDefaultPrice',
        'rrp_price' => 'setRrpPrice',
        'l_cost' => 'setLCost',
        's_cost' => 'setSCost',
        'decimal_places' => 'setDecimalPlaces',
        'minimum_gp' => 'setMinimumGp',
        'weight' => 'setWeight',
        'cubic' => 'setCubic',
        'use_serial_no' => 'setUseSerialNo',
        'aux1' => 'setAux1',
        'aux2' => 'setAux2',
        'aux3' => 'setAux3',
        'aux4' => 'setAux4',
        'aux5' => 'setAux5',
        'back_orderable' => 'setBackOrderable',
        'ledger_inv_value' => 'setLedgerInvValue',
        'ledger_movement_cog' => 'setLedgerMovementCog',
        'ledger_exp_asset' => 'setLedgerExpAsset',
        'ledger_exp_liab' => 'setLedgerExpLiab',
        'ledger_del_asset' => 'setLedgerDelAsset',
        'ledger_del_liab' => 'setLedgerDelLiab',
        'sales_man_cost' => 'setSalesManCost',
        'ledger_assigned_value' => 'setLedgerAssignedValue',
        'ledger_cog_variance' => 'setLedgerCogVariance',
        'ledger_inv_sales' => 'setLedgerInvSales',
        'ledger_accumulator' => 'setLedgerAccumulator',
        'ledger_purchases' => 'setLedgerPurchases',
        'ledger_ship_complete' => 'setLedgerShipComplete',
        'ledger_write_on' => 'setLedgerWriteOn',
        'ledger_write_off' => 'setLedgerWriteOff',
        'ledger_cost_price_adj' => 'setLedgerCostPriceAdj',
        'bom_object' => 'setBomObject',
        'use_expiry_date' => 'setUseExpiryDate',
        'use_standard_cost' => 'setUseStandardCost',
        'standard_cost' => 'setStandardCost',
        'web_enabled' => 'setWebEnabled',
        'gst_inwards_id' => 'setGstInwardsId',
        'gst_outwards_id' => 'setGstOutwardsId',
        'gst_adjustments_inid' => 'setGstAdjustmentsInid',
        'gst_adjustments_outid' => 'setGstAdjustmentsOutid',
        'sell_price_inc_tax' => 'setSellPriceIncTax',
        'style_id' => 'setStyleId',
        'colour_id' => 'setColourId',
        'size_id' => 'setSizeId',
        'part_encode_order' => 'setPartEncodeOrder',
        'type_style' => 'setTypeStyle',
        'matrix_description' => 'setMatrixDescription',
        'secondary_cost' => 'setSecondaryCost',
        'pricing_group_id' => 'setPricingGroupId',
        'ship_with_physical_item' => 'setShipWithPhysicalItem',
        'row_hash' => 'setRowHash',
        'picture' => 'setPicture'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'inventory_id' => 'getInventoryId',
        'last_saved_date_time' => 'getLastSavedDateTime',
        'part_no' => 'getPartNo',
        'description' => 'getDescription',
        'units' => 'getUnits',
        'physical_item' => 'getPhysicalItem',
        'discountable' => 'getDiscountable',
        'direct_tax' => 'getDirectTax',
        'catagory1_id' => 'getCatagory1Id',
        'catagory2_id' => 'getCatagory2Id',
        'catagory3_id' => 'getCatagory3Id',
        'catagory4_id' => 'getCatagory4Id',
        'catagory5_id' => 'getCatagory5Id',
        'classification_id' => 'getClassificationId',
        'status' => 'getStatus',
        'default_price' => 'getDefaultPrice',
        'rrp_price' => 'getRrpPrice',
        'l_cost' => 'getLCost',
        's_cost' => 'getSCost',
        'decimal_places' => 'getDecimalPlaces',
        'minimum_gp' => 'getMinimumGp',
        'weight' => 'getWeight',
        'cubic' => 'getCubic',
        'use_serial_no' => 'getUseSerialNo',
        'aux1' => 'getAux1',
        'aux2' => 'getAux2',
        'aux3' => 'getAux3',
        'aux4' => 'getAux4',
        'aux5' => 'getAux5',
        'back_orderable' => 'getBackOrderable',
        'ledger_inv_value' => 'getLedgerInvValue',
        'ledger_movement_cog' => 'getLedgerMovementCog',
        'ledger_exp_asset' => 'getLedgerExpAsset',
        'ledger_exp_liab' => 'getLedgerExpLiab',
        'ledger_del_asset' => 'getLedgerDelAsset',
        'ledger_del_liab' => 'getLedgerDelLiab',
        'sales_man_cost' => 'getSalesManCost',
        'ledger_assigned_value' => 'getLedgerAssignedValue',
        'ledger_cog_variance' => 'getLedgerCogVariance',
        'ledger_inv_sales' => 'getLedgerInvSales',
        'ledger_accumulator' => 'getLedgerAccumulator',
        'ledger_purchases' => 'getLedgerPurchases',
        'ledger_ship_complete' => 'getLedgerShipComplete',
        'ledger_write_on' => 'getLedgerWriteOn',
        'ledger_write_off' => 'getLedgerWriteOff',
        'ledger_cost_price_adj' => 'getLedgerCostPriceAdj',
        'bom_object' => 'getBomObject',
        'use_expiry_date' => 'getUseExpiryDate',
        'use_standard_cost' => 'getUseStandardCost',
        'standard_cost' => 'getStandardCost',
        'web_enabled' => 'getWebEnabled',
        'gst_inwards_id' => 'getGstInwardsId',
        'gst_outwards_id' => 'getGstOutwardsId',
        'gst_adjustments_inid' => 'getGstAdjustmentsInid',
        'gst_adjustments_outid' => 'getGstAdjustmentsOutid',
        'sell_price_inc_tax' => 'getSellPriceIncTax',
        'style_id' => 'getStyleId',
        'colour_id' => 'getColourId',
        'size_id' => 'getSizeId',
        'part_encode_order' => 'getPartEncodeOrder',
        'type_style' => 'getTypeStyle',
        'matrix_description' => 'getMatrixDescription',
        'secondary_cost' => 'getSecondaryCost',
        'pricing_group_id' => 'getPricingGroupId',
        'ship_with_physical_item' => 'getShipWithPhysicalItem',
        'row_hash' => 'getRowHash',
        'picture' => 'getPicture'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['inventory_id'] = isset($data['inventory_id']) ? $data['inventory_id'] : null;
        $this->container['last_saved_date_time'] = isset($data['last_saved_date_time']) ? $data['last_saved_date_time'] : null;
        $this->container['part_no'] = isset($data['part_no']) ? $data['part_no'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['units'] = isset($data['units']) ? $data['units'] : null;
        $this->container['physical_item'] = isset($data['physical_item']) ? $data['physical_item'] : null;
        $this->container['discountable'] = isset($data['discountable']) ? $data['discountable'] : null;
        $this->container['direct_tax'] = isset($data['direct_tax']) ? $data['direct_tax'] : null;
        $this->container['catagory1_id'] = isset($data['catagory1_id']) ? $data['catagory1_id'] : null;
        $this->container['catagory2_id'] = isset($data['catagory2_id']) ? $data['catagory2_id'] : null;
        $this->container['catagory3_id'] = isset($data['catagory3_id']) ? $data['catagory3_id'] : null;
        $this->container['catagory4_id'] = isset($data['catagory4_id']) ? $data['catagory4_id'] : null;
        $this->container['catagory5_id'] = isset($data['catagory5_id']) ? $data['catagory5_id'] : null;
        $this->container['classification_id'] = isset($data['classification_id']) ? $data['classification_id'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['default_price'] = isset($data['default_price']) ? $data['default_price'] : null;
        $this->container['rrp_price'] = isset($data['rrp_price']) ? $data['rrp_price'] : null;
        $this->container['l_cost'] = isset($data['l_cost']) ? $data['l_cost'] : null;
        $this->container['s_cost'] = isset($data['s_cost']) ? $data['s_cost'] : null;
        $this->container['decimal_places'] = isset($data['decimal_places']) ? $data['decimal_places'] : null;
        $this->container['minimum_gp'] = isset($data['minimum_gp']) ? $data['minimum_gp'] : null;
        $this->container['weight'] = isset($data['weight']) ? $data['weight'] : null;
        $this->container['cubic'] = isset($data['cubic']) ? $data['cubic'] : null;
        $this->container['use_serial_no'] = isset($data['use_serial_no']) ? $data['use_serial_no'] : null;
        $this->container['aux1'] = isset($data['aux1']) ? $data['aux1'] : null;
        $this->container['aux2'] = isset($data['aux2']) ? $data['aux2'] : null;
        $this->container['aux3'] = isset($data['aux3']) ? $data['aux3'] : null;
        $this->container['aux4'] = isset($data['aux4']) ? $data['aux4'] : null;
        $this->container['aux5'] = isset($data['aux5']) ? $data['aux5'] : null;
        $this->container['back_orderable'] = isset($data['back_orderable']) ? $data['back_orderable'] : null;
        $this->container['ledger_inv_value'] = isset($data['ledger_inv_value']) ? $data['ledger_inv_value'] : null;
        $this->container['ledger_movement_cog'] = isset($data['ledger_movement_cog']) ? $data['ledger_movement_cog'] : null;
        $this->container['ledger_exp_asset'] = isset($data['ledger_exp_asset']) ? $data['ledger_exp_asset'] : null;
        $this->container['ledger_exp_liab'] = isset($data['ledger_exp_liab']) ? $data['ledger_exp_liab'] : null;
        $this->container['ledger_del_asset'] = isset($data['ledger_del_asset']) ? $data['ledger_del_asset'] : null;
        $this->container['ledger_del_liab'] = isset($data['ledger_del_liab']) ? $data['ledger_del_liab'] : null;
        $this->container['sales_man_cost'] = isset($data['sales_man_cost']) ? $data['sales_man_cost'] : null;
        $this->container['ledger_assigned_value'] = isset($data['ledger_assigned_value']) ? $data['ledger_assigned_value'] : null;
        $this->container['ledger_cog_variance'] = isset($data['ledger_cog_variance']) ? $data['ledger_cog_variance'] : null;
        $this->container['ledger_inv_sales'] = isset($data['ledger_inv_sales']) ? $data['ledger_inv_sales'] : null;
        $this->container['ledger_accumulator'] = isset($data['ledger_accumulator']) ? $data['ledger_accumulator'] : null;
        $this->container['ledger_purchases'] = isset($data['ledger_purchases']) ? $data['ledger_purchases'] : null;
        $this->container['ledger_ship_complete'] = isset($data['ledger_ship_complete']) ? $data['ledger_ship_complete'] : null;
        $this->container['ledger_write_on'] = isset($data['ledger_write_on']) ? $data['ledger_write_on'] : null;
        $this->container['ledger_write_off'] = isset($data['ledger_write_off']) ? $data['ledger_write_off'] : null;
        $this->container['ledger_cost_price_adj'] = isset($data['ledger_cost_price_adj']) ? $data['ledger_cost_price_adj'] : null;
        $this->container['bom_object'] = isset($data['bom_object']) ? $data['bom_object'] : null;
        $this->container['use_expiry_date'] = isset($data['use_expiry_date']) ? $data['use_expiry_date'] : null;
        $this->container['use_standard_cost'] = isset($data['use_standard_cost']) ? $data['use_standard_cost'] : null;
        $this->container['standard_cost'] = isset($data['standard_cost']) ? $data['standard_cost'] : null;
        $this->container['web_enabled'] = isset($data['web_enabled']) ? $data['web_enabled'] : null;
        $this->container['gst_inwards_id'] = isset($data['gst_inwards_id']) ? $data['gst_inwards_id'] : null;
        $this->container['gst_outwards_id'] = isset($data['gst_outwards_id']) ? $data['gst_outwards_id'] : null;
        $this->container['gst_adjustments_inid'] = isset($data['gst_adjustments_inid']) ? $data['gst_adjustments_inid'] : null;
        $this->container['gst_adjustments_outid'] = isset($data['gst_adjustments_outid']) ? $data['gst_adjustments_outid'] : null;
        $this->container['sell_price_inc_tax'] = isset($data['sell_price_inc_tax']) ? $data['sell_price_inc_tax'] : null;
        $this->container['style_id'] = isset($data['style_id']) ? $data['style_id'] : null;
        $this->container['colour_id'] = isset($data['colour_id']) ? $data['colour_id'] : null;
        $this->container['size_id'] = isset($data['size_id']) ? $data['size_id'] : null;
        $this->container['part_encode_order'] = isset($data['part_encode_order']) ? $data['part_encode_order'] : null;
        $this->container['type_style'] = isset($data['type_style']) ? $data['type_style'] : null;
        $this->container['matrix_description'] = isset($data['matrix_description']) ? $data['matrix_description'] : null;
        $this->container['secondary_cost'] = isset($data['secondary_cost']) ? $data['secondary_cost'] : null;
        $this->container['pricing_group_id'] = isset($data['pricing_group_id']) ? $data['pricing_group_id'] : null;
        $this->container['ship_with_physical_item'] = isset($data['ship_with_physical_item']) ? $data['ship_with_physical_item'] : null;
        $this->container['row_hash'] = isset($data['row_hash']) ? $data['row_hash'] : null;
        $this->container['picture'] = isset($data['picture']) ? $data['picture'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets inventory_id
     *
     * @return string
     */
    public function getInventoryId()
    {
        return $this->container['inventory_id'];
    }

    /**
     * Sets inventory_id
     *
     * @param string $inventory_id inventory_id
     *
     * @return $this
     */
    public function setInventoryId($inventory_id)
    {
        $this->container['inventory_id'] = $inventory_id;

        return $this;
    }

    /**
     * Gets last_saved_date_time
     *
     * @return \DateTime
     */
    public function getLastSavedDateTime()
    {
        return $this->container['last_saved_date_time'];
    }

    /**
     * Sets last_saved_date_time
     *
     * @param \DateTime $last_saved_date_time last_saved_date_time
     *
     * @return $this
     */
    public function setLastSavedDateTime($last_saved_date_time)
    {
        $this->container['last_saved_date_time'] = $last_saved_date_time;

        return $this;
    }

    /**
     * Gets part_no
     *
     * @return string
     */
    public function getPartNo()
    {
        return $this->container['part_no'];
    }

    /**
     * Sets part_no
     *
     * @param string $part_no part_no
     *
     * @return $this
     */
    public function setPartNo($part_no)
    {
        $this->container['part_no'] = $part_no;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets units
     *
     * @return string
     */
    public function getUnits()
    {
        return $this->container['units'];
    }

    /**
     * Sets units
     *
     * @param string $units units
     *
     * @return $this
     */
    public function setUnits($units)
    {
        $this->container['units'] = $units;

        return $this;
    }

    /**
     * Gets physical_item
     *
     * @return bool
     */
    public function getPhysicalItem()
    {
        return $this->container['physical_item'];
    }

    /**
     * Sets physical_item
     *
     * @param bool $physical_item physical_item
     *
     * @return $this
     */
    public function setPhysicalItem($physical_item)
    {
        $this->container['physical_item'] = $physical_item;

        return $this;
    }

    /**
     * Gets discountable
     *
     * @return bool
     */
    public function getDiscountable()
    {
        return $this->container['discountable'];
    }

    /**
     * Sets discountable
     *
     * @param bool $discountable discountable
     *
     * @return $this
     */
    public function setDiscountable($discountable)
    {
        $this->container['discountable'] = $discountable;

        return $this;
    }

    /**
     * Gets direct_tax
     *
     * @return double
     */
    public function getDirectTax()
    {
        return $this->container['direct_tax'];
    }

    /**
     * Sets direct_tax
     *
     * @param double $direct_tax direct_tax
     *
     * @return $this
     */
    public function setDirectTax($direct_tax)
    {
        $this->container['direct_tax'] = $direct_tax;

        return $this;
    }

    /**
     * Gets catagory1_id
     *
     * @return string
     */
    public function getCatagory1Id()
    {
        return $this->container['catagory1_id'];
    }

    /**
     * Sets catagory1_id
     *
     * @param string $catagory1_id catagory1_id
     *
     * @return $this
     */
    public function setCatagory1Id($catagory1_id)
    {
        $this->container['catagory1_id'] = $catagory1_id;

        return $this;
    }

    /**
     * Gets catagory2_id
     *
     * @return string
     */
    public function getCatagory2Id()
    {
        return $this->container['catagory2_id'];
    }

    /**
     * Sets catagory2_id
     *
     * @param string $catagory2_id catagory2_id
     *
     * @return $this
     */
    public function setCatagory2Id($catagory2_id)
    {
        $this->container['catagory2_id'] = $catagory2_id;

        return $this;
    }

    /**
     * Gets catagory3_id
     *
     * @return string
     */
    public function getCatagory3Id()
    {
        return $this->container['catagory3_id'];
    }

    /**
     * Sets catagory3_id
     *
     * @param string $catagory3_id catagory3_id
     *
     * @return $this
     */
    public function setCatagory3Id($catagory3_id)
    {
        $this->container['catagory3_id'] = $catagory3_id;

        return $this;
    }

    /**
     * Gets catagory4_id
     *
     * @return string
     */
    public function getCatagory4Id()
    {
        return $this->container['catagory4_id'];
    }

    /**
     * Sets catagory4_id
     *
     * @param string $catagory4_id catagory4_id
     *
     * @return $this
     */
    public function setCatagory4Id($catagory4_id)
    {
        $this->container['catagory4_id'] = $catagory4_id;

        return $this;
    }

    /**
     * Gets catagory5_id
     *
     * @return string
     */
    public function getCatagory5Id()
    {
        return $this->container['catagory5_id'];
    }

    /**
     * Sets catagory5_id
     *
     * @param string $catagory5_id catagory5_id
     *
     * @return $this
     */
    public function setCatagory5Id($catagory5_id)
    {
        $this->container['catagory5_id'] = $catagory5_id;

        return $this;
    }

    /**
     * Gets classification_id
     *
     * @return string
     */
    public function getClassificationId()
    {
        return $this->container['classification_id'];
    }

    /**
     * Sets classification_id
     *
     * @param string $classification_id classification_id
     *
     * @return $this
     */
    public function setClassificationId($classification_id)
    {
        $this->container['classification_id'] = $classification_id;

        return $this;
    }

    /**
     * Gets status
     *
     * @return int
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param int $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets default_price
     *
     * @return double
     */
    public function getDefaultPrice()
    {
        return $this->container['default_price'];
    }

    /**
     * Sets default_price
     *
     * @param double $default_price default_price
     *
     * @return $this
     */
    public function setDefaultPrice($default_price)
    {
        $this->container['default_price'] = $default_price;

        return $this;
    }

    /**
     * Gets rrp_price
     *
     * @return double
     */
    public function getRrpPrice()
    {
        return $this->container['rrp_price'];
    }

    /**
     * Sets rrp_price
     *
     * @param double $rrp_price rrp_price
     *
     * @return $this
     */
    public function setRrpPrice($rrp_price)
    {
        $this->container['rrp_price'] = $rrp_price;

        return $this;
    }

    /**
     * Gets l_cost
     *
     * @return double
     */
    public function getLCost()
    {
        return $this->container['l_cost'];
    }

    /**
     * Sets l_cost
     *
     * @param double $l_cost l_cost
     *
     * @return $this
     */
    public function setLCost($l_cost)
    {
        $this->container['l_cost'] = $l_cost;

        return $this;
    }

    /**
     * Gets s_cost
     *
     * @return double
     */
    public function getSCost()
    {
        return $this->container['s_cost'];
    }

    /**
     * Sets s_cost
     *
     * @param double $s_cost s_cost
     *
     * @return $this
     */
    public function setSCost($s_cost)
    {
        $this->container['s_cost'] = $s_cost;

        return $this;
    }

    /**
     * Gets decimal_places
     *
     * @return int
     */
    public function getDecimalPlaces()
    {
        return $this->container['decimal_places'];
    }

    /**
     * Sets decimal_places
     *
     * @param int $decimal_places decimal_places
     *
     * @return $this
     */
    public function setDecimalPlaces($decimal_places)
    {
        $this->container['decimal_places'] = $decimal_places;

        return $this;
    }

    /**
     * Gets minimum_gp
     *
     * @return double
     */
    public function getMinimumGp()
    {
        return $this->container['minimum_gp'];
    }

    /**
     * Sets minimum_gp
     *
     * @param double $minimum_gp minimum_gp
     *
     * @return $this
     */
    public function setMinimumGp($minimum_gp)
    {
        $this->container['minimum_gp'] = $minimum_gp;

        return $this;
    }

    /**
     * Gets weight
     *
     * @return double
     */
    public function getWeight()
    {
        return $this->container['weight'];
    }

    /**
     * Sets weight
     *
     * @param double $weight weight
     *
     * @return $this
     */
    public function setWeight($weight)
    {
        $this->container['weight'] = $weight;

        return $this;
    }

    /**
     * Gets cubic
     *
     * @return double
     */
    public function getCubic()
    {
        return $this->container['cubic'];
    }

    /**
     * Sets cubic
     *
     * @param double $cubic cubic
     *
     * @return $this
     */
    public function setCubic($cubic)
    {
        $this->container['cubic'] = $cubic;

        return $this;
    }

    /**
     * Gets use_serial_no
     *
     * @return bool
     */
    public function getUseSerialNo()
    {
        return $this->container['use_serial_no'];
    }

    /**
     * Sets use_serial_no
     *
     * @param bool $use_serial_no use_serial_no
     *
     * @return $this
     */
    public function setUseSerialNo($use_serial_no)
    {
        $this->container['use_serial_no'] = $use_serial_no;

        return $this;
    }

    /**
     * Gets aux1
     *
     * @return string
     */
    public function getAux1()
    {
        return $this->container['aux1'];
    }

    /**
     * Sets aux1
     *
     * @param string $aux1 aux1
     *
     * @return $this
     */
    public function setAux1($aux1)
    {
        $this->container['aux1'] = $aux1;

        return $this;
    }

    /**
     * Gets aux2
     *
     * @return string
     */
    public function getAux2()
    {
        return $this->container['aux2'];
    }

    /**
     * Sets aux2
     *
     * @param string $aux2 aux2
     *
     * @return $this
     */
    public function setAux2($aux2)
    {
        $this->container['aux2'] = $aux2;

        return $this;
    }

    /**
     * Gets aux3
     *
     * @return string
     */
    public function getAux3()
    {
        return $this->container['aux3'];
    }

    /**
     * Sets aux3
     *
     * @param string $aux3 aux3
     *
     * @return $this
     */
    public function setAux3($aux3)
    {
        $this->container['aux3'] = $aux3;

        return $this;
    }

    /**
     * Gets aux4
     *
     * @return string
     */
    public function getAux4()
    {
        return $this->container['aux4'];
    }

    /**
     * Sets aux4
     *
     * @param string $aux4 aux4
     *
     * @return $this
     */
    public function setAux4($aux4)
    {
        $this->container['aux4'] = $aux4;

        return $this;
    }

    /**
     * Gets aux5
     *
     * @return string
     */
    public function getAux5()
    {
        return $this->container['aux5'];
    }

    /**
     * Sets aux5
     *
     * @param string $aux5 aux5
     *
     * @return $this
     */
    public function setAux5($aux5)
    {
        $this->container['aux5'] = $aux5;

        return $this;
    }

    /**
     * Gets back_orderable
     *
     * @return bool
     */
    public function getBackOrderable()
    {
        return $this->container['back_orderable'];
    }

    /**
     * Sets back_orderable
     *
     * @param bool $back_orderable back_orderable
     *
     * @return $this
     */
    public function setBackOrderable($back_orderable)
    {
        $this->container['back_orderable'] = $back_orderable;

        return $this;
    }

    /**
     * Gets ledger_inv_value
     *
     * @return string
     */
    public function getLedgerInvValue()
    {
        return $this->container['ledger_inv_value'];
    }

    /**
     * Sets ledger_inv_value
     *
     * @param string $ledger_inv_value ledger_inv_value
     *
     * @return $this
     */
    public function setLedgerInvValue($ledger_inv_value)
    {
        $this->container['ledger_inv_value'] = $ledger_inv_value;

        return $this;
    }

    /**
     * Gets ledger_movement_cog
     *
     * @return string
     */
    public function getLedgerMovementCog()
    {
        return $this->container['ledger_movement_cog'];
    }

    /**
     * Sets ledger_movement_cog
     *
     * @param string $ledger_movement_cog ledger_movement_cog
     *
     * @return $this
     */
    public function setLedgerMovementCog($ledger_movement_cog)
    {
        $this->container['ledger_movement_cog'] = $ledger_movement_cog;

        return $this;
    }

    /**
     * Gets ledger_exp_asset
     *
     * @return string
     */
    public function getLedgerExpAsset()
    {
        return $this->container['ledger_exp_asset'];
    }

    /**
     * Sets ledger_exp_asset
     *
     * @param string $ledger_exp_asset ledger_exp_asset
     *
     * @return $this
     */
    public function setLedgerExpAsset($ledger_exp_asset)
    {
        $this->container['ledger_exp_asset'] = $ledger_exp_asset;

        return $this;
    }

    /**
     * Gets ledger_exp_liab
     *
     * @return string
     */
    public function getLedgerExpLiab()
    {
        return $this->container['ledger_exp_liab'];
    }

    /**
     * Sets ledger_exp_liab
     *
     * @param string $ledger_exp_liab ledger_exp_liab
     *
     * @return $this
     */
    public function setLedgerExpLiab($ledger_exp_liab)
    {
        $this->container['ledger_exp_liab'] = $ledger_exp_liab;

        return $this;
    }

    /**
     * Gets ledger_del_asset
     *
     * @return string
     */
    public function getLedgerDelAsset()
    {
        return $this->container['ledger_del_asset'];
    }

    /**
     * Sets ledger_del_asset
     *
     * @param string $ledger_del_asset ledger_del_asset
     *
     * @return $this
     */
    public function setLedgerDelAsset($ledger_del_asset)
    {
        $this->container['ledger_del_asset'] = $ledger_del_asset;

        return $this;
    }

    /**
     * Gets ledger_del_liab
     *
     * @return string
     */
    public function getLedgerDelLiab()
    {
        return $this->container['ledger_del_liab'];
    }

    /**
     * Sets ledger_del_liab
     *
     * @param string $ledger_del_liab ledger_del_liab
     *
     * @return $this
     */
    public function setLedgerDelLiab($ledger_del_liab)
    {
        $this->container['ledger_del_liab'] = $ledger_del_liab;

        return $this;
    }

    /**
     * Gets sales_man_cost
     *
     * @return double
     */
    public function getSalesManCost()
    {
        return $this->container['sales_man_cost'];
    }

    /**
     * Sets sales_man_cost
     *
     * @param double $sales_man_cost sales_man_cost
     *
     * @return $this
     */
    public function setSalesManCost($sales_man_cost)
    {
        $this->container['sales_man_cost'] = $sales_man_cost;

        return $this;
    }

    /**
     * Gets ledger_assigned_value
     *
     * @return string
     */
    public function getLedgerAssignedValue()
    {
        return $this->container['ledger_assigned_value'];
    }

    /**
     * Sets ledger_assigned_value
     *
     * @param string $ledger_assigned_value ledger_assigned_value
     *
     * @return $this
     */
    public function setLedgerAssignedValue($ledger_assigned_value)
    {
        $this->container['ledger_assigned_value'] = $ledger_assigned_value;

        return $this;
    }

    /**
     * Gets ledger_cog_variance
     *
     * @return string
     */
    public function getLedgerCogVariance()
    {
        return $this->container['ledger_cog_variance'];
    }

    /**
     * Sets ledger_cog_variance
     *
     * @param string $ledger_cog_variance ledger_cog_variance
     *
     * @return $this
     */
    public function setLedgerCogVariance($ledger_cog_variance)
    {
        $this->container['ledger_cog_variance'] = $ledger_cog_variance;

        return $this;
    }

    /**
     * Gets ledger_inv_sales
     *
     * @return string
     */
    public function getLedgerInvSales()
    {
        return $this->container['ledger_inv_sales'];
    }

    /**
     * Sets ledger_inv_sales
     *
     * @param string $ledger_inv_sales ledger_inv_sales
     *
     * @return $this
     */
    public function setLedgerInvSales($ledger_inv_sales)
    {
        $this->container['ledger_inv_sales'] = $ledger_inv_sales;

        return $this;
    }

    /**
     * Gets ledger_accumulator
     *
     * @return string
     */
    public function getLedgerAccumulator()
    {
        return $this->container['ledger_accumulator'];
    }

    /**
     * Sets ledger_accumulator
     *
     * @param string $ledger_accumulator ledger_accumulator
     *
     * @return $this
     */
    public function setLedgerAccumulator($ledger_accumulator)
    {
        $this->container['ledger_accumulator'] = $ledger_accumulator;

        return $this;
    }

    /**
     * Gets ledger_purchases
     *
     * @return string
     */
    public function getLedgerPurchases()
    {
        return $this->container['ledger_purchases'];
    }

    /**
     * Sets ledger_purchases
     *
     * @param string $ledger_purchases ledger_purchases
     *
     * @return $this
     */
    public function setLedgerPurchases($ledger_purchases)
    {
        $this->container['ledger_purchases'] = $ledger_purchases;

        return $this;
    }

    /**
     * Gets ledger_ship_complete
     *
     * @return string
     */
    public function getLedgerShipComplete()
    {
        return $this->container['ledger_ship_complete'];
    }

    /**
     * Sets ledger_ship_complete
     *
     * @param string $ledger_ship_complete ledger_ship_complete
     *
     * @return $this
     */
    public function setLedgerShipComplete($ledger_ship_complete)
    {
        $this->container['ledger_ship_complete'] = $ledger_ship_complete;

        return $this;
    }

    /**
     * Gets ledger_write_on
     *
     * @return string
     */
    public function getLedgerWriteOn()
    {
        return $this->container['ledger_write_on'];
    }

    /**
     * Sets ledger_write_on
     *
     * @param string $ledger_write_on ledger_write_on
     *
     * @return $this
     */
    public function setLedgerWriteOn($ledger_write_on)
    {
        $this->container['ledger_write_on'] = $ledger_write_on;

        return $this;
    }

    /**
     * Gets ledger_write_off
     *
     * @return string
     */
    public function getLedgerWriteOff()
    {
        return $this->container['ledger_write_off'];
    }

    /**
     * Sets ledger_write_off
     *
     * @param string $ledger_write_off ledger_write_off
     *
     * @return $this
     */
    public function setLedgerWriteOff($ledger_write_off)
    {
        $this->container['ledger_write_off'] = $ledger_write_off;

        return $this;
    }

    /**
     * Gets ledger_cost_price_adj
     *
     * @return string
     */
    public function getLedgerCostPriceAdj()
    {
        return $this->container['ledger_cost_price_adj'];
    }

    /**
     * Sets ledger_cost_price_adj
     *
     * @param string $ledger_cost_price_adj ledger_cost_price_adj
     *
     * @return $this
     */
    public function setLedgerCostPriceAdj($ledger_cost_price_adj)
    {
        $this->container['ledger_cost_price_adj'] = $ledger_cost_price_adj;

        return $this;
    }

    /**
     * Gets bom_object
     *
     * @return int
     */
    public function getBomObject()
    {
        return $this->container['bom_object'];
    }

    /**
     * Sets bom_object
     *
     * @param int $bom_object bom_object
     *
     * @return $this
     */
    public function setBomObject($bom_object)
    {
        $this->container['bom_object'] = $bom_object;

        return $this;
    }

    /**
     * Gets use_expiry_date
     *
     * @return bool
     */
    public function getUseExpiryDate()
    {
        return $this->container['use_expiry_date'];
    }

    /**
     * Sets use_expiry_date
     *
     * @param bool $use_expiry_date use_expiry_date
     *
     * @return $this
     */
    public function setUseExpiryDate($use_expiry_date)
    {
        $this->container['use_expiry_date'] = $use_expiry_date;

        return $this;
    }

    /**
     * Gets use_standard_cost
     *
     * @return bool
     */
    public function getUseStandardCost()
    {
        return $this->container['use_standard_cost'];
    }

    /**
     * Sets use_standard_cost
     *
     * @param bool $use_standard_cost use_standard_cost
     *
     * @return $this
     */
    public function setUseStandardCost($use_standard_cost)
    {
        $this->container['use_standard_cost'] = $use_standard_cost;

        return $this;
    }

    /**
     * Gets standard_cost
     *
     * @return double
     */
    public function getStandardCost()
    {
        return $this->container['standard_cost'];
    }

    /**
     * Sets standard_cost
     *
     * @param double $standard_cost standard_cost
     *
     * @return $this
     */
    public function setStandardCost($standard_cost)
    {
        $this->container['standard_cost'] = $standard_cost;

        return $this;
    }

    /**
     * Gets web_enabled
     *
     * @return bool
     */
    public function getWebEnabled()
    {
        return $this->container['web_enabled'];
    }

    /**
     * Sets web_enabled
     *
     * @param bool $web_enabled web_enabled
     *
     * @return $this
     */
    public function setWebEnabled($web_enabled)
    {
        $this->container['web_enabled'] = $web_enabled;

        return $this;
    }

    /**
     * Gets gst_inwards_id
     *
     * @return string
     */
    public function getGstInwardsId()
    {
        return $this->container['gst_inwards_id'];
    }

    /**
     * Sets gst_inwards_id
     *
     * @param string $gst_inwards_id gst_inwards_id
     *
     * @return $this
     */
    public function setGstInwardsId($gst_inwards_id)
    {
        $this->container['gst_inwards_id'] = $gst_inwards_id;

        return $this;
    }

    /**
     * Gets gst_outwards_id
     *
     * @return string
     */
    public function getGstOutwardsId()
    {
        return $this->container['gst_outwards_id'];
    }

    /**
     * Sets gst_outwards_id
     *
     * @param string $gst_outwards_id gst_outwards_id
     *
     * @return $this
     */
    public function setGstOutwardsId($gst_outwards_id)
    {
        $this->container['gst_outwards_id'] = $gst_outwards_id;

        return $this;
    }

    /**
     * Gets gst_adjustments_inid
     *
     * @return string
     */
    public function getGstAdjustmentsInid()
    {
        return $this->container['gst_adjustments_inid'];
    }

    /**
     * Sets gst_adjustments_inid
     *
     * @param string $gst_adjustments_inid gst_adjustments_inid
     *
     * @return $this
     */
    public function setGstAdjustmentsInid($gst_adjustments_inid)
    {
        $this->container['gst_adjustments_inid'] = $gst_adjustments_inid;

        return $this;
    }

    /**
     * Gets gst_adjustments_outid
     *
     * @return string
     */
    public function getGstAdjustmentsOutid()
    {
        return $this->container['gst_adjustments_outid'];
    }

    /**
     * Sets gst_adjustments_outid
     *
     * @param string $gst_adjustments_outid gst_adjustments_outid
     *
     * @return $this
     */
    public function setGstAdjustmentsOutid($gst_adjustments_outid)
    {
        $this->container['gst_adjustments_outid'] = $gst_adjustments_outid;

        return $this;
    }

    /**
     * Gets sell_price_inc_tax
     *
     * @return bool
     */
    public function getSellPriceIncTax()
    {
        return $this->container['sell_price_inc_tax'];
    }

    /**
     * Sets sell_price_inc_tax
     *
     * @param bool $sell_price_inc_tax sell_price_inc_tax
     *
     * @return $this
     */
    public function setSellPriceIncTax($sell_price_inc_tax)
    {
        $this->container['sell_price_inc_tax'] = $sell_price_inc_tax;

        return $this;
    }

    /**
     * Gets style_id
     *
     * @return string
     */
    public function getStyleId()
    {
        return $this->container['style_id'];
    }

    /**
     * Sets style_id
     *
     * @param string $style_id style_id
     *
     * @return $this
     */
    public function setStyleId($style_id)
    {
        $this->container['style_id'] = $style_id;

        return $this;
    }

    /**
     * Gets colour_id
     *
     * @return string
     */
    public function getColourId()
    {
        return $this->container['colour_id'];
    }

    /**
     * Sets colour_id
     *
     * @param string $colour_id colour_id
     *
     * @return $this
     */
    public function setColourId($colour_id)
    {
        $this->container['colour_id'] = $colour_id;

        return $this;
    }

    /**
     * Gets size_id
     *
     * @return string
     */
    public function getSizeId()
    {
        return $this->container['size_id'];
    }

    /**
     * Sets size_id
     *
     * @param string $size_id size_id
     *
     * @return $this
     */
    public function setSizeId($size_id)
    {
        $this->container['size_id'] = $size_id;

        return $this;
    }

    /**
     * Gets part_encode_order
     *
     * @return int
     */
    public function getPartEncodeOrder()
    {
        return $this->container['part_encode_order'];
    }

    /**
     * Sets part_encode_order
     *
     * @param int $part_encode_order part_encode_order
     *
     * @return $this
     */
    public function setPartEncodeOrder($part_encode_order)
    {
        $this->container['part_encode_order'] = $part_encode_order;

        return $this;
    }

    /**
     * Gets type_style
     *
     * @return bool
     */
    public function getTypeStyle()
    {
        return $this->container['type_style'];
    }

    /**
     * Sets type_style
     *
     * @param bool $type_style type_style
     *
     * @return $this
     */
    public function setTypeStyle($type_style)
    {
        $this->container['type_style'] = $type_style;

        return $this;
    }

    /**
     * Gets matrix_description
     *
     * @return string
     */
    public function getMatrixDescription()
    {
        return $this->container['matrix_description'];
    }

    /**
     * Sets matrix_description
     *
     * @param string $matrix_description matrix_description
     *
     * @return $this
     */
    public function setMatrixDescription($matrix_description)
    {
        $this->container['matrix_description'] = $matrix_description;

        return $this;
    }

    /**
     * Gets secondary_cost
     *
     * @return double
     */
    public function getSecondaryCost()
    {
        return $this->container['secondary_cost'];
    }

    /**
     * Sets secondary_cost
     *
     * @param double $secondary_cost secondary_cost
     *
     * @return $this
     */
    public function setSecondaryCost($secondary_cost)
    {
        $this->container['secondary_cost'] = $secondary_cost;

        return $this;
    }

    /**
     * Gets pricing_group_id
     *
     * @return string
     */
    public function getPricingGroupId()
    {
        return $this->container['pricing_group_id'];
    }

    /**
     * Sets pricing_group_id
     *
     * @param string $pricing_group_id pricing_group_id
     *
     * @return $this
     */
    public function setPricingGroupId($pricing_group_id)
    {
        $this->container['pricing_group_id'] = $pricing_group_id;

        return $this;
    }

    /**
     * Gets ship_with_physical_item
     *
     * @return bool
     */
    public function getShipWithPhysicalItem()
    {
        return $this->container['ship_with_physical_item'];
    }

    /**
     * Sets ship_with_physical_item
     *
     * @param bool $ship_with_physical_item ship_with_physical_item
     *
     * @return $this
     */
    public function setShipWithPhysicalItem($ship_with_physical_item)
    {
        $this->container['ship_with_physical_item'] = $ship_with_physical_item;

        return $this;
    }

    /**
     * Gets row_hash
     *
     * @return string
     */
    public function getRowHash()
    {
        return $this->container['row_hash'];
    }

    /**
     * Sets row_hash
     *
     * @param string $row_hash row_hash
     *
     * @return $this
     */
    public function setRowHash($row_hash)
    {
        $this->container['row_hash'] = $row_hash;

        return $this;
    }

    /**
     * Gets picture
     *
     * @return string
     */
    public function getPicture()
    {
        return $this->container['picture'];
    }

    /**
     * Sets picture
     *
     * @param string $picture picture
     *
     * @return $this
     */
    public function setPicture($picture)
    {
        $this->container['picture'] = $picture;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


