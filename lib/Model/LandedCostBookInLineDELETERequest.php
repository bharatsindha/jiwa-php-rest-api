<?php
/**
 * LandedCostBookInLineDELETERequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\Model;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * LandedCostBookInLineDELETERequest Class Doc Comment
 *
 * @category Class
 * @description LandedCostBookInLineDELETERequest
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class LandedCostBookInLineDELETERequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'LandedCostBookInLineDELETERequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'book_in_id' => 'string',
        'line_id' => 'string',
        'item_no' => 'int',
        'quantity' => 'double',
        'quantity_previously_booked_in' => 'double',
        'quantity_outstanding' => 'double',
        'shipment_line' => '\Jiwa\Model\BookInShipmentLine',
        'line_details' => '\Jiwa\Model\InventorySOHLineDetail[]',
        'custom_field_values' => '\Jiwa\Model\CustomFieldValue[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'book_in_id' => null,
        'line_id' => null,
        'item_no' => 'int32',
        'quantity' => 'double',
        'quantity_previously_booked_in' => 'double',
        'quantity_outstanding' => 'double',
        'shipment_line' => null,
        'line_details' => null,
        'custom_field_values' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'book_in_id' => 'BookInID',
        'line_id' => 'LineID',
        'item_no' => 'ItemNo',
        'quantity' => 'Quantity',
        'quantity_previously_booked_in' => 'QuantityPreviouslyBookedIn',
        'quantity_outstanding' => 'QuantityOutstanding',
        'shipment_line' => 'ShipmentLine',
        'line_details' => 'LineDetails',
        'custom_field_values' => 'CustomFieldValues'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'book_in_id' => 'setBookInId',
        'line_id' => 'setLineId',
        'item_no' => 'setItemNo',
        'quantity' => 'setQuantity',
        'quantity_previously_booked_in' => 'setQuantityPreviouslyBookedIn',
        'quantity_outstanding' => 'setQuantityOutstanding',
        'shipment_line' => 'setShipmentLine',
        'line_details' => 'setLineDetails',
        'custom_field_values' => 'setCustomFieldValues'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'book_in_id' => 'getBookInId',
        'line_id' => 'getLineId',
        'item_no' => 'getItemNo',
        'quantity' => 'getQuantity',
        'quantity_previously_booked_in' => 'getQuantityPreviouslyBookedIn',
        'quantity_outstanding' => 'getQuantityOutstanding',
        'shipment_line' => 'getShipmentLine',
        'line_details' => 'getLineDetails',
        'custom_field_values' => 'getCustomFieldValues'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['book_in_id'] = isset($data['book_in_id']) ? $data['book_in_id'] : null;
        $this->container['line_id'] = isset($data['line_id']) ? $data['line_id'] : null;
        $this->container['item_no'] = isset($data['item_no']) ? $data['item_no'] : null;
        $this->container['quantity'] = isset($data['quantity']) ? $data['quantity'] : null;
        $this->container['quantity_previously_booked_in'] = isset($data['quantity_previously_booked_in']) ? $data['quantity_previously_booked_in'] : null;
        $this->container['quantity_outstanding'] = isset($data['quantity_outstanding']) ? $data['quantity_outstanding'] : null;
        $this->container['shipment_line'] = isset($data['shipment_line']) ? $data['shipment_line'] : null;
        $this->container['line_details'] = isset($data['line_details']) ? $data['line_details'] : null;
        $this->container['custom_field_values'] = isset($data['custom_field_values']) ? $data['custom_field_values'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets book_in_id
     *
     * @return string
     */
    public function getBookInId()
    {
        return $this->container['book_in_id'];
    }

    /**
     * Sets book_in_id
     *
     * @param string $book_in_id book_in_id
     *
     * @return $this
     */
    public function setBookInId($book_in_id)
    {
        $this->container['book_in_id'] = $book_in_id;

        return $this;
    }

    /**
     * Gets line_id
     *
     * @return string
     */
    public function getLineId()
    {
        return $this->container['line_id'];
    }

    /**
     * Sets line_id
     *
     * @param string $line_id line_id
     *
     * @return $this
     */
    public function setLineId($line_id)
    {
        $this->container['line_id'] = $line_id;

        return $this;
    }

    /**
     * Gets item_no
     *
     * @return int
     */
    public function getItemNo()
    {
        return $this->container['item_no'];
    }

    /**
     * Sets item_no
     *
     * @param int $item_no item_no
     *
     * @return $this
     */
    public function setItemNo($item_no)
    {
        $this->container['item_no'] = $item_no;

        return $this;
    }

    /**
     * Gets quantity
     *
     * @return double
     */
    public function getQuantity()
    {
        return $this->container['quantity'];
    }

    /**
     * Sets quantity
     *
     * @param double $quantity quantity
     *
     * @return $this
     */
    public function setQuantity($quantity)
    {
        $this->container['quantity'] = $quantity;

        return $this;
    }

    /**
     * Gets quantity_previously_booked_in
     *
     * @return double
     */
    public function getQuantityPreviouslyBookedIn()
    {
        return $this->container['quantity_previously_booked_in'];
    }

    /**
     * Sets quantity_previously_booked_in
     *
     * @param double $quantity_previously_booked_in quantity_previously_booked_in
     *
     * @return $this
     */
    public function setQuantityPreviouslyBookedIn($quantity_previously_booked_in)
    {
        $this->container['quantity_previously_booked_in'] = $quantity_previously_booked_in;

        return $this;
    }

    /**
     * Gets quantity_outstanding
     *
     * @return double
     */
    public function getQuantityOutstanding()
    {
        return $this->container['quantity_outstanding'];
    }

    /**
     * Sets quantity_outstanding
     *
     * @param double $quantity_outstanding quantity_outstanding
     *
     * @return $this
     */
    public function setQuantityOutstanding($quantity_outstanding)
    {
        $this->container['quantity_outstanding'] = $quantity_outstanding;

        return $this;
    }

    /**
     * Gets shipment_line
     *
     * @return \Jiwa\Model\BookInShipmentLine
     */
    public function getShipmentLine()
    {
        return $this->container['shipment_line'];
    }

    /**
     * Sets shipment_line
     *
     * @param \Jiwa\Model\BookInShipmentLine $shipment_line shipment_line
     *
     * @return $this
     */
    public function setShipmentLine($shipment_line)
    {
        $this->container['shipment_line'] = $shipment_line;

        return $this;
    }

    /**
     * Gets line_details
     *
     * @return \Jiwa\Model\InventorySOHLineDetail[]
     */
    public function getLineDetails()
    {
        return $this->container['line_details'];
    }

    /**
     * Sets line_details
     *
     * @param \Jiwa\Model\InventorySOHLineDetail[] $line_details line_details
     *
     * @return $this
     */
    public function setLineDetails($line_details)
    {
        $this->container['line_details'] = $line_details;

        return $this;
    }

    /**
     * Gets custom_field_values
     *
     * @return \Jiwa\Model\CustomFieldValue[]
     */
    public function getCustomFieldValues()
    {
        return $this->container['custom_field_values'];
    }

    /**
     * Sets custom_field_values
     *
     * @param \Jiwa\Model\CustomFieldValue[] $custom_field_values custom_field_values
     *
     * @return $this
     */
    public function setCustomFieldValues($custom_field_values)
    {
        $this->container['custom_field_values'] = $custom_field_values;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


