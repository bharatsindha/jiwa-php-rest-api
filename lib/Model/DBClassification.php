<?php
/**
 * DBClassification
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\Model;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * DBClassification Class Doc Comment
 *
 * @category Class
 * @description DB_Classification
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DBClassification implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'DB_Classification';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'debtor_classification_id' => 'string',
        'last_saved_date_time' => '\DateTime',
        'description' => 'string',
        'ledger_id_debtor_control' => 'string',
        'ledger_id_debtor_sales' => 'string',
        'ledger_id_debtor_discounts' => 'string',
        'ledger_id_debtor_sourced_invoices' => 'string',
        'ledger_id_debtor_debit_adjustment' => 'string',
        'ledger_id_debtor_sourced_receipts' => 'string',
        'ledger_id_debtor_credit_adjustment' => 'string',
        'ledger_id_debtor_freight' => 'string',
        'ledger_id_debtor_insurance' => 'string',
        'terms_days' => 'int',
        'terms_type' => 'int',
        'price_scheme_id' => 'string',
        'pricing_group_id' => 'string',
        'ledger_id_debtor_realised_gain_loss' => 'string',
        'ledger_id_debtor_un_realised_gain_loss' => 'string',
        'is_default' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'debtor_classification_id' => null,
        'last_saved_date_time' => 'date-time',
        'description' => null,
        'ledger_id_debtor_control' => null,
        'ledger_id_debtor_sales' => null,
        'ledger_id_debtor_discounts' => null,
        'ledger_id_debtor_sourced_invoices' => null,
        'ledger_id_debtor_debit_adjustment' => null,
        'ledger_id_debtor_sourced_receipts' => null,
        'ledger_id_debtor_credit_adjustment' => null,
        'ledger_id_debtor_freight' => null,
        'ledger_id_debtor_insurance' => null,
        'terms_days' => 'int32',
        'terms_type' => 'int32',
        'price_scheme_id' => null,
        'pricing_group_id' => null,
        'ledger_id_debtor_realised_gain_loss' => null,
        'ledger_id_debtor_un_realised_gain_loss' => null,
        'is_default' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'debtor_classification_id' => 'DebtorClassificationID',
        'last_saved_date_time' => 'LastSavedDateTime',
        'description' => 'Description',
        'ledger_id_debtor_control' => 'LedgerIDDebtorControl',
        'ledger_id_debtor_sales' => 'LedgerIDDebtorSales',
        'ledger_id_debtor_discounts' => 'LedgerIDDebtorDiscounts',
        'ledger_id_debtor_sourced_invoices' => 'LedgerIDDebtorSourcedInvoices',
        'ledger_id_debtor_debit_adjustment' => 'LedgerIDDebtorDebitAdjustment',
        'ledger_id_debtor_sourced_receipts' => 'LedgerIDDebtorSourcedReceipts',
        'ledger_id_debtor_credit_adjustment' => 'LedgerIDDebtorCreditAdjustment',
        'ledger_id_debtor_freight' => 'LedgerIDDebtorFreight',
        'ledger_id_debtor_insurance' => 'LedgerIDDebtorInsurance',
        'terms_days' => 'TermsDays',
        'terms_type' => 'TermsType',
        'price_scheme_id' => 'PriceSchemeID',
        'pricing_group_id' => 'PricingGroupID',
        'ledger_id_debtor_realised_gain_loss' => 'LedgerIDDebtorRealisedGainLoss',
        'ledger_id_debtor_un_realised_gain_loss' => 'LedgerIDDebtorUnRealisedGainLoss',
        'is_default' => 'IsDefault'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'debtor_classification_id' => 'setDebtorClassificationId',
        'last_saved_date_time' => 'setLastSavedDateTime',
        'description' => 'setDescription',
        'ledger_id_debtor_control' => 'setLedgerIdDebtorControl',
        'ledger_id_debtor_sales' => 'setLedgerIdDebtorSales',
        'ledger_id_debtor_discounts' => 'setLedgerIdDebtorDiscounts',
        'ledger_id_debtor_sourced_invoices' => 'setLedgerIdDebtorSourcedInvoices',
        'ledger_id_debtor_debit_adjustment' => 'setLedgerIdDebtorDebitAdjustment',
        'ledger_id_debtor_sourced_receipts' => 'setLedgerIdDebtorSourcedReceipts',
        'ledger_id_debtor_credit_adjustment' => 'setLedgerIdDebtorCreditAdjustment',
        'ledger_id_debtor_freight' => 'setLedgerIdDebtorFreight',
        'ledger_id_debtor_insurance' => 'setLedgerIdDebtorInsurance',
        'terms_days' => 'setTermsDays',
        'terms_type' => 'setTermsType',
        'price_scheme_id' => 'setPriceSchemeId',
        'pricing_group_id' => 'setPricingGroupId',
        'ledger_id_debtor_realised_gain_loss' => 'setLedgerIdDebtorRealisedGainLoss',
        'ledger_id_debtor_un_realised_gain_loss' => 'setLedgerIdDebtorUnRealisedGainLoss',
        'is_default' => 'setIsDefault'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'debtor_classification_id' => 'getDebtorClassificationId',
        'last_saved_date_time' => 'getLastSavedDateTime',
        'description' => 'getDescription',
        'ledger_id_debtor_control' => 'getLedgerIdDebtorControl',
        'ledger_id_debtor_sales' => 'getLedgerIdDebtorSales',
        'ledger_id_debtor_discounts' => 'getLedgerIdDebtorDiscounts',
        'ledger_id_debtor_sourced_invoices' => 'getLedgerIdDebtorSourcedInvoices',
        'ledger_id_debtor_debit_adjustment' => 'getLedgerIdDebtorDebitAdjustment',
        'ledger_id_debtor_sourced_receipts' => 'getLedgerIdDebtorSourcedReceipts',
        'ledger_id_debtor_credit_adjustment' => 'getLedgerIdDebtorCreditAdjustment',
        'ledger_id_debtor_freight' => 'getLedgerIdDebtorFreight',
        'ledger_id_debtor_insurance' => 'getLedgerIdDebtorInsurance',
        'terms_days' => 'getTermsDays',
        'terms_type' => 'getTermsType',
        'price_scheme_id' => 'getPriceSchemeId',
        'pricing_group_id' => 'getPricingGroupId',
        'ledger_id_debtor_realised_gain_loss' => 'getLedgerIdDebtorRealisedGainLoss',
        'ledger_id_debtor_un_realised_gain_loss' => 'getLedgerIdDebtorUnRealisedGainLoss',
        'is_default' => 'getIsDefault'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['debtor_classification_id'] = isset($data['debtor_classification_id']) ? $data['debtor_classification_id'] : null;
        $this->container['last_saved_date_time'] = isset($data['last_saved_date_time']) ? $data['last_saved_date_time'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['ledger_id_debtor_control'] = isset($data['ledger_id_debtor_control']) ? $data['ledger_id_debtor_control'] : null;
        $this->container['ledger_id_debtor_sales'] = isset($data['ledger_id_debtor_sales']) ? $data['ledger_id_debtor_sales'] : null;
        $this->container['ledger_id_debtor_discounts'] = isset($data['ledger_id_debtor_discounts']) ? $data['ledger_id_debtor_discounts'] : null;
        $this->container['ledger_id_debtor_sourced_invoices'] = isset($data['ledger_id_debtor_sourced_invoices']) ? $data['ledger_id_debtor_sourced_invoices'] : null;
        $this->container['ledger_id_debtor_debit_adjustment'] = isset($data['ledger_id_debtor_debit_adjustment']) ? $data['ledger_id_debtor_debit_adjustment'] : null;
        $this->container['ledger_id_debtor_sourced_receipts'] = isset($data['ledger_id_debtor_sourced_receipts']) ? $data['ledger_id_debtor_sourced_receipts'] : null;
        $this->container['ledger_id_debtor_credit_adjustment'] = isset($data['ledger_id_debtor_credit_adjustment']) ? $data['ledger_id_debtor_credit_adjustment'] : null;
        $this->container['ledger_id_debtor_freight'] = isset($data['ledger_id_debtor_freight']) ? $data['ledger_id_debtor_freight'] : null;
        $this->container['ledger_id_debtor_insurance'] = isset($data['ledger_id_debtor_insurance']) ? $data['ledger_id_debtor_insurance'] : null;
        $this->container['terms_days'] = isset($data['terms_days']) ? $data['terms_days'] : null;
        $this->container['terms_type'] = isset($data['terms_type']) ? $data['terms_type'] : null;
        $this->container['price_scheme_id'] = isset($data['price_scheme_id']) ? $data['price_scheme_id'] : null;
        $this->container['pricing_group_id'] = isset($data['pricing_group_id']) ? $data['pricing_group_id'] : null;
        $this->container['ledger_id_debtor_realised_gain_loss'] = isset($data['ledger_id_debtor_realised_gain_loss']) ? $data['ledger_id_debtor_realised_gain_loss'] : null;
        $this->container['ledger_id_debtor_un_realised_gain_loss'] = isset($data['ledger_id_debtor_un_realised_gain_loss']) ? $data['ledger_id_debtor_un_realised_gain_loss'] : null;
        $this->container['is_default'] = isset($data['is_default']) ? $data['is_default'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets debtor_classification_id
     *
     * @return string
     */
    public function getDebtorClassificationId()
    {
        return $this->container['debtor_classification_id'];
    }

    /**
     * Sets debtor_classification_id
     *
     * @param string $debtor_classification_id debtor_classification_id
     *
     * @return $this
     */
    public function setDebtorClassificationId($debtor_classification_id)
    {
        $this->container['debtor_classification_id'] = $debtor_classification_id;

        return $this;
    }

    /**
     * Gets last_saved_date_time
     *
     * @return \DateTime
     */
    public function getLastSavedDateTime()
    {
        return $this->container['last_saved_date_time'];
    }

    /**
     * Sets last_saved_date_time
     *
     * @param \DateTime $last_saved_date_time last_saved_date_time
     *
     * @return $this
     */
    public function setLastSavedDateTime($last_saved_date_time)
    {
        $this->container['last_saved_date_time'] = $last_saved_date_time;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_control
     *
     * @return string
     */
    public function getLedgerIdDebtorControl()
    {
        return $this->container['ledger_id_debtor_control'];
    }

    /**
     * Sets ledger_id_debtor_control
     *
     * @param string $ledger_id_debtor_control ledger_id_debtor_control
     *
     * @return $this
     */
    public function setLedgerIdDebtorControl($ledger_id_debtor_control)
    {
        $this->container['ledger_id_debtor_control'] = $ledger_id_debtor_control;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_sales
     *
     * @return string
     */
    public function getLedgerIdDebtorSales()
    {
        return $this->container['ledger_id_debtor_sales'];
    }

    /**
     * Sets ledger_id_debtor_sales
     *
     * @param string $ledger_id_debtor_sales ledger_id_debtor_sales
     *
     * @return $this
     */
    public function setLedgerIdDebtorSales($ledger_id_debtor_sales)
    {
        $this->container['ledger_id_debtor_sales'] = $ledger_id_debtor_sales;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_discounts
     *
     * @return string
     */
    public function getLedgerIdDebtorDiscounts()
    {
        return $this->container['ledger_id_debtor_discounts'];
    }

    /**
     * Sets ledger_id_debtor_discounts
     *
     * @param string $ledger_id_debtor_discounts ledger_id_debtor_discounts
     *
     * @return $this
     */
    public function setLedgerIdDebtorDiscounts($ledger_id_debtor_discounts)
    {
        $this->container['ledger_id_debtor_discounts'] = $ledger_id_debtor_discounts;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_sourced_invoices
     *
     * @return string
     */
    public function getLedgerIdDebtorSourcedInvoices()
    {
        return $this->container['ledger_id_debtor_sourced_invoices'];
    }

    /**
     * Sets ledger_id_debtor_sourced_invoices
     *
     * @param string $ledger_id_debtor_sourced_invoices ledger_id_debtor_sourced_invoices
     *
     * @return $this
     */
    public function setLedgerIdDebtorSourcedInvoices($ledger_id_debtor_sourced_invoices)
    {
        $this->container['ledger_id_debtor_sourced_invoices'] = $ledger_id_debtor_sourced_invoices;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_debit_adjustment
     *
     * @return string
     */
    public function getLedgerIdDebtorDebitAdjustment()
    {
        return $this->container['ledger_id_debtor_debit_adjustment'];
    }

    /**
     * Sets ledger_id_debtor_debit_adjustment
     *
     * @param string $ledger_id_debtor_debit_adjustment ledger_id_debtor_debit_adjustment
     *
     * @return $this
     */
    public function setLedgerIdDebtorDebitAdjustment($ledger_id_debtor_debit_adjustment)
    {
        $this->container['ledger_id_debtor_debit_adjustment'] = $ledger_id_debtor_debit_adjustment;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_sourced_receipts
     *
     * @return string
     */
    public function getLedgerIdDebtorSourcedReceipts()
    {
        return $this->container['ledger_id_debtor_sourced_receipts'];
    }

    /**
     * Sets ledger_id_debtor_sourced_receipts
     *
     * @param string $ledger_id_debtor_sourced_receipts ledger_id_debtor_sourced_receipts
     *
     * @return $this
     */
    public function setLedgerIdDebtorSourcedReceipts($ledger_id_debtor_sourced_receipts)
    {
        $this->container['ledger_id_debtor_sourced_receipts'] = $ledger_id_debtor_sourced_receipts;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_credit_adjustment
     *
     * @return string
     */
    public function getLedgerIdDebtorCreditAdjustment()
    {
        return $this->container['ledger_id_debtor_credit_adjustment'];
    }

    /**
     * Sets ledger_id_debtor_credit_adjustment
     *
     * @param string $ledger_id_debtor_credit_adjustment ledger_id_debtor_credit_adjustment
     *
     * @return $this
     */
    public function setLedgerIdDebtorCreditAdjustment($ledger_id_debtor_credit_adjustment)
    {
        $this->container['ledger_id_debtor_credit_adjustment'] = $ledger_id_debtor_credit_adjustment;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_freight
     *
     * @return string
     */
    public function getLedgerIdDebtorFreight()
    {
        return $this->container['ledger_id_debtor_freight'];
    }

    /**
     * Sets ledger_id_debtor_freight
     *
     * @param string $ledger_id_debtor_freight ledger_id_debtor_freight
     *
     * @return $this
     */
    public function setLedgerIdDebtorFreight($ledger_id_debtor_freight)
    {
        $this->container['ledger_id_debtor_freight'] = $ledger_id_debtor_freight;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_insurance
     *
     * @return string
     */
    public function getLedgerIdDebtorInsurance()
    {
        return $this->container['ledger_id_debtor_insurance'];
    }

    /**
     * Sets ledger_id_debtor_insurance
     *
     * @param string $ledger_id_debtor_insurance ledger_id_debtor_insurance
     *
     * @return $this
     */
    public function setLedgerIdDebtorInsurance($ledger_id_debtor_insurance)
    {
        $this->container['ledger_id_debtor_insurance'] = $ledger_id_debtor_insurance;

        return $this;
    }

    /**
     * Gets terms_days
     *
     * @return int
     */
    public function getTermsDays()
    {
        return $this->container['terms_days'];
    }

    /**
     * Sets terms_days
     *
     * @param int $terms_days terms_days
     *
     * @return $this
     */
    public function setTermsDays($terms_days)
    {
        $this->container['terms_days'] = $terms_days;

        return $this;
    }

    /**
     * Gets terms_type
     *
     * @return int
     */
    public function getTermsType()
    {
        return $this->container['terms_type'];
    }

    /**
     * Sets terms_type
     *
     * @param int $terms_type terms_type
     *
     * @return $this
     */
    public function setTermsType($terms_type)
    {
        $this->container['terms_type'] = $terms_type;

        return $this;
    }

    /**
     * Gets price_scheme_id
     *
     * @return string
     */
    public function getPriceSchemeId()
    {
        return $this->container['price_scheme_id'];
    }

    /**
     * Sets price_scheme_id
     *
     * @param string $price_scheme_id price_scheme_id
     *
     * @return $this
     */
    public function setPriceSchemeId($price_scheme_id)
    {
        $this->container['price_scheme_id'] = $price_scheme_id;

        return $this;
    }

    /**
     * Gets pricing_group_id
     *
     * @return string
     */
    public function getPricingGroupId()
    {
        return $this->container['pricing_group_id'];
    }

    /**
     * Sets pricing_group_id
     *
     * @param string $pricing_group_id pricing_group_id
     *
     * @return $this
     */
    public function setPricingGroupId($pricing_group_id)
    {
        $this->container['pricing_group_id'] = $pricing_group_id;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_realised_gain_loss
     *
     * @return string
     */
    public function getLedgerIdDebtorRealisedGainLoss()
    {
        return $this->container['ledger_id_debtor_realised_gain_loss'];
    }

    /**
     * Sets ledger_id_debtor_realised_gain_loss
     *
     * @param string $ledger_id_debtor_realised_gain_loss ledger_id_debtor_realised_gain_loss
     *
     * @return $this
     */
    public function setLedgerIdDebtorRealisedGainLoss($ledger_id_debtor_realised_gain_loss)
    {
        $this->container['ledger_id_debtor_realised_gain_loss'] = $ledger_id_debtor_realised_gain_loss;

        return $this;
    }

    /**
     * Gets ledger_id_debtor_un_realised_gain_loss
     *
     * @return string
     */
    public function getLedgerIdDebtorUnRealisedGainLoss()
    {
        return $this->container['ledger_id_debtor_un_realised_gain_loss'];
    }

    /**
     * Sets ledger_id_debtor_un_realised_gain_loss
     *
     * @param string $ledger_id_debtor_un_realised_gain_loss ledger_id_debtor_un_realised_gain_loss
     *
     * @return $this
     */
    public function setLedgerIdDebtorUnRealisedGainLoss($ledger_id_debtor_un_realised_gain_loss)
    {
        $this->container['ledger_id_debtor_un_realised_gain_loss'] = $ledger_id_debtor_un_realised_gain_loss;

        return $this;
    }

    /**
     * Gets is_default
     *
     * @return bool
     */
    public function getIsDefault()
    {
        return $this->container['is_default'];
    }

    /**
     * Sets is_default
     *
     * @param bool $is_default is_default
     *
     * @return $this
     */
    public function setIsDefault($is_default)
    {
        $this->container['is_default'] = $is_default;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


