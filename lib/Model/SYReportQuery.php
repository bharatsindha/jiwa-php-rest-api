<?php
/**
 * SYReportQuery
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\JiwaModel;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * SYReportQuery Class Doc Comment
 *
 * @category Class
 * @description SY_ReportQuery
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SYReportQuery implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'SY_ReportQuery';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'rec_id' => 'string',
        'rec_id_starts_with' => 'string',
        'rec_id_ends_with' => 'string',
        'rec_id_contains' => 'string',
        'rec_id_like' => 'string',
        'rec_id_between' => 'string[]',
        'rec_id_in' => 'string[]',
        'file_name' => 'string',
        'file_name_starts_with' => 'string',
        'file_name_ends_with' => 'string',
        'file_name_contains' => 'string',
        'file_name_like' => 'string',
        'file_name_between' => 'string[]',
        'file_name_in' => 'string[]',
        'title' => 'string',
        'title_starts_with' => 'string',
        'title_ends_with' => 'string',
        'title_contains' => 'string',
        'title_like' => 'string',
        'title_between' => 'string[]',
        'title_in' => 'string[]',
        'description' => 'string',
        'description_starts_with' => 'string',
        'description_ends_with' => 'string',
        'description_contains' => 'string',
        'description_like' => 'string',
        'description_between' => 'string[]',
        'description_in' => 'string[]',
        'author' => 'string',
        'author_starts_with' => 'string',
        'author_ends_with' => 'string',
        'author_contains' => 'string',
        'author_like' => 'string',
        'author_between' => 'string[]',
        'author_in' => 'string[]',
        'sy_report_section_rec_id' => 'string',
        'sy_report_section_rec_id_starts_with' => 'string',
        'sy_report_section_rec_id_ends_with' => 'string',
        'sy_report_section_rec_id_contains' => 'string',
        'sy_report_section_rec_id_like' => 'string',
        'sy_report_section_rec_id_between' => 'string[]',
        'sy_report_section_rec_id_in' => 'string[]',
        'report_type' => 'int',
        'report_type_greater_than_or_equal_to' => 'int',
        'report_type_greater_than' => 'int',
        'report_type_less_than' => 'int',
        'report_type_less_than_or_equal_to' => 'int',
        'report_type_not_equal_to' => 'int',
        'report_type_between' => 'string',
        'report_type_in' => 'string',
        'is_enabled' => 'bool',
        'file_binary' => 'string',
        'file_hash' => 'string',
        'file_hash_starts_with' => 'string',
        'file_hash_ends_with' => 'string',
        'file_hash_contains' => 'string',
        'file_hash_like' => 'string',
        'file_hash_between' => 'string[]',
        'file_hash_in' => 'string[]',
        'comment' => 'string',
        'comment_starts_with' => 'string',
        'comment_ends_with' => 'string',
        'comment_contains' => 'string',
        'comment_like' => 'string',
        'comment_between' => 'string[]',
        'comment_in' => 'string[]',
        'item_no' => 'int',
        'item_no_greater_than_or_equal_to' => 'int',
        'item_no_greater_than' => 'int',
        'item_no_less_than' => 'int',
        'item_no_less_than_or_equal_to' => 'int',
        'item_no_not_equal_to' => 'int',
        'item_no_between' => 'int[]',
        'item_no_in' => 'int[]',
        'last_saved_date_time' => '\DateTime',
        'last_saved_date_time_greater_than_or_equal_to' => '\DateTime',
        'last_saved_date_time_greater_than' => '\DateTime',
        'last_saved_date_time_less_than' => '\DateTime',
        'last_saved_date_time_less_than_or_equal_to' => '\DateTime',
        'last_saved_date_time_not_equal_to' => '\DateTime',
        'last_saved_date_time_between' => '\DateTime[]',
        'last_saved_date_time_in' => '\DateTime[]',
        'row_hash' => 'string',
        'is_read_only' => 'bool',
        'skip' => 'int',
        'take' => 'int',
        'order_by' => 'string',
        'order_by_desc' => 'string',
        'include' => 'string',
        'fields' => 'string',
        'meta' => '\Jiwa\JiwaModel\DictionaryStringString_'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'rec_id' => null,
        'rec_id_starts_with' => null,
        'rec_id_ends_with' => null,
        'rec_id_contains' => null,
        'rec_id_like' => null,
        'rec_id_between' => null,
        'rec_id_in' => null,
        'file_name' => null,
        'file_name_starts_with' => null,
        'file_name_ends_with' => null,
        'file_name_contains' => null,
        'file_name_like' => null,
        'file_name_between' => null,
        'file_name_in' => null,
        'title' => null,
        'title_starts_with' => null,
        'title_ends_with' => null,
        'title_contains' => null,
        'title_like' => null,
        'title_between' => null,
        'title_in' => null,
        'description' => null,
        'description_starts_with' => null,
        'description_ends_with' => null,
        'description_contains' => null,
        'description_like' => null,
        'description_between' => null,
        'description_in' => null,
        'author' => null,
        'author_starts_with' => null,
        'author_ends_with' => null,
        'author_contains' => null,
        'author_like' => null,
        'author_between' => null,
        'author_in' => null,
        'sy_report_section_rec_id' => null,
        'sy_report_section_rec_id_starts_with' => null,
        'sy_report_section_rec_id_ends_with' => null,
        'sy_report_section_rec_id_contains' => null,
        'sy_report_section_rec_id_like' => null,
        'sy_report_section_rec_id_between' => null,
        'sy_report_section_rec_id_in' => null,
        'report_type' => 'int32',
        'report_type_greater_than_or_equal_to' => 'int32',
        'report_type_greater_than' => 'int32',
        'report_type_less_than' => 'int32',
        'report_type_less_than_or_equal_to' => 'int32',
        'report_type_not_equal_to' => 'int32',
        'report_type_between' => 'byte',
        'report_type_in' => 'byte',
        'is_enabled' => null,
        'file_binary' => 'byte',
        'file_hash' => null,
        'file_hash_starts_with' => null,
        'file_hash_ends_with' => null,
        'file_hash_contains' => null,
        'file_hash_like' => null,
        'file_hash_between' => null,
        'file_hash_in' => null,
        'comment' => null,
        'comment_starts_with' => null,
        'comment_ends_with' => null,
        'comment_contains' => null,
        'comment_like' => null,
        'comment_between' => null,
        'comment_in' => null,
        'item_no' => 'int32',
        'item_no_greater_than_or_equal_to' => 'int32',
        'item_no_greater_than' => 'int32',
        'item_no_less_than' => 'int32',
        'item_no_less_than_or_equal_to' => 'int32',
        'item_no_not_equal_to' => 'int32',
        'item_no_between' => 'int32',
        'item_no_in' => 'int32',
        'last_saved_date_time' => 'date-time',
        'last_saved_date_time_greater_than_or_equal_to' => 'date-time',
        'last_saved_date_time_greater_than' => 'date-time',
        'last_saved_date_time_less_than' => 'date-time',
        'last_saved_date_time_less_than_or_equal_to' => 'date-time',
        'last_saved_date_time_not_equal_to' => 'date-time',
        'last_saved_date_time_between' => 'date-time',
        'last_saved_date_time_in' => 'date-time',
        'row_hash' => 'byte',
        'is_read_only' => null,
        'skip' => 'int32',
        'take' => 'int32',
        'order_by' => null,
        'order_by_desc' => null,
        'include' => null,
        'fields' => null,
        'meta' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'rec_id' => 'RecID',
        'rec_id_starts_with' => 'RecIDStartsWith',
        'rec_id_ends_with' => 'RecIDEndsWith',
        'rec_id_contains' => 'RecIDContains',
        'rec_id_like' => 'RecIDLike',
        'rec_id_between' => 'RecIDBetween',
        'rec_id_in' => 'RecIDIn',
        'file_name' => 'FileName',
        'file_name_starts_with' => 'FileNameStartsWith',
        'file_name_ends_with' => 'FileNameEndsWith',
        'file_name_contains' => 'FileNameContains',
        'file_name_like' => 'FileNameLike',
        'file_name_between' => 'FileNameBetween',
        'file_name_in' => 'FileNameIn',
        'title' => 'Title',
        'title_starts_with' => 'TitleStartsWith',
        'title_ends_with' => 'TitleEndsWith',
        'title_contains' => 'TitleContains',
        'title_like' => 'TitleLike',
        'title_between' => 'TitleBetween',
        'title_in' => 'TitleIn',
        'description' => 'Description',
        'description_starts_with' => 'DescriptionStartsWith',
        'description_ends_with' => 'DescriptionEndsWith',
        'description_contains' => 'DescriptionContains',
        'description_like' => 'DescriptionLike',
        'description_between' => 'DescriptionBetween',
        'description_in' => 'DescriptionIn',
        'author' => 'Author',
        'author_starts_with' => 'AuthorStartsWith',
        'author_ends_with' => 'AuthorEndsWith',
        'author_contains' => 'AuthorContains',
        'author_like' => 'AuthorLike',
        'author_between' => 'AuthorBetween',
        'author_in' => 'AuthorIn',
        'sy_report_section_rec_id' => 'SY_ReportSection_RecID',
        'sy_report_section_rec_id_starts_with' => 'SY_ReportSection_RecIDStartsWith',
        'sy_report_section_rec_id_ends_with' => 'SY_ReportSection_RecIDEndsWith',
        'sy_report_section_rec_id_contains' => 'SY_ReportSection_RecIDContains',
        'sy_report_section_rec_id_like' => 'SY_ReportSection_RecIDLike',
        'sy_report_section_rec_id_between' => 'SY_ReportSection_RecIDBetween',
        'sy_report_section_rec_id_in' => 'SY_ReportSection_RecIDIn',
        'report_type' => 'ReportType',
        'report_type_greater_than_or_equal_to' => 'ReportTypeGreaterThanOrEqualTo',
        'report_type_greater_than' => 'ReportTypeGreaterThan',
        'report_type_less_than' => 'ReportTypeLessThan',
        'report_type_less_than_or_equal_to' => 'ReportTypeLessThanOrEqualTo',
        'report_type_not_equal_to' => 'ReportTypeNotEqualTo',
        'report_type_between' => 'ReportTypeBetween',
        'report_type_in' => 'ReportTypeIn',
        'is_enabled' => 'IsEnabled',
        'file_binary' => 'FileBinary',
        'file_hash' => 'FileHash',
        'file_hash_starts_with' => 'FileHashStartsWith',
        'file_hash_ends_with' => 'FileHashEndsWith',
        'file_hash_contains' => 'FileHashContains',
        'file_hash_like' => 'FileHashLike',
        'file_hash_between' => 'FileHashBetween',
        'file_hash_in' => 'FileHashIn',
        'comment' => 'Comment',
        'comment_starts_with' => 'CommentStartsWith',
        'comment_ends_with' => 'CommentEndsWith',
        'comment_contains' => 'CommentContains',
        'comment_like' => 'CommentLike',
        'comment_between' => 'CommentBetween',
        'comment_in' => 'CommentIn',
        'item_no' => 'ItemNo',
        'item_no_greater_than_or_equal_to' => 'ItemNoGreaterThanOrEqualTo',
        'item_no_greater_than' => 'ItemNoGreaterThan',
        'item_no_less_than' => 'ItemNoLessThan',
        'item_no_less_than_or_equal_to' => 'ItemNoLessThanOrEqualTo',
        'item_no_not_equal_to' => 'ItemNoNotEqualTo',
        'item_no_between' => 'ItemNoBetween',
        'item_no_in' => 'ItemNoIn',
        'last_saved_date_time' => 'LastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'LastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'LastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'LastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'LastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'LastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'LastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'LastSavedDateTimeIn',
        'row_hash' => 'RowHash',
        'is_read_only' => 'IsReadOnly',
        'skip' => 'Skip',
        'take' => 'Take',
        'order_by' => 'OrderBy',
        'order_by_desc' => 'OrderByDesc',
        'include' => 'Include',
        'fields' => 'Fields',
        'meta' => 'Meta'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'rec_id' => 'setRecId',
        'rec_id_starts_with' => 'setRecIdStartsWith',
        'rec_id_ends_with' => 'setRecIdEndsWith',
        'rec_id_contains' => 'setRecIdContains',
        'rec_id_like' => 'setRecIdLike',
        'rec_id_between' => 'setRecIdBetween',
        'rec_id_in' => 'setRecIdIn',
        'file_name' => 'setFileName',
        'file_name_starts_with' => 'setFileNameStartsWith',
        'file_name_ends_with' => 'setFileNameEndsWith',
        'file_name_contains' => 'setFileNameContains',
        'file_name_like' => 'setFileNameLike',
        'file_name_between' => 'setFileNameBetween',
        'file_name_in' => 'setFileNameIn',
        'title' => 'setTitle',
        'title_starts_with' => 'setTitleStartsWith',
        'title_ends_with' => 'setTitleEndsWith',
        'title_contains' => 'setTitleContains',
        'title_like' => 'setTitleLike',
        'title_between' => 'setTitleBetween',
        'title_in' => 'setTitleIn',
        'description' => 'setDescription',
        'description_starts_with' => 'setDescriptionStartsWith',
        'description_ends_with' => 'setDescriptionEndsWith',
        'description_contains' => 'setDescriptionContains',
        'description_like' => 'setDescriptionLike',
        'description_between' => 'setDescriptionBetween',
        'description_in' => 'setDescriptionIn',
        'author' => 'setAuthor',
        'author_starts_with' => 'setAuthorStartsWith',
        'author_ends_with' => 'setAuthorEndsWith',
        'author_contains' => 'setAuthorContains',
        'author_like' => 'setAuthorLike',
        'author_between' => 'setAuthorBetween',
        'author_in' => 'setAuthorIn',
        'sy_report_section_rec_id' => 'setSyReportSectionRecId',
        'sy_report_section_rec_id_starts_with' => 'setSyReportSectionRecIdStartsWith',
        'sy_report_section_rec_id_ends_with' => 'setSyReportSectionRecIdEndsWith',
        'sy_report_section_rec_id_contains' => 'setSyReportSectionRecIdContains',
        'sy_report_section_rec_id_like' => 'setSyReportSectionRecIdLike',
        'sy_report_section_rec_id_between' => 'setSyReportSectionRecIdBetween',
        'sy_report_section_rec_id_in' => 'setSyReportSectionRecIdIn',
        'report_type' => 'setReportType',
        'report_type_greater_than_or_equal_to' => 'setReportTypeGreaterThanOrEqualTo',
        'report_type_greater_than' => 'setReportTypeGreaterThan',
        'report_type_less_than' => 'setReportTypeLessThan',
        'report_type_less_than_or_equal_to' => 'setReportTypeLessThanOrEqualTo',
        'report_type_not_equal_to' => 'setReportTypeNotEqualTo',
        'report_type_between' => 'setReportTypeBetween',
        'report_type_in' => 'setReportTypeIn',
        'is_enabled' => 'setIsEnabled',
        'file_binary' => 'setFileBinary',
        'file_hash' => 'setFileHash',
        'file_hash_starts_with' => 'setFileHashStartsWith',
        'file_hash_ends_with' => 'setFileHashEndsWith',
        'file_hash_contains' => 'setFileHashContains',
        'file_hash_like' => 'setFileHashLike',
        'file_hash_between' => 'setFileHashBetween',
        'file_hash_in' => 'setFileHashIn',
        'comment' => 'setComment',
        'comment_starts_with' => 'setCommentStartsWith',
        'comment_ends_with' => 'setCommentEndsWith',
        'comment_contains' => 'setCommentContains',
        'comment_like' => 'setCommentLike',
        'comment_between' => 'setCommentBetween',
        'comment_in' => 'setCommentIn',
        'item_no' => 'setItemNo',
        'item_no_greater_than_or_equal_to' => 'setItemNoGreaterThanOrEqualTo',
        'item_no_greater_than' => 'setItemNoGreaterThan',
        'item_no_less_than' => 'setItemNoLessThan',
        'item_no_less_than_or_equal_to' => 'setItemNoLessThanOrEqualTo',
        'item_no_not_equal_to' => 'setItemNoNotEqualTo',
        'item_no_between' => 'setItemNoBetween',
        'item_no_in' => 'setItemNoIn',
        'last_saved_date_time' => 'setLastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'setLastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'setLastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'setLastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'setLastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'setLastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'setLastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'setLastSavedDateTimeIn',
        'row_hash' => 'setRowHash',
        'is_read_only' => 'setIsReadOnly',
        'skip' => 'setSkip',
        'take' => 'setTake',
        'order_by' => 'setOrderBy',
        'order_by_desc' => 'setOrderByDesc',
        'include' => 'setInclude',
        'fields' => 'setFields',
        'meta' => 'setMeta'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'rec_id' => 'getRecId',
        'rec_id_starts_with' => 'getRecIdStartsWith',
        'rec_id_ends_with' => 'getRecIdEndsWith',
        'rec_id_contains' => 'getRecIdContains',
        'rec_id_like' => 'getRecIdLike',
        'rec_id_between' => 'getRecIdBetween',
        'rec_id_in' => 'getRecIdIn',
        'file_name' => 'getFileName',
        'file_name_starts_with' => 'getFileNameStartsWith',
        'file_name_ends_with' => 'getFileNameEndsWith',
        'file_name_contains' => 'getFileNameContains',
        'file_name_like' => 'getFileNameLike',
        'file_name_between' => 'getFileNameBetween',
        'file_name_in' => 'getFileNameIn',
        'title' => 'getTitle',
        'title_starts_with' => 'getTitleStartsWith',
        'title_ends_with' => 'getTitleEndsWith',
        'title_contains' => 'getTitleContains',
        'title_like' => 'getTitleLike',
        'title_between' => 'getTitleBetween',
        'title_in' => 'getTitleIn',
        'description' => 'getDescription',
        'description_starts_with' => 'getDescriptionStartsWith',
        'description_ends_with' => 'getDescriptionEndsWith',
        'description_contains' => 'getDescriptionContains',
        'description_like' => 'getDescriptionLike',
        'description_between' => 'getDescriptionBetween',
        'description_in' => 'getDescriptionIn',
        'author' => 'getAuthor',
        'author_starts_with' => 'getAuthorStartsWith',
        'author_ends_with' => 'getAuthorEndsWith',
        'author_contains' => 'getAuthorContains',
        'author_like' => 'getAuthorLike',
        'author_between' => 'getAuthorBetween',
        'author_in' => 'getAuthorIn',
        'sy_report_section_rec_id' => 'getSyReportSectionRecId',
        'sy_report_section_rec_id_starts_with' => 'getSyReportSectionRecIdStartsWith',
        'sy_report_section_rec_id_ends_with' => 'getSyReportSectionRecIdEndsWith',
        'sy_report_section_rec_id_contains' => 'getSyReportSectionRecIdContains',
        'sy_report_section_rec_id_like' => 'getSyReportSectionRecIdLike',
        'sy_report_section_rec_id_between' => 'getSyReportSectionRecIdBetween',
        'sy_report_section_rec_id_in' => 'getSyReportSectionRecIdIn',
        'report_type' => 'getReportType',
        'report_type_greater_than_or_equal_to' => 'getReportTypeGreaterThanOrEqualTo',
        'report_type_greater_than' => 'getReportTypeGreaterThan',
        'report_type_less_than' => 'getReportTypeLessThan',
        'report_type_less_than_or_equal_to' => 'getReportTypeLessThanOrEqualTo',
        'report_type_not_equal_to' => 'getReportTypeNotEqualTo',
        'report_type_between' => 'getReportTypeBetween',
        'report_type_in' => 'getReportTypeIn',
        'is_enabled' => 'getIsEnabled',
        'file_binary' => 'getFileBinary',
        'file_hash' => 'getFileHash',
        'file_hash_starts_with' => 'getFileHashStartsWith',
        'file_hash_ends_with' => 'getFileHashEndsWith',
        'file_hash_contains' => 'getFileHashContains',
        'file_hash_like' => 'getFileHashLike',
        'file_hash_between' => 'getFileHashBetween',
        'file_hash_in' => 'getFileHashIn',
        'comment' => 'getComment',
        'comment_starts_with' => 'getCommentStartsWith',
        'comment_ends_with' => 'getCommentEndsWith',
        'comment_contains' => 'getCommentContains',
        'comment_like' => 'getCommentLike',
        'comment_between' => 'getCommentBetween',
        'comment_in' => 'getCommentIn',
        'item_no' => 'getItemNo',
        'item_no_greater_than_or_equal_to' => 'getItemNoGreaterThanOrEqualTo',
        'item_no_greater_than' => 'getItemNoGreaterThan',
        'item_no_less_than' => 'getItemNoLessThan',
        'item_no_less_than_or_equal_to' => 'getItemNoLessThanOrEqualTo',
        'item_no_not_equal_to' => 'getItemNoNotEqualTo',
        'item_no_between' => 'getItemNoBetween',
        'item_no_in' => 'getItemNoIn',
        'last_saved_date_time' => 'getLastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'getLastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'getLastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'getLastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'getLastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'getLastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'getLastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'getLastSavedDateTimeIn',
        'row_hash' => 'getRowHash',
        'is_read_only' => 'getIsReadOnly',
        'skip' => 'getSkip',
        'take' => 'getTake',
        'order_by' => 'getOrderBy',
        'order_by_desc' => 'getOrderByDesc',
        'include' => 'getInclude',
        'fields' => 'getFields',
        'meta' => 'getMeta'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['rec_id'] = isset($data['rec_id']) ? $data['rec_id'] : null;
        $this->container['rec_id_starts_with'] = isset($data['rec_id_starts_with']) ? $data['rec_id_starts_with'] : null;
        $this->container['rec_id_ends_with'] = isset($data['rec_id_ends_with']) ? $data['rec_id_ends_with'] : null;
        $this->container['rec_id_contains'] = isset($data['rec_id_contains']) ? $data['rec_id_contains'] : null;
        $this->container['rec_id_like'] = isset($data['rec_id_like']) ? $data['rec_id_like'] : null;
        $this->container['rec_id_between'] = isset($data['rec_id_between']) ? $data['rec_id_between'] : null;
        $this->container['rec_id_in'] = isset($data['rec_id_in']) ? $data['rec_id_in'] : null;
        $this->container['file_name'] = isset($data['file_name']) ? $data['file_name'] : null;
        $this->container['file_name_starts_with'] = isset($data['file_name_starts_with']) ? $data['file_name_starts_with'] : null;
        $this->container['file_name_ends_with'] = isset($data['file_name_ends_with']) ? $data['file_name_ends_with'] : null;
        $this->container['file_name_contains'] = isset($data['file_name_contains']) ? $data['file_name_contains'] : null;
        $this->container['file_name_like'] = isset($data['file_name_like']) ? $data['file_name_like'] : null;
        $this->container['file_name_between'] = isset($data['file_name_between']) ? $data['file_name_between'] : null;
        $this->container['file_name_in'] = isset($data['file_name_in']) ? $data['file_name_in'] : null;
        $this->container['title'] = isset($data['title']) ? $data['title'] : null;
        $this->container['title_starts_with'] = isset($data['title_starts_with']) ? $data['title_starts_with'] : null;
        $this->container['title_ends_with'] = isset($data['title_ends_with']) ? $data['title_ends_with'] : null;
        $this->container['title_contains'] = isset($data['title_contains']) ? $data['title_contains'] : null;
        $this->container['title_like'] = isset($data['title_like']) ? $data['title_like'] : null;
        $this->container['title_between'] = isset($data['title_between']) ? $data['title_between'] : null;
        $this->container['title_in'] = isset($data['title_in']) ? $data['title_in'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['description_starts_with'] = isset($data['description_starts_with']) ? $data['description_starts_with'] : null;
        $this->container['description_ends_with'] = isset($data['description_ends_with']) ? $data['description_ends_with'] : null;
        $this->container['description_contains'] = isset($data['description_contains']) ? $data['description_contains'] : null;
        $this->container['description_like'] = isset($data['description_like']) ? $data['description_like'] : null;
        $this->container['description_between'] = isset($data['description_between']) ? $data['description_between'] : null;
        $this->container['description_in'] = isset($data['description_in']) ? $data['description_in'] : null;
        $this->container['author'] = isset($data['author']) ? $data['author'] : null;
        $this->container['author_starts_with'] = isset($data['author_starts_with']) ? $data['author_starts_with'] : null;
        $this->container['author_ends_with'] = isset($data['author_ends_with']) ? $data['author_ends_with'] : null;
        $this->container['author_contains'] = isset($data['author_contains']) ? $data['author_contains'] : null;
        $this->container['author_like'] = isset($data['author_like']) ? $data['author_like'] : null;
        $this->container['author_between'] = isset($data['author_between']) ? $data['author_between'] : null;
        $this->container['author_in'] = isset($data['author_in']) ? $data['author_in'] : null;
        $this->container['sy_report_section_rec_id'] = isset($data['sy_report_section_rec_id']) ? $data['sy_report_section_rec_id'] : null;
        $this->container['sy_report_section_rec_id_starts_with'] = isset($data['sy_report_section_rec_id_starts_with']) ? $data['sy_report_section_rec_id_starts_with'] : null;
        $this->container['sy_report_section_rec_id_ends_with'] = isset($data['sy_report_section_rec_id_ends_with']) ? $data['sy_report_section_rec_id_ends_with'] : null;
        $this->container['sy_report_section_rec_id_contains'] = isset($data['sy_report_section_rec_id_contains']) ? $data['sy_report_section_rec_id_contains'] : null;
        $this->container['sy_report_section_rec_id_like'] = isset($data['sy_report_section_rec_id_like']) ? $data['sy_report_section_rec_id_like'] : null;
        $this->container['sy_report_section_rec_id_between'] = isset($data['sy_report_section_rec_id_between']) ? $data['sy_report_section_rec_id_between'] : null;
        $this->container['sy_report_section_rec_id_in'] = isset($data['sy_report_section_rec_id_in']) ? $data['sy_report_section_rec_id_in'] : null;
        $this->container['report_type'] = isset($data['report_type']) ? $data['report_type'] : null;
        $this->container['report_type_greater_than_or_equal_to'] = isset($data['report_type_greater_than_or_equal_to']) ? $data['report_type_greater_than_or_equal_to'] : null;
        $this->container['report_type_greater_than'] = isset($data['report_type_greater_than']) ? $data['report_type_greater_than'] : null;
        $this->container['report_type_less_than'] = isset($data['report_type_less_than']) ? $data['report_type_less_than'] : null;
        $this->container['report_type_less_than_or_equal_to'] = isset($data['report_type_less_than_or_equal_to']) ? $data['report_type_less_than_or_equal_to'] : null;
        $this->container['report_type_not_equal_to'] = isset($data['report_type_not_equal_to']) ? $data['report_type_not_equal_to'] : null;
        $this->container['report_type_between'] = isset($data['report_type_between']) ? $data['report_type_between'] : null;
        $this->container['report_type_in'] = isset($data['report_type_in']) ? $data['report_type_in'] : null;
        $this->container['is_enabled'] = isset($data['is_enabled']) ? $data['is_enabled'] : null;
        $this->container['file_binary'] = isset($data['file_binary']) ? $data['file_binary'] : null;
        $this->container['file_hash'] = isset($data['file_hash']) ? $data['file_hash'] : null;
        $this->container['file_hash_starts_with'] = isset($data['file_hash_starts_with']) ? $data['file_hash_starts_with'] : null;
        $this->container['file_hash_ends_with'] = isset($data['file_hash_ends_with']) ? $data['file_hash_ends_with'] : null;
        $this->container['file_hash_contains'] = isset($data['file_hash_contains']) ? $data['file_hash_contains'] : null;
        $this->container['file_hash_like'] = isset($data['file_hash_like']) ? $data['file_hash_like'] : null;
        $this->container['file_hash_between'] = isset($data['file_hash_between']) ? $data['file_hash_between'] : null;
        $this->container['file_hash_in'] = isset($data['file_hash_in']) ? $data['file_hash_in'] : null;
        $this->container['comment'] = isset($data['comment']) ? $data['comment'] : null;
        $this->container['comment_starts_with'] = isset($data['comment_starts_with']) ? $data['comment_starts_with'] : null;
        $this->container['comment_ends_with'] = isset($data['comment_ends_with']) ? $data['comment_ends_with'] : null;
        $this->container['comment_contains'] = isset($data['comment_contains']) ? $data['comment_contains'] : null;
        $this->container['comment_like'] = isset($data['comment_like']) ? $data['comment_like'] : null;
        $this->container['comment_between'] = isset($data['comment_between']) ? $data['comment_between'] : null;
        $this->container['comment_in'] = isset($data['comment_in']) ? $data['comment_in'] : null;
        $this->container['item_no'] = isset($data['item_no']) ? $data['item_no'] : null;
        $this->container['item_no_greater_than_or_equal_to'] = isset($data['item_no_greater_than_or_equal_to']) ? $data['item_no_greater_than_or_equal_to'] : null;
        $this->container['item_no_greater_than'] = isset($data['item_no_greater_than']) ? $data['item_no_greater_than'] : null;
        $this->container['item_no_less_than'] = isset($data['item_no_less_than']) ? $data['item_no_less_than'] : null;
        $this->container['item_no_less_than_or_equal_to'] = isset($data['item_no_less_than_or_equal_to']) ? $data['item_no_less_than_or_equal_to'] : null;
        $this->container['item_no_not_equal_to'] = isset($data['item_no_not_equal_to']) ? $data['item_no_not_equal_to'] : null;
        $this->container['item_no_between'] = isset($data['item_no_between']) ? $data['item_no_between'] : null;
        $this->container['item_no_in'] = isset($data['item_no_in']) ? $data['item_no_in'] : null;
        $this->container['last_saved_date_time'] = isset($data['last_saved_date_time']) ? $data['last_saved_date_time'] : null;
        $this->container['last_saved_date_time_greater_than_or_equal_to'] = isset($data['last_saved_date_time_greater_than_or_equal_to']) ? $data['last_saved_date_time_greater_than_or_equal_to'] : null;
        $this->container['last_saved_date_time_greater_than'] = isset($data['last_saved_date_time_greater_than']) ? $data['last_saved_date_time_greater_than'] : null;
        $this->container['last_saved_date_time_less_than'] = isset($data['last_saved_date_time_less_than']) ? $data['last_saved_date_time_less_than'] : null;
        $this->container['last_saved_date_time_less_than_or_equal_to'] = isset($data['last_saved_date_time_less_than_or_equal_to']) ? $data['last_saved_date_time_less_than_or_equal_to'] : null;
        $this->container['last_saved_date_time_not_equal_to'] = isset($data['last_saved_date_time_not_equal_to']) ? $data['last_saved_date_time_not_equal_to'] : null;
        $this->container['last_saved_date_time_between'] = isset($data['last_saved_date_time_between']) ? $data['last_saved_date_time_between'] : null;
        $this->container['last_saved_date_time_in'] = isset($data['last_saved_date_time_in']) ? $data['last_saved_date_time_in'] : null;
        $this->container['row_hash'] = isset($data['row_hash']) ? $data['row_hash'] : null;
        $this->container['is_read_only'] = isset($data['is_read_only']) ? $data['is_read_only'] : null;
        $this->container['skip'] = isset($data['skip']) ? $data['skip'] : null;
        $this->container['take'] = isset($data['take']) ? $data['take'] : null;
        $this->container['order_by'] = isset($data['order_by']) ? $data['order_by'] : null;
        $this->container['order_by_desc'] = isset($data['order_by_desc']) ? $data['order_by_desc'] : null;
        $this->container['include'] = isset($data['include']) ? $data['include'] : null;
        $this->container['fields'] = isset($data['fields']) ? $data['fields'] : null;
        $this->container['meta'] = isset($data['meta']) ? $data['meta'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['report_type_between']) && !preg_match("/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/", $this->container['report_type_between'])) {
            $invalidProperties[] = "invalid value for 'report_type_between', must be conform to the pattern /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.";
        }

        if (!is_null($this->container['report_type_in']) && !preg_match("/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/", $this->container['report_type_in'])) {
            $invalidProperties[] = "invalid value for 'report_type_in', must be conform to the pattern /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.";
        }

        if (!is_null($this->container['file_binary']) && !preg_match("/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/", $this->container['file_binary'])) {
            $invalidProperties[] = "invalid value for 'file_binary', must be conform to the pattern /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.";
        }

        if (!is_null($this->container['row_hash']) && !preg_match("/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/", $this->container['row_hash'])) {
            $invalidProperties[] = "invalid value for 'row_hash', must be conform to the pattern /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets rec_id
     *
     * @return string
     */
    public function getRecId()
    {
        return $this->container['rec_id'];
    }

    /**
     * Sets rec_id
     *
     * @param string $rec_id rec_id
     *
     * @return $this
     */
    public function setRecId($rec_id)
    {
        $this->container['rec_id'] = $rec_id;

        return $this;
    }

    /**
     * Gets rec_id_starts_with
     *
     * @return string
     */
    public function getRecIdStartsWith()
    {
        return $this->container['rec_id_starts_with'];
    }

    /**
     * Sets rec_id_starts_with
     *
     * @param string $rec_id_starts_with rec_id_starts_with
     *
     * @return $this
     */
    public function setRecIdStartsWith($rec_id_starts_with)
    {
        $this->container['rec_id_starts_with'] = $rec_id_starts_with;

        return $this;
    }

    /**
     * Gets rec_id_ends_with
     *
     * @return string
     */
    public function getRecIdEndsWith()
    {
        return $this->container['rec_id_ends_with'];
    }

    /**
     * Sets rec_id_ends_with
     *
     * @param string $rec_id_ends_with rec_id_ends_with
     *
     * @return $this
     */
    public function setRecIdEndsWith($rec_id_ends_with)
    {
        $this->container['rec_id_ends_with'] = $rec_id_ends_with;

        return $this;
    }

    /**
     * Gets rec_id_contains
     *
     * @return string
     */
    public function getRecIdContains()
    {
        return $this->container['rec_id_contains'];
    }

    /**
     * Sets rec_id_contains
     *
     * @param string $rec_id_contains rec_id_contains
     *
     * @return $this
     */
    public function setRecIdContains($rec_id_contains)
    {
        $this->container['rec_id_contains'] = $rec_id_contains;

        return $this;
    }

    /**
     * Gets rec_id_like
     *
     * @return string
     */
    public function getRecIdLike()
    {
        return $this->container['rec_id_like'];
    }

    /**
     * Sets rec_id_like
     *
     * @param string $rec_id_like rec_id_like
     *
     * @return $this
     */
    public function setRecIdLike($rec_id_like)
    {
        $this->container['rec_id_like'] = $rec_id_like;

        return $this;
    }

    /**
     * Gets rec_id_between
     *
     * @return string[]
     */
    public function getRecIdBetween()
    {
        return $this->container['rec_id_between'];
    }

    /**
     * Sets rec_id_between
     *
     * @param string[] $rec_id_between rec_id_between
     *
     * @return $this
     */
    public function setRecIdBetween($rec_id_between)
    {
        $this->container['rec_id_between'] = $rec_id_between;

        return $this;
    }

    /**
     * Gets rec_id_in
     *
     * @return string[]
     */
    public function getRecIdIn()
    {
        return $this->container['rec_id_in'];
    }

    /**
     * Sets rec_id_in
     *
     * @param string[] $rec_id_in rec_id_in
     *
     * @return $this
     */
    public function setRecIdIn($rec_id_in)
    {
        $this->container['rec_id_in'] = $rec_id_in;

        return $this;
    }

    /**
     * Gets file_name
     *
     * @return string
     */
    public function getFileName()
    {
        return $this->container['file_name'];
    }

    /**
     * Sets file_name
     *
     * @param string $file_name file_name
     *
     * @return $this
     */
    public function setFileName($file_name)
    {
        $this->container['file_name'] = $file_name;

        return $this;
    }

    /**
     * Gets file_name_starts_with
     *
     * @return string
     */
    public function getFileNameStartsWith()
    {
        return $this->container['file_name_starts_with'];
    }

    /**
     * Sets file_name_starts_with
     *
     * @param string $file_name_starts_with file_name_starts_with
     *
     * @return $this
     */
    public function setFileNameStartsWith($file_name_starts_with)
    {
        $this->container['file_name_starts_with'] = $file_name_starts_with;

        return $this;
    }

    /**
     * Gets file_name_ends_with
     *
     * @return string
     */
    public function getFileNameEndsWith()
    {
        return $this->container['file_name_ends_with'];
    }

    /**
     * Sets file_name_ends_with
     *
     * @param string $file_name_ends_with file_name_ends_with
     *
     * @return $this
     */
    public function setFileNameEndsWith($file_name_ends_with)
    {
        $this->container['file_name_ends_with'] = $file_name_ends_with;

        return $this;
    }

    /**
     * Gets file_name_contains
     *
     * @return string
     */
    public function getFileNameContains()
    {
        return $this->container['file_name_contains'];
    }

    /**
     * Sets file_name_contains
     *
     * @param string $file_name_contains file_name_contains
     *
     * @return $this
     */
    public function setFileNameContains($file_name_contains)
    {
        $this->container['file_name_contains'] = $file_name_contains;

        return $this;
    }

    /**
     * Gets file_name_like
     *
     * @return string
     */
    public function getFileNameLike()
    {
        return $this->container['file_name_like'];
    }

    /**
     * Sets file_name_like
     *
     * @param string $file_name_like file_name_like
     *
     * @return $this
     */
    public function setFileNameLike($file_name_like)
    {
        $this->container['file_name_like'] = $file_name_like;

        return $this;
    }

    /**
     * Gets file_name_between
     *
     * @return string[]
     */
    public function getFileNameBetween()
    {
        return $this->container['file_name_between'];
    }

    /**
     * Sets file_name_between
     *
     * @param string[] $file_name_between file_name_between
     *
     * @return $this
     */
    public function setFileNameBetween($file_name_between)
    {
        $this->container['file_name_between'] = $file_name_between;

        return $this;
    }

    /**
     * Gets file_name_in
     *
     * @return string[]
     */
    public function getFileNameIn()
    {
        return $this->container['file_name_in'];
    }

    /**
     * Sets file_name_in
     *
     * @param string[] $file_name_in file_name_in
     *
     * @return $this
     */
    public function setFileNameIn($file_name_in)
    {
        $this->container['file_name_in'] = $file_name_in;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string $title title
     *
     * @return $this
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets title_starts_with
     *
     * @return string
     */
    public function getTitleStartsWith()
    {
        return $this->container['title_starts_with'];
    }

    /**
     * Sets title_starts_with
     *
     * @param string $title_starts_with title_starts_with
     *
     * @return $this
     */
    public function setTitleStartsWith($title_starts_with)
    {
        $this->container['title_starts_with'] = $title_starts_with;

        return $this;
    }

    /**
     * Gets title_ends_with
     *
     * @return string
     */
    public function getTitleEndsWith()
    {
        return $this->container['title_ends_with'];
    }

    /**
     * Sets title_ends_with
     *
     * @param string $title_ends_with title_ends_with
     *
     * @return $this
     */
    public function setTitleEndsWith($title_ends_with)
    {
        $this->container['title_ends_with'] = $title_ends_with;

        return $this;
    }

    /**
     * Gets title_contains
     *
     * @return string
     */
    public function getTitleContains()
    {
        return $this->container['title_contains'];
    }

    /**
     * Sets title_contains
     *
     * @param string $title_contains title_contains
     *
     * @return $this
     */
    public function setTitleContains($title_contains)
    {
        $this->container['title_contains'] = $title_contains;

        return $this;
    }

    /**
     * Gets title_like
     *
     * @return string
     */
    public function getTitleLike()
    {
        return $this->container['title_like'];
    }

    /**
     * Sets title_like
     *
     * @param string $title_like title_like
     *
     * @return $this
     */
    public function setTitleLike($title_like)
    {
        $this->container['title_like'] = $title_like;

        return $this;
    }

    /**
     * Gets title_between
     *
     * @return string[]
     */
    public function getTitleBetween()
    {
        return $this->container['title_between'];
    }

    /**
     * Sets title_between
     *
     * @param string[] $title_between title_between
     *
     * @return $this
     */
    public function setTitleBetween($title_between)
    {
        $this->container['title_between'] = $title_between;

        return $this;
    }

    /**
     * Gets title_in
     *
     * @return string[]
     */
    public function getTitleIn()
    {
        return $this->container['title_in'];
    }

    /**
     * Sets title_in
     *
     * @param string[] $title_in title_in
     *
     * @return $this
     */
    public function setTitleIn($title_in)
    {
        $this->container['title_in'] = $title_in;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets description_starts_with
     *
     * @return string
     */
    public function getDescriptionStartsWith()
    {
        return $this->container['description_starts_with'];
    }

    /**
     * Sets description_starts_with
     *
     * @param string $description_starts_with description_starts_with
     *
     * @return $this
     */
    public function setDescriptionStartsWith($description_starts_with)
    {
        $this->container['description_starts_with'] = $description_starts_with;

        return $this;
    }

    /**
     * Gets description_ends_with
     *
     * @return string
     */
    public function getDescriptionEndsWith()
    {
        return $this->container['description_ends_with'];
    }

    /**
     * Sets description_ends_with
     *
     * @param string $description_ends_with description_ends_with
     *
     * @return $this
     */
    public function setDescriptionEndsWith($description_ends_with)
    {
        $this->container['description_ends_with'] = $description_ends_with;

        return $this;
    }

    /**
     * Gets description_contains
     *
     * @return string
     */
    public function getDescriptionContains()
    {
        return $this->container['description_contains'];
    }

    /**
     * Sets description_contains
     *
     * @param string $description_contains description_contains
     *
     * @return $this
     */
    public function setDescriptionContains($description_contains)
    {
        $this->container['description_contains'] = $description_contains;

        return $this;
    }

    /**
     * Gets description_like
     *
     * @return string
     */
    public function getDescriptionLike()
    {
        return $this->container['description_like'];
    }

    /**
     * Sets description_like
     *
     * @param string $description_like description_like
     *
     * @return $this
     */
    public function setDescriptionLike($description_like)
    {
        $this->container['description_like'] = $description_like;

        return $this;
    }

    /**
     * Gets description_between
     *
     * @return string[]
     */
    public function getDescriptionBetween()
    {
        return $this->container['description_between'];
    }

    /**
     * Sets description_between
     *
     * @param string[] $description_between description_between
     *
     * @return $this
     */
    public function setDescriptionBetween($description_between)
    {
        $this->container['description_between'] = $description_between;

        return $this;
    }

    /**
     * Gets description_in
     *
     * @return string[]
     */
    public function getDescriptionIn()
    {
        return $this->container['description_in'];
    }

    /**
     * Sets description_in
     *
     * @param string[] $description_in description_in
     *
     * @return $this
     */
    public function setDescriptionIn($description_in)
    {
        $this->container['description_in'] = $description_in;

        return $this;
    }

    /**
     * Gets author
     *
     * @return string
     */
    public function getAuthor()
    {
        return $this->container['author'];
    }

    /**
     * Sets author
     *
     * @param string $author author
     *
     * @return $this
     */
    public function setAuthor($author)
    {
        $this->container['author'] = $author;

        return $this;
    }

    /**
     * Gets author_starts_with
     *
     * @return string
     */
    public function getAuthorStartsWith()
    {
        return $this->container['author_starts_with'];
    }

    /**
     * Sets author_starts_with
     *
     * @param string $author_starts_with author_starts_with
     *
     * @return $this
     */
    public function setAuthorStartsWith($author_starts_with)
    {
        $this->container['author_starts_with'] = $author_starts_with;

        return $this;
    }

    /**
     * Gets author_ends_with
     *
     * @return string
     */
    public function getAuthorEndsWith()
    {
        return $this->container['author_ends_with'];
    }

    /**
     * Sets author_ends_with
     *
     * @param string $author_ends_with author_ends_with
     *
     * @return $this
     */
    public function setAuthorEndsWith($author_ends_with)
    {
        $this->container['author_ends_with'] = $author_ends_with;

        return $this;
    }

    /**
     * Gets author_contains
     *
     * @return string
     */
    public function getAuthorContains()
    {
        return $this->container['author_contains'];
    }

    /**
     * Sets author_contains
     *
     * @param string $author_contains author_contains
     *
     * @return $this
     */
    public function setAuthorContains($author_contains)
    {
        $this->container['author_contains'] = $author_contains;

        return $this;
    }

    /**
     * Gets author_like
     *
     * @return string
     */
    public function getAuthorLike()
    {
        return $this->container['author_like'];
    }

    /**
     * Sets author_like
     *
     * @param string $author_like author_like
     *
     * @return $this
     */
    public function setAuthorLike($author_like)
    {
        $this->container['author_like'] = $author_like;

        return $this;
    }

    /**
     * Gets author_between
     *
     * @return string[]
     */
    public function getAuthorBetween()
    {
        return $this->container['author_between'];
    }

    /**
     * Sets author_between
     *
     * @param string[] $author_between author_between
     *
     * @return $this
     */
    public function setAuthorBetween($author_between)
    {
        $this->container['author_between'] = $author_between;

        return $this;
    }

    /**
     * Gets author_in
     *
     * @return string[]
     */
    public function getAuthorIn()
    {
        return $this->container['author_in'];
    }

    /**
     * Sets author_in
     *
     * @param string[] $author_in author_in
     *
     * @return $this
     */
    public function setAuthorIn($author_in)
    {
        $this->container['author_in'] = $author_in;

        return $this;
    }

    /**
     * Gets sy_report_section_rec_id
     *
     * @return string
     */
    public function getSyReportSectionRecId()
    {
        return $this->container['sy_report_section_rec_id'];
    }

    /**
     * Sets sy_report_section_rec_id
     *
     * @param string $sy_report_section_rec_id sy_report_section_rec_id
     *
     * @return $this
     */
    public function setSyReportSectionRecId($sy_report_section_rec_id)
    {
        $this->container['sy_report_section_rec_id'] = $sy_report_section_rec_id;

        return $this;
    }

    /**
     * Gets sy_report_section_rec_id_starts_with
     *
     * @return string
     */
    public function getSyReportSectionRecIdStartsWith()
    {
        return $this->container['sy_report_section_rec_id_starts_with'];
    }

    /**
     * Sets sy_report_section_rec_id_starts_with
     *
     * @param string $sy_report_section_rec_id_starts_with sy_report_section_rec_id_starts_with
     *
     * @return $this
     */
    public function setSyReportSectionRecIdStartsWith($sy_report_section_rec_id_starts_with)
    {
        $this->container['sy_report_section_rec_id_starts_with'] = $sy_report_section_rec_id_starts_with;

        return $this;
    }

    /**
     * Gets sy_report_section_rec_id_ends_with
     *
     * @return string
     */
    public function getSyReportSectionRecIdEndsWith()
    {
        return $this->container['sy_report_section_rec_id_ends_with'];
    }

    /**
     * Sets sy_report_section_rec_id_ends_with
     *
     * @param string $sy_report_section_rec_id_ends_with sy_report_section_rec_id_ends_with
     *
     * @return $this
     */
    public function setSyReportSectionRecIdEndsWith($sy_report_section_rec_id_ends_with)
    {
        $this->container['sy_report_section_rec_id_ends_with'] = $sy_report_section_rec_id_ends_with;

        return $this;
    }

    /**
     * Gets sy_report_section_rec_id_contains
     *
     * @return string
     */
    public function getSyReportSectionRecIdContains()
    {
        return $this->container['sy_report_section_rec_id_contains'];
    }

    /**
     * Sets sy_report_section_rec_id_contains
     *
     * @param string $sy_report_section_rec_id_contains sy_report_section_rec_id_contains
     *
     * @return $this
     */
    public function setSyReportSectionRecIdContains($sy_report_section_rec_id_contains)
    {
        $this->container['sy_report_section_rec_id_contains'] = $sy_report_section_rec_id_contains;

        return $this;
    }

    /**
     * Gets sy_report_section_rec_id_like
     *
     * @return string
     */
    public function getSyReportSectionRecIdLike()
    {
        return $this->container['sy_report_section_rec_id_like'];
    }

    /**
     * Sets sy_report_section_rec_id_like
     *
     * @param string $sy_report_section_rec_id_like sy_report_section_rec_id_like
     *
     * @return $this
     */
    public function setSyReportSectionRecIdLike($sy_report_section_rec_id_like)
    {
        $this->container['sy_report_section_rec_id_like'] = $sy_report_section_rec_id_like;

        return $this;
    }

    /**
     * Gets sy_report_section_rec_id_between
     *
     * @return string[]
     */
    public function getSyReportSectionRecIdBetween()
    {
        return $this->container['sy_report_section_rec_id_between'];
    }

    /**
     * Sets sy_report_section_rec_id_between
     *
     * @param string[] $sy_report_section_rec_id_between sy_report_section_rec_id_between
     *
     * @return $this
     */
    public function setSyReportSectionRecIdBetween($sy_report_section_rec_id_between)
    {
        $this->container['sy_report_section_rec_id_between'] = $sy_report_section_rec_id_between;

        return $this;
    }

    /**
     * Gets sy_report_section_rec_id_in
     *
     * @return string[]
     */
    public function getSyReportSectionRecIdIn()
    {
        return $this->container['sy_report_section_rec_id_in'];
    }

    /**
     * Sets sy_report_section_rec_id_in
     *
     * @param string[] $sy_report_section_rec_id_in sy_report_section_rec_id_in
     *
     * @return $this
     */
    public function setSyReportSectionRecIdIn($sy_report_section_rec_id_in)
    {
        $this->container['sy_report_section_rec_id_in'] = $sy_report_section_rec_id_in;

        return $this;
    }

    /**
     * Gets report_type
     *
     * @return int
     */
    public function getReportType()
    {
        return $this->container['report_type'];
    }

    /**
     * Sets report_type
     *
     * @param int $report_type report_type
     *
     * @return $this
     */
    public function setReportType($report_type)
    {
        $this->container['report_type'] = $report_type;

        return $this;
    }

    /**
     * Gets report_type_greater_than_or_equal_to
     *
     * @return int
     */
    public function getReportTypeGreaterThanOrEqualTo()
    {
        return $this->container['report_type_greater_than_or_equal_to'];
    }

    /**
     * Sets report_type_greater_than_or_equal_to
     *
     * @param int $report_type_greater_than_or_equal_to report_type_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setReportTypeGreaterThanOrEqualTo($report_type_greater_than_or_equal_to)
    {
        $this->container['report_type_greater_than_or_equal_to'] = $report_type_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets report_type_greater_than
     *
     * @return int
     */
    public function getReportTypeGreaterThan()
    {
        return $this->container['report_type_greater_than'];
    }

    /**
     * Sets report_type_greater_than
     *
     * @param int $report_type_greater_than report_type_greater_than
     *
     * @return $this
     */
    public function setReportTypeGreaterThan($report_type_greater_than)
    {
        $this->container['report_type_greater_than'] = $report_type_greater_than;

        return $this;
    }

    /**
     * Gets report_type_less_than
     *
     * @return int
     */
    public function getReportTypeLessThan()
    {
        return $this->container['report_type_less_than'];
    }

    /**
     * Sets report_type_less_than
     *
     * @param int $report_type_less_than report_type_less_than
     *
     * @return $this
     */
    public function setReportTypeLessThan($report_type_less_than)
    {
        $this->container['report_type_less_than'] = $report_type_less_than;

        return $this;
    }

    /**
     * Gets report_type_less_than_or_equal_to
     *
     * @return int
     */
    public function getReportTypeLessThanOrEqualTo()
    {
        return $this->container['report_type_less_than_or_equal_to'];
    }

    /**
     * Sets report_type_less_than_or_equal_to
     *
     * @param int $report_type_less_than_or_equal_to report_type_less_than_or_equal_to
     *
     * @return $this
     */
    public function setReportTypeLessThanOrEqualTo($report_type_less_than_or_equal_to)
    {
        $this->container['report_type_less_than_or_equal_to'] = $report_type_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets report_type_not_equal_to
     *
     * @return int
     */
    public function getReportTypeNotEqualTo()
    {
        return $this->container['report_type_not_equal_to'];
    }

    /**
     * Sets report_type_not_equal_to
     *
     * @param int $report_type_not_equal_to report_type_not_equal_to
     *
     * @return $this
     */
    public function setReportTypeNotEqualTo($report_type_not_equal_to)
    {
        $this->container['report_type_not_equal_to'] = $report_type_not_equal_to;

        return $this;
    }

    /**
     * Gets report_type_between
     *
     * @return string
     */
    public function getReportTypeBetween()
    {
        return $this->container['report_type_between'];
    }

    /**
     * Sets report_type_between
     *
     * @param string $report_type_between report_type_between
     *
     * @return $this
     */
    public function setReportTypeBetween($report_type_between)
    {

        if (!is_null($report_type_between) && (!preg_match("/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/", $report_type_between))) {
            throw new \InvalidArgumentException("invalid value for $report_type_between when calling SYReportQuery., must conform to the pattern /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.");
        }

        $this->container['report_type_between'] = $report_type_between;

        return $this;
    }

    /**
     * Gets report_type_in
     *
     * @return string
     */
    public function getReportTypeIn()
    {
        return $this->container['report_type_in'];
    }

    /**
     * Sets report_type_in
     *
     * @param string $report_type_in report_type_in
     *
     * @return $this
     */
    public function setReportTypeIn($report_type_in)
    {

        if (!is_null($report_type_in) && (!preg_match("/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/", $report_type_in))) {
            throw new \InvalidArgumentException("invalid value for $report_type_in when calling SYReportQuery., must conform to the pattern /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.");
        }

        $this->container['report_type_in'] = $report_type_in;

        return $this;
    }

    /**
     * Gets is_enabled
     *
     * @return bool
     */
    public function getIsEnabled()
    {
        return $this->container['is_enabled'];
    }

    /**
     * Sets is_enabled
     *
     * @param bool $is_enabled is_enabled
     *
     * @return $this
     */
    public function setIsEnabled($is_enabled)
    {
        $this->container['is_enabled'] = $is_enabled;

        return $this;
    }

    /**
     * Gets file_binary
     *
     * @return string
     */
    public function getFileBinary()
    {
        return $this->container['file_binary'];
    }

    /**
     * Sets file_binary
     *
     * @param string $file_binary file_binary
     *
     * @return $this
     */
    public function setFileBinary($file_binary)
    {

        if (!is_null($file_binary) && (!preg_match("/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/", $file_binary))) {
            throw new \InvalidArgumentException("invalid value for $file_binary when calling SYReportQuery., must conform to the pattern /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.");
        }

        $this->container['file_binary'] = $file_binary;

        return $this;
    }

    /**
     * Gets file_hash
     *
     * @return string
     */
    public function getFileHash()
    {
        return $this->container['file_hash'];
    }

    /**
     * Sets file_hash
     *
     * @param string $file_hash file_hash
     *
     * @return $this
     */
    public function setFileHash($file_hash)
    {
        $this->container['file_hash'] = $file_hash;

        return $this;
    }

    /**
     * Gets file_hash_starts_with
     *
     * @return string
     */
    public function getFileHashStartsWith()
    {
        return $this->container['file_hash_starts_with'];
    }

    /**
     * Sets file_hash_starts_with
     *
     * @param string $file_hash_starts_with file_hash_starts_with
     *
     * @return $this
     */
    public function setFileHashStartsWith($file_hash_starts_with)
    {
        $this->container['file_hash_starts_with'] = $file_hash_starts_with;

        return $this;
    }

    /**
     * Gets file_hash_ends_with
     *
     * @return string
     */
    public function getFileHashEndsWith()
    {
        return $this->container['file_hash_ends_with'];
    }

    /**
     * Sets file_hash_ends_with
     *
     * @param string $file_hash_ends_with file_hash_ends_with
     *
     * @return $this
     */
    public function setFileHashEndsWith($file_hash_ends_with)
    {
        $this->container['file_hash_ends_with'] = $file_hash_ends_with;

        return $this;
    }

    /**
     * Gets file_hash_contains
     *
     * @return string
     */
    public function getFileHashContains()
    {
        return $this->container['file_hash_contains'];
    }

    /**
     * Sets file_hash_contains
     *
     * @param string $file_hash_contains file_hash_contains
     *
     * @return $this
     */
    public function setFileHashContains($file_hash_contains)
    {
        $this->container['file_hash_contains'] = $file_hash_contains;

        return $this;
    }

    /**
     * Gets file_hash_like
     *
     * @return string
     */
    public function getFileHashLike()
    {
        return $this->container['file_hash_like'];
    }

    /**
     * Sets file_hash_like
     *
     * @param string $file_hash_like file_hash_like
     *
     * @return $this
     */
    public function setFileHashLike($file_hash_like)
    {
        $this->container['file_hash_like'] = $file_hash_like;

        return $this;
    }

    /**
     * Gets file_hash_between
     *
     * @return string[]
     */
    public function getFileHashBetween()
    {
        return $this->container['file_hash_between'];
    }

    /**
     * Sets file_hash_between
     *
     * @param string[] $file_hash_between file_hash_between
     *
     * @return $this
     */
    public function setFileHashBetween($file_hash_between)
    {
        $this->container['file_hash_between'] = $file_hash_between;

        return $this;
    }

    /**
     * Gets file_hash_in
     *
     * @return string[]
     */
    public function getFileHashIn()
    {
        return $this->container['file_hash_in'];
    }

    /**
     * Sets file_hash_in
     *
     * @param string[] $file_hash_in file_hash_in
     *
     * @return $this
     */
    public function setFileHashIn($file_hash_in)
    {
        $this->container['file_hash_in'] = $file_hash_in;

        return $this;
    }

    /**
     * Gets comment
     *
     * @return string
     */
    public function getComment()
    {
        return $this->container['comment'];
    }

    /**
     * Sets comment
     *
     * @param string $comment comment
     *
     * @return $this
     */
    public function setComment($comment)
    {
        $this->container['comment'] = $comment;

        return $this;
    }

    /**
     * Gets comment_starts_with
     *
     * @return string
     */
    public function getCommentStartsWith()
    {
        return $this->container['comment_starts_with'];
    }

    /**
     * Sets comment_starts_with
     *
     * @param string $comment_starts_with comment_starts_with
     *
     * @return $this
     */
    public function setCommentStartsWith($comment_starts_with)
    {
        $this->container['comment_starts_with'] = $comment_starts_with;

        return $this;
    }

    /**
     * Gets comment_ends_with
     *
     * @return string
     */
    public function getCommentEndsWith()
    {
        return $this->container['comment_ends_with'];
    }

    /**
     * Sets comment_ends_with
     *
     * @param string $comment_ends_with comment_ends_with
     *
     * @return $this
     */
    public function setCommentEndsWith($comment_ends_with)
    {
        $this->container['comment_ends_with'] = $comment_ends_with;

        return $this;
    }

    /**
     * Gets comment_contains
     *
     * @return string
     */
    public function getCommentContains()
    {
        return $this->container['comment_contains'];
    }

    /**
     * Sets comment_contains
     *
     * @param string $comment_contains comment_contains
     *
     * @return $this
     */
    public function setCommentContains($comment_contains)
    {
        $this->container['comment_contains'] = $comment_contains;

        return $this;
    }

    /**
     * Gets comment_like
     *
     * @return string
     */
    public function getCommentLike()
    {
        return $this->container['comment_like'];
    }

    /**
     * Sets comment_like
     *
     * @param string $comment_like comment_like
     *
     * @return $this
     */
    public function setCommentLike($comment_like)
    {
        $this->container['comment_like'] = $comment_like;

        return $this;
    }

    /**
     * Gets comment_between
     *
     * @return string[]
     */
    public function getCommentBetween()
    {
        return $this->container['comment_between'];
    }

    /**
     * Sets comment_between
     *
     * @param string[] $comment_between comment_between
     *
     * @return $this
     */
    public function setCommentBetween($comment_between)
    {
        $this->container['comment_between'] = $comment_between;

        return $this;
    }

    /**
     * Gets comment_in
     *
     * @return string[]
     */
    public function getCommentIn()
    {
        return $this->container['comment_in'];
    }

    /**
     * Sets comment_in
     *
     * @param string[] $comment_in comment_in
     *
     * @return $this
     */
    public function setCommentIn($comment_in)
    {
        $this->container['comment_in'] = $comment_in;

        return $this;
    }

    /**
     * Gets item_no
     *
     * @return int
     */
    public function getItemNo()
    {
        return $this->container['item_no'];
    }

    /**
     * Sets item_no
     *
     * @param int $item_no item_no
     *
     * @return $this
     */
    public function setItemNo($item_no)
    {
        $this->container['item_no'] = $item_no;

        return $this;
    }

    /**
     * Gets item_no_greater_than_or_equal_to
     *
     * @return int
     */
    public function getItemNoGreaterThanOrEqualTo()
    {
        return $this->container['item_no_greater_than_or_equal_to'];
    }

    /**
     * Sets item_no_greater_than_or_equal_to
     *
     * @param int $item_no_greater_than_or_equal_to item_no_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setItemNoGreaterThanOrEqualTo($item_no_greater_than_or_equal_to)
    {
        $this->container['item_no_greater_than_or_equal_to'] = $item_no_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets item_no_greater_than
     *
     * @return int
     */
    public function getItemNoGreaterThan()
    {
        return $this->container['item_no_greater_than'];
    }

    /**
     * Sets item_no_greater_than
     *
     * @param int $item_no_greater_than item_no_greater_than
     *
     * @return $this
     */
    public function setItemNoGreaterThan($item_no_greater_than)
    {
        $this->container['item_no_greater_than'] = $item_no_greater_than;

        return $this;
    }

    /**
     * Gets item_no_less_than
     *
     * @return int
     */
    public function getItemNoLessThan()
    {
        return $this->container['item_no_less_than'];
    }

    /**
     * Sets item_no_less_than
     *
     * @param int $item_no_less_than item_no_less_than
     *
     * @return $this
     */
    public function setItemNoLessThan($item_no_less_than)
    {
        $this->container['item_no_less_than'] = $item_no_less_than;

        return $this;
    }

    /**
     * Gets item_no_less_than_or_equal_to
     *
     * @return int
     */
    public function getItemNoLessThanOrEqualTo()
    {
        return $this->container['item_no_less_than_or_equal_to'];
    }

    /**
     * Sets item_no_less_than_or_equal_to
     *
     * @param int $item_no_less_than_or_equal_to item_no_less_than_or_equal_to
     *
     * @return $this
     */
    public function setItemNoLessThanOrEqualTo($item_no_less_than_or_equal_to)
    {
        $this->container['item_no_less_than_or_equal_to'] = $item_no_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets item_no_not_equal_to
     *
     * @return int
     */
    public function getItemNoNotEqualTo()
    {
        return $this->container['item_no_not_equal_to'];
    }

    /**
     * Sets item_no_not_equal_to
     *
     * @param int $item_no_not_equal_to item_no_not_equal_to
     *
     * @return $this
     */
    public function setItemNoNotEqualTo($item_no_not_equal_to)
    {
        $this->container['item_no_not_equal_to'] = $item_no_not_equal_to;

        return $this;
    }

    /**
     * Gets item_no_between
     *
     * @return int[]
     */
    public function getItemNoBetween()
    {
        return $this->container['item_no_between'];
    }

    /**
     * Sets item_no_between
     *
     * @param int[] $item_no_between item_no_between
     *
     * @return $this
     */
    public function setItemNoBetween($item_no_between)
    {
        $this->container['item_no_between'] = $item_no_between;

        return $this;
    }

    /**
     * Gets item_no_in
     *
     * @return int[]
     */
    public function getItemNoIn()
    {
        return $this->container['item_no_in'];
    }

    /**
     * Sets item_no_in
     *
     * @param int[] $item_no_in item_no_in
     *
     * @return $this
     */
    public function setItemNoIn($item_no_in)
    {
        $this->container['item_no_in'] = $item_no_in;

        return $this;
    }

    /**
     * Gets last_saved_date_time
     *
     * @return \DateTime
     */
    public function getLastSavedDateTime()
    {
        return $this->container['last_saved_date_time'];
    }

    /**
     * Sets last_saved_date_time
     *
     * @param \DateTime $last_saved_date_time last_saved_date_time
     *
     * @return $this
     */
    public function setLastSavedDateTime($last_saved_date_time)
    {
        $this->container['last_saved_date_time'] = $last_saved_date_time;

        return $this;
    }

    /**
     * Gets last_saved_date_time_greater_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeGreaterThanOrEqualTo()
    {
        return $this->container['last_saved_date_time_greater_than_or_equal_to'];
    }

    /**
     * Sets last_saved_date_time_greater_than_or_equal_to
     *
     * @param \DateTime $last_saved_date_time_greater_than_or_equal_to last_saved_date_time_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeGreaterThanOrEqualTo($last_saved_date_time_greater_than_or_equal_to)
    {
        $this->container['last_saved_date_time_greater_than_or_equal_to'] = $last_saved_date_time_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_greater_than
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeGreaterThan()
    {
        return $this->container['last_saved_date_time_greater_than'];
    }

    /**
     * Sets last_saved_date_time_greater_than
     *
     * @param \DateTime $last_saved_date_time_greater_than last_saved_date_time_greater_than
     *
     * @return $this
     */
    public function setLastSavedDateTimeGreaterThan($last_saved_date_time_greater_than)
    {
        $this->container['last_saved_date_time_greater_than'] = $last_saved_date_time_greater_than;

        return $this;
    }

    /**
     * Gets last_saved_date_time_less_than
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeLessThan()
    {
        return $this->container['last_saved_date_time_less_than'];
    }

    /**
     * Sets last_saved_date_time_less_than
     *
     * @param \DateTime $last_saved_date_time_less_than last_saved_date_time_less_than
     *
     * @return $this
     */
    public function setLastSavedDateTimeLessThan($last_saved_date_time_less_than)
    {
        $this->container['last_saved_date_time_less_than'] = $last_saved_date_time_less_than;

        return $this;
    }

    /**
     * Gets last_saved_date_time_less_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeLessThanOrEqualTo()
    {
        return $this->container['last_saved_date_time_less_than_or_equal_to'];
    }

    /**
     * Sets last_saved_date_time_less_than_or_equal_to
     *
     * @param \DateTime $last_saved_date_time_less_than_or_equal_to last_saved_date_time_less_than_or_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeLessThanOrEqualTo($last_saved_date_time_less_than_or_equal_to)
    {
        $this->container['last_saved_date_time_less_than_or_equal_to'] = $last_saved_date_time_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_not_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeNotEqualTo()
    {
        return $this->container['last_saved_date_time_not_equal_to'];
    }

    /**
     * Sets last_saved_date_time_not_equal_to
     *
     * @param \DateTime $last_saved_date_time_not_equal_to last_saved_date_time_not_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeNotEqualTo($last_saved_date_time_not_equal_to)
    {
        $this->container['last_saved_date_time_not_equal_to'] = $last_saved_date_time_not_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_between
     *
     * @return \DateTime[]
     */
    public function getLastSavedDateTimeBetween()
    {
        return $this->container['last_saved_date_time_between'];
    }

    /**
     * Sets last_saved_date_time_between
     *
     * @param \DateTime[] $last_saved_date_time_between last_saved_date_time_between
     *
     * @return $this
     */
    public function setLastSavedDateTimeBetween($last_saved_date_time_between)
    {
        $this->container['last_saved_date_time_between'] = $last_saved_date_time_between;

        return $this;
    }

    /**
     * Gets last_saved_date_time_in
     *
     * @return \DateTime[]
     */
    public function getLastSavedDateTimeIn()
    {
        return $this->container['last_saved_date_time_in'];
    }

    /**
     * Sets last_saved_date_time_in
     *
     * @param \DateTime[] $last_saved_date_time_in last_saved_date_time_in
     *
     * @return $this
     */
    public function setLastSavedDateTimeIn($last_saved_date_time_in)
    {
        $this->container['last_saved_date_time_in'] = $last_saved_date_time_in;

        return $this;
    }

    /**
     * Gets row_hash
     *
     * @return string
     */
    public function getRowHash()
    {
        return $this->container['row_hash'];
    }

    /**
     * Sets row_hash
     *
     * @param string $row_hash row_hash
     *
     * @return $this
     */
    public function setRowHash($row_hash)
    {

        if (!is_null($row_hash) && (!preg_match("/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/", $row_hash))) {
            throw new \InvalidArgumentException("invalid value for $row_hash when calling SYReportQuery., must conform to the pattern /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.");
        }

        $this->container['row_hash'] = $row_hash;

        return $this;
    }

    /**
     * Gets is_read_only
     *
     * @return bool
     */
    public function getIsReadOnly()
    {
        return $this->container['is_read_only'];
    }

    /**
     * Sets is_read_only
     *
     * @param bool $is_read_only is_read_only
     *
     * @return $this
     */
    public function setIsReadOnly($is_read_only)
    {
        $this->container['is_read_only'] = $is_read_only;

        return $this;
    }

    /**
     * Gets skip
     *
     * @return int
     */
    public function getSkip()
    {
        return $this->container['skip'];
    }

    /**
     * Sets skip
     *
     * @param int $skip skip
     *
     * @return $this
     */
    public function setSkip($skip)
    {
        $this->container['skip'] = $skip;

        return $this;
    }

    /**
     * Gets take
     *
     * @return int
     */
    public function getTake()
    {
        return $this->container['take'];
    }

    /**
     * Sets take
     *
     * @param int $take take
     *
     * @return $this
     */
    public function setTake($take)
    {
        $this->container['take'] = $take;

        return $this;
    }

    /**
     * Gets order_by
     *
     * @return string
     */
    public function getOrderBy()
    {
        return $this->container['order_by'];
    }

    /**
     * Sets order_by
     *
     * @param string $order_by order_by
     *
     * @return $this
     */
    public function setOrderBy($order_by)
    {
        $this->container['order_by'] = $order_by;

        return $this;
    }

    /**
     * Gets order_by_desc
     *
     * @return string
     */
    public function getOrderByDesc()
    {
        return $this->container['order_by_desc'];
    }

    /**
     * Sets order_by_desc
     *
     * @param string $order_by_desc order_by_desc
     *
     * @return $this
     */
    public function setOrderByDesc($order_by_desc)
    {
        $this->container['order_by_desc'] = $order_by_desc;

        return $this;
    }

    /**
     * Gets include
     *
     * @return string
     */
    public function getInclude()
    {
        return $this->container['include'];
    }

    /**
     * Sets include
     *
     * @param string $include include
     *
     * @return $this
     */
    public function setInclude($include)
    {
        $this->container['include'] = $include;

        return $this;
    }

    /**
     * Gets fields
     *
     * @return string
     */
    public function getFields()
    {
        return $this->container['fields'];
    }

    /**
     * Sets fields
     *
     * @param string $fields fields
     *
     * @return $this
     */
    public function setFields($fields)
    {
        $this->container['fields'] = $fields;

        return $this;
    }

    /**
     * Gets meta
     *
     * @return \Jiwa\JiwaModel\DictionaryStringString_
     */
    public function getMeta()
    {
        return $this->container['meta'];
    }

    /**
     * Sets meta
     *
     * @param \Jiwa\JiwaModel\DictionaryStringString_ $meta meta
     *
     * @return $this
     */
    public function setMeta($meta)
    {
        $this->container['meta'] = $meta;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


