<?php
/**
 * FRCarriersQuery
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Jiwa\JiwaModel;

use \ArrayAccess;
use \Jiwa\ObjectSerializer;

/**
 * FRCarriersQuery Class Doc Comment
 *
 * @category Class
 * @description FR_CarriersQuery
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class FRCarriersQuery implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'FR_CarriersQuery';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'rec_id' => 'string',
        'rec_id_starts_with' => 'string',
        'rec_id_ends_with' => 'string',
        'rec_id_contains' => 'string',
        'rec_id_like' => 'string',
        'rec_id_between' => 'string[]',
        'rec_id_in' => 'string[]',
        'carrier_name' => 'string',
        'carrier_name_starts_with' => 'string',
        'carrier_name_ends_with' => 'string',
        'carrier_name_contains' => 'string',
        'carrier_name_like' => 'string',
        'carrier_name_between' => 'string[]',
        'carrier_name_in' => 'string[]',
        'carrier_enabled' => 'bool',
        'last_saved_date_time' => '\DateTime',
        'last_saved_date_time_greater_than_or_equal_to' => '\DateTime',
        'last_saved_date_time_greater_than' => '\DateTime',
        'last_saved_date_time_less_than' => '\DateTime',
        'last_saved_date_time_less_than_or_equal_to' => '\DateTime',
        'last_saved_date_time_not_equal_to' => '\DateTime',
        'last_saved_date_time_between' => '\DateTime[]',
        'last_saved_date_time_in' => '\DateTime[]',
        'notes' => 'string',
        'notes_starts_with' => 'string',
        'notes_ends_with' => 'string',
        'notes_contains' => 'string',
        'notes_like' => 'string',
        'notes_between' => 'string[]',
        'notes_in' => 'string[]',
        'account_no' => 'string',
        'account_no_starts_with' => 'string',
        'account_no_ends_with' => 'string',
        'account_no_contains' => 'string',
        'account_no_like' => 'string',
        'account_no_between' => 'string[]',
        'account_no_in' => 'string[]',
        'skip' => 'int',
        'take' => 'int',
        'order_by' => 'string',
        'order_by_desc' => 'string',
        'include' => 'string',
        'fields' => 'string',
        'meta' => '\Jiwa\JiwaModel\DictionaryStringString_'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'rec_id' => null,
        'rec_id_starts_with' => null,
        'rec_id_ends_with' => null,
        'rec_id_contains' => null,
        'rec_id_like' => null,
        'rec_id_between' => null,
        'rec_id_in' => null,
        'carrier_name' => null,
        'carrier_name_starts_with' => null,
        'carrier_name_ends_with' => null,
        'carrier_name_contains' => null,
        'carrier_name_like' => null,
        'carrier_name_between' => null,
        'carrier_name_in' => null,
        'carrier_enabled' => null,
        'last_saved_date_time' => 'date-time',
        'last_saved_date_time_greater_than_or_equal_to' => 'date-time',
        'last_saved_date_time_greater_than' => 'date-time',
        'last_saved_date_time_less_than' => 'date-time',
        'last_saved_date_time_less_than_or_equal_to' => 'date-time',
        'last_saved_date_time_not_equal_to' => 'date-time',
        'last_saved_date_time_between' => 'date-time',
        'last_saved_date_time_in' => 'date-time',
        'notes' => null,
        'notes_starts_with' => null,
        'notes_ends_with' => null,
        'notes_contains' => null,
        'notes_like' => null,
        'notes_between' => null,
        'notes_in' => null,
        'account_no' => null,
        'account_no_starts_with' => null,
        'account_no_ends_with' => null,
        'account_no_contains' => null,
        'account_no_like' => null,
        'account_no_between' => null,
        'account_no_in' => null,
        'skip' => 'int32',
        'take' => 'int32',
        'order_by' => null,
        'order_by_desc' => null,
        'include' => null,
        'fields' => null,
        'meta' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'rec_id' => 'RecID',
        'rec_id_starts_with' => 'RecIDStartsWith',
        'rec_id_ends_with' => 'RecIDEndsWith',
        'rec_id_contains' => 'RecIDContains',
        'rec_id_like' => 'RecIDLike',
        'rec_id_between' => 'RecIDBetween',
        'rec_id_in' => 'RecIDIn',
        'carrier_name' => 'CarrierName',
        'carrier_name_starts_with' => 'CarrierNameStartsWith',
        'carrier_name_ends_with' => 'CarrierNameEndsWith',
        'carrier_name_contains' => 'CarrierNameContains',
        'carrier_name_like' => 'CarrierNameLike',
        'carrier_name_between' => 'CarrierNameBetween',
        'carrier_name_in' => 'CarrierNameIn',
        'carrier_enabled' => 'CarrierEnabled',
        'last_saved_date_time' => 'LastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'LastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'LastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'LastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'LastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'LastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'LastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'LastSavedDateTimeIn',
        'notes' => 'Notes',
        'notes_starts_with' => 'NotesStartsWith',
        'notes_ends_with' => 'NotesEndsWith',
        'notes_contains' => 'NotesContains',
        'notes_like' => 'NotesLike',
        'notes_between' => 'NotesBetween',
        'notes_in' => 'NotesIn',
        'account_no' => 'AccountNo',
        'account_no_starts_with' => 'AccountNoStartsWith',
        'account_no_ends_with' => 'AccountNoEndsWith',
        'account_no_contains' => 'AccountNoContains',
        'account_no_like' => 'AccountNoLike',
        'account_no_between' => 'AccountNoBetween',
        'account_no_in' => 'AccountNoIn',
        'skip' => 'Skip',
        'take' => 'Take',
        'order_by' => 'OrderBy',
        'order_by_desc' => 'OrderByDesc',
        'include' => 'Include',
        'fields' => 'Fields',
        'meta' => 'Meta'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'rec_id' => 'setRecId',
        'rec_id_starts_with' => 'setRecIdStartsWith',
        'rec_id_ends_with' => 'setRecIdEndsWith',
        'rec_id_contains' => 'setRecIdContains',
        'rec_id_like' => 'setRecIdLike',
        'rec_id_between' => 'setRecIdBetween',
        'rec_id_in' => 'setRecIdIn',
        'carrier_name' => 'setCarrierName',
        'carrier_name_starts_with' => 'setCarrierNameStartsWith',
        'carrier_name_ends_with' => 'setCarrierNameEndsWith',
        'carrier_name_contains' => 'setCarrierNameContains',
        'carrier_name_like' => 'setCarrierNameLike',
        'carrier_name_between' => 'setCarrierNameBetween',
        'carrier_name_in' => 'setCarrierNameIn',
        'carrier_enabled' => 'setCarrierEnabled',
        'last_saved_date_time' => 'setLastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'setLastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'setLastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'setLastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'setLastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'setLastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'setLastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'setLastSavedDateTimeIn',
        'notes' => 'setNotes',
        'notes_starts_with' => 'setNotesStartsWith',
        'notes_ends_with' => 'setNotesEndsWith',
        'notes_contains' => 'setNotesContains',
        'notes_like' => 'setNotesLike',
        'notes_between' => 'setNotesBetween',
        'notes_in' => 'setNotesIn',
        'account_no' => 'setAccountNo',
        'account_no_starts_with' => 'setAccountNoStartsWith',
        'account_no_ends_with' => 'setAccountNoEndsWith',
        'account_no_contains' => 'setAccountNoContains',
        'account_no_like' => 'setAccountNoLike',
        'account_no_between' => 'setAccountNoBetween',
        'account_no_in' => 'setAccountNoIn',
        'skip' => 'setSkip',
        'take' => 'setTake',
        'order_by' => 'setOrderBy',
        'order_by_desc' => 'setOrderByDesc',
        'include' => 'setInclude',
        'fields' => 'setFields',
        'meta' => 'setMeta'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'rec_id' => 'getRecId',
        'rec_id_starts_with' => 'getRecIdStartsWith',
        'rec_id_ends_with' => 'getRecIdEndsWith',
        'rec_id_contains' => 'getRecIdContains',
        'rec_id_like' => 'getRecIdLike',
        'rec_id_between' => 'getRecIdBetween',
        'rec_id_in' => 'getRecIdIn',
        'carrier_name' => 'getCarrierName',
        'carrier_name_starts_with' => 'getCarrierNameStartsWith',
        'carrier_name_ends_with' => 'getCarrierNameEndsWith',
        'carrier_name_contains' => 'getCarrierNameContains',
        'carrier_name_like' => 'getCarrierNameLike',
        'carrier_name_between' => 'getCarrierNameBetween',
        'carrier_name_in' => 'getCarrierNameIn',
        'carrier_enabled' => 'getCarrierEnabled',
        'last_saved_date_time' => 'getLastSavedDateTime',
        'last_saved_date_time_greater_than_or_equal_to' => 'getLastSavedDateTimeGreaterThanOrEqualTo',
        'last_saved_date_time_greater_than' => 'getLastSavedDateTimeGreaterThan',
        'last_saved_date_time_less_than' => 'getLastSavedDateTimeLessThan',
        'last_saved_date_time_less_than_or_equal_to' => 'getLastSavedDateTimeLessThanOrEqualTo',
        'last_saved_date_time_not_equal_to' => 'getLastSavedDateTimeNotEqualTo',
        'last_saved_date_time_between' => 'getLastSavedDateTimeBetween',
        'last_saved_date_time_in' => 'getLastSavedDateTimeIn',
        'notes' => 'getNotes',
        'notes_starts_with' => 'getNotesStartsWith',
        'notes_ends_with' => 'getNotesEndsWith',
        'notes_contains' => 'getNotesContains',
        'notes_like' => 'getNotesLike',
        'notes_between' => 'getNotesBetween',
        'notes_in' => 'getNotesIn',
        'account_no' => 'getAccountNo',
        'account_no_starts_with' => 'getAccountNoStartsWith',
        'account_no_ends_with' => 'getAccountNoEndsWith',
        'account_no_contains' => 'getAccountNoContains',
        'account_no_like' => 'getAccountNoLike',
        'account_no_between' => 'getAccountNoBetween',
        'account_no_in' => 'getAccountNoIn',
        'skip' => 'getSkip',
        'take' => 'getTake',
        'order_by' => 'getOrderBy',
        'order_by_desc' => 'getOrderByDesc',
        'include' => 'getInclude',
        'fields' => 'getFields',
        'meta' => 'getMeta'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['rec_id'] = isset($data['rec_id']) ? $data['rec_id'] : null;
        $this->container['rec_id_starts_with'] = isset($data['rec_id_starts_with']) ? $data['rec_id_starts_with'] : null;
        $this->container['rec_id_ends_with'] = isset($data['rec_id_ends_with']) ? $data['rec_id_ends_with'] : null;
        $this->container['rec_id_contains'] = isset($data['rec_id_contains']) ? $data['rec_id_contains'] : null;
        $this->container['rec_id_like'] = isset($data['rec_id_like']) ? $data['rec_id_like'] : null;
        $this->container['rec_id_between'] = isset($data['rec_id_between']) ? $data['rec_id_between'] : null;
        $this->container['rec_id_in'] = isset($data['rec_id_in']) ? $data['rec_id_in'] : null;
        $this->container['carrier_name'] = isset($data['carrier_name']) ? $data['carrier_name'] : null;
        $this->container['carrier_name_starts_with'] = isset($data['carrier_name_starts_with']) ? $data['carrier_name_starts_with'] : null;
        $this->container['carrier_name_ends_with'] = isset($data['carrier_name_ends_with']) ? $data['carrier_name_ends_with'] : null;
        $this->container['carrier_name_contains'] = isset($data['carrier_name_contains']) ? $data['carrier_name_contains'] : null;
        $this->container['carrier_name_like'] = isset($data['carrier_name_like']) ? $data['carrier_name_like'] : null;
        $this->container['carrier_name_between'] = isset($data['carrier_name_between']) ? $data['carrier_name_between'] : null;
        $this->container['carrier_name_in'] = isset($data['carrier_name_in']) ? $data['carrier_name_in'] : null;
        $this->container['carrier_enabled'] = isset($data['carrier_enabled']) ? $data['carrier_enabled'] : null;
        $this->container['last_saved_date_time'] = isset($data['last_saved_date_time']) ? $data['last_saved_date_time'] : null;
        $this->container['last_saved_date_time_greater_than_or_equal_to'] = isset($data['last_saved_date_time_greater_than_or_equal_to']) ? $data['last_saved_date_time_greater_than_or_equal_to'] : null;
        $this->container['last_saved_date_time_greater_than'] = isset($data['last_saved_date_time_greater_than']) ? $data['last_saved_date_time_greater_than'] : null;
        $this->container['last_saved_date_time_less_than'] = isset($data['last_saved_date_time_less_than']) ? $data['last_saved_date_time_less_than'] : null;
        $this->container['last_saved_date_time_less_than_or_equal_to'] = isset($data['last_saved_date_time_less_than_or_equal_to']) ? $data['last_saved_date_time_less_than_or_equal_to'] : null;
        $this->container['last_saved_date_time_not_equal_to'] = isset($data['last_saved_date_time_not_equal_to']) ? $data['last_saved_date_time_not_equal_to'] : null;
        $this->container['last_saved_date_time_between'] = isset($data['last_saved_date_time_between']) ? $data['last_saved_date_time_between'] : null;
        $this->container['last_saved_date_time_in'] = isset($data['last_saved_date_time_in']) ? $data['last_saved_date_time_in'] : null;
        $this->container['notes'] = isset($data['notes']) ? $data['notes'] : null;
        $this->container['notes_starts_with'] = isset($data['notes_starts_with']) ? $data['notes_starts_with'] : null;
        $this->container['notes_ends_with'] = isset($data['notes_ends_with']) ? $data['notes_ends_with'] : null;
        $this->container['notes_contains'] = isset($data['notes_contains']) ? $data['notes_contains'] : null;
        $this->container['notes_like'] = isset($data['notes_like']) ? $data['notes_like'] : null;
        $this->container['notes_between'] = isset($data['notes_between']) ? $data['notes_between'] : null;
        $this->container['notes_in'] = isset($data['notes_in']) ? $data['notes_in'] : null;
        $this->container['account_no'] = isset($data['account_no']) ? $data['account_no'] : null;
        $this->container['account_no_starts_with'] = isset($data['account_no_starts_with']) ? $data['account_no_starts_with'] : null;
        $this->container['account_no_ends_with'] = isset($data['account_no_ends_with']) ? $data['account_no_ends_with'] : null;
        $this->container['account_no_contains'] = isset($data['account_no_contains']) ? $data['account_no_contains'] : null;
        $this->container['account_no_like'] = isset($data['account_no_like']) ? $data['account_no_like'] : null;
        $this->container['account_no_between'] = isset($data['account_no_between']) ? $data['account_no_between'] : null;
        $this->container['account_no_in'] = isset($data['account_no_in']) ? $data['account_no_in'] : null;
        $this->container['skip'] = isset($data['skip']) ? $data['skip'] : null;
        $this->container['take'] = isset($data['take']) ? $data['take'] : null;
        $this->container['order_by'] = isset($data['order_by']) ? $data['order_by'] : null;
        $this->container['order_by_desc'] = isset($data['order_by_desc']) ? $data['order_by_desc'] : null;
        $this->container['include'] = isset($data['include']) ? $data['include'] : null;
        $this->container['fields'] = isset($data['fields']) ? $data['fields'] : null;
        $this->container['meta'] = isset($data['meta']) ? $data['meta'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets rec_id
     *
     * @return string
     */
    public function getRecId()
    {
        return $this->container['rec_id'];
    }

    /**
     * Sets rec_id
     *
     * @param string $rec_id rec_id
     *
     * @return $this
     */
    public function setRecId($rec_id)
    {
        $this->container['rec_id'] = $rec_id;

        return $this;
    }

    /**
     * Gets rec_id_starts_with
     *
     * @return string
     */
    public function getRecIdStartsWith()
    {
        return $this->container['rec_id_starts_with'];
    }

    /**
     * Sets rec_id_starts_with
     *
     * @param string $rec_id_starts_with rec_id_starts_with
     *
     * @return $this
     */
    public function setRecIdStartsWith($rec_id_starts_with)
    {
        $this->container['rec_id_starts_with'] = $rec_id_starts_with;

        return $this;
    }

    /**
     * Gets rec_id_ends_with
     *
     * @return string
     */
    public function getRecIdEndsWith()
    {
        return $this->container['rec_id_ends_with'];
    }

    /**
     * Sets rec_id_ends_with
     *
     * @param string $rec_id_ends_with rec_id_ends_with
     *
     * @return $this
     */
    public function setRecIdEndsWith($rec_id_ends_with)
    {
        $this->container['rec_id_ends_with'] = $rec_id_ends_with;

        return $this;
    }

    /**
     * Gets rec_id_contains
     *
     * @return string
     */
    public function getRecIdContains()
    {
        return $this->container['rec_id_contains'];
    }

    /**
     * Sets rec_id_contains
     *
     * @param string $rec_id_contains rec_id_contains
     *
     * @return $this
     */
    public function setRecIdContains($rec_id_contains)
    {
        $this->container['rec_id_contains'] = $rec_id_contains;

        return $this;
    }

    /**
     * Gets rec_id_like
     *
     * @return string
     */
    public function getRecIdLike()
    {
        return $this->container['rec_id_like'];
    }

    /**
     * Sets rec_id_like
     *
     * @param string $rec_id_like rec_id_like
     *
     * @return $this
     */
    public function setRecIdLike($rec_id_like)
    {
        $this->container['rec_id_like'] = $rec_id_like;

        return $this;
    }

    /**
     * Gets rec_id_between
     *
     * @return string[]
     */
    public function getRecIdBetween()
    {
        return $this->container['rec_id_between'];
    }

    /**
     * Sets rec_id_between
     *
     * @param string[] $rec_id_between rec_id_between
     *
     * @return $this
     */
    public function setRecIdBetween($rec_id_between)
    {
        $this->container['rec_id_between'] = $rec_id_between;

        return $this;
    }

    /**
     * Gets rec_id_in
     *
     * @return string[]
     */
    public function getRecIdIn()
    {
        return $this->container['rec_id_in'];
    }

    /**
     * Sets rec_id_in
     *
     * @param string[] $rec_id_in rec_id_in
     *
     * @return $this
     */
    public function setRecIdIn($rec_id_in)
    {
        $this->container['rec_id_in'] = $rec_id_in;

        return $this;
    }

    /**
     * Gets carrier_name
     *
     * @return string
     */
    public function getCarrierName()
    {
        return $this->container['carrier_name'];
    }

    /**
     * Sets carrier_name
     *
     * @param string $carrier_name carrier_name
     *
     * @return $this
     */
    public function setCarrierName($carrier_name)
    {
        $this->container['carrier_name'] = $carrier_name;

        return $this;
    }

    /**
     * Gets carrier_name_starts_with
     *
     * @return string
     */
    public function getCarrierNameStartsWith()
    {
        return $this->container['carrier_name_starts_with'];
    }

    /**
     * Sets carrier_name_starts_with
     *
     * @param string $carrier_name_starts_with carrier_name_starts_with
     *
     * @return $this
     */
    public function setCarrierNameStartsWith($carrier_name_starts_with)
    {
        $this->container['carrier_name_starts_with'] = $carrier_name_starts_with;

        return $this;
    }

    /**
     * Gets carrier_name_ends_with
     *
     * @return string
     */
    public function getCarrierNameEndsWith()
    {
        return $this->container['carrier_name_ends_with'];
    }

    /**
     * Sets carrier_name_ends_with
     *
     * @param string $carrier_name_ends_with carrier_name_ends_with
     *
     * @return $this
     */
    public function setCarrierNameEndsWith($carrier_name_ends_with)
    {
        $this->container['carrier_name_ends_with'] = $carrier_name_ends_with;

        return $this;
    }

    /**
     * Gets carrier_name_contains
     *
     * @return string
     */
    public function getCarrierNameContains()
    {
        return $this->container['carrier_name_contains'];
    }

    /**
     * Sets carrier_name_contains
     *
     * @param string $carrier_name_contains carrier_name_contains
     *
     * @return $this
     */
    public function setCarrierNameContains($carrier_name_contains)
    {
        $this->container['carrier_name_contains'] = $carrier_name_contains;

        return $this;
    }

    /**
     * Gets carrier_name_like
     *
     * @return string
     */
    public function getCarrierNameLike()
    {
        return $this->container['carrier_name_like'];
    }

    /**
     * Sets carrier_name_like
     *
     * @param string $carrier_name_like carrier_name_like
     *
     * @return $this
     */
    public function setCarrierNameLike($carrier_name_like)
    {
        $this->container['carrier_name_like'] = $carrier_name_like;

        return $this;
    }

    /**
     * Gets carrier_name_between
     *
     * @return string[]
     */
    public function getCarrierNameBetween()
    {
        return $this->container['carrier_name_between'];
    }

    /**
     * Sets carrier_name_between
     *
     * @param string[] $carrier_name_between carrier_name_between
     *
     * @return $this
     */
    public function setCarrierNameBetween($carrier_name_between)
    {
        $this->container['carrier_name_between'] = $carrier_name_between;

        return $this;
    }

    /**
     * Gets carrier_name_in
     *
     * @return string[]
     */
    public function getCarrierNameIn()
    {
        return $this->container['carrier_name_in'];
    }

    /**
     * Sets carrier_name_in
     *
     * @param string[] $carrier_name_in carrier_name_in
     *
     * @return $this
     */
    public function setCarrierNameIn($carrier_name_in)
    {
        $this->container['carrier_name_in'] = $carrier_name_in;

        return $this;
    }

    /**
     * Gets carrier_enabled
     *
     * @return bool
     */
    public function getCarrierEnabled()
    {
        return $this->container['carrier_enabled'];
    }

    /**
     * Sets carrier_enabled
     *
     * @param bool $carrier_enabled carrier_enabled
     *
     * @return $this
     */
    public function setCarrierEnabled($carrier_enabled)
    {
        $this->container['carrier_enabled'] = $carrier_enabled;

        return $this;
    }

    /**
     * Gets last_saved_date_time
     *
     * @return \DateTime
     */
    public function getLastSavedDateTime()
    {
        return $this->container['last_saved_date_time'];
    }

    /**
     * Sets last_saved_date_time
     *
     * @param \DateTime $last_saved_date_time last_saved_date_time
     *
     * @return $this
     */
    public function setLastSavedDateTime($last_saved_date_time)
    {
        $this->container['last_saved_date_time'] = $last_saved_date_time;

        return $this;
    }

    /**
     * Gets last_saved_date_time_greater_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeGreaterThanOrEqualTo()
    {
        return $this->container['last_saved_date_time_greater_than_or_equal_to'];
    }

    /**
     * Sets last_saved_date_time_greater_than_or_equal_to
     *
     * @param \DateTime $last_saved_date_time_greater_than_or_equal_to last_saved_date_time_greater_than_or_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeGreaterThanOrEqualTo($last_saved_date_time_greater_than_or_equal_to)
    {
        $this->container['last_saved_date_time_greater_than_or_equal_to'] = $last_saved_date_time_greater_than_or_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_greater_than
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeGreaterThan()
    {
        return $this->container['last_saved_date_time_greater_than'];
    }

    /**
     * Sets last_saved_date_time_greater_than
     *
     * @param \DateTime $last_saved_date_time_greater_than last_saved_date_time_greater_than
     *
     * @return $this
     */
    public function setLastSavedDateTimeGreaterThan($last_saved_date_time_greater_than)
    {
        $this->container['last_saved_date_time_greater_than'] = $last_saved_date_time_greater_than;

        return $this;
    }

    /**
     * Gets last_saved_date_time_less_than
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeLessThan()
    {
        return $this->container['last_saved_date_time_less_than'];
    }

    /**
     * Sets last_saved_date_time_less_than
     *
     * @param \DateTime $last_saved_date_time_less_than last_saved_date_time_less_than
     *
     * @return $this
     */
    public function setLastSavedDateTimeLessThan($last_saved_date_time_less_than)
    {
        $this->container['last_saved_date_time_less_than'] = $last_saved_date_time_less_than;

        return $this;
    }

    /**
     * Gets last_saved_date_time_less_than_or_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeLessThanOrEqualTo()
    {
        return $this->container['last_saved_date_time_less_than_or_equal_to'];
    }

    /**
     * Sets last_saved_date_time_less_than_or_equal_to
     *
     * @param \DateTime $last_saved_date_time_less_than_or_equal_to last_saved_date_time_less_than_or_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeLessThanOrEqualTo($last_saved_date_time_less_than_or_equal_to)
    {
        $this->container['last_saved_date_time_less_than_or_equal_to'] = $last_saved_date_time_less_than_or_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_not_equal_to
     *
     * @return \DateTime
     */
    public function getLastSavedDateTimeNotEqualTo()
    {
        return $this->container['last_saved_date_time_not_equal_to'];
    }

    /**
     * Sets last_saved_date_time_not_equal_to
     *
     * @param \DateTime $last_saved_date_time_not_equal_to last_saved_date_time_not_equal_to
     *
     * @return $this
     */
    public function setLastSavedDateTimeNotEqualTo($last_saved_date_time_not_equal_to)
    {
        $this->container['last_saved_date_time_not_equal_to'] = $last_saved_date_time_not_equal_to;

        return $this;
    }

    /**
     * Gets last_saved_date_time_between
     *
     * @return \DateTime[]
     */
    public function getLastSavedDateTimeBetween()
    {
        return $this->container['last_saved_date_time_between'];
    }

    /**
     * Sets last_saved_date_time_between
     *
     * @param \DateTime[] $last_saved_date_time_between last_saved_date_time_between
     *
     * @return $this
     */
    public function setLastSavedDateTimeBetween($last_saved_date_time_between)
    {
        $this->container['last_saved_date_time_between'] = $last_saved_date_time_between;

        return $this;
    }

    /**
     * Gets last_saved_date_time_in
     *
     * @return \DateTime[]
     */
    public function getLastSavedDateTimeIn()
    {
        return $this->container['last_saved_date_time_in'];
    }

    /**
     * Sets last_saved_date_time_in
     *
     * @param \DateTime[] $last_saved_date_time_in last_saved_date_time_in
     *
     * @return $this
     */
    public function setLastSavedDateTimeIn($last_saved_date_time_in)
    {
        $this->container['last_saved_date_time_in'] = $last_saved_date_time_in;

        return $this;
    }

    /**
     * Gets notes
     *
     * @return string
     */
    public function getNotes()
    {
        return $this->container['notes'];
    }

    /**
     * Sets notes
     *
     * @param string $notes notes
     *
     * @return $this
     */
    public function setNotes($notes)
    {
        $this->container['notes'] = $notes;

        return $this;
    }

    /**
     * Gets notes_starts_with
     *
     * @return string
     */
    public function getNotesStartsWith()
    {
        return $this->container['notes_starts_with'];
    }

    /**
     * Sets notes_starts_with
     *
     * @param string $notes_starts_with notes_starts_with
     *
     * @return $this
     */
    public function setNotesStartsWith($notes_starts_with)
    {
        $this->container['notes_starts_with'] = $notes_starts_with;

        return $this;
    }

    /**
     * Gets notes_ends_with
     *
     * @return string
     */
    public function getNotesEndsWith()
    {
        return $this->container['notes_ends_with'];
    }

    /**
     * Sets notes_ends_with
     *
     * @param string $notes_ends_with notes_ends_with
     *
     * @return $this
     */
    public function setNotesEndsWith($notes_ends_with)
    {
        $this->container['notes_ends_with'] = $notes_ends_with;

        return $this;
    }

    /**
     * Gets notes_contains
     *
     * @return string
     */
    public function getNotesContains()
    {
        return $this->container['notes_contains'];
    }

    /**
     * Sets notes_contains
     *
     * @param string $notes_contains notes_contains
     *
     * @return $this
     */
    public function setNotesContains($notes_contains)
    {
        $this->container['notes_contains'] = $notes_contains;

        return $this;
    }

    /**
     * Gets notes_like
     *
     * @return string
     */
    public function getNotesLike()
    {
        return $this->container['notes_like'];
    }

    /**
     * Sets notes_like
     *
     * @param string $notes_like notes_like
     *
     * @return $this
     */
    public function setNotesLike($notes_like)
    {
        $this->container['notes_like'] = $notes_like;

        return $this;
    }

    /**
     * Gets notes_between
     *
     * @return string[]
     */
    public function getNotesBetween()
    {
        return $this->container['notes_between'];
    }

    /**
     * Sets notes_between
     *
     * @param string[] $notes_between notes_between
     *
     * @return $this
     */
    public function setNotesBetween($notes_between)
    {
        $this->container['notes_between'] = $notes_between;

        return $this;
    }

    /**
     * Gets notes_in
     *
     * @return string[]
     */
    public function getNotesIn()
    {
        return $this->container['notes_in'];
    }

    /**
     * Sets notes_in
     *
     * @param string[] $notes_in notes_in
     *
     * @return $this
     */
    public function setNotesIn($notes_in)
    {
        $this->container['notes_in'] = $notes_in;

        return $this;
    }

    /**
     * Gets account_no
     *
     * @return string
     */
    public function getAccountNo()
    {
        return $this->container['account_no'];
    }

    /**
     * Sets account_no
     *
     * @param string $account_no account_no
     *
     * @return $this
     */
    public function setAccountNo($account_no)
    {
        $this->container['account_no'] = $account_no;

        return $this;
    }

    /**
     * Gets account_no_starts_with
     *
     * @return string
     */
    public function getAccountNoStartsWith()
    {
        return $this->container['account_no_starts_with'];
    }

    /**
     * Sets account_no_starts_with
     *
     * @param string $account_no_starts_with account_no_starts_with
     *
     * @return $this
     */
    public function setAccountNoStartsWith($account_no_starts_with)
    {
        $this->container['account_no_starts_with'] = $account_no_starts_with;

        return $this;
    }

    /**
     * Gets account_no_ends_with
     *
     * @return string
     */
    public function getAccountNoEndsWith()
    {
        return $this->container['account_no_ends_with'];
    }

    /**
     * Sets account_no_ends_with
     *
     * @param string $account_no_ends_with account_no_ends_with
     *
     * @return $this
     */
    public function setAccountNoEndsWith($account_no_ends_with)
    {
        $this->container['account_no_ends_with'] = $account_no_ends_with;

        return $this;
    }

    /**
     * Gets account_no_contains
     *
     * @return string
     */
    public function getAccountNoContains()
    {
        return $this->container['account_no_contains'];
    }

    /**
     * Sets account_no_contains
     *
     * @param string $account_no_contains account_no_contains
     *
     * @return $this
     */
    public function setAccountNoContains($account_no_contains)
    {
        $this->container['account_no_contains'] = $account_no_contains;

        return $this;
    }

    /**
     * Gets account_no_like
     *
     * @return string
     */
    public function getAccountNoLike()
    {
        return $this->container['account_no_like'];
    }

    /**
     * Sets account_no_like
     *
     * @param string $account_no_like account_no_like
     *
     * @return $this
     */
    public function setAccountNoLike($account_no_like)
    {
        $this->container['account_no_like'] = $account_no_like;

        return $this;
    }

    /**
     * Gets account_no_between
     *
     * @return string[]
     */
    public function getAccountNoBetween()
    {
        return $this->container['account_no_between'];
    }

    /**
     * Sets account_no_between
     *
     * @param string[] $account_no_between account_no_between
     *
     * @return $this
     */
    public function setAccountNoBetween($account_no_between)
    {
        $this->container['account_no_between'] = $account_no_between;

        return $this;
    }

    /**
     * Gets account_no_in
     *
     * @return string[]
     */
    public function getAccountNoIn()
    {
        return $this->container['account_no_in'];
    }

    /**
     * Sets account_no_in
     *
     * @param string[] $account_no_in account_no_in
     *
     * @return $this
     */
    public function setAccountNoIn($account_no_in)
    {
        $this->container['account_no_in'] = $account_no_in;

        return $this;
    }

    /**
     * Gets skip
     *
     * @return int
     */
    public function getSkip()
    {
        return $this->container['skip'];
    }

    /**
     * Sets skip
     *
     * @param int $skip skip
     *
     * @return $this
     */
    public function setSkip($skip)
    {
        $this->container['skip'] = $skip;

        return $this;
    }

    /**
     * Gets take
     *
     * @return int
     */
    public function getTake()
    {
        return $this->container['take'];
    }

    /**
     * Sets take
     *
     * @param int $take take
     *
     * @return $this
     */
    public function setTake($take)
    {
        $this->container['take'] = $take;

        return $this;
    }

    /**
     * Gets order_by
     *
     * @return string
     */
    public function getOrderBy()
    {
        return $this->container['order_by'];
    }

    /**
     * Sets order_by
     *
     * @param string $order_by order_by
     *
     * @return $this
     */
    public function setOrderBy($order_by)
    {
        $this->container['order_by'] = $order_by;

        return $this;
    }

    /**
     * Gets order_by_desc
     *
     * @return string
     */
    public function getOrderByDesc()
    {
        return $this->container['order_by_desc'];
    }

    /**
     * Sets order_by_desc
     *
     * @param string $order_by_desc order_by_desc
     *
     * @return $this
     */
    public function setOrderByDesc($order_by_desc)
    {
        $this->container['order_by_desc'] = $order_by_desc;

        return $this;
    }

    /**
     * Gets include
     *
     * @return string
     */
    public function getInclude()
    {
        return $this->container['include'];
    }

    /**
     * Sets include
     *
     * @param string $include include
     *
     * @return $this
     */
    public function setInclude($include)
    {
        $this->container['include'] = $include;

        return $this;
    }

    /**
     * Gets fields
     *
     * @return string
     */
    public function getFields()
    {
        return $this->container['fields'];
    }

    /**
     * Sets fields
     *
     * @param string $fields fields
     *
     * @return $this
     */
    public function setFields($fields)
    {
        $this->container['fields'] = $fields;

        return $this;
    }

    /**
     * Gets meta
     *
     * @return \Jiwa\JiwaModel\DictionaryStringString_
     */
    public function getMeta()
    {
        return $this->container['meta'];
    }

    /**
     * Sets meta
     *
     * @param \Jiwa\JiwaModel\DictionaryStringString_ $meta meta
     *
     * @return $this
     */
    public function setMeta($meta)
    {
        $this->container['meta'] = $meta;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


