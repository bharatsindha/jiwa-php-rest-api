<?php
/**
 * InventoryApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Jiwa;

use \Jiwa\Configuration;
use \Jiwa\ApiException;
use \Jiwa\ObjectSerializer;

/**
 * InventoryApiTest Class Doc Comment
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InventoryApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for inventoryABANDONRequestAbandonDelete
     *
     * Abandons a stateful inventory item..
     *
     */
    public function testInventoryABANDONRequestAbandonDelete()
    {
    }

    /**
     * Test case for inventoryAlternateChildDELETERequestInventoryIDAlternateChildrenAlternateChildIDDelete
     *
     * Deletes a inventory alternate child..
     *
     */
    public function testInventoryAlternateChildDELETERequestInventoryIDAlternateChildrenAlternateChildIDDelete()
    {
    }

    /**
     * Test case for inventoryAlternateChildGETRequestInventoryIDAlternateChildrenAlternateChildIDGet
     *
     * Retrieves an inventory alternate child..
     *
     */
    public function testInventoryAlternateChildGETRequestInventoryIDAlternateChildrenAlternateChildIDGet()
    {
    }

    /**
     * Test case for inventoryAlternateChildPATCHRequestInventoryIDAlternateChildrenAlternateChildIDUpdate
     *
     * Updates a inventory alternate child..
     *
     */
    public function testInventoryAlternateChildPATCHRequestInventoryIDAlternateChildrenAlternateChildIDUpdate()
    {
    }

    /**
     * Test case for inventoryAlternateChildPOSTRequestInventoryIDAlternateChildrenPost
     *
     * Appends an alternate child to an inventory item..
     *
     */
    public function testInventoryAlternateChildPOSTRequestInventoryIDAlternateChildrenPost()
    {
    }

    /**
     * Test case for inventoryAlternateChildrenGETManyRequestInventoryIDAlternateChildrenGet
     *
     * Retrieves a list of inventory alternate children..
     *
     */
    public function testInventoryAlternateChildrenGETManyRequestInventoryIDAlternateChildrenGet()
    {
    }

    /**
     * Test case for inventoryAlternateParentGETRequestInventoryIDAlternateParentsLinkedInventoryIDGet
     *
     * Retrieves an inventory alternate parent..
     *
     */
    public function testInventoryAlternateParentGETRequestInventoryIDAlternateParentsLinkedInventoryIDGet()
    {
    }

    /**
     * Test case for inventoryAlternateParentsGETManyRequestInventoryIDAlternateParentsGet
     *
     * Retrieves a list of inventory alternate parents..
     *
     */
    public function testInventoryAlternateParentsGETManyRequestInventoryIDAlternateParentsGet()
    {
    }

    /**
     * Test case for inventoryAttributeGroupDELETERequestInventoryIDAttributeGroupsAttributeGroupIDDelete
     *
     * Deletes a inventory attribute group..
     *
     */
    public function testInventoryAttributeGroupDELETERequestInventoryIDAttributeGroupsAttributeGroupIDDelete()
    {
    }

    /**
     * Test case for inventoryAttributeGroupGETRequestInventoryIDAttributeGroupsAttributeGroupIDGet
     *
     * Retrieves an inventory attribute group..
     *
     */
    public function testInventoryAttributeGroupGETRequestInventoryIDAttributeGroupsAttributeGroupIDGet()
    {
    }

    /**
     * Test case for inventoryAttributeGroupPATCHRequestInventoryIDAttributeGroupsAttributeGroupIDUpdate
     *
     * Updates a inventory attribute group..
     *
     */
    public function testInventoryAttributeGroupPATCHRequestInventoryIDAttributeGroupsAttributeGroupIDUpdate()
    {
    }

    /**
     * Test case for inventoryAttributeGroupPOSTRequestInventoryIDAttributeGroupsPost
     *
     * Appends an attribute group to an inventory item..
     *
     */
    public function testInventoryAttributeGroupPOSTRequestInventoryIDAttributeGroupsPost()
    {
    }

    /**
     * Test case for inventoryAttributeGroupTemplateABANDONRequestAttributeGroupTemplatesAbandonDelete
     *
     * Abandons a stateful inventory attribute group template..
     *
     */
    public function testInventoryAttributeGroupTemplateABANDONRequestAttributeGroupTemplatesAbandonDelete()
    {
    }

    /**
     * Test case for inventoryAttributeGroupTemplateAttributeDELETERequestAttributeGroupTemplatesAttributeGroupTemplateIDAttributesTemplateAttributeIDDelete
     *
     * Deletes an inventory attribute group template attribute..
     *
     */
    public function testInventoryAttributeGroupTemplateAttributeDELETERequestAttributeGroupTemplatesAttributeGroupTemplateIDAttributesTemplateAttributeIDDelete()
    {
    }

    /**
     * Test case for inventoryAttributeGroupTemplateAttributeGETRequestAttributeGroupTemplatesAttributeGroupTemplateIDAttributesTemplateAttributeIDGet
     *
     * Retrieves an inventory attribute group template attribute..
     *
     */
    public function testInventoryAttributeGroupTemplateAttributeGETRequestAttributeGroupTemplatesAttributeGroupTemplateIDAttributesTemplateAttributeIDGet()
    {
    }

    /**
     * Test case for inventoryAttributeGroupTemplateAttributePATCHRequestAttributeGroupTemplatesAttributeGroupTemplateIDAttributesTemplateAttributeIDUpdate
     *
     * Updates an inventory attribute group template attribute..
     *
     */
    public function testInventoryAttributeGroupTemplateAttributePATCHRequestAttributeGroupTemplatesAttributeGroupTemplateIDAttributesTemplateAttributeIDUpdate()
    {
    }

    /**
     * Test case for inventoryAttributeGroupTemplateAttributePOSTRequestAttributeGroupTemplatesAttributeGroupTemplateIDAttributePost
     *
     * Appends an inventory attribute group template attribute to an inventory attribute group template..
     *
     */
    public function testInventoryAttributeGroupTemplateAttributePOSTRequestAttributeGroupTemplatesAttributeGroupTemplateIDAttributePost()
    {
    }

    /**
     * Test case for inventoryAttributeGroupTemplateAttributesGETManyRequestAttributeGroupTemplatesAttributeGroupTemplateIDAttributesGet
     *
     * Retrieves a list of inventory attribute group template attributes..
     *
     */
    public function testInventoryAttributeGroupTemplateAttributesGETManyRequestAttributeGroupTemplatesAttributeGroupTemplateIDAttributesGet()
    {
    }

    /**
     * Test case for inventoryAttributeGroupTemplateDELETERequestAttributeGroupTemplatesAttributeGroupTemplateIDDelete
     *
     * Deletes an inventory attribute group template..
     *
     */
    public function testInventoryAttributeGroupTemplateDELETERequestAttributeGroupTemplatesAttributeGroupTemplateIDDelete()
    {
    }

    /**
     * Test case for inventoryAttributeGroupTemplateGETRequestAttributeGroupTemplatesAttributeGroupTemplateIDGet
     *
     * Retrieves an inventory attribute group template..
     *
     */
    public function testInventoryAttributeGroupTemplateGETRequestAttributeGroupTemplatesAttributeGroupTemplateIDGet()
    {
    }

    /**
     * Test case for inventoryAttributeGroupTemplatePATCHRequestAttributeGroupTemplatesAttributeGroupTemplateIDUpdate
     *
     * Updates an inventory attribute group template..
     *
     */
    public function testInventoryAttributeGroupTemplatePATCHRequestAttributeGroupTemplatesAttributeGroupTemplateIDUpdate()
    {
    }

    /**
     * Test case for inventoryAttributeGroupTemplatePOSTRequestAttributeGroupTemplatesPost
     *
     * Creates a new inventory attribute group template..
     *
     */
    public function testInventoryAttributeGroupTemplatePOSTRequestAttributeGroupTemplatesPost()
    {
    }

    /**
     * Test case for inventoryAttributeGroupTemplateSAVERequestAttributeGroupTemplatesSaveGet
     *
     * Saves a stateful inventory attribute group template..
     *
     */
    public function testInventoryAttributeGroupTemplateSAVERequestAttributeGroupTemplatesSaveGet()
    {
    }

    /**
     * Test case for inventoryAttributeGroupsGETManyRequestInventoryIDAttributeGroupsGet
     *
     * Retrieves a list of inventory attribute groups..
     *
     */
    public function testInventoryAttributeGroupsGETManyRequestInventoryIDAttributeGroupsGet()
    {
    }

    /**
     * Test case for inventoryAttributeValueGETRequestInventoryIDAttributeGroupsAttributeGroupIDAttributeValuesAttributeIDGet
     *
     * Retrieves an inventory attribute value..
     *
     */
    public function testInventoryAttributeValueGETRequestInventoryIDAttributeGroupsAttributeGroupIDAttributeValuesAttributeIDGet()
    {
    }

    /**
     * Test case for inventoryAttributeValuePATCHRequestInventoryIDAttributeGroupsAttributeGroupIDAttributeValuesAttributeIDUpdate
     *
     * Updates an inventory attribute value..
     *
     */
    public function testInventoryAttributeValuePATCHRequestInventoryIDAttributeGroupsAttributeGroupIDAttributeValuesAttributeIDUpdate()
    {
    }

    /**
     * Test case for inventoryBudgetGETRequestInventoryIDBudgetsLogicalWarehouseIDGet
     *
     * Retrieves a budget from an inventory item..
     *
     */
    public function testInventoryBudgetGETRequestInventoryIDBudgetsLogicalWarehouseIDGet()
    {
    }

    /**
     * Test case for inventoryBudgetPATCHRequestInventoryIDBudgetsLogicalWarehouseIDUpdate
     *
     * Updates a budget..
     *
     */
    public function testInventoryBudgetPATCHRequestInventoryIDBudgetsLogicalWarehouseIDUpdate()
    {
    }

    /**
     * Test case for inventoryBudgetsGETManyRequestInventoryIDBudgetsGet
     *
     * Retrieves a list of budgets for an inventory item..
     *
     */
    public function testInventoryBudgetsGETManyRequestInventoryIDBudgetsGet()
    {
    }

    /**
     * Test case for inventoryCategoriesABANDONRequestCategoriesAbandonDelete
     *
     * Abandons a stateful inventory categories collection..
     *
     */
    public function testInventoryCategoriesABANDONRequestCategoriesAbandonDelete()
    {
    }

    /**
     * Test case for inventoryCategoriesSAVERequestCategoriesSaveGet
     *
     * Saves a stateful inventory categories collection..
     *
     */
    public function testInventoryCategoriesSAVERequestCategoriesSaveGet()
    {
    }

    /**
     * Test case for inventoryCategoryDELETERequestCategoriesCategoryIDDelete
     *
     * Deletes an inventory category..
     *
     */
    public function testInventoryCategoryDELETERequestCategoriesCategoryIDDelete()
    {
    }

    /**
     * Test case for inventoryCategoryGETRequestCategoriesCategoryIDGet
     *
     * Retrieves an inventory category..
     *
     */
    public function testInventoryCategoryGETRequestCategoriesCategoryIDGet()
    {
    }

    /**
     * Test case for inventoryCategoryPATCHRequestCategoriesCategoryIDUpdate
     *
     * Updates an inventory category..
     *
     */
    public function testInventoryCategoryPATCHRequestCategoriesCategoryIDUpdate()
    {
    }

    /**
     * Test case for inventoryCategoryPOSTRequestCategoriesPost
     *
     * Creates an inventory category..
     *
     */
    public function testInventoryCategoryPOSTRequestCategoriesPost()
    {
    }

    /**
     * Test case for inventoryClassificationABANDONRequestClassificationsAbandonDelete
     *
     * Abandons a stateful inventory classification..
     *
     */
    public function testInventoryClassificationABANDONRequestClassificationsAbandonDelete()
    {
    }

    /**
     * Test case for inventoryClassificationDELETERequestClassificationsClassificationIDDelete
     *
     * Deletes an inventory classification..
     *
     */
    public function testInventoryClassificationDELETERequestClassificationsClassificationIDDelete()
    {
    }

    /**
     * Test case for inventoryClassificationGETRequestClassificationsClassificationIDGet
     *
     * Retrieves an inventory classification..
     *
     */
    public function testInventoryClassificationGETRequestClassificationsClassificationIDGet()
    {
    }

    /**
     * Test case for inventoryClassificationPATCHRequestClassificationsClassificationIDUpdate
     *
     * Updates an inventory classification..
     *
     */
    public function testInventoryClassificationPATCHRequestClassificationsClassificationIDUpdate()
    {
    }

    /**
     * Test case for inventoryClassificationPOSTRequestClassificationsPost
     *
     * Creates an inventory classification..
     *
     */
    public function testInventoryClassificationPOSTRequestClassificationsPost()
    {
    }

    /**
     * Test case for inventoryClassificationSAVERequestClassificationsSaveGet
     *
     * Saves a stateful inventory classification..
     *
     */
    public function testInventoryClassificationSAVERequestClassificationsSaveGet()
    {
    }

    /**
     * Test case for inventoryComponentDELETERequestInventoryIDComponentsComponentIDDelete
     *
     * Deletes a component..
     *
     */
    public function testInventoryComponentDELETERequestInventoryIDComponentsComponentIDDelete()
    {
    }

    /**
     * Test case for inventoryComponentGETRequestInventoryIDComponentsComponentIDGet
     *
     * Retrieves a component from an inventory item..
     *
     */
    public function testInventoryComponentGETRequestInventoryIDComponentsComponentIDGet()
    {
    }

    /**
     * Test case for inventoryComponentPATCHRequestInventoryIDComponentsComponentIDUpdate
     *
     * Updates a component..
     *
     */
    public function testInventoryComponentPATCHRequestInventoryIDComponentsComponentIDUpdate()
    {
    }

    /**
     * Test case for inventoryComponentPOSTRequestInventoryIDComponentsPost
     *
     * Appends a component to an inventory item..
     *
     */
    public function testInventoryComponentPOSTRequestInventoryIDComponentsPost()
    {
    }

    /**
     * Test case for inventoryComponentsGETManyRequestInventoryIDComponentsGet
     *
     * Retrieves a list of components for an inventory item..
     *
     */
    public function testInventoryComponentsGETManyRequestInventoryIDComponentsGet()
    {
    }

    /**
     * Test case for inventoryCustomFieldValueGETRequestInventoryIDCustomFieldValuesSettingIDGet
     *
     * Retrieves an inventory custom field value..
     *
     */
    public function testInventoryCustomFieldValueGETRequestInventoryIDCustomFieldValuesSettingIDGet()
    {
    }

    /**
     * Test case for inventoryCustomFieldValuePATCHRequestInventoryIDCustomFieldValuesSettingIDUpdate
     *
     * Updates an inventory custom field value..
     *
     */
    public function testInventoryCustomFieldValuePATCHRequestInventoryIDCustomFieldValuesSettingIDUpdate()
    {
    }

    /**
     * Test case for inventoryCustomFieldValuesGETManyRequestInventoryIDCustomFieldValuesGet
     *
     * Retrieves a list of custom field values for an inventory item..
     *
     */
    public function testInventoryCustomFieldValuesGETManyRequestInventoryIDCustomFieldValuesGet()
    {
    }

    /**
     * Test case for inventoryCustomFieldsGETManyRequestCustomFieldsGet
     *
     * Retrieves a list of inventory custom fields..
     *
     */
    public function testInventoryCustomFieldsGETManyRequestCustomFieldsGet()
    {
    }

    /**
     * Test case for inventoryDELETERequestInventoryIDDelete
     *
     * Deletes an inventory item..
     *
     */
    public function testInventoryDELETERequestInventoryIDDelete()
    {
    }

    /**
     * Test case for inventoryDebtorClassificationPriceDELETERequestInventoryIDDebtorClassificationPricesDebtorClassificationPriceIDDelete
     *
     * Deletes a debtor classification price..
     *
     */
    public function testInventoryDebtorClassificationPriceDELETERequestInventoryIDDebtorClassificationPricesDebtorClassificationPriceIDDelete()
    {
    }

    /**
     * Test case for inventoryDebtorClassificationPriceGETRequestInventoryIDDebtorClassificationPricesDebtorClassificationPriceIDGet
     *
     * Retrieves a debtor classification price from an inventory item..
     *
     */
    public function testInventoryDebtorClassificationPriceGETRequestInventoryIDDebtorClassificationPricesDebtorClassificationPriceIDGet()
    {
    }

    /**
     * Test case for inventoryDebtorClassificationPricePATCHRequestInventoryIDDebtorClassificationPricesDebtorClassificationPriceIDUpdate
     *
     * Updates a debtor classification price..
     *
     */
    public function testInventoryDebtorClassificationPricePATCHRequestInventoryIDDebtorClassificationPricesDebtorClassificationPriceIDUpdate()
    {
    }

    /**
     * Test case for inventoryDebtorClassificationPricePOSTRequestInventoryIDDebtorClassificationPricesPost
     *
     * Adds a debtor classification price to an inventory item..
     *
     */
    public function testInventoryDebtorClassificationPricePOSTRequestInventoryIDDebtorClassificationPricesPost()
    {
    }

    /**
     * Test case for inventoryDebtorClassificationPricesGETManyRequestInventoryIDDebtorClassificationPricesGet
     *
     * Retrieves a list of debtor classification prices for an inventory item..
     *
     */
    public function testInventoryDebtorClassificationPricesGETManyRequestInventoryIDDebtorClassificationPricesGet()
    {
    }

    /**
     * Test case for inventoryDebtorPriceGroupPriceDELETERequestInventoryIDDebtorPriceGroupPricesDebtorPriceGroupInventorySpecificIDDelete
     *
     * Deletes a debtor price group price..
     *
     */
    public function testInventoryDebtorPriceGroupPriceDELETERequestInventoryIDDebtorPriceGroupPricesDebtorPriceGroupInventorySpecificIDDelete()
    {
    }

    /**
     * Test case for inventoryDebtorPriceGroupPriceGETRequestInventoryIDDebtorPriceGroupPricesDebtorPriceGroupInventorySpecificIDGet
     *
     * Retrieves a debtor price group price from an inventory item..
     *
     */
    public function testInventoryDebtorPriceGroupPriceGETRequestInventoryIDDebtorPriceGroupPricesDebtorPriceGroupInventorySpecificIDGet()
    {
    }

    /**
     * Test case for inventoryDebtorPriceGroupPricePATCHRequestInventoryIDDebtorPriceGroupPricesDebtorPriceGroupInventorySpecificIDUpdate
     *
     * Updates a debtor price group price..
     *
     */
    public function testInventoryDebtorPriceGroupPricePATCHRequestInventoryIDDebtorPriceGroupPricesDebtorPriceGroupInventorySpecificIDUpdate()
    {
    }

    /**
     * Test case for inventoryDebtorPriceGroupPricePOSTRequestInventoryIDDebtorPriceGroupPricesPost
     *
     * Adds a debtor price group price to an inventory item..
     *
     */
    public function testInventoryDebtorPriceGroupPricePOSTRequestInventoryIDDebtorPriceGroupPricesPost()
    {
    }

    /**
     * Test case for inventoryDebtorPriceGroupPricesGETManyRequestInventoryIDDebtorPriceGroupPricesGet
     *
     * Retrieves a list of debtor price group prices for an inventory item..
     *
     */
    public function testInventoryDebtorPriceGroupPricesGETManyRequestInventoryIDDebtorPriceGroupPricesGet()
    {
    }

    /**
     * Test case for inventoryDebtorSpecificPriceDELETERequestInventoryIDDebtorSpecificPricesDebtorSpecificPriceIDDelete
     *
     * Deletes a debtor specific price..
     *
     */
    public function testInventoryDebtorSpecificPriceDELETERequestInventoryIDDebtorSpecificPricesDebtorSpecificPriceIDDelete()
    {
    }

    /**
     * Test case for inventoryDebtorSpecificPriceGETRequestInventoryIDDebtorSpecificPricesDebtorSpecificPriceIDGet
     *
     * Retrieves a debtor specific price from an inventory item..
     *
     */
    public function testInventoryDebtorSpecificPriceGETRequestInventoryIDDebtorSpecificPricesDebtorSpecificPriceIDGet()
    {
    }

    /**
     * Test case for inventoryDebtorSpecificPricePATCHRequestInventoryIDDebtorSpecificPricesDebtorSpecificPriceIDUpdate
     *
     * Updates a debtor specific price..
     *
     */
    public function testInventoryDebtorSpecificPricePATCHRequestInventoryIDDebtorSpecificPricesDebtorSpecificPriceIDUpdate()
    {
    }

    /**
     * Test case for inventoryDebtorSpecificPricePOSTRequestInventoryIDDebtorSpecificPricesPost
     *
     * Adds a debtor specific price to an inventory item..
     *
     */
    public function testInventoryDebtorSpecificPricePOSTRequestInventoryIDDebtorSpecificPricesPost()
    {
    }

    /**
     * Test case for inventoryDebtorSpecificPricesGETManyRequestInventoryIDDebtorSpecificPricesGet
     *
     * Retrieves a list of debtor specific prices for an inventory item..
     *
     */
    public function testInventoryDebtorSpecificPricesGETManyRequestInventoryIDDebtorSpecificPricesGet()
    {
    }

    /**
     * Test case for inventoryDocumentDELETERequestInventoryIDDocumentsDocumentIDDelete
     *
     * Deletes an inventory document..
     *
     */
    public function testInventoryDocumentDELETERequestInventoryIDDocumentsDocumentIDDelete()
    {
    }

    /**
     * Test case for inventoryDocumentGETRequestInventoryIDDocumentsDocumentIDGet
     *
     * Retrieves an inventory document..
     *
     */
    public function testInventoryDocumentGETRequestInventoryIDDocumentsDocumentIDGet()
    {
    }

    /**
     * Test case for inventoryDocumentPATCHRequestInventoryIDDocumentsDocumentIDUpdate
     *
     * Updates an inventory document..
     *
     */
    public function testInventoryDocumentPATCHRequestInventoryIDDocumentsDocumentIDUpdate()
    {
    }

    /**
     * Test case for inventoryDocumentPOSTRequestInventoryIDDocumentsPost
     *
     * Appends a document to an inventory item..
     *
     */
    public function testInventoryDocumentPOSTRequestInventoryIDDocumentsPost()
    {
    }

    /**
     * Test case for inventoryDocumentTypeDELETERequestDocumentTypesDocumentTypeIDDelete
     *
     * Deletes an inventory document type..
     *
     */
    public function testInventoryDocumentTypeDELETERequestDocumentTypesDocumentTypeIDDelete()
    {
    }

    /**
     * Test case for inventoryDocumentTypeGETRequestDocumentTypesDocumentTypeIDGet
     *
     * Retrieves an inventory document type..
     *
     */
    public function testInventoryDocumentTypeGETRequestDocumentTypesDocumentTypeIDGet()
    {
    }

    /**
     * Test case for inventoryDocumentTypePATCHRequestDocumentTypesDocumentTypeIDUpdate
     *
     * Updates an inventory document type..
     *
     */
    public function testInventoryDocumentTypePATCHRequestDocumentTypesDocumentTypeIDUpdate()
    {
    }

    /**
     * Test case for inventoryDocumentTypePOSTRequestDocumentTypesPost
     *
     * Creates a new inventory document type..
     *
     */
    public function testInventoryDocumentTypePOSTRequestDocumentTypesPost()
    {
    }

    /**
     * Test case for inventoryDocumentTypesGETManyRequestDocumentTypesGet
     *
     * Retrieves a list of inventory document types..
     *
     */
    public function testInventoryDocumentTypesGETManyRequestDocumentTypesGet()
    {
    }

    /**
     * Test case for inventoryDocumentsGETManyRequestInventoryIDDocumentsGet
     *
     * Retrieves a list of inventory documents..
     *
     */
    public function testInventoryDocumentsGETManyRequestInventoryIDDocumentsGet()
    {
    }

    /**
     * Test case for inventoryGETRequestInventoryIDGet
     *
     * Retrieves an inventory item..
     *
     */
    public function testInventoryGETRequestInventoryIDGet()
    {
    }

    /**
     * Test case for inventoryLedgerGETRequestInventoryIDLedgersNameGet
     *
     * Retrieves an inventory ledger..
     *
     */
    public function testInventoryLedgerGETRequestInventoryIDLedgersNameGet()
    {
    }

    /**
     * Test case for inventoryLedgerPATCHRequestInventoryIDLedgersNameUpdate
     *
     * Updates a inventory ledger..
     *
     */
    public function testInventoryLedgerPATCHRequestInventoryIDLedgersNameUpdate()
    {
    }

    /**
     * Test case for inventoryLedgersGETManyRequestInventoryIDLedgersGet
     *
     * Retrieves a list of inventory ledgers..
     *
     */
    public function testInventoryLedgersGETManyRequestInventoryIDLedgersGet()
    {
    }

    /**
     * Test case for inventoryNoteDELETERequestInventoryIDNotesNoteIDDelete
     *
     * Deletes an inventory note..
     *
     */
    public function testInventoryNoteDELETERequestInventoryIDNotesNoteIDDelete()
    {
    }

    /**
     * Test case for inventoryNoteGETRequestInventoryIDNotesNoteIDGet
     *
     * Retrieves an inventory note..
     *
     */
    public function testInventoryNoteGETRequestInventoryIDNotesNoteIDGet()
    {
    }

    /**
     * Test case for inventoryNotePATCHRequestInventoryIDNotesNoteIDUpdate
     *
     * Updates an inventory note..
     *
     */
    public function testInventoryNotePATCHRequestInventoryIDNotesNoteIDUpdate()
    {
    }

    /**
     * Test case for inventoryNotePOSTRequestInventoryIDNotesPost
     *
     * Appends a note to an inventory item..
     *
     */
    public function testInventoryNotePOSTRequestInventoryIDNotesPost()
    {
    }

    /**
     * Test case for inventoryNoteTypeDELETERequestNoteTypesNoteTypeIDDelete
     *
     * Deletes an inventory note type..
     *
     */
    public function testInventoryNoteTypeDELETERequestNoteTypesNoteTypeIDDelete()
    {
    }

    /**
     * Test case for inventoryNoteTypeGETRequestNoteTypesNoteTypeIDGet
     *
     * Retrieves an inventory note type..
     *
     */
    public function testInventoryNoteTypeGETRequestNoteTypesNoteTypeIDGet()
    {
    }

    /**
     * Test case for inventoryNoteTypePATCHRequestNoteTypesNoteTypeIDUpdate
     *
     * Updates an inventory note type..
     *
     */
    public function testInventoryNoteTypePATCHRequestNoteTypesNoteTypeIDUpdate()
    {
    }

    /**
     * Test case for inventoryNoteTypePOSTRequestNoteTypesPost
     *
     * Creates a new inventory note type..
     *
     */
    public function testInventoryNoteTypePOSTRequestNoteTypesPost()
    {
    }

    /**
     * Test case for inventoryNoteTypesGETManyRequestNoteTypesGet
     *
     * Retrieves a list of inventory note types..
     *
     */
    public function testInventoryNoteTypesGETManyRequestNoteTypesGet()
    {
    }

    /**
     * Test case for inventoryNotesGETManyRequestInventoryIDNotesGet
     *
     * Retrieves a list of inventory notes..
     *
     */
    public function testInventoryNotesGETManyRequestInventoryIDNotesGet()
    {
    }

    /**
     * Test case for inventoryOrderLevelGETRequestInventoryIDOrderLevelsLogicalWarehouseIDPeriodsPeriodNoGet
     *
     * Retrieves a order level from an inventory item for a particular logical warehouse..
     *
     */
    public function testInventoryOrderLevelGETRequestInventoryIDOrderLevelsLogicalWarehouseIDPeriodsPeriodNoGet()
    {
    }

    /**
     * Test case for inventoryOrderLevelPATCHRequestInventoryIDOrderLevelsLogicalWarehouseIDPeriodsPeriodNoUpdate
     *
     * Updates an order level..
     *
     */
    public function testInventoryOrderLevelPATCHRequestInventoryIDOrderLevelsLogicalWarehouseIDPeriodsPeriodNoUpdate()
    {
    }

    /**
     * Test case for inventoryOrderLevelsGETManyRequestInventoryIDOrderLevelsGet
     *
     * Retrieves a list of order levels for an inventory item..
     *
     */
    public function testInventoryOrderLevelsGETManyRequestInventoryIDOrderLevelsGet()
    {
    }

    /**
     * Test case for inventoryOtherDescriptionDELETERequestInventoryIDOtherDescriptionsOtherDescriptionIDDelete
     *
     * Deletes an inventory other description..
     *
     */
    public function testInventoryOtherDescriptionDELETERequestInventoryIDOtherDescriptionsOtherDescriptionIDDelete()
    {
    }

    /**
     * Test case for inventoryOtherDescriptionGETRequestInventoryIDOtherDescriptionsOtherDescriptionIDGet
     *
     * Retrieves an inventory other description..
     *
     */
    public function testInventoryOtherDescriptionGETRequestInventoryIDOtherDescriptionsOtherDescriptionIDGet()
    {
    }

    /**
     * Test case for inventoryOtherDescriptionPATCHRequestInventoryIDOtherDescriptionsOtherDescriptionIDUpdate
     *
     * Updates an inventory other description..
     *
     */
    public function testInventoryOtherDescriptionPATCHRequestInventoryIDOtherDescriptionsOtherDescriptionIDUpdate()
    {
    }

    /**
     * Test case for inventoryOtherDescriptionPOSTRequestInventoryIDOtherDescriptionsPost
     *
     * Appends an other description to an inventory item..
     *
     */
    public function testInventoryOtherDescriptionPOSTRequestInventoryIDOtherDescriptionsPost()
    {
    }

    /**
     * Test case for inventoryOtherDescriptionsGETManyRequestInventoryIDOtherDescriptionsGet
     *
     * Retrieves a list of inventory other descriptions..
     *
     */
    public function testInventoryOtherDescriptionsGETManyRequestInventoryIDOtherDescriptionsGet()
    {
    }

    /**
     * Test case for inventoryPATCHRequestInventoryIDUpdate
     *
     * Updates an inventory item..
     *
     */
    public function testInventoryPATCHRequestInventoryIDUpdate()
    {
    }

    /**
     * Test case for inventoryPOSTRequestPost
     *
     * Creates an inventory item..
     *
     */
    public function testInventoryPOSTRequestPost()
    {
    }

    /**
     * Test case for inventoryPriceGETRequestInventoryIDPricingDebtorIDINLogicalIDDateQuantityGet
     *
     * Retrieves a price for a product, for a debtor, warehouse, date and quantity.
     *
     */
    public function testInventoryPriceGETRequestInventoryIDPricingDebtorIDINLogicalIDDateQuantityGet()
    {
    }

    /**
     * Test case for inventoryPricingGroupDELETERequestPricingGroupsPricingGroupIDDelete
     *
     * Deletes an inventory pricing group..
     *
     */
    public function testInventoryPricingGroupDELETERequestPricingGroupsPricingGroupIDDelete()
    {
    }

    /**
     * Test case for inventoryPricingGroupGETRequestPricingGroupsPricingGroupIDGet
     *
     * Retrieves an inventory pricing group..
     *
     */
    public function testInventoryPricingGroupGETRequestPricingGroupsPricingGroupIDGet()
    {
    }

    /**
     * Test case for inventoryPricingGroupPATCHRequestPricingGroupsPricingGroupIDUpdate
     *
     * Updates an inventory pricing group..
     *
     */
    public function testInventoryPricingGroupPATCHRequestPricingGroupsPricingGroupIDUpdate()
    {
    }

    /**
     * Test case for inventoryPricingGroupPOSTRequestPricingGroupsPost
     *
     * Creates a new inventory pricing group..
     *
     */
    public function testInventoryPricingGroupPOSTRequestPricingGroupsPost()
    {
    }

    /**
     * Test case for inventoryPricingGroupsGETManyRequestPricingGroupsGet
     *
     * Retrieves a list of inventory pricing groups..
     *
     */
    public function testInventoryPricingGroupsGETManyRequestPricingGroupsGet()
    {
    }

    /**
     * Test case for inventoryProductAvailabilitiesGETManyRequestInventoryIDProductAvailabilitiesGet
     *
     * Retrieves a list of product availabilities for an inventory item..
     *
     */
    public function testInventoryProductAvailabilitiesGETManyRequestInventoryIDProductAvailabilitiesGet()
    {
    }

    /**
     * Test case for inventoryProductAvailabilityGETRequestInventoryIDProductAvailabilitiesLogicalWarehouseIDGet
     *
     * Retrieves a product availability from an inventory item..
     *
     */
    public function testInventoryProductAvailabilityGETRequestInventoryIDProductAvailabilitiesLogicalWarehouseIDGet()
    {
    }

    /**
     * Test case for inventoryProductAvailabilityPATCHRequestInventoryIDProductAvailabilitiesLogicalWarehouseIDUpdate
     *
     * Updates a product availability..
     *
     */
    public function testInventoryProductAvailabilityPATCHRequestInventoryIDProductAvailabilitiesLogicalWarehouseIDUpdate()
    {
    }

    /**
     * Test case for inventoryRegionGETRequestInventoryIDRegionsRegionNameGet
     *
     * Retrieves an inventory region..
     *
     */
    public function testInventoryRegionGETRequestInventoryIDRegionsRegionNameGet()
    {
    }

    /**
     * Test case for inventoryRegionPATCHRequestInventoryIDRegionsRegionNameUpdate
     *
     * Updates a inventory region..
     *
     */
    public function testInventoryRegionPATCHRequestInventoryIDRegionsRegionNameUpdate()
    {
    }

    /**
     * Test case for inventoryRegionsGETManyRequestInventoryIDRegionsGet
     *
     * Retrieves a list of inventory regions..
     *
     */
    public function testInventoryRegionsGETManyRequestInventoryIDRegionsGet()
    {
    }

    /**
     * Test case for inventorySAVERequestSaveGet
     *
     * Saves a stateful inventory item..
     *
     */
    public function testInventorySAVERequestSaveGet()
    {
    }

    /**
     * Test case for inventorySellingPriceGETRequestInventoryIDSellingPricesGet
     *
     * Retrieves the selling prices for an inventory item..
     *
     */
    public function testInventorySellingPriceGETRequestInventoryIDSellingPricesGet()
    {
    }

    /**
     * Test case for inventorySellingPricePATCHRequestInventoryIDSellingPricesUpdate
     *
     * Updates the selling prices..
     *
     */
    public function testInventorySellingPricePATCHRequestInventoryIDSellingPricesUpdate()
    {
    }

    /**
     * Test case for inventorySupplierDELETERequestInventoryIDRegionsRegionNameSuppliersSupplierIDDelete
     *
     * Deletes an inventory item supplier..
     *
     */
    public function testInventorySupplierDELETERequestInventoryIDRegionsRegionNameSuppliersSupplierIDDelete()
    {
    }

    /**
     * Test case for inventorySupplierGETRequestInventoryIDRegionsRegionNameSuppliersSupplierIDGet
     *
     * Retrieves an inventory item supplier..
     *
     */
    public function testInventorySupplierGETRequestInventoryIDRegionsRegionNameSuppliersSupplierIDGet()
    {
    }

    /**
     * Test case for inventorySupplierPATCHRequestInventoryIDRegionsRegionNameSuppliersSupplierIDUpdate
     *
     * Updates an inventory item supplier..
     *
     */
    public function testInventorySupplierPATCHRequestInventoryIDRegionsRegionNameSuppliersSupplierIDUpdate()
    {
    }

    /**
     * Test case for inventorySupplierPOSTRequestInventoryIDRegionsRegionNameSuppliersPost
     *
     * Appends a supplier to an inventory item..
     *
     */
    public function testInventorySupplierPOSTRequestInventoryIDRegionsRegionNameSuppliersPost()
    {
    }

    /**
     * Test case for inventorySupplierWarehouseDELETERequestInventoryIDRegionsRegionNameSuppliersSupplierIDSupplierWarehousesSupplierWarehouseIDDelete
     *
     * Deletes a supplier warehouse from an inventory item..
     *
     */
    public function testInventorySupplierWarehouseDELETERequestInventoryIDRegionsRegionNameSuppliersSupplierIDSupplierWarehousesSupplierWarehouseIDDelete()
    {
    }

    /**
     * Test case for inventorySupplierWarehouseGETRequestInventoryIDRegionsRegionNameSuppliersSupplierIDSupplierWarehousesSupplierWarehouseIDGet
     *
     * Retrieves an inventory item supplier warehouse..
     *
     */
    public function testInventorySupplierWarehouseGETRequestInventoryIDRegionsRegionNameSuppliersSupplierIDSupplierWarehousesSupplierWarehouseIDGet()
    {
    }

    /**
     * Test case for inventorySupplierWarehousePATCHRequestInventoryIDRegionsRegionNameSuppliersSupplierIDSupplierWarehousesSupplierWarehouseIDUpdate
     *
     * Updates a supplier warehouse for an inventory item..
     *
     */
    public function testInventorySupplierWarehousePATCHRequestInventoryIDRegionsRegionNameSuppliersSupplierIDSupplierWarehousesSupplierWarehouseIDUpdate()
    {
    }

    /**
     * Test case for inventorySupplierWarehousePOSTRequestInventoryIDRegionsRegionNameSuppliersSupplierIDSupplierWarehousesPost
     *
     * Appends a supplier warehouse to an inventory item..
     *
     */
    public function testInventorySupplierWarehousePOSTRequestInventoryIDRegionsRegionNameSuppliersSupplierIDSupplierWarehousesPost()
    {
    }

    /**
     * Test case for inventorySupplierWarehousesGETManyRequestInventoryIDRegionsRegionNameSuppliersSupplierIDSupplierWarehousesGet
     *
     * Retrieves a list of inventory supplier warehouses..
     *
     */
    public function testInventorySupplierWarehousesGETManyRequestInventoryIDRegionsRegionNameSuppliersSupplierIDSupplierWarehousesGet()
    {
    }

    /**
     * Test case for inventorySuppliersGETManyRequestInventoryIDRegionsRegionNameSuppliersGet
     *
     * Retrieves a list of suppliers for a given inventory item in a particular region..
     *
     */
    public function testInventorySuppliersGETManyRequestInventoryIDRegionsRegionNameSuppliersGet()
    {
    }

    /**
     * Test case for inventoryUnitOfMeasureDELETERequestInventoryIDUnitOfMeasuresUnitOfMeasureIDDelete
     *
     * Deletes a inventory unit of measure..
     *
     */
    public function testInventoryUnitOfMeasureDELETERequestInventoryIDUnitOfMeasuresUnitOfMeasureIDDelete()
    {
    }

    /**
     * Test case for inventoryUnitOfMeasureGETRequestInventoryIDUnitOfMeasuresUnitOfMeasureIDGet
     *
     * Retrieves an inventory unit of measure..
     *
     */
    public function testInventoryUnitOfMeasureGETRequestInventoryIDUnitOfMeasuresUnitOfMeasureIDGet()
    {
    }

    /**
     * Test case for inventoryUnitOfMeasurePATCHRequestInventoryIDUnitOfMeasuresUnitOfMeasureIDUpdate
     *
     * Updates a inventory unit of measure..
     *
     */
    public function testInventoryUnitOfMeasurePATCHRequestInventoryIDUnitOfMeasuresUnitOfMeasureIDUpdate()
    {
    }

    /**
     * Test case for inventoryUnitOfMeasurePOSTRequestInventoryIDUnitOfMeasuresPost
     *
     * Appends an alternate child to an inventory item..
     *
     */
    public function testInventoryUnitOfMeasurePOSTRequestInventoryIDUnitOfMeasuresPost()
    {
    }

    /**
     * Test case for inventoryUnitOfMeasuresGETManyRequestInventoryIDUnitOfMeasuresGet
     *
     * Retrieves a list of inventory unit of measures..
     *
     */
    public function testInventoryUnitOfMeasuresGETManyRequestInventoryIDUnitOfMeasuresGet()
    {
    }

    /**
     * Test case for inventoryUpSellDELETERequestInventoryIDUpSellsUpSellIDDelete
     *
     * Deletes a inventory up sell..
     *
     */
    public function testInventoryUpSellDELETERequestInventoryIDUpSellsUpSellIDDelete()
    {
    }

    /**
     * Test case for inventoryUpSellGETRequestInventoryIDUpSellsUpSellIDGet
     *
     * Retrieves an inventory up sell..
     *
     */
    public function testInventoryUpSellGETRequestInventoryIDUpSellsUpSellIDGet()
    {
    }

    /**
     * Test case for inventoryUpSellPATCHRequestInventoryIDUpSellsUpSellIDUpdate
     *
     * Updates a inventory up sell..
     *
     */
    public function testInventoryUpSellPATCHRequestInventoryIDUpSellsUpSellIDUpdate()
    {
    }

    /**
     * Test case for inventoryUpSellPOSTRequestInventoryIDUpSellsPost
     *
     * Appends an up sell to an inventory item..
     *
     */
    public function testInventoryUpSellPOSTRequestInventoryIDUpSellsPost()
    {
    }

    /**
     * Test case for inventoryUpSellsGETManyRequestInventoryIDUpSellsGet
     *
     * Retrieves a list of inventory up sells..
     *
     */
    public function testInventoryUpSellsGETManyRequestInventoryIDUpSellsGet()
    {
    }
}
