<?php
/**
 * PurchaseOrdersApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Jiwa;

use \Jiwa\Configuration;
use \Jiwa\ApiException;
use \Jiwa\ObjectSerializer;

/**
 * PurchaseOrdersApiTest Class Doc Comment
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PurchaseOrdersApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for purchaseOrderABANDONRequestAbandonDelete
     *
     * Abandons a stateful purchase order..
     *
     */
    public function testPurchaseOrderABANDONRequestAbandonDelete()
    {
    }

    /**
     * Test case for purchaseOrderACTIVATERequestActivatePurchaseOrderIDPost
     *
     * Sets the status of a purchase order to 'Sent'..
     *
     */
    public function testPurchaseOrderACTIVATERequestActivatePurchaseOrderIDPost()
    {
    }

    /**
     * Test case for purchaseOrderDELETERequestPurchaseOrderIDDelete
     *
     * Deletes a purchase order..
     *
     */
    public function testPurchaseOrderDELETERequestPurchaseOrderIDDelete()
    {
    }

    /**
     * Test case for purchaseOrderGETRequestPurchaseOrderIDGet
     *
     * Retrieves a purchase order..
     *
     */
    public function testPurchaseOrderGETRequestPurchaseOrderIDGet()
    {
    }

    /**
     * Test case for purchaseOrderLineDELETERequestPurchaseOrderIDLinesPurchaseOrderLineIDDelete
     *
     * Deletes a line from a purchase order..
     *
     */
    public function testPurchaseOrderLineDELETERequestPurchaseOrderIDLinesPurchaseOrderLineIDDelete()
    {
    }

    /**
     * Test case for purchaseOrderLineGETRequestPurchaseOrderIDLinesPurchaseOrderLineIDGet
     *
     * Retrieves a purchase order line..
     *
     */
    public function testPurchaseOrderLineGETRequestPurchaseOrderIDLinesPurchaseOrderLineIDGet()
    {
    }

    /**
     * Test case for purchaseOrderLinePATCHRequestPurchaseOrderIDLinesPurchaseOrderLineIDUpdate
     *
     * Updates a line for a purchase order..
     *
     */
    public function testPurchaseOrderLinePATCHRequestPurchaseOrderIDLinesPurchaseOrderLineIDUpdate()
    {
    }

    /**
     * Test case for purchaseOrderLinePOSTRequestPurchaseOrderIDLinesPost
     *
     * Appends a line to a purchase order..
     *
     */
    public function testPurchaseOrderLinePOSTRequestPurchaseOrderIDLinesPost()
    {
    }

    /**
     * Test case for purchaseOrderLinesGETManyRequestPurchaseOrderIDLinesGet
     *
     * Retrieves a list of purchase order lines..
     *
     */
    public function testPurchaseOrderLinesGETManyRequestPurchaseOrderIDLinesGet()
    {
    }

    /**
     * Test case for purchaseOrderPATCHRequestPurchaseOrderIDUpdate
     *
     * Updates a purchase order..
     *
     */
    public function testPurchaseOrderPATCHRequestPurchaseOrderIDUpdate()
    {
    }

    /**
     * Test case for purchaseOrderPOSTRequestPost
     *
     * Creates a purchase order..
     *
     */
    public function testPurchaseOrderPOSTRequestPost()
    {
    }

    /**
     * Test case for purchaseOrderReceiveStockCREATEFromPOLinesRequestFromPurchaseOrderLinesPost
     *
     * Creates a landed cost book in if the purchase order is on a shipment, otherwise creates a goods received note from the supplied list of ReceivedPOLineQuantity..
     *
     */
    public function testPurchaseOrderReceiveStockCREATEFromPOLinesRequestFromPurchaseOrderLinesPost()
    {
    }

    /**
     * Test case for purchaseOrderSAVERequestSaveGet
     *
     * Saves a stateful stateful purchase order..
     *
     */
    public function testPurchaseOrderSAVERequestSaveGet()
    {
    }
}
