<?php
/**
 * SalesQuotesApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Jiwa;

use \Jiwa\Configuration;
use \Jiwa\ApiException;
use \Jiwa\ObjectSerializer;

/**
 * SalesQuotesApiTest Class Doc Comment
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SalesQuotesApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for salesQuoteABANDONRequestQuoteIDAbandonDelete
     *
     * Abandons a stateful sales Quote..
     *
     */
    public function testSalesQuoteABANDONRequestQuoteIDAbandonDelete()
    {
    }

    /**
     * Test case for salesQuoteCustomFieldValueGETRequestQuoteIDCustomFieldValuesSettingIDGet
     *
     * Retrieves a sales Quote custom field value..
     *
     */
    public function testSalesQuoteCustomFieldValueGETRequestQuoteIDCustomFieldValuesSettingIDGet()
    {
    }

    /**
     * Test case for salesQuoteCustomFieldValuePATCHRequestQuoteIDCustomFieldValuesSettingIDUpdate
     *
     * Updates a sales Quote custom field value..
     *
     */
    public function testSalesQuoteCustomFieldValuePATCHRequestQuoteIDCustomFieldValuesSettingIDUpdate()
    {
    }

    /**
     * Test case for salesQuoteCustomFieldValuesGETManyRequestQuoteIDCustomFieldValuesGet
     *
     * Retrieves a list of custom field values for a sales Quote..
     *
     */
    public function testSalesQuoteCustomFieldValuesGETManyRequestQuoteIDCustomFieldValuesGet()
    {
    }

    /**
     * Test case for salesQuoteCustomFieldsGETManyRequestCustomFieldsGet
     *
     * Retrieves a list of sales Quote custom fields..
     *
     */
    public function testSalesQuoteCustomFieldsGETManyRequestCustomFieldsGet()
    {
    }

    /**
     * Test case for salesQuoteDocumentDELETERequestQuoteIDDocumentsDocumentIDDelete
     *
     * Deletes a sales Quote document..
     *
     */
    public function testSalesQuoteDocumentDELETERequestQuoteIDDocumentsDocumentIDDelete()
    {
    }

    /**
     * Test case for salesQuoteDocumentGETRequestQuoteIDDocumentsDocumentIDGet
     *
     * Retrieves a sales Quote document..
     *
     */
    public function testSalesQuoteDocumentGETRequestQuoteIDDocumentsDocumentIDGet()
    {
    }

    /**
     * Test case for salesQuoteDocumentPATCHRequestQuoteIDDocumentsDocumentIDUpdate
     *
     * Updates a sales Quote document..
     *
     */
    public function testSalesQuoteDocumentPATCHRequestQuoteIDDocumentsDocumentIDUpdate()
    {
    }

    /**
     * Test case for salesQuoteDocumentPOSTRequestQuoteIDDocumentsPost
     *
     * Appends a document to a sales Quote..
     *
     */
    public function testSalesQuoteDocumentPOSTRequestQuoteIDDocumentsPost()
    {
    }

    /**
     * Test case for salesQuoteDocumentTypeDELETERequestDocumentTypesDocumentTypeIDDelete
     *
     * Deletes a sales Quote document type..
     *
     */
    public function testSalesQuoteDocumentTypeDELETERequestDocumentTypesDocumentTypeIDDelete()
    {
    }

    /**
     * Test case for salesQuoteDocumentTypeGETRequestDocumentTypesDocumentTypeIDGet
     *
     * Retrieves a sales Quote document type..
     *
     */
    public function testSalesQuoteDocumentTypeGETRequestDocumentTypesDocumentTypeIDGet()
    {
    }

    /**
     * Test case for salesQuoteDocumentTypePATCHRequestDocumentTypesDocumentTypeIDUpdate
     *
     * Updates a sales Quote document type..
     *
     */
    public function testSalesQuoteDocumentTypePATCHRequestDocumentTypesDocumentTypeIDUpdate()
    {
    }

    /**
     * Test case for salesQuoteDocumentTypePOSTRequestDocumentTypesPost
     *
     * Creates a new sales Quote document type..
     *
     */
    public function testSalesQuoteDocumentTypePOSTRequestDocumentTypesPost()
    {
    }

    /**
     * Test case for salesQuoteDocumentTypesGETManyRequestDocumentTypesGet
     *
     * Retrieves a list of sales Quote document types..
     *
     */
    public function testSalesQuoteDocumentTypesGETManyRequestDocumentTypesGet()
    {
    }

    /**
     * Test case for salesQuoteDocumentsGETManyRequestQuoteIDDocumentsGet
     *
     * Retrieves a list of sales Quote documents..
     *
     */
    public function testSalesQuoteDocumentsGETManyRequestQuoteIDDocumentsGet()
    {
    }

    /**
     * Test case for salesQuoteGETRequestQuoteIDGet
     *
     * Retrieves a sales Quote..
     *
     */
    public function testSalesQuoteGETRequestQuoteIDGet()
    {
    }

    /**
     * Test case for salesQuoteHistorysGETManyRequestQuoteIDHistorysGet
     *
     * Retrieves a list of sales Quote histories..
     *
     */
    public function testSalesQuoteHistorysGETManyRequestQuoteIDHistorysGet()
    {
    }

    /**
     * Test case for salesQuoteHistorysGETRequestQuoteIDHistorysQuoteHistoryIDGet
     *
     * Retrieves a sales Quote history..
     *
     */
    public function testSalesQuoteHistorysGETRequestQuoteIDHistorysQuoteHistoryIDGet()
    {
    }

    /**
     * Test case for salesQuoteHistorysPATCHRequestQuoteIDHistorysQuoteHistoryIDUpdate
     *
     * Updates a sales Quote history..
     *
     */
    public function testSalesQuoteHistorysPATCHRequestQuoteIDHistorysQuoteHistoryIDUpdate()
    {
    }

    /**
     * Test case for salesQuoteLineCustomFieldValueGETRequestQuoteIDHistorysQuoteHistoryIDLinesQuoteLineIDCustomFieldValuesSettingIDGet
     *
     * Retrieves a sales Quote line custom field value..
     *
     */
    public function testSalesQuoteLineCustomFieldValueGETRequestQuoteIDHistorysQuoteHistoryIDLinesQuoteLineIDCustomFieldValuesSettingIDGet()
    {
    }

    /**
     * Test case for salesQuoteLineCustomFieldValuePATCHRequestQuoteIDHistorysQuoteHistoryIDLinesQuoteLineIDCustomFieldValuesSettingIDUpdate
     *
     * Updates a sales Quote line custom field value..
     *
     */
    public function testSalesQuoteLineCustomFieldValuePATCHRequestQuoteIDHistorysQuoteHistoryIDLinesQuoteLineIDCustomFieldValuesSettingIDUpdate()
    {
    }

    /**
     * Test case for salesQuoteLineCustomFieldValuesGETManyRequestQuoteIDHistorysQuoteHistoryIDLinesQuoteLineIDCustomFieldValuesGet
     *
     * Retrieves a list of custom field values for a sales Quote line..
     *
     */
    public function testSalesQuoteLineCustomFieldValuesGETManyRequestQuoteIDHistorysQuoteHistoryIDLinesQuoteLineIDCustomFieldValuesGet()
    {
    }

    /**
     * Test case for salesQuoteLineCustomFieldsGETManyRequestLinesCustomFieldsGet
     *
     * Retrieves a list of sales Quote line custom fields..
     *
     */
    public function testSalesQuoteLineCustomFieldsGETManyRequestLinesCustomFieldsGet()
    {
    }

    /**
     * Test case for salesQuoteLineDELETERequestQuoteIDHistorysQuoteHistoryIDLinesQuoteLineIDDelete
     *
     * Deletes a sales Quote line..
     *
     */
    public function testSalesQuoteLineDELETERequestQuoteIDHistorysQuoteHistoryIDLinesQuoteLineIDDelete()
    {
    }

    /**
     * Test case for salesQuoteLineGETRequestQuoteIDHistorysQuoteHistoryIDLinesQuoteLineIDGet
     *
     * Retrieves a sales Quote line..
     *
     */
    public function testSalesQuoteLineGETRequestQuoteIDHistorysQuoteHistoryIDLinesQuoteLineIDGet()
    {
    }

    /**
     * Test case for salesQuoteLinePATCHRequestQuoteIDHistorysQuoteHistoryIDLinesQuoteLineIDUpdate
     *
     * Updates a sales Quote line..
     *
     */
    public function testSalesQuoteLinePATCHRequestQuoteIDHistorysQuoteHistoryIDLinesQuoteLineIDUpdate()
    {
    }

    /**
     * Test case for salesQuoteLinePOSTRequestQuoteIDHistorysQuoteHistoryIDLinesPost
     *
     * Appends a line to a sales Quote..
     *
     */
    public function testSalesQuoteLinePOSTRequestQuoteIDHistorysQuoteHistoryIDLinesPost()
    {
    }

    /**
     * Test case for salesQuoteLinesGETManyRequestQuoteIDHistorysQuoteHistoryIDLinesGet
     *
     * Retrieves a list of sales Quote lines..
     *
     */
    public function testSalesQuoteLinesGETManyRequestQuoteIDHistorysQuoteHistoryIDLinesGet()
    {
    }

    /**
     * Test case for salesQuoteMAKEORDERB2BRequestQuoteIDMakeOrderB2BPost
     *
     * Makes a back to back sales order from a quote..
     *
     */
    public function testSalesQuoteMAKEORDERB2BRequestQuoteIDMakeOrderB2BPost()
    {
    }

    /**
     * Test case for salesQuoteMAKEORDERRequestQuoteIDMakeOrderPost
     *
     * Makes a sales order from a quote..
     *
     */
    public function testSalesQuoteMAKEORDERRequestQuoteIDMakeOrderPost()
    {
    }

    /**
     * Test case for salesQuoteNoteDELETERequestQuoteIDNotesNoteIDDelete
     *
     * Deletes a sales Quote note..
     *
     */
    public function testSalesQuoteNoteDELETERequestQuoteIDNotesNoteIDDelete()
    {
    }

    /**
     * Test case for salesQuoteNoteGETRequestQuoteIDNotesNoteIDGet
     *
     * Retrieves a sales Quote note..
     *
     */
    public function testSalesQuoteNoteGETRequestQuoteIDNotesNoteIDGet()
    {
    }

    /**
     * Test case for salesQuoteNotePATCHRequestQuoteIDNotesNoteIDUpdate
     *
     * Updates a sales Quote note..
     *
     */
    public function testSalesQuoteNotePATCHRequestQuoteIDNotesNoteIDUpdate()
    {
    }

    /**
     * Test case for salesQuoteNotePOSTRequestQuoteIDNotesPost
     *
     * Appends a note to a sales Quote..
     *
     */
    public function testSalesQuoteNotePOSTRequestQuoteIDNotesPost()
    {
    }

    /**
     * Test case for salesQuoteNoteTypeDELETERequestNoteTypesNoteTypeIDDelete
     *
     * Deletes a sales Quote note type..
     *
     */
    public function testSalesQuoteNoteTypeDELETERequestNoteTypesNoteTypeIDDelete()
    {
    }

    /**
     * Test case for salesQuoteNoteTypeGETRequestNoteTypesNoteTypeIDGet
     *
     * Retrieves a sales Quote note type..
     *
     */
    public function testSalesQuoteNoteTypeGETRequestNoteTypesNoteTypeIDGet()
    {
    }

    /**
     * Test case for salesQuoteNoteTypePATCHRequestNoteTypesNoteTypeIDUpdate
     *
     * Updates a sales Quote note type..
     *
     */
    public function testSalesQuoteNoteTypePATCHRequestNoteTypesNoteTypeIDUpdate()
    {
    }

    /**
     * Test case for salesQuoteNoteTypePOSTRequestNoteTypesPost
     *
     * Creates a new sales Quote note type..
     *
     */
    public function testSalesQuoteNoteTypePOSTRequestNoteTypesPost()
    {
    }

    /**
     * Test case for salesQuoteNoteTypesGETManyRequestNoteTypesGet
     *
     * Retrieves a list of sales Quote note types..
     *
     */
    public function testSalesQuoteNoteTypesGETManyRequestNoteTypesGet()
    {
    }

    /**
     * Test case for salesQuoteNotesGETManyRequestQuoteIDNotesGet
     *
     * Retrieves a list of sales Quote notes..
     *
     */
    public function testSalesQuoteNotesGETManyRequestQuoteIDNotesGet()
    {
    }

    /**
     * Test case for salesQuotePATCHRequestQuoteIDUpdate
     *
     * Updates a sales Quote..
     *
     */
    public function testSalesQuotePATCHRequestQuoteIDUpdate()
    {
    }

    /**
     * Test case for salesQuotePOSTRequestPost
     *
     * Creates a new sales Quote..
     *
     */
    public function testSalesQuotePOSTRequestPost()
    {
    }

    /**
     * Test case for salesQuoteSAVERequestQuoteIDSaveGet
     *
     * Saves a stateful sales Quote..
     *
     */
    public function testSalesQuoteSAVERequestQuoteIDSaveGet()
    {
    }
}
