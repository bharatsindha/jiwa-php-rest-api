<?php
/**
 * INPhysicalQueryTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Jiwa
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * JiwaAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.28-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Jiwa;

/**
 * INPhysicalQueryTest Class Doc Comment
 *
 * @category    Class
 * @description IN_PhysicalQuery
 * @package     Jiwa
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class INPhysicalQueryTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "INPhysicalQuery"
     */
    public function testINPhysicalQuery()
    {
    }

    /**
     * Test attribute "in_physical_id"
     */
    public function testPropertyInPhysicalId()
    {
    }

    /**
     * Test attribute "in_physical_id_starts_with"
     */
    public function testPropertyInPhysicalIdStartsWith()
    {
    }

    /**
     * Test attribute "in_physical_id_ends_with"
     */
    public function testPropertyInPhysicalIdEndsWith()
    {
    }

    /**
     * Test attribute "in_physical_id_contains"
     */
    public function testPropertyInPhysicalIdContains()
    {
    }

    /**
     * Test attribute "in_physical_id_like"
     */
    public function testPropertyInPhysicalIdLike()
    {
    }

    /**
     * Test attribute "in_physical_id_between"
     */
    public function testPropertyInPhysicalIdBetween()
    {
    }

    /**
     * Test attribute "in_physical_id_in"
     */
    public function testPropertyInPhysicalIdIn()
    {
    }

    /**
     * Test attribute "last_saved_date_time"
     */
    public function testPropertyLastSavedDateTime()
    {
    }

    /**
     * Test attribute "last_saved_date_time_greater_than_or_equal_to"
     */
    public function testPropertyLastSavedDateTimeGreaterThanOrEqualTo()
    {
    }

    /**
     * Test attribute "last_saved_date_time_greater_than"
     */
    public function testPropertyLastSavedDateTimeGreaterThan()
    {
    }

    /**
     * Test attribute "last_saved_date_time_less_than"
     */
    public function testPropertyLastSavedDateTimeLessThan()
    {
    }

    /**
     * Test attribute "last_saved_date_time_less_than_or_equal_to"
     */
    public function testPropertyLastSavedDateTimeLessThanOrEqualTo()
    {
    }

    /**
     * Test attribute "last_saved_date_time_not_equal_to"
     */
    public function testPropertyLastSavedDateTimeNotEqualTo()
    {
    }

    /**
     * Test attribute "last_saved_date_time_between"
     */
    public function testPropertyLastSavedDateTimeBetween()
    {
    }

    /**
     * Test attribute "last_saved_date_time_in"
     */
    public function testPropertyLastSavedDateTimeIn()
    {
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
    }

    /**
     * Test attribute "description_starts_with"
     */
    public function testPropertyDescriptionStartsWith()
    {
    }

    /**
     * Test attribute "description_ends_with"
     */
    public function testPropertyDescriptionEndsWith()
    {
    }

    /**
     * Test attribute "description_contains"
     */
    public function testPropertyDescriptionContains()
    {
    }

    /**
     * Test attribute "description_like"
     */
    public function testPropertyDescriptionLike()
    {
    }

    /**
     * Test attribute "description_between"
     */
    public function testPropertyDescriptionBetween()
    {
    }

    /**
     * Test attribute "description_in"
     */
    public function testPropertyDescriptionIn()
    {
    }

    /**
     * Test attribute "address1"
     */
    public function testPropertyAddress1()
    {
    }

    /**
     * Test attribute "address1_starts_with"
     */
    public function testPropertyAddress1StartsWith()
    {
    }

    /**
     * Test attribute "address1_ends_with"
     */
    public function testPropertyAddress1EndsWith()
    {
    }

    /**
     * Test attribute "address1_contains"
     */
    public function testPropertyAddress1Contains()
    {
    }

    /**
     * Test attribute "address1_like"
     */
    public function testPropertyAddress1Like()
    {
    }

    /**
     * Test attribute "address1_between"
     */
    public function testPropertyAddress1Between()
    {
    }

    /**
     * Test attribute "address1_in"
     */
    public function testPropertyAddress1In()
    {
    }

    /**
     * Test attribute "address2"
     */
    public function testPropertyAddress2()
    {
    }

    /**
     * Test attribute "address2_starts_with"
     */
    public function testPropertyAddress2StartsWith()
    {
    }

    /**
     * Test attribute "address2_ends_with"
     */
    public function testPropertyAddress2EndsWith()
    {
    }

    /**
     * Test attribute "address2_contains"
     */
    public function testPropertyAddress2Contains()
    {
    }

    /**
     * Test attribute "address2_like"
     */
    public function testPropertyAddress2Like()
    {
    }

    /**
     * Test attribute "address2_between"
     */
    public function testPropertyAddress2Between()
    {
    }

    /**
     * Test attribute "address2_in"
     */
    public function testPropertyAddress2In()
    {
    }

    /**
     * Test attribute "address3"
     */
    public function testPropertyAddress3()
    {
    }

    /**
     * Test attribute "address3_starts_with"
     */
    public function testPropertyAddress3StartsWith()
    {
    }

    /**
     * Test attribute "address3_ends_with"
     */
    public function testPropertyAddress3EndsWith()
    {
    }

    /**
     * Test attribute "address3_contains"
     */
    public function testPropertyAddress3Contains()
    {
    }

    /**
     * Test attribute "address3_like"
     */
    public function testPropertyAddress3Like()
    {
    }

    /**
     * Test attribute "address3_between"
     */
    public function testPropertyAddress3Between()
    {
    }

    /**
     * Test attribute "address3_in"
     */
    public function testPropertyAddress3In()
    {
    }

    /**
     * Test attribute "address4"
     */
    public function testPropertyAddress4()
    {
    }

    /**
     * Test attribute "address4_starts_with"
     */
    public function testPropertyAddress4StartsWith()
    {
    }

    /**
     * Test attribute "address4_ends_with"
     */
    public function testPropertyAddress4EndsWith()
    {
    }

    /**
     * Test attribute "address4_contains"
     */
    public function testPropertyAddress4Contains()
    {
    }

    /**
     * Test attribute "address4_like"
     */
    public function testPropertyAddress4Like()
    {
    }

    /**
     * Test attribute "address4_between"
     */
    public function testPropertyAddress4Between()
    {
    }

    /**
     * Test attribute "address4_in"
     */
    public function testPropertyAddress4In()
    {
    }

    /**
     * Test attribute "post_code"
     */
    public function testPropertyPostCode()
    {
    }

    /**
     * Test attribute "post_code_starts_with"
     */
    public function testPropertyPostCodeStartsWith()
    {
    }

    /**
     * Test attribute "post_code_ends_with"
     */
    public function testPropertyPostCodeEndsWith()
    {
    }

    /**
     * Test attribute "post_code_contains"
     */
    public function testPropertyPostCodeContains()
    {
    }

    /**
     * Test attribute "post_code_like"
     */
    public function testPropertyPostCodeLike()
    {
    }

    /**
     * Test attribute "post_code_between"
     */
    public function testPropertyPostCodeBetween()
    {
    }

    /**
     * Test attribute "post_code_in"
     */
    public function testPropertyPostCodeIn()
    {
    }

    /**
     * Test attribute "phone"
     */
    public function testPropertyPhone()
    {
    }

    /**
     * Test attribute "phone_starts_with"
     */
    public function testPropertyPhoneStartsWith()
    {
    }

    /**
     * Test attribute "phone_ends_with"
     */
    public function testPropertyPhoneEndsWith()
    {
    }

    /**
     * Test attribute "phone_contains"
     */
    public function testPropertyPhoneContains()
    {
    }

    /**
     * Test attribute "phone_like"
     */
    public function testPropertyPhoneLike()
    {
    }

    /**
     * Test attribute "phone_between"
     */
    public function testPropertyPhoneBetween()
    {
    }

    /**
     * Test attribute "phone_in"
     */
    public function testPropertyPhoneIn()
    {
    }

    /**
     * Test attribute "fax"
     */
    public function testPropertyFax()
    {
    }

    /**
     * Test attribute "fax_starts_with"
     */
    public function testPropertyFaxStartsWith()
    {
    }

    /**
     * Test attribute "fax_ends_with"
     */
    public function testPropertyFaxEndsWith()
    {
    }

    /**
     * Test attribute "fax_contains"
     */
    public function testPropertyFaxContains()
    {
    }

    /**
     * Test attribute "fax_like"
     */
    public function testPropertyFaxLike()
    {
    }

    /**
     * Test attribute "fax_between"
     */
    public function testPropertyFaxBetween()
    {
    }

    /**
     * Test attribute "fax_in"
     */
    public function testPropertyFaxIn()
    {
    }

    /**
     * Test attribute "ref_comment"
     */
    public function testPropertyRefComment()
    {
    }

    /**
     * Test attribute "ref_comment_starts_with"
     */
    public function testPropertyRefCommentStartsWith()
    {
    }

    /**
     * Test attribute "ref_comment_ends_with"
     */
    public function testPropertyRefCommentEndsWith()
    {
    }

    /**
     * Test attribute "ref_comment_contains"
     */
    public function testPropertyRefCommentContains()
    {
    }

    /**
     * Test attribute "ref_comment_like"
     */
    public function testPropertyRefCommentLike()
    {
    }

    /**
     * Test attribute "ref_comment_between"
     */
    public function testPropertyRefCommentBetween()
    {
    }

    /**
     * Test attribute "ref_comment_in"
     */
    public function testPropertyRefCommentIn()
    {
    }

    /**
     * Test attribute "skip"
     */
    public function testPropertySkip()
    {
    }

    /**
     * Test attribute "take"
     */
    public function testPropertyTake()
    {
    }

    /**
     * Test attribute "order_by"
     */
    public function testPropertyOrderBy()
    {
    }

    /**
     * Test attribute "order_by_desc"
     */
    public function testPropertyOrderByDesc()
    {
    }

    /**
     * Test attribute "include"
     */
    public function testPropertyInclude()
    {
    }

    /**
     * Test attribute "fields"
     */
    public function testPropertyFields()
    {
    }

    /**
     * Test attribute "meta"
     */
    public function testPropertyMeta()
    {
    }
}
